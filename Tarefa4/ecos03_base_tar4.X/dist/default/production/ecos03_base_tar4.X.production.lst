

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Nov 15 18:45:04 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    46                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    48   000000                     
    49                           ; Version 2.40
    50                           ; Generated 17/11/2021 GMT
    51                           ; 
    52                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution. Publication is not required when
    66                           ;        this file is used in an embedded application.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18F4520 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84   000000                     
    85                           	psect	idataCOMRAM
    86   0017FC                     __pidataCOMRAM:
    87                           	callstack 0
    88                           
    89                           ;initializer for main@F2424
    90   0017FC  E6                 	db	low _counter
    91   0017FD  14                 	db	high _counter
    92   0017FE  000A               	dw	10
    93   001800  0000               	dw	0
    94                           
    95                           	psect	idataBANK0
    96   001802                     __pidataBANK0:
    97                           	callstack 0
    98                           
    99                           ;initializer for main@F2427
   100   001802  12                 	db	low _updateLCD
   101   001803  06                 	db	high _updateLCD
   102   001804  000A               	dw	10
   103   001806  0000               	dw	0
   104                           
   105                           	psect	smallconst
   106   000600                     __psmallconst:
   107                           	callstack 0
   108   000600  00                 	db	0
   109   000601                     _valor@ssd$F521:
   110                           	callstack 0
   111   000601  3F                 	db	63
   112   000602  06                 	db	6
   113   000603  5B                 	db	91
   114   000604  4F                 	db	79
   115   000605  66                 	db	102
   116   000606  6D                 	db	109
   117   000607  7D                 	db	125
   118   000608  07                 	db	7
   119   000609  7F                 	db	127
   120   00060A  6F                 	db	111
   121   00060B  77                 	db	119
   122   00060C  7C                 	db	124
   123   00060D  39                 	db	57
   124   00060E  5E                 	db	94
   125   00060F  79                 	db	121
   126   000610  71                 	db	113
   127   000611                     __end_of_valor@ssd$F521:
   128                           	callstack 0
   129   000000                     _SPBRG	set	4015
   130   000000                     _SPBRGH	set	4016
   131   000000                     _BAUDCON	set	4024
   132   000000                     _TXSTA	set	4012
   133   000000                     _RCREG	set	4014
   134   000000                     _TRISC	set	3988
   135   000000                     _TRISB	set	3987
   136   000000                     _PORTC	set	3970
   137   000000                     _PORTB	set	3969
   138   000000                     _PORTA	set	3968
   139   000000                     _ADRESL	set	4035
   140   000000                     _ADRESH	set	4036
   141   000000                     _PORTD	set	3971
   142   000000                     _TMR0L	set	4054
   143   000000                     _TMR0H	set	4055
   144   000000                     _INTCON	set	4082
   145   000611  00                 	db	0	; dummy byte at the end
   146   000000                     
   147                           	psect	nvCOMRAM
   148   00006B                     __pnvCOMRAM:
   149                           	callstack 0
   150   00006B                     _lcd:
   151                           	callstack 0
   152   00006B                     	ds	2
   153   000000                     _TRISA	set	3986
   154   000000                     _PORTE	set	3972
   155   000000                     _TRISD	set	3989
   156   000000                     _PIR1	set	3998
   157   000000                     _CCP1CON	set	4029
   158   000000                     _CCPR1L	set	4030
   159   000000                     _TRISE	set	3990
   160   000000                     _ADCON2	set	4032
   161   000000                     _ADCON0	set	4034
   162   000000                     _RCON	set	4048
   163   000000                     _T0CON	set	4053
   164   000000                     _T2CON	set	4042
   165   000000                     _PR2	set	4043
   166   000000                     _RCSTA	set	4011
   167   000000                     _TXREG	set	4013
   168                           
   169                           ; #config settings
   170                           
   171                           	psect	cinit
   172   001660                     __pcinit:
   173                           	callstack 0
   174   001660                     start_initialization:
   175                           	callstack 0
   176   001660                     __initialization:
   177                           	callstack 0
   178                           
   179                           ; Initialize objects allocated to BANK0 (6 bytes)
   180                           ; load TBLPTR registers with __pidataBANK0
   181   001660  0E02               	movlw	low __pidataBANK0
   182   001662  6EF6               	movwf	tblptrl,c
   183   001664  0E18               	movlw	high __pidataBANK0
   184   001666  6EF7               	movwf	tblptrh,c
   185   001668  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   186   00166A  6EF8               	movwf	tblptru,c
   187   00166C  EE00  F090         	lfsr	0,__pdataBANK0
   188   001670  EE10 F006          	lfsr	1,6
   189   001674                     copy_data0:
   190   001674  0009               	tblrd		*+
   191   001676  CFF5 FFEE          	movff	tablat,postinc0
   192   00167A  50E5               	movf	postdec1,w,c
   193   00167C  50E1               	movf	fsr1l,w,c
   194   00167E  E1FA               	bnz	copy_data0
   195                           
   196                           ; Initialize objects allocated to COMRAM (6 bytes)
   197                           ; load TBLPTR registers with __pidataCOMRAM
   198   001680  0EFC               	movlw	low __pidataCOMRAM
   199   001682  6EF6               	movwf	tblptrl,c
   200   001684  0E17               	movlw	high __pidataCOMRAM
   201   001686  6EF7               	movwf	tblptrh,c
   202   001688  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   203   00168A  6EF8               	movwf	tblptru,c
   204   00168C  EE00  F065         	lfsr	0,__pdataCOMRAM
   205   001690  EE10 F006          	lfsr	1,6
   206   001694                     copy_data1:
   207   001694  0009               	tblrd		*+
   208   001696  CFF5 FFEE          	movff	tablat,postinc0
   209   00169A  50E5               	movf	postdec1,w,c
   210   00169C  50E1               	movf	fsr1l,w,c
   211   00169E  E1FA               	bnz	copy_data1
   212                           
   213                           ; Clear objects allocated to COMRAM (61 bytes)
   214   0016A0  EE00  F001         	lfsr	0,__pbssCOMRAM
   215   0016A4  0E3D               	movlw	61
   216   0016A6                     clear_0:
   217   0016A6  6AEE               	clrf	postinc0,c
   218   0016A8  06E8               	decf	wreg,f,c
   219   0016AA  E1FD               	bnz	clear_0
   220   0016AC                     end_of_initialization:
   221                           	callstack 0
   222   0016AC                     __end_of__initialization:
   223                           	callstack 0
   224   0016AC  906D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   225   0016AE  926D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   226   0016B0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   227   0016B2  6EF8               	movwf	tblptru,c
   228   0016B4  0100               	movlb	0
   229   0016B6  EF2A  F00A         	goto	_main	;jump to C main() function
   230                           
   231                           	psect	bssCOMRAM
   232   000001                     __pbssCOMRAM:
   233                           	callstack 0
   234   000001                     _pool:
   235                           	callstack 0
   236   000001                     	ds	20
   237   000015                     kpDebounce@valorAntigo:
   238                           	callstack 0
   239   000015                     	ds	2
   240   000017                     kpDebounce@valorNovo:
   241                           	callstack 0
   242   000017                     	ds	2
   243   000019                     _valor:
   244                           	callstack 0
   245   000019                     	ds	2
   246   00001B                     _hora:
   247                           	callstack 0
   248   00001B                     	ds	2
   249   00001D                     _min:
   250                           	callstack 0
   251   00001D                     	ds	2
   252   00001F                     _seg:
   253                           	callstack 0
   254   00001F                     	ds	2
   255   000021                     _count:
   256                           	callstack 0
   257   000021                     	ds	2
   258   000023                     _v3:
   259                           	callstack 0
   260   000023                     	ds	1
   261   000024                     _v2:
   262                           	callstack 0
   263   000024                     	ds	1
   264   000025                     _v1:
   265                           	callstack 0
   266   000025                     	ds	1
   267   000026                     _v0:
   268                           	callstack 0
   269   000026                     	ds	1
   270   000027                     _display:
   271                           	callstack 0
   272   000027                     	ds	1
   273   000028                     _started:
   274                           	callstack 0
   275   000028                     	ds	1
   276   000029                     kpDebounce@tempo:
   277                           	callstack 0
   278   000029                     	ds	1
   279   00002A                     _end:
   280                           	callstack 0
   281   00002A                     	ds	1
   282   00002B                     _start:
   283                           	callstack 0
   284   00002B                     	ds	1
   285   00002C                     _myself@drv_lcd2$F558:
   286                           	callstack 0
   287   00002C                     	ds	5
   288   000031                     _myself:
   289                           	callstack 0
   290   000031                     	ds	5
   291   000036                     _my_funcs@drv_lcd2$F562:
   292                           	callstack 0
   293   000036                     	ds	4
   294   00003A                     _my_funcs:
   295                           	callstack 0
   296   00003A                     	ds	4
   297                           
   298                           	psect	dataCOMRAM
   299   000065                     __pdataCOMRAM:
   300                           	callstack 0
   301   000065                     main@F2424:
   302                           	callstack 0
   303   000065                     	ds	6
   304                           
   305                           	psect	dataBANK0
   306   000090                     __pdataBANK0:
   307                           	callstack 0
   308   000090                     main@F2427:
   309                           	callstack 0
   310   000090                     	ds	6
   311                           
   312                           	psect	cstackBANK0
   313   000080                     __pcstackBANK0:
   314                           	callstack 0
   315   000080                     kernelLoop@tempProc:
   316                           	callstack 0
   317                           
   318                           ; 2 bytes @ 0x0
   319   000080                     	ds	2
   320   000082                     kernelLoop@next:
   321                           	callstack 0
   322                           
   323                           ; 1 bytes @ 0x2
   324   000082                     	ds	1
   325   000083                     kernelLoop@p:
   326                           	callstack 0
   327                           
   328                           ; 1 bytes @ 0x3
   329   000083                     	ds	1
   330   000084                     main@p1:
   331                           	callstack 0
   332                           
   333                           ; 6 bytes @ 0x4
   334   000084                     	ds	6
   335   00008A                     main@p2:
   336                           	callstack 0
   337                           
   338                           ; 6 bytes @ 0xA
   339   00008A                     	ds	6
   340                           
   341                           	psect	cstackCOMRAM
   342   00003E                     __pcstackCOMRAM:
   343                           	callstack 0
   344   00003E                     ?i2___awmod:
   345                           	callstack 0
   346   00003E                     i2___awmod@dividend:
   347                           	callstack 0
   348                           
   349                           ; 2 bytes @ 0x0
   350   00003E                     	ds	2
   351   000040                     i2___awmod@divisor:
   352                           	callstack 0
   353                           
   354                           ; 2 bytes @ 0x2
   355   000040                     	ds	2
   356   000042                     i2___awmod@counter:
   357                           	callstack 0
   358                           
   359                           ; 1 bytes @ 0x4
   360   000042                     	ds	1
   361   000043                     i2___awmod@sign:
   362                           	callstack 0
   363                           
   364                           ; 1 bytes @ 0x5
   365   000043                     	ds	1
   366   000044                     
   367                           ; 1 bytes @ 0x6
   368   000044                     	ds	2
   369   000046                     KernelClock@proc:
   370                           	callstack 0
   371                           
   372                           ; 1 bytes @ 0x8
   373   000046                     	ds	1
   374   000047                     ??_ISR:
   375                           
   376                           ; 1 bytes @ 0x9
   377   000047                     	ds	6
   378   00004D                     ?_getLcdDriver2:
   379                           	callstack 0
   380   00004D                     ?___awdiv:
   381                           	callstack 0
   382   00004D                     Delay40us@i:
   383                           	callstack 0
   384   00004D                     digitalWrite@pin:
   385                           	callstack 0
   386   00004D                     pinMode@pin:
   387                           	callstack 0
   388   00004D                     ___awdiv@dividend:
   389                           	callstack 0
   390                           
   391                           ; 2 bytes @ 0xF
   392   00004D                     	ds	1
   393   00004E                     Delay2ms@i:
   394                           	callstack 0
   395                           
   396                           ; 1 bytes @ 0x10
   397   00004E                     	ds	1
   398   00004F                     digitalWrite@value:
   399                           	callstack 0
   400   00004F                     pinMode@type:
   401                           	callstack 0
   402   00004F                     ___awdiv@divisor:
   403                           	callstack 0
   404                           
   405                           ; 2 bytes @ 0x11
   406   00004F                     	ds	2
   407   000051                     ??_pinMode:
   408   000051                     ??_digitalWrite:
   409   000051                     ___awdiv@counter:
   410                           	callstack 0
   411                           
   412                           ; 1 bytes @ 0x13
   413   000051                     	ds	1
   414   000052                     ___awdiv@sign:
   415                           	callstack 0
   416                           
   417                           ; 1 bytes @ 0x14
   418   000052                     	ds	1
   419   000053                     lcdCommand@old_D:
   420                           	callstack 0
   421   000053                     lcdData@valor:
   422                           	callstack 0
   423   000053                     ___awdiv@quotient:
   424                           	callstack 0
   425                           
   426                           ; 2 bytes @ 0x15
   427   000053                     	ds	1
   428   000054                     lcdCommand@cmd:
   429                           	callstack 0
   430   000054                     lcdData@old_D:
   431                           	callstack 0
   432                           
   433                           ; 1 bytes @ 0x16
   434   000054                     	ds	1
   435   000055                     ?___awmod:
   436                           	callstack 0
   437   000055                     initGenerico@parameters:
   438                           	callstack 0
   439   000055                     initGenerico2@parameters:
   440                           	callstack 0
   441   000055                     ___awmod@dividend:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0x17
   445   000055                     	ds	2
   446   000057                     ___awmod@divisor:
   447                           	callstack 0
   448                           
   449                           ; 2 bytes @ 0x19
   450   000057                     	ds	2
   451   000059                     ___awmod@counter:
   452                           	callstack 0
   453                           
   454                           ; 1 bytes @ 0x1B
   455   000059                     	ds	1
   456   00005A                     ___awmod@sign:
   457                           	callstack 0
   458                           
   459                           ; 1 bytes @ 0x1C
   460   00005A                     	ds	1
   461   00005B                     kernelAddProc@newProc:
   462                           	callstack 0
   463   00005B                     changePORTD@parameters:
   464                           	callstack 0
   465   00005B                     command@parameters:
   466                           	callstack 0
   467   00005B                     data@parameters:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0x1D
   471   00005B                     	ds	2
   472   00005D                     ??_kernelAddProc:
   473   00005D                     command@cmd:
   474                           	callstack 0
   475   00005D                     data@valor:
   476                           	callstack 0
   477                           
   478                           ; 1 bytes @ 0x1F
   479   00005D                     	ds	1
   480   00005E                     ??_updateLCD:
   481                           
   482                           ; 1 bytes @ 0x20
   483   00005E                     	ds	2
   484   000060                     ??_kernelLoop:
   485                           
   486                           ; 1 bytes @ 0x22
   487   000060                     	ds	5
   488   000065                     
   489                           ; 1 bytes @ 0x27
   490 ;;
   491 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   492 ;;
   493 ;; *************** function _main *****************
   494 ;; Defined at:
   495 ;;		line 74 in file "main.c"
   496 ;; Parameters:    Size  Location     Type
   497 ;;		None
   498 ;; Auto vars:     Size  Location     Type
   499 ;;  p2              6   10[BANK0 ] struct .
   500 ;;  p1              6    4[BANK0 ] struct .
   501 ;; Return value:  Size  Location     Type
   502 ;;                  1    wreg      void 
   503 ;; Registers used:
   504 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
   505 ;; Tracked objects:
   506 ;;		On entry : 0/0
   507 ;;		On exit  : 0/0
   508 ;;		Unchanged: 0/0
   509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   510 ;;      Params:         0       0       0       0       0       0       0
   511 ;;      Locals:         0      12       0       0       0       0       0
   512 ;;      Temps:          0       0       0       0       0       0       0
   513 ;;      Totals:         0      12       0       0       0       0       0
   514 ;;Total ram usage:       12 bytes
   515 ;; Hardware stack levels required when called: 9
   516 ;; This function calls:
   517 ;;		_getLcdDriver2
   518 ;;		_initGenerico
   519 ;;		_initGenerico2
   520 ;;		_kernelAddProc
   521 ;;		_kernelInit
   522 ;;		_kernelLoop
   523 ;;		_timerInit
   524 ;; This function is called by:
   525 ;;		Startup code after reset
   526 ;; This function uses a non-reentrant model
   527 ;;
   528                           
   529                           	psect	text0
   530   001454                     __ptext0:
   531                           	callstack 0
   532   001454                     _main:
   533                           	callstack 22
   534   001454                     
   535                           ;main.c: 75: process p1 = {counter, 10, 0};
   536   001454  EE20  F065         	lfsr	2,main@F2424
   537   001458  EE10  F084         	lfsr	1,main@p1
   538   00145C  0E05               	movlw	5
   539   00145E                     u3531:
   540   00145E  CFDB FFE3          	movff	plusw2,plusw1
   541   001462  06E8               	decf	wreg,f,c
   542   001464  E2FC               	bc	u3531
   543                           
   544                           ;main.c: 76: process p2 = {updateLCD, 10, 0};
   545   001466  EE20  F090         	lfsr	2,main@F2427
   546   00146A  EE10  F08A         	lfsr	1,main@p2
   547   00146E  0E05               	movlw	5
   548   001470                     u3541:
   549   001470  CFDB FFE3          	movff	plusw2,plusw1
   550   001474  06E8               	decf	wreg,f,c
   551   001476  E2FC               	bc	u3541
   552   001478                     
   553                           ;main.c: 77: TRISD = 0x00;
   554   001478  0E00               	movlw	0
   555   00147A  6E95               	movwf	149,c	;volatile
   556   00147C                     
   557                           ;main.c: 78: timerInit();
   558   00147C  ECFA  F00B         	call	_timerInit	;wreg free
   559   001480                     
   560                           ;main.c: 80: lcd = getLcdDriver2();
   561   001480  ECB0  F00B         	call	_getLcdDriver2	;wreg free
   562   001484  C04D  F06B         	movff	?_getLcdDriver2,_lcd
   563   001488  C04E  F06C         	movff	?_getLcdDriver2+1,_lcd+1
   564   00148C                     
   565                           ;main.c: 81: lcd->initFunc(0);
   566   00148C  0E00               	movlw	0
   567   00148E  6E55               	movwf	initGenerico2@parameters^0,c
   568   001490  0E00               	movlw	0
   569   001492  6E56               	movwf	(initGenerico2@parameters+1)^0,c
   570   001494  EE20 F003          	lfsr	2,3
   571   001498  506B               	movf	_lcd^0,w,c
   572   00149A  26D9               	addwf	fsr2l,f,c
   573   00149C  506C               	movf	(_lcd+1)^0,w,c
   574   00149E  22DA               	addwfc	fsr2h,f,c
   575   0014A0  D802               	call	u3558
   576   0014A2  EF5D  F00A         	goto	u3559
   577   0014A6                     u3558:
   578   0014A6  0005               	push	
   579   0014A8  6EFA               	movwf	pclath,c
   580   0014AA  50DE               	movf	postinc2,w,c
   581   0014AC  6EFD               	movwf	tosl,c
   582   0014AE  50DE               	movf	postinc2,w,c
   583   0014B0  6EFE               	movwf	tosh,c
   584   0014B2  50F8               	movf	tblptru,w,c
   585   0014B4  6EFF               	movwf	tosu,c
   586   0014B6  50FA               	movf	pclath,w,c
   587   0014B8  0012               	return		;indir
   588   0014BA                     u3559:
   589   0014BA                     
   590                           ;main.c: 83: kernelInit();
   591   0014BA  ECEB  F00B         	call	_kernelInit	;wreg free
   592   0014BE                     
   593                           ;main.c: 84: kernelAddProc(&p1);
   594   0014BE  0E84               	movlw	low main@p1
   595   0014C0  6E5B               	movwf	kernelAddProc@newProc^0,c
   596   0014C2  0E00               	movlw	high main@p1
   597   0014C4  6E5C               	movwf	(kernelAddProc@newProc+1)^0,c
   598   0014C6  EC8E  F009         	call	_kernelAddProc	;wreg free
   599   0014CA                     
   600                           ;main.c: 85: kernelAddProc(&p2);
   601   0014CA  0E8A               	movlw	low main@p2
   602   0014CC  6E5B               	movwf	kernelAddProc@newProc^0,c
   603   0014CE  0E00               	movlw	high main@p2
   604   0014D0  6E5C               	movwf	(kernelAddProc@newProc+1)^0,c
   605   0014D2  EC8E  F009         	call	_kernelAddProc	;wreg free
   606   0014D6                     
   607                           ;main.c: 88: ((RCON) &= ~(1<<(7)));
   608   0014D6  9ED0               	bcf	208,7,c	;volatile
   609   0014D8                     
   610                           ;main.c: 89: ((INTCON) |= (1<<(5)));
   611   0014D8  8AF2               	bsf	242,5,c	;volatile
   612   0014DA                     
   613                           ;main.c: 90: ((INTCON) |= (1<<(7)));
   614   0014DA  8EF2               	bsf	242,7,c	;volatile
   615   0014DC                     
   616                           ;main.c: 91: ((INTCON) |= (1<<(6)));
   617   0014DC  8CF2               	bsf	242,6,c	;volatile
   618   0014DE                     
   619                           ;main.c: 117: kernelLoop();
   620   0014DE  EC9A  F007         	call	_kernelLoop	;wreg free
   621   0014E2  EF07  F000         	goto	start
   622   0014E6                     __end_of_main:
   623                           	callstack 0
   624                           
   625 ;; *************** function _timerInit *****************
   626 ;; Defined at:
   627 ;;		line 51 in file "timer.c"
   628 ;; Parameters:    Size  Location     Type
   629 ;;		None
   630 ;; Auto vars:     Size  Location     Type
   631 ;;		None
   632 ;; Return value:  Size  Location     Type
   633 ;;                  1    wreg      void 
   634 ;; Registers used:
   635 ;;		wreg, status,2, status,0
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   641 ;;      Params:         0       0       0       0       0       0       0
   642 ;;      Locals:         0       0       0       0       0       0       0
   643 ;;      Temps:          0       0       0       0       0       0       0
   644 ;;      Totals:         0       0       0       0       0       0       0
   645 ;;Total ram usage:        0 bytes
   646 ;; Hardware stack levels used: 1
   647 ;; Hardware stack levels required when called: 3
   648 ;; This function calls:
   649 ;;		Nothing
   650 ;; This function is called by:
   651 ;;		_main
   652 ;; This function uses a non-reentrant model
   653 ;;
   654                           
   655                           	psect	text1
   656   0017F4                     __ptext1:
   657                           	callstack 0
   658   0017F4                     _timerInit:
   659                           	callstack 27
   660   0017F4                     
   661                           ;timer.c: 53: T0CON = 0b00001000;
   662   0017F4  0E08               	movlw	8
   663   0017F6  6ED5               	movwf	213,c	;volatile
   664   0017F8                     
   665                           ;timer.c: 54: ((T0CON) |= (1<<(7)));
   666   0017F8  8ED5               	bsf	213,7,c	;volatile
   667   0017FA  0012               	return		;funcret
   668   0017FC                     __end_of_timerInit:
   669                           	callstack 0
   670                           
   671 ;; *************** function _kernelLoop *****************
   672 ;; Defined at:
   673 ;;		line 24 in file "kernel.c"
   674 ;; Parameters:    Size  Location     Type
   675 ;;		None
   676 ;; Auto vars:     Size  Location     Type
   677 ;;  tempProc        2    0[BANK0 ] PTR struct .
   678 ;;		 -> main@p2(6), main@p1(6), 
   679 ;;  p               1    3[BANK0 ] unsigned char 
   680 ;;  next            1    2[BANK0 ] unsigned char 
   681 ;; Return value:  Size  Location     Type
   682 ;;                  1    wreg      void 
   683 ;; Registers used:
   684 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
   685 ;; Tracked objects:
   686 ;;		On entry : 0/0
   687 ;;		On exit  : 0/0
   688 ;;		Unchanged: 0/0
   689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   690 ;;      Params:         0       0       0       0       0       0       0
   691 ;;      Locals:         0       4       0       0       0       0       0
   692 ;;      Temps:          5       0       0       0       0       0       0
   693 ;;      Totals:         5       4       0       0       0       0       0
   694 ;;Total ram usage:        9 bytes
   695 ;; Hardware stack levels used: 1
   696 ;; Hardware stack levels required when called: 8
   697 ;; This function calls:
   698 ;;		___awmod
   699 ;;		_counter
   700 ;;		_kernelAddProc
   701 ;;		_updateLCD
   702 ;; This function is called by:
   703 ;;		_main
   704 ;; This function uses a non-reentrant model
   705 ;;
   706                           
   707                           	psect	text2
   708   000F34                     __ptext2:
   709                           	callstack 0
   710   000F34                     _kernelLoop:
   711                           	callstack 22
   712   000F34                     l74:
   713   000F34                     
   714                           ;kernel.c: 29: if (start != end) {
   715   000F34  502A               	movf	_end^0,w,c
   716   000F36  182B               	xorwf	_start^0,w,c
   717   000F38  B4D8               	btfsc	status,2,c
   718   000F3A  EFA1  F007         	goto	u3391
   719   000F3E  EFA3  F007         	goto	u3390
   720   000F42                     u3391:
   721   000F42  EF9A  F007         	goto	l74
   722   000F46                     u3390:
   723   000F46                     
   724                           ;kernel.c: 31: next = start;
   725   000F46  C02B  F082         	movff	_start,kernelLoop@next
   726                           
   727                           ;kernel.c: 32: for (p = start; p != end; p = (p + 1) % 10) {
   728   000F4A  C02B  F083         	movff	_start,kernelLoop@p
   729   000F4E  EFE5  F007         	goto	l3128
   730   000F52                     l3122:
   731                           
   732                           ; BSR set to: 0
   733                           ;kernel.c: 33: if (pool[p]->start < pool[next]->start) {
   734   000F52  5182               	movf	kernelLoop@next& (0+255),w,b
   735   000F54  0D02               	mullw	2
   736   000F56  0E01               	movlw	low _pool
   737   000F58  24F3               	addwf	243,w,c
   738   000F5A  6ED9               	movwf	fsr2l,c
   739   000F5C  0E00               	movlw	high _pool
   740   000F5E  20F4               	addwfc	prodh,w,c
   741   000F60  6EDA               	movwf	fsr2h,c
   742   000F62  EE10 F004          	lfsr	1,4
   743   000F66  50DE               	movf	postinc2,w,c
   744   000F68  26E1               	addwf	fsr1l,f,c
   745   000F6A  50DD               	movf	postdec2,w,c
   746   000F6C  22E2               	addwfc	fsr1h,f,c
   747   000F6E  5183               	movf	kernelLoop@p& (0+255),w,b
   748   000F70  0D02               	mullw	2
   749   000F72  0E01               	movlw	low _pool
   750   000F74  24F3               	addwf	243,w,c
   751   000F76  6ED9               	movwf	fsr2l,c
   752   000F78  0E00               	movlw	high _pool
   753   000F7A  20F4               	addwfc	prodh,w,c
   754   000F7C  6EDA               	movwf	fsr2h,c
   755   000F7E  EE00 F004          	lfsr	0,4
   756   000F82  50DE               	movf	postinc2,w,c
   757   000F84  26E9               	addwf	fsr0l,f,c
   758   000F86  50DD               	movf	postdec2,w,c
   759   000F88  22EA               	addwfc	fsr0h,f,c
   760   000F8A  50E6               	movf	postinc1,w,c
   761   000F8C  5CEE               	subwf	postinc0,w,c
   762   000F8E  50EE               	movf	postinc0,w,c
   763   000F90  0A80               	xorlw	128
   764   000F92  6E64               	movwf	(??_kernelLoop+4)^0,c
   765   000F94  50E6               	movf	postinc1,w,c
   766   000F96  0A80               	xorlw	128
   767   000F98  5864               	subwfb	(??_kernelLoop+4)^0,w,c
   768   000F9A  B0D8               	btfsc	status,0,c
   769   000F9C  EFD2  F007         	goto	u3401
   770   000FA0  EFD4  F007         	goto	u3400
   771   000FA4                     u3401:
   772   000FA4  EFD6  F007         	goto	l3126
   773   000FA8                     u3400:
   774   000FA8                     
   775                           ; BSR set to: 0
   776                           ;kernel.c: 34: next = p;
   777   000FA8  C083  F082         	movff	kernelLoop@p,kernelLoop@next
   778   000FAC                     l3126:
   779                           
   780                           ; BSR set to: 0
   781   000FAC  0E01               	movlw	1
   782   000FAE  2583               	addwf	kernelLoop@p& (0+255),w,b
   783   000FB0  6E55               	movwf	___awmod@dividend^0,c
   784   000FB2  6A56               	clrf	(___awmod@dividend+1)^0,c
   785   000FB4  0E00               	movlw	0
   786   000FB6  2256               	addwfc	(___awmod@dividend+1)^0,f,c
   787   000FB8  0E00               	movlw	0
   788   000FBA  6E58               	movwf	(___awmod@divisor+1)^0,c
   789   000FBC  0E0A               	movlw	10
   790   000FBE  6E57               	movwf	___awmod@divisor^0,c
   791   000FC0  ECDE  F008         	call	___awmod	;wreg free
   792   000FC4  5055               	movf	?___awmod^0,w,c
   793   000FC6  0100               	movlb	0	; () banked
   794   000FC8  6F83               	movwf	kernelLoop@p& (0+255),b
   795   000FCA                     l3128:
   796   000FCA  502A               	movf	_end^0,w,c
   797   000FCC  0100               	movlb	0	; () banked
   798   000FCE  1983               	xorwf	kernelLoop@p& (0+255),w,b
   799   000FD0  A4D8               	btfss	status,2,c
   800   000FD2  EFED  F007         	goto	u3411
   801   000FD6  EFEF  F007         	goto	u3410
   802   000FDA                     u3411:
   803   000FDA  EFA9  F007         	goto	l3122
   804   000FDE                     u3410:
   805   000FDE                     
   806                           ; BSR set to: 0
   807                           ;kernel.c: 35: };kernel.c: 36: };kernel.c: 38: tempProc = pool[next];
   808   000FDE  5182               	movf	kernelLoop@next& (0+255),w,b
   809   000FE0  0D02               	mullw	2
   810   000FE2  0E01               	movlw	low _pool
   811   000FE4  24F3               	addwf	243,w,c
   812   000FE6  6ED9               	movwf	fsr2l,c
   813   000FE8  0E00               	movlw	high _pool
   814   000FEA  20F4               	addwfc	prodh,w,c
   815   000FEC  6EDA               	movwf	fsr2h,c
   816   000FEE  CFDE F080          	movff	postinc2,kernelLoop@tempProc
   817   000FF2  CFDD F081          	movff	postdec2,kernelLoop@tempProc+1
   818   000FF6                     
   819                           ; BSR set to: 0
   820                           ;kernel.c: 39: pool[next] = pool[start];
   821   000FF6  502B               	movf	_start^0,w,c
   822   000FF8  0D02               	mullw	2
   823   000FFA  0E01               	movlw	low _pool
   824   000FFC  24F3               	addwf	243,w,c
   825   000FFE  6ED9               	movwf	fsr2l,c
   826   001000  0E00               	movlw	high _pool
   827   001002  20F4               	addwfc	prodh,w,c
   828   001004  6EDA               	movwf	fsr2h,c
   829   001006  5182               	movf	kernelLoop@next& (0+255),w,b
   830   001008  0D02               	mullw	2
   831   00100A  0E01               	movlw	low _pool
   832   00100C  24F3               	addwf	243,w,c
   833   00100E  6EE1               	movwf	fsr1l,c
   834   001010  0E00               	movlw	high _pool
   835   001012  20F4               	addwfc	prodh,w,c
   836   001014  6EE2               	movwf	fsr1h,c
   837   001016  CFDE FFE6          	movff	postinc2,postinc1
   838   00101A  CFDD FFE5          	movff	postdec2,postdec1
   839   00101E                     
   840                           ; BSR set to: 0
   841                           ;kernel.c: 40: pool[start] = tempProc;
   842   00101E  502B               	movf	_start^0,w,c
   843   001020  0D02               	mullw	2
   844   001022  0E01               	movlw	low _pool
   845   001024  24F3               	addwf	243,w,c
   846   001026  6ED9               	movwf	fsr2l,c
   847   001028  0E00               	movlw	high _pool
   848   00102A  20F4               	addwfc	prodh,w,c
   849   00102C  6EDA               	movwf	fsr2h,c
   850   00102E  C080  FFDE         	movff	kernelLoop@tempProc,postinc2
   851   001032  C081  FFDD         	movff	kernelLoop@tempProc+1,postdec2
   852   001036                     l3136:
   853   001036  502B               	movf	_start^0,w,c
   854   001038  0D02               	mullw	2
   855   00103A  0E01               	movlw	low _pool
   856   00103C  24F3               	addwf	243,w,c
   857   00103E  6ED9               	movwf	fsr2l,c
   858   001040  0E00               	movlw	high _pool
   859   001042  20F4               	addwfc	prodh,w,c
   860   001044  6EDA               	movwf	fsr2h,c
   861   001046  EE10 F004          	lfsr	1,4
   862   00104A  50DE               	movf	postinc2,w,c
   863   00104C  26E1               	addwf	fsr1l,f,c
   864   00104E  50DD               	movf	postdec2,w,c
   865   001050  22E2               	addwfc	fsr1h,f,c
   866   001052  0E01               	movlw	1
   867   001054  BEE3               	btfsc	plusw1,7,c
   868   001056  EF38  F008         	goto	u3420
   869   00105A  0E01               	movlw	1
   870   00105C  50E3               	movf	plusw1,w,c
   871   00105E  E106               	bnz	u3421
   872   001060  04E6               	decf	postinc1,w,c
   873   001062  B0D8               	btfsc	status,0,c
   874   001064  EF36  F008         	goto	u3421
   875   001068  EF38  F008         	goto	u3420
   876   00106C                     u3421:
   877   00106C  EF1B  F008         	goto	l3136
   878   001070                     u3420:
   879   001070                     
   880                           ;kernel.c: 45: };kernel.c: 46: if (pool[start]->function() == 2) {
   881   001070  502B               	movf	_start^0,w,c
   882   001072  0D02               	mullw	2
   883   001074  0E01               	movlw	low _pool
   884   001076  24F3               	addwf	243,w,c
   885   001078  6ED9               	movwf	fsr2l,c
   886   00107A  0E00               	movlw	high _pool
   887   00107C  20F4               	addwfc	prodh,w,c
   888   00107E  6EDA               	movwf	fsr2h,c
   889   001080  CFDE F060          	movff	postinc2,??_kernelLoop
   890   001084  CFDD F061          	movff	postdec2,??_kernelLoop+1
   891   001088  C060  FFD9         	movff	??_kernelLoop,fsr2l
   892   00108C  C061  FFDA         	movff	??_kernelLoop+1,fsr2h
   893   001090  D802               	call	u3438
   894   001092  EF55  F008         	goto	u3439
   895   001096                     u3438:
   896   001096  0005               	push	
   897   001098  6EFA               	movwf	pclath,c
   898   00109A  50DE               	movf	postinc2,w,c
   899   00109C  6EFD               	movwf	tosl,c
   900   00109E  50DE               	movf	postinc2,w,c
   901   0010A0  6EFE               	movwf	tosh,c
   902   0010A2  50F8               	movf	tblptru,w,c
   903   0010A4  6EFF               	movwf	tosu,c
   904   0010A6  50FA               	movf	pclath,w,c
   905   0010A8  0012               	return		;indir
   906   0010AA                     u3439:
   907   0010AA  0A02               	xorlw	2
   908   0010AC  A4D8               	btfss	status,2,c
   909   0010AE  EF5B  F008         	goto	u3441
   910   0010B2  EF5D  F008         	goto	u3440
   911   0010B6                     u3441:
   912   0010B6  EF6B  F008         	goto	l3142
   913   0010BA                     u3440:
   914   0010BA                     
   915                           ;kernel.c: 47: kernelAddProc(pool[start]);
   916   0010BA  502B               	movf	_start^0,w,c
   917   0010BC  0D02               	mullw	2
   918   0010BE  0E01               	movlw	low _pool
   919   0010C0  24F3               	addwf	243,w,c
   920   0010C2  6ED9               	movwf	fsr2l,c
   921   0010C4  0E00               	movlw	high _pool
   922   0010C6  20F4               	addwfc	prodh,w,c
   923   0010C8  6EDA               	movwf	fsr2h,c
   924   0010CA  CFDE F05B          	movff	postinc2,kernelAddProc@newProc
   925   0010CE  CFDD F05C          	movff	postdec2,kernelAddProc@newProc+1
   926   0010D2  EC8E  F009         	call	_kernelAddProc	;wreg free
   927   0010D6                     l3142:
   928                           
   929                           ;kernel.c: 48: };kernel.c: 49: start = (start + 1) % 10;
   930   0010D6  0E01               	movlw	1
   931   0010D8  242B               	addwf	_start^0,w,c
   932   0010DA  6E55               	movwf	___awmod@dividend^0,c
   933   0010DC  6A56               	clrf	(___awmod@dividend+1)^0,c
   934   0010DE  0E00               	movlw	0
   935   0010E0  2256               	addwfc	(___awmod@dividend+1)^0,f,c
   936   0010E2  0E00               	movlw	0
   937   0010E4  6E58               	movwf	(___awmod@divisor+1)^0,c
   938   0010E6  0E0A               	movlw	10
   939   0010E8  6E57               	movwf	___awmod@divisor^0,c
   940   0010EA  ECDE  F008         	call	___awmod	;wreg free
   941   0010EE  5055               	movf	?___awmod^0,w,c
   942   0010F0  6E2B               	movwf	_start^0,c
   943   0010F2  EF9A  F007         	goto	l74
   944   0010F6  0012               	return		;funcret
   945   0010F8                     __end_of_kernelLoop:
   946                           	callstack 0
   947                           
   948 ;; *************** function _counter *****************
   949 ;; Defined at:
   950 ;;		line 34 in file "main.c"
   951 ;; Parameters:    Size  Location     Type
   952 ;;		None
   953 ;; Auto vars:     Size  Location     Type
   954 ;;		None
   955 ;; Return value:  Size  Location     Type
   956 ;;                  1    wreg      unsigned char 
   957 ;; Registers used:
   958 ;;		wreg, status,2, status,0, cstack
   959 ;; Tracked objects:
   960 ;;		On entry : 0/0
   961 ;;		On exit  : 0/0
   962 ;;		Unchanged: 0/0
   963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   964 ;;      Params:         0       0       0       0       0       0       0
   965 ;;      Locals:         0       0       0       0       0       0       0
   966 ;;      Temps:          0       0       0       0       0       0       0
   967 ;;      Totals:         0       0       0       0       0       0       0
   968 ;;Total ram usage:        0 bytes
   969 ;; Hardware stack levels used: 1
   970 ;; Hardware stack levels required when called: 4
   971 ;; This function calls:
   972 ;;		___awdiv
   973 ;;		___awmod
   974 ;; This function is called by:
   975 ;;		_kernelLoop
   976 ;; This function uses a non-reentrant model
   977 ;;
   978                           
   979                           	psect	text3
   980   0014E6                     __ptext3:
   981                           	callstack 0
   982   0014E6                     _counter:
   983                           	callstack 25
   984   0014E6                     
   985                           ;main.c: 36: count++;
   986   0014E6  4A21               	infsnz	_count^0,f,c
   987   0014E8  2A22               	incf	(_count+1)^0,f,c
   988   0014EA                     
   989                           ;main.c: 37: seg = (count)%60;
   990   0014EA  C021  F055         	movff	_count,___awmod@dividend
   991   0014EE  C022  F056         	movff	_count+1,___awmod@dividend+1
   992   0014F2  0E00               	movlw	0
   993   0014F4  6E58               	movwf	(___awmod@divisor+1)^0,c
   994   0014F6  0E3C               	movlw	60
   995   0014F8  6E57               	movwf	___awmod@divisor^0,c
   996   0014FA  ECDE  F008         	call	___awmod	;wreg free
   997   0014FE  C055  F01F         	movff	?___awmod,_seg
   998   001502  C056  F020         	movff	?___awmod+1,_seg+1
   999   001506                     
  1000                           ;main.c: 38: min = (count/60)%60;
  1001   001506  0E00               	movlw	0
  1002   001508  6E50               	movwf	(___awdiv@divisor+1)^0,c
  1003   00150A  0E3C               	movlw	60
  1004   00150C  6E4F               	movwf	___awdiv@divisor^0,c
  1005   00150E  C021  F04D         	movff	_count,___awdiv@dividend
  1006   001512  C022  F04E         	movff	_count+1,___awdiv@dividend+1
  1007   001516  EC7C  F008         	call	___awdiv	;wreg free
  1008   00151A  C04D  F055         	movff	?___awdiv,___awmod@dividend
  1009   00151E  C04E  F056         	movff	?___awdiv+1,___awmod@dividend+1
  1010   001522  0E00               	movlw	0
  1011   001524  6E58               	movwf	(___awmod@divisor+1)^0,c
  1012   001526  0E3C               	movlw	60
  1013   001528  6E57               	movwf	___awmod@divisor^0,c
  1014   00152A  ECDE  F008         	call	___awmod	;wreg free
  1015   00152E  C055  F01D         	movff	?___awmod,_min
  1016   001532  C056  F01E         	movff	?___awmod+1,_min+1
  1017   001536                     
  1018                           ;main.c: 39: hora = (count/3600)%24;
  1019   001536  0E0E               	movlw	14
  1020   001538  6E50               	movwf	(___awdiv@divisor+1)^0,c
  1021   00153A  0E10               	movlw	16
  1022   00153C  6E4F               	movwf	___awdiv@divisor^0,c
  1023   00153E  C021  F04D         	movff	_count,___awdiv@dividend
  1024   001542  C022  F04E         	movff	_count+1,___awdiv@dividend+1
  1025   001546  EC7C  F008         	call	___awdiv	;wreg free
  1026   00154A  C04D  F055         	movff	?___awdiv,___awmod@dividend
  1027   00154E  C04E  F056         	movff	?___awdiv+1,___awmod@dividend+1
  1028   001552  0E00               	movlw	0
  1029   001554  6E58               	movwf	(___awmod@divisor+1)^0,c
  1030   001556  0E18               	movlw	24
  1031   001558  6E57               	movwf	___awmod@divisor^0,c
  1032   00155A  ECDE  F008         	call	___awmod	;wreg free
  1033   00155E  C055  F01B         	movff	?___awmod,_hora
  1034   001562  C056  F01C         	movff	?___awmod+1,_hora+1
  1035   001566                     
  1036                           ;main.c: 40: return 2;
  1037   001566  0E02               	movlw	2
  1038   001568  0012               	return		;funcret
  1039   00156A                     __end_of_counter:
  1040                           	callstack 0
  1041                           
  1042 ;; *************** function _updateLCD *****************
  1043 ;; Defined at:
  1044 ;;		line 45 in file "main.c"
  1045 ;; Parameters:    Size  Location     Type
  1046 ;;		None
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;		None
  1049 ;; Return value:  Size  Location     Type
  1050 ;;                  1    wreg      unsigned char 
  1051 ;; Registers used:
  1052 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1058 ;;      Params:         0       0       0       0       0       0       0
  1059 ;;      Locals:         0       0       0       0       0       0       0
  1060 ;;      Temps:          2       0       0       0       0       0       0
  1061 ;;      Totals:         2       0       0       0       0       0       0
  1062 ;;Total ram usage:        2 bytes
  1063 ;; Hardware stack levels used: 1
  1064 ;; Hardware stack levels required when called: 7
  1065 ;; This function calls:
  1066 ;;		___awdiv
  1067 ;;		___awmod
  1068 ;;		_changePORTD
  1069 ;;		_command
  1070 ;;		_data
  1071 ;;		_inverte
  1072 ;; This function is called by:
  1073 ;;		_kernelLoop
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077                           	psect	text4
  1078   000612                     __ptext4:
  1079                           	callstack 0
  1080   000612                     _updateLCD:
  1081                           	callstack 22
  1082   000612                     
  1083                           ;main.c: 47: lcd->funcoes[LCD_CMD](0x01);
  1084   000612  0E01               	movlw	1
  1085   000614  6E5B               	movwf	data@parameters^0,c
  1086   000616  0E00               	movlw	0
  1087   000618  6E5C               	movwf	(data@parameters+1)^0,c
  1088   00061A  EE20 F001          	lfsr	2,1
  1089   00061E  506B               	movf	_lcd^0,w,c
  1090   000620  26D9               	addwf	fsr2l,f,c
  1091   000622  506C               	movf	(_lcd+1)^0,w,c
  1092   000624  22DA               	addwfc	fsr2h,f,c
  1093   000626  CFDE F05E          	movff	postinc2,??_updateLCD
  1094   00062A  CFDD F05F          	movff	postdec2,??_updateLCD+1
  1095   00062E  C05E  FFD9         	movff	??_updateLCD,fsr2l
  1096   000632  C05F  FFDA         	movff	??_updateLCD+1,fsr2h
  1097   000636  D802               	call	u3098
  1098   000638  EF28  F003         	goto	u3099
  1099   00063C                     u3098:
  1100   00063C  0005               	push	
  1101   00063E  6EFA               	movwf	pclath,c
  1102   000640  50DE               	movf	postinc2,w,c
  1103   000642  6EFD               	movwf	tosl,c
  1104   000644  50DE               	movf	postinc2,w,c
  1105   000646  6EFE               	movwf	tosh,c
  1106   000648  50F8               	movf	tblptru,w,c
  1107   00064A  6EFF               	movwf	tosu,c
  1108   00064C  50FA               	movf	pclath,w,c
  1109   00064E  0012               	return		;indir
  1110   000650                     u3099:
  1111   000650                     
  1112                           ;main.c: 49: lcd->funcoes[LCD_DATA]((char)hora/10 + '0');
  1113   000650  C01B  F04D         	movff	_hora,___awdiv@dividend
  1114   000654  6A4E               	clrf	(___awdiv@dividend+1)^0,c
  1115   000656  0E00               	movlw	0
  1116   000658  6E50               	movwf	(___awdiv@divisor+1)^0,c
  1117   00065A  0E0A               	movlw	10
  1118   00065C  6E4F               	movwf	___awdiv@divisor^0,c
  1119   00065E  EC7C  F008         	call	___awdiv	;wreg free
  1120   000662  0E30               	movlw	48
  1121   000664  244D               	addwf	?___awdiv^0,w,c
  1122   000666  6E5B               	movwf	data@parameters^0,c
  1123   000668  0E00               	movlw	0
  1124   00066A  204E               	addwfc	(?___awdiv+1)^0,w,c
  1125   00066C  6E5C               	movwf	(data@parameters+1)^0,c
  1126   00066E  EE20 F001          	lfsr	2,1
  1127   000672  506B               	movf	_lcd^0,w,c
  1128   000674  26D9               	addwf	fsr2l,f,c
  1129   000676  506C               	movf	(_lcd+1)^0,w,c
  1130   000678  22DA               	addwfc	fsr2h,f,c
  1131   00067A  EE10 F002          	lfsr	1,2
  1132   00067E  50DE               	movf	postinc2,w,c
  1133   000680  26E1               	addwf	fsr1l,f,c
  1134   000682  50DD               	movf	postdec2,w,c
  1135   000684  22E2               	addwfc	fsr1h,f,c
  1136   000686  D802               	call	u3108
  1137   000688  EF50  F003         	goto	u3109
  1138   00068C                     u3108:
  1139   00068C  0005               	push	
  1140   00068E  6EFA               	movwf	pclath,c
  1141   000690  50E6               	movf	postinc1,w,c
  1142   000692  6EFD               	movwf	tosl,c
  1143   000694  50E6               	movf	postinc1,w,c
  1144   000696  6EFE               	movwf	tosh,c
  1145   000698  50F8               	movf	tblptru,w,c
  1146   00069A  6EFF               	movwf	tosu,c
  1147   00069C  50FA               	movf	pclath,w,c
  1148   00069E  0012               	return		;indir
  1149   0006A0                     u3109:
  1150   0006A0                     
  1151                           ;main.c: 50: lcd->funcoes[LCD_CMD](0x06);
  1152   0006A0  0E06               	movlw	6
  1153   0006A2  6E5B               	movwf	data@parameters^0,c
  1154   0006A4  0E00               	movlw	0
  1155   0006A6  6E5C               	movwf	(data@parameters+1)^0,c
  1156   0006A8  EE20 F001          	lfsr	2,1
  1157   0006AC  506B               	movf	_lcd^0,w,c
  1158   0006AE  26D9               	addwf	fsr2l,f,c
  1159   0006B0  506C               	movf	(_lcd+1)^0,w,c
  1160   0006B2  22DA               	addwfc	fsr2h,f,c
  1161   0006B4  CFDE F05E          	movff	postinc2,??_updateLCD
  1162   0006B8  CFDD F05F          	movff	postdec2,??_updateLCD+1
  1163   0006BC  C05E  FFD9         	movff	??_updateLCD,fsr2l
  1164   0006C0  C05F  FFDA         	movff	??_updateLCD+1,fsr2h
  1165   0006C4  D802               	call	u3118
  1166   0006C6  EF6F  F003         	goto	u3119
  1167   0006CA                     u3118:
  1168   0006CA  0005               	push	
  1169   0006CC  6EFA               	movwf	pclath,c
  1170   0006CE  50DE               	movf	postinc2,w,c
  1171   0006D0  6EFD               	movwf	tosl,c
  1172   0006D2  50DE               	movf	postinc2,w,c
  1173   0006D4  6EFE               	movwf	tosh,c
  1174   0006D6  50F8               	movf	tblptru,w,c
  1175   0006D8  6EFF               	movwf	tosu,c
  1176   0006DA  50FA               	movf	pclath,w,c
  1177   0006DC  0012               	return		;indir
  1178   0006DE                     u3119:
  1179                           
  1180                           ;main.c: 51: lcd->funcoes[LCD_DATA]((char)hora%10 + '0');
  1181   0006DE  C01B  F055         	movff	_hora,___awmod@dividend
  1182   0006E2  6A56               	clrf	(___awmod@dividend+1)^0,c
  1183   0006E4  0E00               	movlw	0
  1184   0006E6  6E58               	movwf	(___awmod@divisor+1)^0,c
  1185   0006E8  0E0A               	movlw	10
  1186   0006EA  6E57               	movwf	___awmod@divisor^0,c
  1187   0006EC  ECDE  F008         	call	___awmod	;wreg free
  1188   0006F0  0E30               	movlw	48
  1189   0006F2  2455               	addwf	?___awmod^0,w,c
  1190   0006F4  6E5B               	movwf	data@parameters^0,c
  1191   0006F6  0E00               	movlw	0
  1192   0006F8  2056               	addwfc	(?___awmod+1)^0,w,c
  1193   0006FA  6E5C               	movwf	(data@parameters+1)^0,c
  1194   0006FC  EE20 F001          	lfsr	2,1
  1195   000700  506B               	movf	_lcd^0,w,c
  1196   000702  26D9               	addwf	fsr2l,f,c
  1197   000704  506C               	movf	(_lcd+1)^0,w,c
  1198   000706  22DA               	addwfc	fsr2h,f,c
  1199   000708  EE10 F002          	lfsr	1,2
  1200   00070C  50DE               	movf	postinc2,w,c
  1201   00070E  26E1               	addwf	fsr1l,f,c
  1202   000710  50DD               	movf	postdec2,w,c
  1203   000712  22E2               	addwfc	fsr1h,f,c
  1204   000714  D802               	call	u3128
  1205   000716  EF97  F003         	goto	u3129
  1206   00071A                     u3128:
  1207   00071A  0005               	push	
  1208   00071C  6EFA               	movwf	pclath,c
  1209   00071E  50E6               	movf	postinc1,w,c
  1210   000720  6EFD               	movwf	tosl,c
  1211   000722  50E6               	movf	postinc1,w,c
  1212   000724  6EFE               	movwf	tosh,c
  1213   000726  50F8               	movf	tblptru,w,c
  1214   000728  6EFF               	movwf	tosu,c
  1215   00072A  50FA               	movf	pclath,w,c
  1216   00072C  0012               	return		;indir
  1217   00072E                     u3129:
  1218   00072E                     
  1219                           ;main.c: 52: lcd->funcoes[LCD_CMD](0x06);
  1220   00072E  0E06               	movlw	6
  1221   000730  6E5B               	movwf	data@parameters^0,c
  1222   000732  0E00               	movlw	0
  1223   000734  6E5C               	movwf	(data@parameters+1)^0,c
  1224   000736  EE20 F001          	lfsr	2,1
  1225   00073A  506B               	movf	_lcd^0,w,c
  1226   00073C  26D9               	addwf	fsr2l,f,c
  1227   00073E  506C               	movf	(_lcd+1)^0,w,c
  1228   000740  22DA               	addwfc	fsr2h,f,c
  1229   000742  CFDE F05E          	movff	postinc2,??_updateLCD
  1230   000746  CFDD F05F          	movff	postdec2,??_updateLCD+1
  1231   00074A  C05E  FFD9         	movff	??_updateLCD,fsr2l
  1232   00074E  C05F  FFDA         	movff	??_updateLCD+1,fsr2h
  1233   000752  D802               	call	u3138
  1234   000754  EFB6  F003         	goto	u3139
  1235   000758                     u3138:
  1236   000758  0005               	push	
  1237   00075A  6EFA               	movwf	pclath,c
  1238   00075C  50DE               	movf	postinc2,w,c
  1239   00075E  6EFD               	movwf	tosl,c
  1240   000760  50DE               	movf	postinc2,w,c
  1241   000762  6EFE               	movwf	tosh,c
  1242   000764  50F8               	movf	tblptru,w,c
  1243   000766  6EFF               	movwf	tosu,c
  1244   000768  50FA               	movf	pclath,w,c
  1245   00076A  0012               	return		;indir
  1246   00076C                     u3139:
  1247   00076C                     
  1248                           ;main.c: 54: lcd->funcoes[LCD_DATA](':');
  1249   00076C  0E3A               	movlw	58
  1250   00076E  6E5B               	movwf	data@parameters^0,c
  1251   000770  0E00               	movlw	0
  1252   000772  6E5C               	movwf	(data@parameters+1)^0,c
  1253   000774  EE20 F001          	lfsr	2,1
  1254   000778  506B               	movf	_lcd^0,w,c
  1255   00077A  26D9               	addwf	fsr2l,f,c
  1256   00077C  506C               	movf	(_lcd+1)^0,w,c
  1257   00077E  22DA               	addwfc	fsr2h,f,c
  1258   000780  EE10 F002          	lfsr	1,2
  1259   000784  50DE               	movf	postinc2,w,c
  1260   000786  26E1               	addwf	fsr1l,f,c
  1261   000788  50DD               	movf	postdec2,w,c
  1262   00078A  22E2               	addwfc	fsr1h,f,c
  1263   00078C  D802               	call	u3148
  1264   00078E  EFD3  F003         	goto	u3149
  1265   000792                     u3148:
  1266   000792  0005               	push	
  1267   000794  6EFA               	movwf	pclath,c
  1268   000796  50E6               	movf	postinc1,w,c
  1269   000798  6EFD               	movwf	tosl,c
  1270   00079A  50E6               	movf	postinc1,w,c
  1271   00079C  6EFE               	movwf	tosh,c
  1272   00079E  50F8               	movf	tblptru,w,c
  1273   0007A0  6EFF               	movwf	tosu,c
  1274   0007A2  50FA               	movf	pclath,w,c
  1275   0007A4  0012               	return		;indir
  1276   0007A6                     u3149:
  1277                           
  1278                           ;main.c: 55: lcd->funcoes[LCD_CMD](0x06);
  1279   0007A6  0E06               	movlw	6
  1280   0007A8  6E5B               	movwf	data@parameters^0,c
  1281   0007AA  0E00               	movlw	0
  1282   0007AC  6E5C               	movwf	(data@parameters+1)^0,c
  1283   0007AE  EE20 F001          	lfsr	2,1
  1284   0007B2  506B               	movf	_lcd^0,w,c
  1285   0007B4  26D9               	addwf	fsr2l,f,c
  1286   0007B6  506C               	movf	(_lcd+1)^0,w,c
  1287   0007B8  22DA               	addwfc	fsr2h,f,c
  1288   0007BA  CFDE F05E          	movff	postinc2,??_updateLCD
  1289   0007BE  CFDD F05F          	movff	postdec2,??_updateLCD+1
  1290   0007C2  C05E  FFD9         	movff	??_updateLCD,fsr2l
  1291   0007C6  C05F  FFDA         	movff	??_updateLCD+1,fsr2h
  1292   0007CA  D802               	call	u3158
  1293   0007CC  EFF2  F003         	goto	u3159
  1294   0007D0                     u3158:
  1295   0007D0  0005               	push	
  1296   0007D2  6EFA               	movwf	pclath,c
  1297   0007D4  50DE               	movf	postinc2,w,c
  1298   0007D6  6EFD               	movwf	tosl,c
  1299   0007D8  50DE               	movf	postinc2,w,c
  1300   0007DA  6EFE               	movwf	tosh,c
  1301   0007DC  50F8               	movf	tblptru,w,c
  1302   0007DE  6EFF               	movwf	tosu,c
  1303   0007E0  50FA               	movf	pclath,w,c
  1304   0007E2  0012               	return		;indir
  1305   0007E4                     u3159:
  1306   0007E4                     
  1307                           ;main.c: 58: lcd->funcoes[LCD_DATA]((char)min/10 + '0');
  1308   0007E4  C01D  F04D         	movff	_min,___awdiv@dividend
  1309   0007E8  6A4E               	clrf	(___awdiv@dividend+1)^0,c
  1310   0007EA  0E00               	movlw	0
  1311   0007EC  6E50               	movwf	(___awdiv@divisor+1)^0,c
  1312   0007EE  0E0A               	movlw	10
  1313   0007F0  6E4F               	movwf	___awdiv@divisor^0,c
  1314   0007F2  EC7C  F008         	call	___awdiv	;wreg free
  1315   0007F6  0E30               	movlw	48
  1316   0007F8  244D               	addwf	?___awdiv^0,w,c
  1317   0007FA  6E5B               	movwf	data@parameters^0,c
  1318   0007FC  0E00               	movlw	0
  1319   0007FE  204E               	addwfc	(?___awdiv+1)^0,w,c
  1320   000800  6E5C               	movwf	(data@parameters+1)^0,c
  1321   000802  EE20 F001          	lfsr	2,1
  1322   000806  506B               	movf	_lcd^0,w,c
  1323   000808  26D9               	addwf	fsr2l,f,c
  1324   00080A  506C               	movf	(_lcd+1)^0,w,c
  1325   00080C  22DA               	addwfc	fsr2h,f,c
  1326   00080E  EE10 F002          	lfsr	1,2
  1327   000812  50DE               	movf	postinc2,w,c
  1328   000814  26E1               	addwf	fsr1l,f,c
  1329   000816  50DD               	movf	postdec2,w,c
  1330   000818  22E2               	addwfc	fsr1h,f,c
  1331   00081A  D802               	call	u3168
  1332   00081C  EF1A  F004         	goto	u3169
  1333   000820                     u3168:
  1334   000820  0005               	push	
  1335   000822  6EFA               	movwf	pclath,c
  1336   000824  50E6               	movf	postinc1,w,c
  1337   000826  6EFD               	movwf	tosl,c
  1338   000828  50E6               	movf	postinc1,w,c
  1339   00082A  6EFE               	movwf	tosh,c
  1340   00082C  50F8               	movf	tblptru,w,c
  1341   00082E  6EFF               	movwf	tosu,c
  1342   000830  50FA               	movf	pclath,w,c
  1343   000832  0012               	return		;indir
  1344   000834                     u3169:
  1345   000834                     
  1346                           ;main.c: 59: lcd->funcoes[LCD_CMD](0x06);
  1347   000834  0E06               	movlw	6
  1348   000836  6E5B               	movwf	data@parameters^0,c
  1349   000838  0E00               	movlw	0
  1350   00083A  6E5C               	movwf	(data@parameters+1)^0,c
  1351   00083C  EE20 F001          	lfsr	2,1
  1352   000840  506B               	movf	_lcd^0,w,c
  1353   000842  26D9               	addwf	fsr2l,f,c
  1354   000844  506C               	movf	(_lcd+1)^0,w,c
  1355   000846  22DA               	addwfc	fsr2h,f,c
  1356   000848  CFDE F05E          	movff	postinc2,??_updateLCD
  1357   00084C  CFDD F05F          	movff	postdec2,??_updateLCD+1
  1358   000850  C05E  FFD9         	movff	??_updateLCD,fsr2l
  1359   000854  C05F  FFDA         	movff	??_updateLCD+1,fsr2h
  1360   000858  D802               	call	u3178
  1361   00085A  EF39  F004         	goto	u3179
  1362   00085E                     u3178:
  1363   00085E  0005               	push	
  1364   000860  6EFA               	movwf	pclath,c
  1365   000862  50DE               	movf	postinc2,w,c
  1366   000864  6EFD               	movwf	tosl,c
  1367   000866  50DE               	movf	postinc2,w,c
  1368   000868  6EFE               	movwf	tosh,c
  1369   00086A  50F8               	movf	tblptru,w,c
  1370   00086C  6EFF               	movwf	tosu,c
  1371   00086E  50FA               	movf	pclath,w,c
  1372   000870  0012               	return		;indir
  1373   000872                     u3179:
  1374                           
  1375                           ;main.c: 60: lcd->funcoes[LCD_DATA]((char)min%10 + '0');
  1376   000872  C01D  F055         	movff	_min,___awmod@dividend
  1377   000876  6A56               	clrf	(___awmod@dividend+1)^0,c
  1378   000878  0E00               	movlw	0
  1379   00087A  6E58               	movwf	(___awmod@divisor+1)^0,c
  1380   00087C  0E0A               	movlw	10
  1381   00087E  6E57               	movwf	___awmod@divisor^0,c
  1382   000880  ECDE  F008         	call	___awmod	;wreg free
  1383   000884  0E30               	movlw	48
  1384   000886  2455               	addwf	?___awmod^0,w,c
  1385   000888  6E5B               	movwf	data@parameters^0,c
  1386   00088A  0E00               	movlw	0
  1387   00088C  2056               	addwfc	(?___awmod+1)^0,w,c
  1388   00088E  6E5C               	movwf	(data@parameters+1)^0,c
  1389   000890  EE20 F001          	lfsr	2,1
  1390   000894  506B               	movf	_lcd^0,w,c
  1391   000896  26D9               	addwf	fsr2l,f,c
  1392   000898  506C               	movf	(_lcd+1)^0,w,c
  1393   00089A  22DA               	addwfc	fsr2h,f,c
  1394   00089C  EE10 F002          	lfsr	1,2
  1395   0008A0  50DE               	movf	postinc2,w,c
  1396   0008A2  26E1               	addwf	fsr1l,f,c
  1397   0008A4  50DD               	movf	postdec2,w,c
  1398   0008A6  22E2               	addwfc	fsr1h,f,c
  1399   0008A8  D802               	call	u3188
  1400   0008AA  EF61  F004         	goto	u3189
  1401   0008AE                     u3188:
  1402   0008AE  0005               	push	
  1403   0008B0  6EFA               	movwf	pclath,c
  1404   0008B2  50E6               	movf	postinc1,w,c
  1405   0008B4  6EFD               	movwf	tosl,c
  1406   0008B6  50E6               	movf	postinc1,w,c
  1407   0008B8  6EFE               	movwf	tosh,c
  1408   0008BA  50F8               	movf	tblptru,w,c
  1409   0008BC  6EFF               	movwf	tosu,c
  1410   0008BE  50FA               	movf	pclath,w,c
  1411   0008C0  0012               	return		;indir
  1412   0008C2                     u3189:
  1413   0008C2                     
  1414                           ;main.c: 61: lcd->funcoes[LCD_CMD](0x06);
  1415   0008C2  0E06               	movlw	6
  1416   0008C4  6E5B               	movwf	data@parameters^0,c
  1417   0008C6  0E00               	movlw	0
  1418   0008C8  6E5C               	movwf	(data@parameters+1)^0,c
  1419   0008CA  EE20 F001          	lfsr	2,1
  1420   0008CE  506B               	movf	_lcd^0,w,c
  1421   0008D0  26D9               	addwf	fsr2l,f,c
  1422   0008D2  506C               	movf	(_lcd+1)^0,w,c
  1423   0008D4  22DA               	addwfc	fsr2h,f,c
  1424   0008D6  CFDE F05E          	movff	postinc2,??_updateLCD
  1425   0008DA  CFDD F05F          	movff	postdec2,??_updateLCD+1
  1426   0008DE  C05E  FFD9         	movff	??_updateLCD,fsr2l
  1427   0008E2  C05F  FFDA         	movff	??_updateLCD+1,fsr2h
  1428   0008E6  D802               	call	u3198
  1429   0008E8  EF80  F004         	goto	u3199
  1430   0008EC                     u3198:
  1431   0008EC  0005               	push	
  1432   0008EE  6EFA               	movwf	pclath,c
  1433   0008F0  50DE               	movf	postinc2,w,c
  1434   0008F2  6EFD               	movwf	tosl,c
  1435   0008F4  50DE               	movf	postinc2,w,c
  1436   0008F6  6EFE               	movwf	tosh,c
  1437   0008F8  50F8               	movf	tblptru,w,c
  1438   0008FA  6EFF               	movwf	tosu,c
  1439   0008FC  50FA               	movf	pclath,w,c
  1440   0008FE  0012               	return		;indir
  1441   000900                     u3199:
  1442   000900                     
  1443                           ;main.c: 63: lcd->funcoes[LCD_DATA](':');
  1444   000900  0E3A               	movlw	58
  1445   000902  6E5B               	movwf	data@parameters^0,c
  1446   000904  0E00               	movlw	0
  1447   000906  6E5C               	movwf	(data@parameters+1)^0,c
  1448   000908  EE20 F001          	lfsr	2,1
  1449   00090C  506B               	movf	_lcd^0,w,c
  1450   00090E  26D9               	addwf	fsr2l,f,c
  1451   000910  506C               	movf	(_lcd+1)^0,w,c
  1452   000912  22DA               	addwfc	fsr2h,f,c
  1453   000914  EE10 F002          	lfsr	1,2
  1454   000918  50DE               	movf	postinc2,w,c
  1455   00091A  26E1               	addwf	fsr1l,f,c
  1456   00091C  50DD               	movf	postdec2,w,c
  1457   00091E  22E2               	addwfc	fsr1h,f,c
  1458   000920  D802               	call	u3208
  1459   000922  EF9D  F004         	goto	u3209
  1460   000926                     u3208:
  1461   000926  0005               	push	
  1462   000928  6EFA               	movwf	pclath,c
  1463   00092A  50E6               	movf	postinc1,w,c
  1464   00092C  6EFD               	movwf	tosl,c
  1465   00092E  50E6               	movf	postinc1,w,c
  1466   000930  6EFE               	movwf	tosh,c
  1467   000932  50F8               	movf	tblptru,w,c
  1468   000934  6EFF               	movwf	tosu,c
  1469   000936  50FA               	movf	pclath,w,c
  1470   000938  0012               	return		;indir
  1471   00093A                     u3209:
  1472                           
  1473                           ;main.c: 64: lcd->funcoes[LCD_CMD](0x06);
  1474   00093A  0E06               	movlw	6
  1475   00093C  6E5B               	movwf	data@parameters^0,c
  1476   00093E  0E00               	movlw	0
  1477   000940  6E5C               	movwf	(data@parameters+1)^0,c
  1478   000942  EE20 F001          	lfsr	2,1
  1479   000946  506B               	movf	_lcd^0,w,c
  1480   000948  26D9               	addwf	fsr2l,f,c
  1481   00094A  506C               	movf	(_lcd+1)^0,w,c
  1482   00094C  22DA               	addwfc	fsr2h,f,c
  1483   00094E  CFDE F05E          	movff	postinc2,??_updateLCD
  1484   000952  CFDD F05F          	movff	postdec2,??_updateLCD+1
  1485   000956  C05E  FFD9         	movff	??_updateLCD,fsr2l
  1486   00095A  C05F  FFDA         	movff	??_updateLCD+1,fsr2h
  1487   00095E  D802               	call	u3218
  1488   000960  EFBC  F004         	goto	u3219
  1489   000964                     u3218:
  1490   000964  0005               	push	
  1491   000966  6EFA               	movwf	pclath,c
  1492   000968  50DE               	movf	postinc2,w,c
  1493   00096A  6EFD               	movwf	tosl,c
  1494   00096C  50DE               	movf	postinc2,w,c
  1495   00096E  6EFE               	movwf	tosh,c
  1496   000970  50F8               	movf	tblptru,w,c
  1497   000972  6EFF               	movwf	tosu,c
  1498   000974  50FA               	movf	pclath,w,c
  1499   000976  0012               	return		;indir
  1500   000978                     u3219:
  1501   000978                     
  1502                           ;main.c: 66: lcd->funcoes[LCD_DATA]((char)seg/10 + '0');
  1503   000978  C01F  F04D         	movff	_seg,___awdiv@dividend
  1504   00097C  6A4E               	clrf	(___awdiv@dividend+1)^0,c
  1505   00097E  0E00               	movlw	0
  1506   000980  6E50               	movwf	(___awdiv@divisor+1)^0,c
  1507   000982  0E0A               	movlw	10
  1508   000984  6E4F               	movwf	___awdiv@divisor^0,c
  1509   000986  EC7C  F008         	call	___awdiv	;wreg free
  1510   00098A  0E30               	movlw	48
  1511   00098C  244D               	addwf	?___awdiv^0,w,c
  1512   00098E  6E5B               	movwf	data@parameters^0,c
  1513   000990  0E00               	movlw	0
  1514   000992  204E               	addwfc	(?___awdiv+1)^0,w,c
  1515   000994  6E5C               	movwf	(data@parameters+1)^0,c
  1516   000996  EE20 F001          	lfsr	2,1
  1517   00099A  506B               	movf	_lcd^0,w,c
  1518   00099C  26D9               	addwf	fsr2l,f,c
  1519   00099E  506C               	movf	(_lcd+1)^0,w,c
  1520   0009A0  22DA               	addwfc	fsr2h,f,c
  1521   0009A2  EE10 F002          	lfsr	1,2
  1522   0009A6  50DE               	movf	postinc2,w,c
  1523   0009A8  26E1               	addwf	fsr1l,f,c
  1524   0009AA  50DD               	movf	postdec2,w,c
  1525   0009AC  22E2               	addwfc	fsr1h,f,c
  1526   0009AE  D802               	call	u3228
  1527   0009B0  EFE4  F004         	goto	u3229
  1528   0009B4                     u3228:
  1529   0009B4  0005               	push	
  1530   0009B6  6EFA               	movwf	pclath,c
  1531   0009B8  50E6               	movf	postinc1,w,c
  1532   0009BA  6EFD               	movwf	tosl,c
  1533   0009BC  50E6               	movf	postinc1,w,c
  1534   0009BE  6EFE               	movwf	tosh,c
  1535   0009C0  50F8               	movf	tblptru,w,c
  1536   0009C2  6EFF               	movwf	tosu,c
  1537   0009C4  50FA               	movf	pclath,w,c
  1538   0009C6  0012               	return		;indir
  1539   0009C8                     u3229:
  1540   0009C8                     
  1541                           ;main.c: 67: lcd->funcoes[LCD_CMD](0x06);
  1542   0009C8  0E06               	movlw	6
  1543   0009CA  6E5B               	movwf	data@parameters^0,c
  1544   0009CC  0E00               	movlw	0
  1545   0009CE  6E5C               	movwf	(data@parameters+1)^0,c
  1546   0009D0  EE20 F001          	lfsr	2,1
  1547   0009D4  506B               	movf	_lcd^0,w,c
  1548   0009D6  26D9               	addwf	fsr2l,f,c
  1549   0009D8  506C               	movf	(_lcd+1)^0,w,c
  1550   0009DA  22DA               	addwfc	fsr2h,f,c
  1551   0009DC  CFDE F05E          	movff	postinc2,??_updateLCD
  1552   0009E0  CFDD F05F          	movff	postdec2,??_updateLCD+1
  1553   0009E4  C05E  FFD9         	movff	??_updateLCD,fsr2l
  1554   0009E8  C05F  FFDA         	movff	??_updateLCD+1,fsr2h
  1555   0009EC  D802               	call	u3238
  1556   0009EE  EF03  F005         	goto	u3239
  1557   0009F2                     u3238:
  1558   0009F2  0005               	push	
  1559   0009F4  6EFA               	movwf	pclath,c
  1560   0009F6  50DE               	movf	postinc2,w,c
  1561   0009F8  6EFD               	movwf	tosl,c
  1562   0009FA  50DE               	movf	postinc2,w,c
  1563   0009FC  6EFE               	movwf	tosh,c
  1564   0009FE  50F8               	movf	tblptru,w,c
  1565   000A00  6EFF               	movwf	tosu,c
  1566   000A02  50FA               	movf	pclath,w,c
  1567   000A04  0012               	return		;indir
  1568   000A06                     u3239:
  1569                           
  1570                           ;main.c: 68: lcd->funcoes[LCD_DATA]((char)seg%10 + '0');
  1571   000A06  C01F  F055         	movff	_seg,___awmod@dividend
  1572   000A0A  6A56               	clrf	(___awmod@dividend+1)^0,c
  1573   000A0C  0E00               	movlw	0
  1574   000A0E  6E58               	movwf	(___awmod@divisor+1)^0,c
  1575   000A10  0E0A               	movlw	10
  1576   000A12  6E57               	movwf	___awmod@divisor^0,c
  1577   000A14  ECDE  F008         	call	___awmod	;wreg free
  1578   000A18  0E30               	movlw	48
  1579   000A1A  2455               	addwf	?___awmod^0,w,c
  1580   000A1C  6E5B               	movwf	data@parameters^0,c
  1581   000A1E  0E00               	movlw	0
  1582   000A20  2056               	addwfc	(?___awmod+1)^0,w,c
  1583   000A22  6E5C               	movwf	(data@parameters+1)^0,c
  1584   000A24  EE20 F001          	lfsr	2,1
  1585   000A28  506B               	movf	_lcd^0,w,c
  1586   000A2A  26D9               	addwf	fsr2l,f,c
  1587   000A2C  506C               	movf	(_lcd+1)^0,w,c
  1588   000A2E  22DA               	addwfc	fsr2h,f,c
  1589   000A30  EE10 F002          	lfsr	1,2
  1590   000A34  50DE               	movf	postinc2,w,c
  1591   000A36  26E1               	addwf	fsr1l,f,c
  1592   000A38  50DD               	movf	postdec2,w,c
  1593   000A3A  22E2               	addwfc	fsr1h,f,c
  1594   000A3C  D802               	call	u3248
  1595   000A3E  EF2B  F005         	goto	u3249
  1596   000A42                     u3248:
  1597   000A42  0005               	push	
  1598   000A44  6EFA               	movwf	pclath,c
  1599   000A46  50E6               	movf	postinc1,w,c
  1600   000A48  6EFD               	movwf	tosl,c
  1601   000A4A  50E6               	movf	postinc1,w,c
  1602   000A4C  6EFE               	movwf	tosh,c
  1603   000A4E  50F8               	movf	tblptru,w,c
  1604   000A50  6EFF               	movwf	tosu,c
  1605   000A52  50FA               	movf	pclath,w,c
  1606   000A54  0012               	return		;indir
  1607   000A56                     u3249:
  1608   000A56                     
  1609                           ;main.c: 69: lcd->funcoes[LCD_CMD](0x06);
  1610   000A56  0E06               	movlw	6
  1611   000A58  6E5B               	movwf	data@parameters^0,c
  1612   000A5A  0E00               	movlw	0
  1613   000A5C  6E5C               	movwf	(data@parameters+1)^0,c
  1614   000A5E  EE20 F001          	lfsr	2,1
  1615   000A62  506B               	movf	_lcd^0,w,c
  1616   000A64  26D9               	addwf	fsr2l,f,c
  1617   000A66  506C               	movf	(_lcd+1)^0,w,c
  1618   000A68  22DA               	addwfc	fsr2h,f,c
  1619   000A6A  CFDE F05E          	movff	postinc2,??_updateLCD
  1620   000A6E  CFDD F05F          	movff	postdec2,??_updateLCD+1
  1621   000A72  C05E  FFD9         	movff	??_updateLCD,fsr2l
  1622   000A76  C05F  FFDA         	movff	??_updateLCD+1,fsr2h
  1623   000A7A  D802               	call	u3258
  1624   000A7C  EF4A  F005         	goto	u3259
  1625   000A80                     u3258:
  1626   000A80  0005               	push	
  1627   000A82  6EFA               	movwf	pclath,c
  1628   000A84  50DE               	movf	postinc2,w,c
  1629   000A86  6EFD               	movwf	tosl,c
  1630   000A88  50DE               	movf	postinc2,w,c
  1631   000A8A  6EFE               	movwf	tosh,c
  1632   000A8C  50F8               	movf	tblptru,w,c
  1633   000A8E  6EFF               	movwf	tosu,c
  1634   000A90  50FA               	movf	pclath,w,c
  1635   000A92  0012               	return		;indir
  1636   000A94                     u3259:
  1637   000A94                     
  1638                           ;main.c: 70: return 2;
  1639   000A94  0E02               	movlw	2
  1640   000A96  0012               	return		;funcret
  1641   000A98                     __end_of_updateLCD:
  1642                           	callstack 0
  1643                           
  1644 ;; *************** function _data *****************
  1645 ;; Defined at:
  1646 ;;		line 22 in file "drv_lcd2.c"
  1647 ;; Parameters:    Size  Location     Type
  1648 ;;  parameters      2   29[COMRAM] PTR void 
  1649 ;;		 -> RAM(1535), 
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;  valor           1   31[COMRAM] unsigned char 
  1652 ;; Return value:  Size  Location     Type
  1653 ;;                  1    wreg      unsigned char 
  1654 ;; Registers used:
  1655 ;;		wreg, status,2, status,0, cstack
  1656 ;; Tracked objects:
  1657 ;;		On entry : 0/0
  1658 ;;		On exit  : 0/0
  1659 ;;		Unchanged: 0/0
  1660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1661 ;;      Params:         2       0       0       0       0       0       0
  1662 ;;      Locals:         1       0       0       0       0       0       0
  1663 ;;      Temps:          0       0       0       0       0       0       0
  1664 ;;      Totals:         3       0       0       0       0       0       0
  1665 ;;Total ram usage:        3 bytes
  1666 ;; Hardware stack levels used: 1
  1667 ;; Hardware stack levels required when called: 5
  1668 ;; This function calls:
  1669 ;;		_lcdData
  1670 ;; This function is called by:
  1671 ;;		_getLcdDriver2
  1672 ;;		_updateLCD
  1673 ;; This function uses a non-reentrant model
  1674 ;;
  1675                           
  1676                           	psect	text5
  1677   0017BE                     __ptext5:
  1678                           	callstack 0
  1679   0017BE                     _data:
  1680                           	callstack 23
  1681   0017BE                     
  1682                           ;drv_lcd2.c: 24: unsigned char valor = (unsigned char) parameters;
  1683   0017BE  C05B  F05D         	movff	data@parameters,data@valor
  1684   0017C2                     
  1685                           ;drv_lcd2.c: 25: lcdData(valor);
  1686   0017C2  505D               	movf	data@valor^0,w,c
  1687   0017C4  EC5D  F00B         	call	_lcdData
  1688   0017C8  0012               	return		;funcret
  1689   0017CA                     __end_of_data:
  1690                           	callstack 0
  1691                           
  1692 ;; *************** function _command *****************
  1693 ;; Defined at:
  1694 ;;		line 15 in file "drv_lcd2.c"
  1695 ;; Parameters:    Size  Location     Type
  1696 ;;  parameters      2   29[COMRAM] PTR void 
  1697 ;;		 -> RAM(1535), 
  1698 ;; Auto vars:     Size  Location     Type
  1699 ;;  cmd             1   31[COMRAM] unsigned char 
  1700 ;; Return value:  Size  Location     Type
  1701 ;;                  1    wreg      unsigned char 
  1702 ;; Registers used:
  1703 ;;		wreg, status,2, status,0, cstack
  1704 ;; Tracked objects:
  1705 ;;		On entry : 0/0
  1706 ;;		On exit  : 0/0
  1707 ;;		Unchanged: 0/0
  1708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1709 ;;      Params:         2       0       0       0       0       0       0
  1710 ;;      Locals:         1       0       0       0       0       0       0
  1711 ;;      Temps:          0       0       0       0       0       0       0
  1712 ;;      Totals:         3       0       0       0       0       0       0
  1713 ;;Total ram usage:        3 bytes
  1714 ;; Hardware stack levels used: 1
  1715 ;; Hardware stack levels required when called: 6
  1716 ;; This function calls:
  1717 ;;		_lcdCommand
  1718 ;; This function is called by:
  1719 ;;		_getLcdDriver2
  1720 ;;		_updateLCD
  1721 ;; This function uses a non-reentrant model
  1722 ;;
  1723                           
  1724                           	psect	text6
  1725   0017CA                     __ptext6:
  1726                           	callstack 0
  1727   0017CA                     _command:
  1728                           	callstack 22
  1729   0017CA                     
  1730                           ;drv_lcd2.c: 17: unsigned char cmd = (unsigned char) parameters;
  1731   0017CA  C05B  F05D         	movff	command@parameters,command@cmd
  1732   0017CE                     
  1733                           ;drv_lcd2.c: 18: lcdCommand(cmd);
  1734   0017CE  505D               	movf	command@cmd^0,w,c
  1735   0017D0  ECB5  F00A         	call	_lcdCommand
  1736   0017D4  0012               	return		;funcret
  1737   0017D6                     __end_of_command:
  1738                           	callstack 0
  1739                           
  1740 ;; *************** function _changePORTD *****************
  1741 ;; Defined at:
  1742 ;;		line 7 in file "drv_led.c"
  1743 ;; Parameters:    Size  Location     Type
  1744 ;;  parameters      2   29[COMRAM] PTR void 
  1745 ;;		 -> RAM(1535), 
  1746 ;; Auto vars:     Size  Location     Type
  1747 ;;		None
  1748 ;; Return value:  Size  Location     Type
  1749 ;;                  1    wreg      unsigned char 
  1750 ;; Registers used:
  1751 ;;		None
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/0
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1757 ;;      Params:         2       0       0       0       0       0       0
  1758 ;;      Locals:         0       0       0       0       0       0       0
  1759 ;;      Temps:          0       0       0       0       0       0       0
  1760 ;;      Totals:         2       0       0       0       0       0       0
  1761 ;;Total ram usage:        2 bytes
  1762 ;; Hardware stack levels used: 1
  1763 ;; Hardware stack levels required when called: 3
  1764 ;; This function calls:
  1765 ;;		Nothing
  1766 ;; This function is called by:
  1767 ;;		_getLedDriver
  1768 ;;		_updateLCD
  1769 ;; This function uses a non-reentrant model
  1770 ;;
  1771                           
  1772                           	psect	text7
  1773   001808                     __ptext7:
  1774                           	callstack 0
  1775   001808                     _changePORTD:
  1776                           	callstack 25
  1777   001808                     
  1778                           ;drv_led.c: 8: PORTD = (char) parameters;
  1779   001808  C05B  FF83         	movff	changePORTD@parameters,3971	;volatile
  1780   00180C  0012               	return		;funcret
  1781   00180E                     __end_of_changePORTD:
  1782                           	callstack 0
  1783                           
  1784 ;; *************** function _inverte *****************
  1785 ;; Defined at:
  1786 ;;		line 11 in file "drv_led.c"
  1787 ;; Parameters:    Size  Location     Type
  1788 ;;  parameters      2   29[COMRAM] PTR void 
  1789 ;;		 -> RAM(1535), 
  1790 ;; Auto vars:     Size  Location     Type
  1791 ;;		None
  1792 ;; Return value:  Size  Location     Type
  1793 ;;                  1    wreg      unsigned char 
  1794 ;; Registers used:
  1795 ;;		status,2, status,0
  1796 ;; Tracked objects:
  1797 ;;		On entry : 0/0
  1798 ;;		On exit  : 0/0
  1799 ;;		Unchanged: 0/0
  1800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1801 ;;      Params:         2       0       0       0       0       0       0
  1802 ;;      Locals:         0       0       0       0       0       0       0
  1803 ;;      Temps:          0       0       0       0       0       0       0
  1804 ;;      Totals:         2       0       0       0       0       0       0
  1805 ;;Total ram usage:        2 bytes
  1806 ;; Hardware stack levels used: 1
  1807 ;; Hardware stack levels required when called: 3
  1808 ;; This function calls:
  1809 ;;		Nothing
  1810 ;; This function is called by:
  1811 ;;		_getLedDriver
  1812 ;;		_updateLCD
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816                           	psect	text8
  1817   00180E                     __ptext8:
  1818                           	callstack 0
  1819   00180E                     _inverte:
  1820                           	callstack 25
  1821   00180E                     
  1822                           ;drv_led.c: 13: PORTD = ~PORTD;
  1823   00180E  1E83               	comf	131,f,c	;volatile
  1824   001810  0012               	return		;funcret
  1825   001812                     __end_of_inverte:
  1826                           	callstack 0
  1827                           
  1828 ;; *************** function _lcdData *****************
  1829 ;; Defined at:
  1830 ;;		line 74 in file "lcd.c"
  1831 ;; Parameters:    Size  Location     Type
  1832 ;;  valor           1    wreg     unsigned char 
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;  valor           1   21[COMRAM] unsigned char 
  1835 ;;  old_D           1   22[COMRAM] unsigned char 
  1836 ;; Return value:  Size  Location     Type
  1837 ;;                  1    wreg      void 
  1838 ;; Registers used:
  1839 ;;		wreg, status,2, status,0, cstack
  1840 ;; Tracked objects:
  1841 ;;		On entry : 0/0
  1842 ;;		On exit  : 0/0
  1843 ;;		Unchanged: 0/0
  1844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1845 ;;      Params:         0       0       0       0       0       0       0
  1846 ;;      Locals:         2       0       0       0       0       0       0
  1847 ;;      Temps:          0       0       0       0       0       0       0
  1848 ;;      Totals:         2       0       0       0       0       0       0
  1849 ;;Total ram usage:        2 bytes
  1850 ;; Hardware stack levels used: 1
  1851 ;; Hardware stack levels required when called: 4
  1852 ;; This function calls:
  1853 ;;		_Delay40us
  1854 ;;		_digitalWrite
  1855 ;; This function is called by:
  1856 ;;		_data
  1857 ;; This function uses a non-reentrant model
  1858 ;;
  1859                           
  1860                           	psect	text9
  1861   0016BA                     __ptext9:
  1862                           	callstack 0
  1863   0016BA                     _lcdData:
  1864                           	callstack 23
  1865                           
  1866                           ;incstack = 0
  1867                           ;lcdData@valor stored from wreg
  1868   0016BA  6E53               	movwf	lcdData@valor^0,c
  1869   0016BC                     
  1870                           ;lcd.c: 77: unsigned char old_D;;lcd.c: 78: old_D = PORTD;
  1871   0016BC  CF83 F054          	movff	3971,lcdData@old_D	;volatile
  1872   0016C0                     
  1873                           ;lcd.c: 80: TRISD = 0x00;
  1874   0016C0  0E00               	movlw	0
  1875   0016C2  6E95               	movwf	149,c	;volatile
  1876   0016C4                     
  1877                           ;lcd.c: 81: digitalWrite(PIN_E2, 1);
  1878   0016C4  0E00               	movlw	0
  1879   0016C6  6E4E               	movwf	(digitalWrite@pin+1)^0,c
  1880   0016C8  0E22               	movlw	34
  1881   0016CA  6E4D               	movwf	digitalWrite@pin^0,c
  1882   0016CC  0E00               	movlw	0
  1883   0016CE  6E50               	movwf	(digitalWrite@value+1)^0,c
  1884   0016D0  0E01               	movlw	1
  1885   0016D2  6E4F               	movwf	digitalWrite@value^0,c
  1886   0016D4  EC73  F006         	call	_digitalWrite	;wreg free
  1887   0016D8                     
  1888                           ;lcd.c: 83: PORTD = valor;
  1889   0016D8  C053  FF83         	movff	lcdData@valor,3971	;volatile
  1890   0016DC                     
  1891                           ;lcd.c: 85: digitalWrite(PIN_E1, 1);
  1892   0016DC  0E00               	movlw	0
  1893   0016DE  6E4E               	movwf	(digitalWrite@pin+1)^0,c
  1894   0016E0  0E21               	movlw	33
  1895   0016E2  6E4D               	movwf	digitalWrite@pin^0,c
  1896   0016E4  0E00               	movlw	0
  1897   0016E6  6E50               	movwf	(digitalWrite@value+1)^0,c
  1898   0016E8  0E01               	movlw	1
  1899   0016EA  6E4F               	movwf	digitalWrite@value^0,c
  1900   0016EC  EC73  F006         	call	_digitalWrite	;wreg free
  1901   0016F0                     
  1902                           ;lcd.c: 86: digitalWrite(PIN_E1, 0);
  1903   0016F0  0E00               	movlw	0
  1904   0016F2  6E4E               	movwf	(digitalWrite@pin+1)^0,c
  1905   0016F4  0E21               	movlw	33
  1906   0016F6  6E4D               	movwf	digitalWrite@pin^0,c
  1907   0016F8  0E00               	movlw	0
  1908   0016FA  6E50               	movwf	(digitalWrite@value+1)^0,c
  1909   0016FC  0E00               	movlw	0
  1910   0016FE  6E4F               	movwf	digitalWrite@value^0,c
  1911   001700  EC73  F006         	call	_digitalWrite	;wreg free
  1912   001704                     
  1913                           ;lcd.c: 88: PORTD= old_D;
  1914   001704  C054  FF83         	movff	lcdData@old_D,3971	;volatile
  1915   001708                     
  1916                           ;lcd.c: 90: Delay40us();
  1917   001708  ECD3  F00B         	call	_Delay40us	;wreg free
  1918   00170C  0012               	return		;funcret
  1919   00170E                     __end_of_lcdData:
  1920                           	callstack 0
  1921                           
  1922 ;; *************** function _kernelAddProc *****************
  1923 ;; Defined at:
  1924 ;;		line 13 in file "kernel.c"
  1925 ;; Parameters:    Size  Location     Type
  1926 ;;  newProc         2   29[COMRAM] PTR struct .
  1927 ;;		 -> main@p2(6), main@p1(6), 
  1928 ;; Auto vars:     Size  Location     Type
  1929 ;;		None
  1930 ;; Return value:  Size  Location     Type
  1931 ;;                  1    wreg      unsigned char 
  1932 ;; Registers used:
  1933 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1934 ;; Tracked objects:
  1935 ;;		On entry : 0/0
  1936 ;;		On exit  : 0/0
  1937 ;;		Unchanged: 0/0
  1938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1939 ;;      Params:         2       0       0       0       0       0       0
  1940 ;;      Locals:         0       0       0       0       0       0       0
  1941 ;;      Temps:          2       0       0       0       0       0       0
  1942 ;;      Totals:         4       0       0       0       0       0       0
  1943 ;;Total ram usage:        4 bytes
  1944 ;; Hardware stack levels used: 1
  1945 ;; Hardware stack levels required when called: 4
  1946 ;; This function calls:
  1947 ;;		___awmod
  1948 ;; This function is called by:
  1949 ;;		_main
  1950 ;;		_kernelLoop
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           
  1954                           	psect	text10
  1955   00131C                     __ptext10:
  1956                           	callstack 0
  1957   00131C                     _kernelAddProc:
  1958                           	callstack 25
  1959   00131C                     
  1960                           ;kernel.c: 15: if (((end + 1) % 10) != start) {
  1961   00131C  502B               	movf	_start^0,w,c
  1962   00131E  6E5D               	movwf	??_kernelAddProc^0,c
  1963   001320  6A5E               	clrf	(??_kernelAddProc+1)^0,c
  1964   001322  0E01               	movlw	1
  1965   001324  242A               	addwf	_end^0,w,c
  1966   001326  6E55               	movwf	___awmod@dividend^0,c
  1967   001328  6A56               	clrf	(___awmod@dividend+1)^0,c
  1968   00132A  0E00               	movlw	0
  1969   00132C  2256               	addwfc	(___awmod@dividend+1)^0,f,c
  1970   00132E  0E00               	movlw	0
  1971   001330  6E58               	movwf	(___awmod@divisor+1)^0,c
  1972   001332  0E0A               	movlw	10
  1973   001334  6E57               	movwf	___awmod@divisor^0,c
  1974   001336  ECDE  F008         	call	___awmod	;wreg free
  1975   00133A  505D               	movf	??_kernelAddProc^0,w,c
  1976   00133C  1855               	xorwf	?___awmod^0,w,c
  1977   00133E  E109               	bnz	u3260
  1978   001340  505E               	movf	(??_kernelAddProc+1)^0,w,c
  1979   001342  1856               	xorwf	(?___awmod+1)^0,w,c
  1980   001344  B4D8               	btfsc	status,2,c
  1981   001346  EFA7  F009         	goto	u3261
  1982   00134A  EFA9  F009         	goto	u3260
  1983   00134E                     u3261:
  1984   00134E  EFDF  F009         	goto	l71
  1985   001352                     u3260:
  1986   001352                     
  1987                           ;kernel.c: 16: pool[end] = newProc;
  1988   001352  502A               	movf	_end^0,w,c
  1989   001354  0D02               	mullw	2
  1990   001356  0E01               	movlw	low _pool
  1991   001358  24F3               	addwf	243,w,c
  1992   00135A  6ED9               	movwf	fsr2l,c
  1993   00135C  0E00               	movlw	high _pool
  1994   00135E  20F4               	addwfc	prodh,w,c
  1995   001360  6EDA               	movwf	fsr2h,c
  1996   001362  C05B  FFDE         	movff	kernelAddProc@newProc,postinc2
  1997   001366  C05C  FFDD         	movff	kernelAddProc@newProc+1,postdec2
  1998   00136A                     
  1999                           ;kernel.c: 17: pool[end]->start += newProc->period;
  2000   00136A  EE20 F002          	lfsr	2,2
  2001   00136E  505B               	movf	kernelAddProc@newProc^0,w,c
  2002   001370  26D9               	addwf	fsr2l,f,c
  2003   001372  505C               	movf	(kernelAddProc@newProc+1)^0,w,c
  2004   001374  22DA               	addwfc	fsr2h,f,c
  2005   001376  CFDE F05D          	movff	postinc2,??_kernelAddProc
  2006   00137A  CFDD F05E          	movff	postdec2,??_kernelAddProc+1
  2007   00137E  502A               	movf	_end^0,w,c
  2008   001380  0D02               	mullw	2
  2009   001382  0E01               	movlw	low _pool
  2010   001384  24F3               	addwf	243,w,c
  2011   001386  6ED9               	movwf	fsr2l,c
  2012   001388  0E00               	movlw	high _pool
  2013   00138A  20F4               	addwfc	prodh,w,c
  2014   00138C  6EDA               	movwf	fsr2h,c
  2015   00138E  EE10 F004          	lfsr	1,4
  2016   001392  50DE               	movf	postinc2,w,c
  2017   001394  26E1               	addwf	fsr1l,f,c
  2018   001396  50DD               	movf	postdec2,w,c
  2019   001398  22E2               	addwfc	fsr1h,f,c
  2020   00139A  505D               	movf	??_kernelAddProc^0,w,c
  2021   00139C  26E6               	addwf	postinc1,f,c
  2022   00139E  505E               	movf	(??_kernelAddProc+1)^0,w,c
  2023   0013A0  22E5               	addwfc	postdec1,f,c
  2024   0013A2                     
  2025                           ;kernel.c: 18: end = (end + 1) % 10;
  2026   0013A2  0E01               	movlw	1
  2027   0013A4  242A               	addwf	_end^0,w,c
  2028   0013A6  6E55               	movwf	___awmod@dividend^0,c
  2029   0013A8  6A56               	clrf	(___awmod@dividend+1)^0,c
  2030   0013AA  0E00               	movlw	0
  2031   0013AC  2256               	addwfc	(___awmod@dividend+1)^0,f,c
  2032   0013AE  0E00               	movlw	0
  2033   0013B0  6E58               	movwf	(___awmod@divisor+1)^0,c
  2034   0013B2  0E0A               	movlw	10
  2035   0013B4  6E57               	movwf	___awmod@divisor^0,c
  2036   0013B6  ECDE  F008         	call	___awmod	;wreg free
  2037   0013BA  5055               	movf	?___awmod^0,w,c
  2038   0013BC  6E2A               	movwf	_end^0,c
  2039   0013BE                     l71:
  2040   0013BE  0012               	return		;funcret
  2041   0013C0                     __end_of_kernelAddProc:
  2042                           	callstack 0
  2043                           
  2044 ;; *************** function ___awmod *****************
  2045 ;; Defined at:
  2046 ;;		line 7 in file "C:\Microchip\xc8\pic\sources\c90\common\awmod.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;  dividend        2   23[COMRAM] int 
  2049 ;;  divisor         2   25[COMRAM] int 
  2050 ;; Auto vars:     Size  Location     Type
  2051 ;;  sign            1   28[COMRAM] unsigned char 
  2052 ;;  counter         1   27[COMRAM] unsigned char 
  2053 ;; Return value:  Size  Location     Type
  2054 ;;                  2   23[COMRAM] int 
  2055 ;; Registers used:
  2056 ;;		wreg, status,2, status,0
  2057 ;; Tracked objects:
  2058 ;;		On entry : 0/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2062 ;;      Params:         4       0       0       0       0       0       0
  2063 ;;      Locals:         2       0       0       0       0       0       0
  2064 ;;      Temps:          0       0       0       0       0       0       0
  2065 ;;      Totals:         6       0       0       0       0       0       0
  2066 ;;Total ram usage:        6 bytes
  2067 ;; Hardware stack levels used: 1
  2068 ;; Hardware stack levels required when called: 3
  2069 ;; This function calls:
  2070 ;;		Nothing
  2071 ;; This function is called by:
  2072 ;;		_counter
  2073 ;;		_updateLCD
  2074 ;;		_kernelAddProc
  2075 ;;		_kernelLoop
  2076 ;;		_dsdec2bcd
  2077 ;; This function uses a non-reentrant model
  2078 ;;
  2079                           
  2080                           	psect	text11
  2081   0011BC                     __ptext11:
  2082                           	callstack 0
  2083   0011BC                     ___awmod:
  2084                           	callstack 25
  2085   0011BC  0E00               	movlw	0
  2086   0011BE  6E5A               	movwf	___awmod@sign^0,c
  2087   0011C0  BE56               	btfsc	(___awmod@dividend+1)^0,7,c
  2088   0011C2  EFE7  F008         	goto	u3030
  2089   0011C6  EFE5  F008         	goto	u3031
  2090   0011CA                     u3031:
  2091   0011CA  EFED  F008         	goto	l2936
  2092   0011CE                     u3030:
  2093   0011CE  6C55               	negf	___awmod@dividend^0,c
  2094   0011D0  1E56               	comf	(___awmod@dividend+1)^0,f,c
  2095   0011D2  B0D8               	btfsc	status,0,c
  2096   0011D4  2A56               	incf	(___awmod@dividend+1)^0,f,c
  2097   0011D6  0E01               	movlw	1
  2098   0011D8  6E5A               	movwf	___awmod@sign^0,c
  2099   0011DA                     l2936:
  2100   0011DA  BE58               	btfsc	(___awmod@divisor+1)^0,7,c
  2101   0011DC  EFF4  F008         	goto	u3040
  2102   0011E0  EFF2  F008         	goto	u3041
  2103   0011E4                     u3041:
  2104   0011E4  EFF8  F008         	goto	l2940
  2105   0011E8                     u3040:
  2106   0011E8  6C57               	negf	___awmod@divisor^0,c
  2107   0011EA  1E58               	comf	(___awmod@divisor+1)^0,f,c
  2108   0011EC  B0D8               	btfsc	status,0,c
  2109   0011EE  2A58               	incf	(___awmod@divisor+1)^0,f,c
  2110   0011F0                     l2940:
  2111   0011F0  5057               	movf	___awmod@divisor^0,w,c
  2112   0011F2  1058               	iorwf	(___awmod@divisor+1)^0,w,c
  2113   0011F4  B4D8               	btfsc	status,2,c
  2114   0011F6  EFFF  F008         	goto	u3051
  2115   0011FA  EF01  F009         	goto	u3050
  2116   0011FE                     u3051:
  2117   0011FE  EF25  F009         	goto	l2956
  2118   001202                     u3050:
  2119   001202  0E01               	movlw	1
  2120   001204  6E59               	movwf	___awmod@counter^0,c
  2121   001206  EF09  F009         	goto	l2946
  2122   00120A                     l2944:
  2123   00120A  90D8               	bcf	status,0,c
  2124   00120C  3657               	rlcf	___awmod@divisor^0,f,c
  2125   00120E  3658               	rlcf	(___awmod@divisor+1)^0,f,c
  2126   001210  2A59               	incf	___awmod@counter^0,f,c
  2127   001212                     l2946:
  2128   001212  AE58               	btfss	(___awmod@divisor+1)^0,7,c
  2129   001214  EF0E  F009         	goto	u3061
  2130   001218  EF10  F009         	goto	u3060
  2131   00121C                     u3061:
  2132   00121C  EF05  F009         	goto	l2944
  2133   001220                     u3060:
  2134   001220                     l2948:
  2135   001220  5057               	movf	___awmod@divisor^0,w,c
  2136   001222  5C55               	subwf	___awmod@dividend^0,w,c
  2137   001224  5058               	movf	(___awmod@divisor+1)^0,w,c
  2138   001226  5856               	subwfb	(___awmod@dividend+1)^0,w,c
  2139   001228  A0D8               	btfss	status,0,c
  2140   00122A  EF19  F009         	goto	u3071
  2141   00122E  EF1B  F009         	goto	u3070
  2142   001232                     u3071:
  2143   001232  EF1F  F009         	goto	l2952
  2144   001236                     u3070:
  2145   001236  5057               	movf	___awmod@divisor^0,w,c
  2146   001238  5E55               	subwf	___awmod@dividend^0,f,c
  2147   00123A  5058               	movf	(___awmod@divisor+1)^0,w,c
  2148   00123C  5A56               	subwfb	(___awmod@dividend+1)^0,f,c
  2149   00123E                     l2952:
  2150   00123E  90D8               	bcf	status,0,c
  2151   001240  3258               	rrcf	(___awmod@divisor+1)^0,f,c
  2152   001242  3257               	rrcf	___awmod@divisor^0,f,c
  2153   001244  2E59               	decfsz	___awmod@counter^0,f,c
  2154   001246  EF10  F009         	goto	l2948
  2155   00124A                     l2956:
  2156   00124A  505A               	movf	___awmod@sign^0,w,c
  2157   00124C  B4D8               	btfsc	status,2,c
  2158   00124E  EF2B  F009         	goto	u3081
  2159   001252  EF2D  F009         	goto	u3080
  2160   001256                     u3081:
  2161   001256  EF31  F009         	goto	l2960
  2162   00125A                     u3080:
  2163   00125A  6C55               	negf	___awmod@dividend^0,c
  2164   00125C  1E56               	comf	(___awmod@dividend+1)^0,f,c
  2165   00125E  B0D8               	btfsc	status,0,c
  2166   001260  2A56               	incf	(___awmod@dividend+1)^0,f,c
  2167   001262                     l2960:
  2168   001262  C055  F055         	movff	___awmod@dividend,?___awmod
  2169   001266  C056  F056         	movff	___awmod@dividend+1,?___awmod+1
  2170   00126A  0012               	return		;funcret
  2171   00126C                     __end_of___awmod:
  2172                           	callstack 0
  2173                           
  2174 ;; *************** function ___awdiv *****************
  2175 ;; Defined at:
  2176 ;;		line 7 in file "C:\Microchip\xc8\pic\sources\c90\common\awdiv.c"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;  dividend        2   15[COMRAM] int 
  2179 ;;  divisor         2   17[COMRAM] int 
  2180 ;; Auto vars:     Size  Location     Type
  2181 ;;  quotient        2   21[COMRAM] int 
  2182 ;;  sign            1   20[COMRAM] unsigned char 
  2183 ;;  counter         1   19[COMRAM] unsigned char 
  2184 ;; Return value:  Size  Location     Type
  2185 ;;                  2   15[COMRAM] int 
  2186 ;; Registers used:
  2187 ;;		wreg, status,2, status,0
  2188 ;; Tracked objects:
  2189 ;;		On entry : 0/0
  2190 ;;		On exit  : 0/0
  2191 ;;		Unchanged: 0/0
  2192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2193 ;;      Params:         4       0       0       0       0       0       0
  2194 ;;      Locals:         4       0       0       0       0       0       0
  2195 ;;      Temps:          0       0       0       0       0       0       0
  2196 ;;      Totals:         8       0       0       0       0       0       0
  2197 ;;Total ram usage:        8 bytes
  2198 ;; Hardware stack levels used: 1
  2199 ;; Hardware stack levels required when called: 3
  2200 ;; This function calls:
  2201 ;;		Nothing
  2202 ;; This function is called by:
  2203 ;;		_counter
  2204 ;;		_updateLCD
  2205 ;;		_dsdec2bcd
  2206 ;;		_dsbcd2dec
  2207 ;; This function uses a non-reentrant model
  2208 ;;
  2209                           
  2210                           	psect	text12
  2211   0010F8                     __ptext12:
  2212                           	callstack 0
  2213   0010F8                     ___awdiv:
  2214                           	callstack 25
  2215   0010F8  0E00               	movlw	0
  2216   0010FA  6E52               	movwf	___awdiv@sign^0,c
  2217   0010FC  BE50               	btfsc	(___awdiv@divisor+1)^0,7,c
  2218   0010FE  EF85  F008         	goto	u2970
  2219   001102  EF83  F008         	goto	u2971
  2220   001106                     u2971:
  2221   001106  EF8B  F008         	goto	l2892
  2222   00110A                     u2970:
  2223   00110A  6C4F               	negf	___awdiv@divisor^0,c
  2224   00110C  1E50               	comf	(___awdiv@divisor+1)^0,f,c
  2225   00110E  B0D8               	btfsc	status,0,c
  2226   001110  2A50               	incf	(___awdiv@divisor+1)^0,f,c
  2227   001112  0E01               	movlw	1
  2228   001114  6E52               	movwf	___awdiv@sign^0,c
  2229   001116                     l2892:
  2230   001116  BE4E               	btfsc	(___awdiv@dividend+1)^0,7,c
  2231   001118  EF92  F008         	goto	u2980
  2232   00111C  EF90  F008         	goto	u2981
  2233   001120                     u2981:
  2234   001120  EF98  F008         	goto	l2898
  2235   001124                     u2980:
  2236   001124  6C4D               	negf	___awdiv@dividend^0,c
  2237   001126  1E4E               	comf	(___awdiv@dividend+1)^0,f,c
  2238   001128  B0D8               	btfsc	status,0,c
  2239   00112A  2A4E               	incf	(___awdiv@dividend+1)^0,f,c
  2240   00112C  0E01               	movlw	1
  2241   00112E  1A52               	xorwf	___awdiv@sign^0,f,c
  2242   001130                     l2898:
  2243   001130  0E00               	movlw	0
  2244   001132  6E54               	movwf	(___awdiv@quotient+1)^0,c
  2245   001134  0E00               	movlw	0
  2246   001136  6E53               	movwf	___awdiv@quotient^0,c
  2247   001138  504F               	movf	___awdiv@divisor^0,w,c
  2248   00113A  1050               	iorwf	(___awdiv@divisor+1)^0,w,c
  2249   00113C  B4D8               	btfsc	status,2,c
  2250   00113E  EFA3  F008         	goto	u2991
  2251   001142  EFA5  F008         	goto	u2990
  2252   001146                     u2991:
  2253   001146  EFCD  F008         	goto	l2920
  2254   00114A                     u2990:
  2255   00114A  0E01               	movlw	1
  2256   00114C  6E51               	movwf	___awdiv@counter^0,c
  2257   00114E  EFAD  F008         	goto	l2906
  2258   001152                     l2904:
  2259   001152  90D8               	bcf	status,0,c
  2260   001154  364F               	rlcf	___awdiv@divisor^0,f,c
  2261   001156  3650               	rlcf	(___awdiv@divisor+1)^0,f,c
  2262   001158  2A51               	incf	___awdiv@counter^0,f,c
  2263   00115A                     l2906:
  2264   00115A  AE50               	btfss	(___awdiv@divisor+1)^0,7,c
  2265   00115C  EFB2  F008         	goto	u3001
  2266   001160  EFB4  F008         	goto	u3000
  2267   001164                     u3001:
  2268   001164  EFA9  F008         	goto	l2904
  2269   001168                     u3000:
  2270   001168                     l2908:
  2271   001168  90D8               	bcf	status,0,c
  2272   00116A  3653               	rlcf	___awdiv@quotient^0,f,c
  2273   00116C  3654               	rlcf	(___awdiv@quotient+1)^0,f,c
  2274   00116E  504F               	movf	___awdiv@divisor^0,w,c
  2275   001170  5C4D               	subwf	___awdiv@dividend^0,w,c
  2276   001172  5050               	movf	(___awdiv@divisor+1)^0,w,c
  2277   001174  584E               	subwfb	(___awdiv@dividend+1)^0,w,c
  2278   001176  A0D8               	btfss	status,0,c
  2279   001178  EFC0  F008         	goto	u3011
  2280   00117C  EFC2  F008         	goto	u3010
  2281   001180                     u3011:
  2282   001180  EFC7  F008         	goto	l2916
  2283   001184                     u3010:
  2284   001184  504F               	movf	___awdiv@divisor^0,w,c
  2285   001186  5E4D               	subwf	___awdiv@dividend^0,f,c
  2286   001188  5050               	movf	(___awdiv@divisor+1)^0,w,c
  2287   00118A  5A4E               	subwfb	(___awdiv@dividend+1)^0,f,c
  2288   00118C  8053               	bsf	___awdiv@quotient^0,0,c
  2289   00118E                     l2916:
  2290   00118E  90D8               	bcf	status,0,c
  2291   001190  3250               	rrcf	(___awdiv@divisor+1)^0,f,c
  2292   001192  324F               	rrcf	___awdiv@divisor^0,f,c
  2293   001194  2E51               	decfsz	___awdiv@counter^0,f,c
  2294   001196  EFB4  F008         	goto	l2908
  2295   00119A                     l2920:
  2296   00119A  5052               	movf	___awdiv@sign^0,w,c
  2297   00119C  B4D8               	btfsc	status,2,c
  2298   00119E  EFD3  F008         	goto	u3021
  2299   0011A2  EFD5  F008         	goto	u3020
  2300   0011A6                     u3021:
  2301   0011A6  EFD9  F008         	goto	l2924
  2302   0011AA                     u3020:
  2303   0011AA  6C53               	negf	___awdiv@quotient^0,c
  2304   0011AC  1E54               	comf	(___awdiv@quotient+1)^0,f,c
  2305   0011AE  B0D8               	btfsc	status,0,c
  2306   0011B0  2A54               	incf	(___awdiv@quotient+1)^0,f,c
  2307   0011B2                     l2924:
  2308   0011B2  C053  F04D         	movff	___awdiv@quotient,?___awdiv
  2309   0011B6  C054  F04E         	movff	___awdiv@quotient+1,?___awdiv+1
  2310   0011BA  0012               	return		;funcret
  2311   0011BC                     __end_of___awdiv:
  2312                           	callstack 0
  2313                           
  2314 ;; *************** function _kernelInit *****************
  2315 ;; Defined at:
  2316 ;;		line 7 in file "kernel.c"
  2317 ;; Parameters:    Size  Location     Type
  2318 ;;		None
  2319 ;; Auto vars:     Size  Location     Type
  2320 ;;		None
  2321 ;; Return value:  Size  Location     Type
  2322 ;;                  1    wreg      unsigned char 
  2323 ;; Registers used:
  2324 ;;		wreg, status,2
  2325 ;; Tracked objects:
  2326 ;;		On entry : 0/0
  2327 ;;		On exit  : 0/0
  2328 ;;		Unchanged: 0/0
  2329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2330 ;;      Params:         0       0       0       0       0       0       0
  2331 ;;      Locals:         0       0       0       0       0       0       0
  2332 ;;      Temps:          0       0       0       0       0       0       0
  2333 ;;      Totals:         0       0       0       0       0       0       0
  2334 ;;Total ram usage:        0 bytes
  2335 ;; Hardware stack levels used: 1
  2336 ;; Hardware stack levels required when called: 3
  2337 ;; This function calls:
  2338 ;;		Nothing
  2339 ;; This function is called by:
  2340 ;;		_main
  2341 ;; This function uses a non-reentrant model
  2342 ;;
  2343                           
  2344                           	psect	text13
  2345   0017D6                     __ptext13:
  2346                           	callstack 0
  2347   0017D6                     _kernelInit:
  2348                           	callstack 27
  2349   0017D6                     
  2350                           ;kernel.c: 8: start = 0;
  2351   0017D6  0E00               	movlw	0
  2352   0017D8  6E2B               	movwf	_start^0,c
  2353                           
  2354                           ;kernel.c: 9: end = 0;
  2355   0017DA  0E00               	movlw	0
  2356   0017DC  6E2A               	movwf	_end^0,c
  2357   0017DE  0012               	return		;funcret
  2358   0017E0                     __end_of_kernelInit:
  2359                           	callstack 0
  2360                           
  2361 ;; *************** function _initGenerico *****************
  2362 ;; Defined at:
  2363 ;;		line 16 in file "drv_led.c"
  2364 ;; Parameters:    Size  Location     Type
  2365 ;;  parameters      2   23[COMRAM] PTR void 
  2366 ;;		 -> NULL(0), 
  2367 ;; Auto vars:     Size  Location     Type
  2368 ;;		None
  2369 ;; Return value:  Size  Location     Type
  2370 ;;                  1    wreg      unsigned char 
  2371 ;; Registers used:
  2372 ;;		wreg, status,2
  2373 ;; Tracked objects:
  2374 ;;		On entry : 0/0
  2375 ;;		On exit  : 0/0
  2376 ;;		Unchanged: 0/0
  2377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2378 ;;      Params:         2       0       0       0       0       0       0
  2379 ;;      Locals:         0       0       0       0       0       0       0
  2380 ;;      Temps:          0       0       0       0       0       0       0
  2381 ;;      Totals:         2       0       0       0       0       0       0
  2382 ;;Total ram usage:        2 bytes
  2383 ;; Hardware stack levels used: 1
  2384 ;; Hardware stack levels required when called: 3
  2385 ;; This function calls:
  2386 ;;		Nothing
  2387 ;; This function is called by:
  2388 ;;		_getLedDriver
  2389 ;;		_main
  2390 ;; This function uses a non-reentrant model
  2391 ;;
  2392                           
  2393                           	psect	text14
  2394   0017E0                     __ptext14:
  2395                           	callstack 0
  2396   0017E0                     _initGenerico:
  2397                           	callstack 27
  2398   0017E0                     
  2399                           ;drv_led.c: 17: TRISD = 0x00;
  2400   0017E0  0E00               	movlw	0
  2401   0017E2  6E95               	movwf	149,c	;volatile
  2402   0017E4                     
  2403                           ;drv_led.c: 18: myself.id = (char) parameters;
  2404   0017E4  C055  F031         	movff	initGenerico@parameters,_myself
  2405   0017E8  0012               	return		;funcret
  2406   0017EA                     __end_of_initGenerico:
  2407                           	callstack 0
  2408                           
  2409 ;; *************** function _initGenerico2 *****************
  2410 ;; Defined at:
  2411 ;;		line 9 in file "drv_lcd2.c"
  2412 ;; Parameters:    Size  Location     Type
  2413 ;;  parameters      2   23[COMRAM] PTR void 
  2414 ;;		 -> NULL(0), 
  2415 ;; Auto vars:     Size  Location     Type
  2416 ;;		None
  2417 ;; Return value:  Size  Location     Type
  2418 ;;                  1    wreg      unsigned char 
  2419 ;; Registers used:
  2420 ;;		wreg, status,2, status,0, cstack
  2421 ;; Tracked objects:
  2422 ;;		On entry : 0/0
  2423 ;;		On exit  : 0/0
  2424 ;;		Unchanged: 0/0
  2425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2426 ;;      Params:         2       0       0       0       0       0       0
  2427 ;;      Locals:         0       0       0       0       0       0       0
  2428 ;;      Temps:          0       0       0       0       0       0       0
  2429 ;;      Totals:         2       0       0       0       0       0       0
  2430 ;;Total ram usage:        2 bytes
  2431 ;; Hardware stack levels used: 1
  2432 ;; Hardware stack levels required when called: 7
  2433 ;; This function calls:
  2434 ;;		_lcdInit
  2435 ;; This function is called by:
  2436 ;;		_getLcdDriver2
  2437 ;;		_main
  2438 ;; This function uses a non-reentrant model
  2439 ;;
  2440                           
  2441                           	psect	text15
  2442   0017EA                     __ptext15:
  2443                           	callstack 0
  2444   0017EA                     _initGenerico2:
  2445                           	callstack 23
  2446   0017EA                     
  2447                           ;drv_lcd2.c: 10: lcdInit();
  2448   0017EA  ECF4  F00A         	call	_lcdInit	;wreg free
  2449   0017EE                     
  2450                           ;drv_lcd2.c: 11: myself.id = (char) parameters;
  2451   0017EE  C055  F02C         	movff	initGenerico2@parameters,_myself@drv_lcd2$F558
  2452   0017F2  0012               	return		;funcret
  2453   0017F4                     __end_of_initGenerico2:
  2454                           	callstack 0
  2455                           
  2456 ;; *************** function _lcdInit *****************
  2457 ;; Defined at:
  2458 ;;		line 95 in file "lcd.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;		None
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;		None
  2463 ;; Return value:  Size  Location     Type
  2464 ;;                  1    wreg      void 
  2465 ;; Registers used:
  2466 ;;		wreg, status,2, status,0, cstack
  2467 ;; Tracked objects:
  2468 ;;		On entry : 0/0
  2469 ;;		On exit  : 0/0
  2470 ;;		Unchanged: 0/0
  2471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2472 ;;      Params:         0       0       0       0       0       0       0
  2473 ;;      Locals:         0       0       0       0       0       0       0
  2474 ;;      Temps:          0       0       0       0       0       0       0
  2475 ;;      Totals:         0       0       0       0       0       0       0
  2476 ;;Total ram usage:        0 bytes
  2477 ;; Hardware stack levels used: 1
  2478 ;; Hardware stack levels required when called: 6
  2479 ;; This function calls:
  2480 ;;		_Delay2ms
  2481 ;;		_lcdCommand
  2482 ;;		_pinMode
  2483 ;; This function is called by:
  2484 ;;		_initGenerico2
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           	psect	text16
  2489   0015E8                     __ptext16:
  2490                           	callstack 0
  2491   0015E8                     _lcdInit:
  2492                           	callstack 23
  2493   0015E8                     
  2494                           ;lcd.c: 97: pinMode(PIN_E2, 0);
  2495   0015E8  0E00               	movlw	0
  2496   0015EA  6E4E               	movwf	(pinMode@pin+1)^0,c
  2497   0015EC  0E22               	movlw	34
  2498   0015EE  6E4D               	movwf	pinMode@pin^0,c
  2499   0015F0  0E00               	movlw	0
  2500   0015F2  6E50               	movwf	(pinMode@type+1)^0,c
  2501   0015F4  0E00               	movlw	0
  2502   0015F6  6E4F               	movwf	pinMode@type^0,c
  2503   0015F8  EC4C  F005         	call	_pinMode	;wreg free
  2504                           
  2505                           ;lcd.c: 98: pinMode(PIN_E1, 0);
  2506   0015FC  0E00               	movlw	0
  2507   0015FE  6E4E               	movwf	(pinMode@pin+1)^0,c
  2508   001600  0E21               	movlw	33
  2509   001602  6E4D               	movwf	pinMode@pin^0,c
  2510   001604  0E00               	movlw	0
  2511   001606  6E50               	movwf	(pinMode@type+1)^0,c
  2512   001608  0E00               	movlw	0
  2513   00160A  6E4F               	movwf	pinMode@type^0,c
  2514   00160C  EC4C  F005         	call	_pinMode	;wreg free
  2515   001610                     
  2516                           ;lcd.c: 99: TRISD = 0x00;
  2517   001610  0E00               	movlw	0
  2518   001612  6E95               	movwf	149,c	;volatile
  2519   001614                     
  2520                           ;lcd.c: 102: Delay2ms(); Delay2ms(); Delay2ms(); Delay2ms(); Delay2ms();
  2521   001614  ECC5  F00B         	call	_Delay2ms	;wreg free
  2522   001618  ECC5  F00B         	call	_Delay2ms	;wreg free
  2523   00161C  ECC5  F00B         	call	_Delay2ms	;wreg free
  2524   001620  ECC5  F00B         	call	_Delay2ms	;wreg free
  2525   001624  ECC5  F00B         	call	_Delay2ms	;wreg free
  2526   001628                     
  2527                           ;lcd.c: 104: lcdCommand(0x38);
  2528   001628  0E38               	movlw	56
  2529   00162A  ECB5  F00A         	call	_lcdCommand
  2530   00162E                     
  2531                           ;lcd.c: 105: Delay2ms(); Delay2ms();
  2532   00162E  ECC5  F00B         	call	_Delay2ms	;wreg free
  2533   001632  ECC5  F00B         	call	_Delay2ms	;wreg free
  2534   001636                     
  2535                           ;lcd.c: 106: lcdCommand(0x38);
  2536   001636  0E38               	movlw	56
  2537   001638  ECB5  F00A         	call	_lcdCommand
  2538   00163C                     
  2539                           ;lcd.c: 107: Delay2ms();
  2540   00163C  ECC5  F00B         	call	_Delay2ms	;wreg free
  2541   001640                     
  2542                           ;lcd.c: 108: lcdCommand(0x38);
  2543   001640  0E38               	movlw	56
  2544   001642  ECB5  F00A         	call	_lcdCommand
  2545   001646                     
  2546                           ;lcd.c: 110: lcdCommand(0x38);
  2547   001646  0E38               	movlw	56
  2548   001648  ECB5  F00A         	call	_lcdCommand
  2549   00164C                     
  2550                           ;lcd.c: 111: lcdCommand(0x06);
  2551   00164C  0E06               	movlw	6
  2552   00164E  ECB5  F00A         	call	_lcdCommand
  2553   001652                     
  2554                           ;lcd.c: 114: lcdCommand(0x0C);
  2555   001652  0E0C               	movlw	12
  2556   001654  ECB5  F00A         	call	_lcdCommand
  2557   001658                     
  2558                           ;lcd.c: 115: lcdCommand(0x01);
  2559   001658  0E01               	movlw	1
  2560   00165A  ECB5  F00A         	call	_lcdCommand
  2561   00165E  0012               	return		;funcret
  2562   001660                     __end_of_lcdInit:
  2563                           	callstack 0
  2564                           
  2565 ;; *************** function _pinMode *****************
  2566 ;; Defined at:
  2567 ;;		line 54 in file "io.c"
  2568 ;; Parameters:    Size  Location     Type
  2569 ;;  pin             2   15[COMRAM] int 
  2570 ;;  type            2   17[COMRAM] int 
  2571 ;; Auto vars:     Size  Location     Type
  2572 ;;		None
  2573 ;; Return value:  Size  Location     Type
  2574 ;;                  1    wreg      void 
  2575 ;; Registers used:
  2576 ;;		wreg, status,2, status,0
  2577 ;; Tracked objects:
  2578 ;;		On entry : 0/0
  2579 ;;		On exit  : 0/0
  2580 ;;		Unchanged: 0/0
  2581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2582 ;;      Params:         4       0       0       0       0       0       0
  2583 ;;      Locals:         0       0       0       0       0       0       0
  2584 ;;      Temps:          2       0       0       0       0       0       0
  2585 ;;      Totals:         6       0       0       0       0       0       0
  2586 ;;Total ram usage:        6 bytes
  2587 ;; Hardware stack levels used: 1
  2588 ;; Hardware stack levels required when called: 3
  2589 ;; This function calls:
  2590 ;;		Nothing
  2591 ;; This function is called by:
  2592 ;;		_lcdInit
  2593 ;;		_adcInit
  2594 ;;		_i2cInit
  2595 ;;		_read_SCL
  2596 ;;		_read_SDA
  2597 ;;		_clear_SCL
  2598 ;;		_clear_SDA
  2599 ;;		_ssdInit
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           
  2603                           	psect	text17
  2604   000A98                     __ptext17:
  2605                           	callstack 0
  2606   000A98                     _pinMode:
  2607                           	callstack 25
  2608   000A98                     
  2609                           ;io.c: 56: if(pin <8){
  2610   000A98  BE4E               	btfsc	(pinMode@pin+1)^0,7,c
  2611   000A9A  EF5A  F005         	goto	u2770
  2612   000A9E  504E               	movf	(pinMode@pin+1)^0,w,c
  2613   000AA0  E107               	bnz	u2771
  2614   000AA2  0E08               	movlw	8
  2615   000AA4  5C4D               	subwf	pinMode@pin^0,w,c
  2616   000AA6  B0D8               	btfsc	status,0,c
  2617   000AA8  EF58  F005         	goto	u2771
  2618   000AAC  EF5A  F005         	goto	u2770
  2619   000AB0                     u2771:
  2620   000AB0  EF84  F005         	goto	l2840
  2621   000AB4                     u2770:
  2622   000AB4                     
  2623                           ;io.c: 57: if (type){ ((TRISA) |= (1<<(pin)));}
  2624   000AB4  504F               	movf	pinMode@type^0,w,c
  2625   000AB6  1050               	iorwf	(pinMode@type+1)^0,w,c
  2626   000AB8  B4D8               	btfsc	status,2,c
  2627   000ABA  EF61  F005         	goto	u2781
  2628   000ABE  EF63  F005         	goto	u2780
  2629   000AC2                     u2781:
  2630   000AC2  EF73  F005         	goto	l2838
  2631   000AC6                     u2780:
  2632   000AC6  C04D  F051         	movff	pinMode@pin,??_pinMode
  2633   000ACA  0E01               	movlw	1
  2634   000ACC  6E52               	movwf	(??_pinMode+1)^0,c
  2635   000ACE  2A51               	incf	??_pinMode^0,f,c
  2636   000AD0  EF6C  F005         	goto	u2794
  2637   000AD4                     u2795:
  2638   000AD4  90D8               	bcf	status,0,c
  2639   000AD6  3652               	rlcf	(??_pinMode+1)^0,f,c
  2640   000AD8                     u2794:
  2641   000AD8  2E51               	decfsz	??_pinMode^0,f,c
  2642   000ADA  EF6A  F005         	goto	u2795
  2643   000ADE  5052               	movf	(??_pinMode+1)^0,w,c
  2644   000AE0  1292               	iorwf	146,f,c	;volatile
  2645   000AE2  EF72  F006         	goto	l236
  2646   000AE6                     l2838:
  2647                           
  2648                           ;io.c: 58: else{ ((TRISA) &= ~(1<<(pin)));}
  2649   000AE6  C04D  F051         	movff	pinMode@pin,??_pinMode
  2650   000AEA  0E01               	movlw	1
  2651   000AEC  6E52               	movwf	(??_pinMode+1)^0,c
  2652   000AEE  2A51               	incf	??_pinMode^0,f,c
  2653   000AF0  EF7C  F005         	goto	u2804
  2654   000AF4                     u2805:
  2655   000AF4  90D8               	bcf	status,0,c
  2656   000AF6  3652               	rlcf	(??_pinMode+1)^0,f,c
  2657   000AF8                     u2804:
  2658   000AF8  2E51               	decfsz	??_pinMode^0,f,c
  2659   000AFA  EF7A  F005         	goto	u2805
  2660   000AFE  5052               	movf	(??_pinMode+1)^0,w,c
  2661   000B00  0AFF               	xorlw	255
  2662   000B02  1692               	andwf	146,f,c	;volatile
  2663   000B04  EF72  F006         	goto	l236
  2664   000B08                     l2840:
  2665   000B08  BE4E               	btfsc	(pinMode@pin+1)^0,7,c
  2666   000B0A  EF92  F005         	goto	u2810
  2667   000B0E  504E               	movf	(pinMode@pin+1)^0,w,c
  2668   000B10  E107               	bnz	u2811
  2669   000B12  0E10               	movlw	16
  2670   000B14  5C4D               	subwf	pinMode@pin^0,w,c
  2671   000B16  B0D8               	btfsc	status,0,c
  2672   000B18  EF90  F005         	goto	u2811
  2673   000B1C  EF92  F005         	goto	u2810
  2674   000B20                     u2811:
  2675   000B20  EFC0  F005         	goto	l2848
  2676   000B24                     u2810:
  2677   000B24                     
  2678                           ;io.c: 60: if (type){ ((TRISB) |= (1<<(pin-8)));}
  2679   000B24  504F               	movf	pinMode@type^0,w,c
  2680   000B26  1050               	iorwf	(pinMode@type+1)^0,w,c
  2681   000B28  B4D8               	btfsc	status,2,c
  2682   000B2A  EF99  F005         	goto	u2821
  2683   000B2E  EF9B  F005         	goto	u2820
  2684   000B32                     u2821:
  2685   000B32  EFAD  F005         	goto	l2846
  2686   000B36                     u2820:
  2687   000B36  C04D  F051         	movff	pinMode@pin,??_pinMode
  2688   000B3A  0EF8               	movlw	-8
  2689   000B3C  2651               	addwf	??_pinMode^0,f,c
  2690   000B3E  0E01               	movlw	1
  2691   000B40  6E52               	movwf	(??_pinMode+1)^0,c
  2692   000B42  2A51               	incf	??_pinMode^0,f,c
  2693   000B44  EFA6  F005         	goto	u2834
  2694   000B48                     u2835:
  2695   000B48  90D8               	bcf	status,0,c
  2696   000B4A  3652               	rlcf	(??_pinMode+1)^0,f,c
  2697   000B4C                     u2834:
  2698   000B4C  2E51               	decfsz	??_pinMode^0,f,c
  2699   000B4E  EFA4  F005         	goto	u2835
  2700   000B52  5052               	movf	(??_pinMode+1)^0,w,c
  2701   000B54  1293               	iorwf	147,f,c	;volatile
  2702   000B56  EF72  F006         	goto	l236
  2703   000B5A                     l2846:
  2704                           
  2705                           ;io.c: 61: else{ ((TRISB) &= ~(1<<(pin-8)));}
  2706   000B5A  C04D  F051         	movff	pinMode@pin,??_pinMode
  2707   000B5E  0EF8               	movlw	-8
  2708   000B60  2651               	addwf	??_pinMode^0,f,c
  2709   000B62  0E01               	movlw	1
  2710   000B64  6E52               	movwf	(??_pinMode+1)^0,c
  2711   000B66  2A51               	incf	??_pinMode^0,f,c
  2712   000B68  EFB8  F005         	goto	u2844
  2713   000B6C                     u2845:
  2714   000B6C  90D8               	bcf	status,0,c
  2715   000B6E  3652               	rlcf	(??_pinMode+1)^0,f,c
  2716   000B70                     u2844:
  2717   000B70  2E51               	decfsz	??_pinMode^0,f,c
  2718   000B72  EFB6  F005         	goto	u2845
  2719   000B76  5052               	movf	(??_pinMode+1)^0,w,c
  2720   000B78  0AFF               	xorlw	255
  2721   000B7A  1693               	andwf	147,f,c	;volatile
  2722   000B7C  EF72  F006         	goto	l236
  2723   000B80                     l2848:
  2724   000B80  BE4E               	btfsc	(pinMode@pin+1)^0,7,c
  2725   000B82  EFCE  F005         	goto	u2850
  2726   000B86  504E               	movf	(pinMode@pin+1)^0,w,c
  2727   000B88  E107               	bnz	u2851
  2728   000B8A  0E18               	movlw	24
  2729   000B8C  5C4D               	subwf	pinMode@pin^0,w,c
  2730   000B8E  B0D8               	btfsc	status,0,c
  2731   000B90  EFCC  F005         	goto	u2851
  2732   000B94  EFCE  F005         	goto	u2850
  2733   000B98                     u2851:
  2734   000B98  EFFC  F005         	goto	l2856
  2735   000B9C                     u2850:
  2736   000B9C                     
  2737                           ;io.c: 63: if (type){ ((TRISC) |= (1<<(pin-16)));}
  2738   000B9C  504F               	movf	pinMode@type^0,w,c
  2739   000B9E  1050               	iorwf	(pinMode@type+1)^0,w,c
  2740   000BA0  B4D8               	btfsc	status,2,c
  2741   000BA2  EFD5  F005         	goto	u2861
  2742   000BA6  EFD7  F005         	goto	u2860
  2743   000BAA                     u2861:
  2744   000BAA  EFE9  F005         	goto	l2854
  2745   000BAE                     u2860:
  2746   000BAE  C04D  F051         	movff	pinMode@pin,??_pinMode
  2747   000BB2  0EF0               	movlw	-16
  2748   000BB4  2651               	addwf	??_pinMode^0,f,c
  2749   000BB6  0E01               	movlw	1
  2750   000BB8  6E52               	movwf	(??_pinMode+1)^0,c
  2751   000BBA  2A51               	incf	??_pinMode^0,f,c
  2752   000BBC  EFE2  F005         	goto	u2874
  2753   000BC0                     u2875:
  2754   000BC0  90D8               	bcf	status,0,c
  2755   000BC2  3652               	rlcf	(??_pinMode+1)^0,f,c
  2756   000BC4                     u2874:
  2757   000BC4  2E51               	decfsz	??_pinMode^0,f,c
  2758   000BC6  EFE0  F005         	goto	u2875
  2759   000BCA  5052               	movf	(??_pinMode+1)^0,w,c
  2760   000BCC  1294               	iorwf	148,f,c	;volatile
  2761   000BCE  EF72  F006         	goto	l236
  2762   000BD2                     l2854:
  2763                           
  2764                           ;io.c: 64: else{ ((TRISC) &= ~(1<<(pin-16)));}
  2765   000BD2  C04D  F051         	movff	pinMode@pin,??_pinMode
  2766   000BD6  0EF0               	movlw	-16
  2767   000BD8  2651               	addwf	??_pinMode^0,f,c
  2768   000BDA  0E01               	movlw	1
  2769   000BDC  6E52               	movwf	(??_pinMode+1)^0,c
  2770   000BDE  2A51               	incf	??_pinMode^0,f,c
  2771   000BE0  EFF4  F005         	goto	u2884
  2772   000BE4                     u2885:
  2773   000BE4  90D8               	bcf	status,0,c
  2774   000BE6  3652               	rlcf	(??_pinMode+1)^0,f,c
  2775   000BE8                     u2884:
  2776   000BE8  2E51               	decfsz	??_pinMode^0,f,c
  2777   000BEA  EFF2  F005         	goto	u2885
  2778   000BEE  5052               	movf	(??_pinMode+1)^0,w,c
  2779   000BF0  0AFF               	xorlw	255
  2780   000BF2  1694               	andwf	148,f,c	;volatile
  2781   000BF4  EF72  F006         	goto	l236
  2782   000BF8                     l2856:
  2783   000BF8  BE4E               	btfsc	(pinMode@pin+1)^0,7,c
  2784   000BFA  EF0A  F006         	goto	u2890
  2785   000BFE  504E               	movf	(pinMode@pin+1)^0,w,c
  2786   000C00  E107               	bnz	u2891
  2787   000C02  0E20               	movlw	32
  2788   000C04  5C4D               	subwf	pinMode@pin^0,w,c
  2789   000C06  B0D8               	btfsc	status,0,c
  2790   000C08  EF08  F006         	goto	u2891
  2791   000C0C  EF0A  F006         	goto	u2890
  2792   000C10                     u2891:
  2793   000C10  EF38  F006         	goto	l2864
  2794   000C14                     u2890:
  2795   000C14                     
  2796                           ;io.c: 66: if (type){ ((TRISD) |= (1<<(pin-24)));}
  2797   000C14  504F               	movf	pinMode@type^0,w,c
  2798   000C16  1050               	iorwf	(pinMode@type+1)^0,w,c
  2799   000C18  B4D8               	btfsc	status,2,c
  2800   000C1A  EF11  F006         	goto	u2901
  2801   000C1E  EF13  F006         	goto	u2900
  2802   000C22                     u2901:
  2803   000C22  EF25  F006         	goto	l2862
  2804   000C26                     u2900:
  2805   000C26  C04D  F051         	movff	pinMode@pin,??_pinMode
  2806   000C2A  0EE8               	movlw	-24
  2807   000C2C  2651               	addwf	??_pinMode^0,f,c
  2808   000C2E  0E01               	movlw	1
  2809   000C30  6E52               	movwf	(??_pinMode+1)^0,c
  2810   000C32  2A51               	incf	??_pinMode^0,f,c
  2811   000C34  EF1E  F006         	goto	u2914
  2812   000C38                     u2915:
  2813   000C38  90D8               	bcf	status,0,c
  2814   000C3A  3652               	rlcf	(??_pinMode+1)^0,f,c
  2815   000C3C                     u2914:
  2816   000C3C  2E51               	decfsz	??_pinMode^0,f,c
  2817   000C3E  EF1C  F006         	goto	u2915
  2818   000C42  5052               	movf	(??_pinMode+1)^0,w,c
  2819   000C44  1295               	iorwf	149,f,c	;volatile
  2820   000C46  EF72  F006         	goto	l236
  2821   000C4A                     l2862:
  2822                           
  2823                           ;io.c: 67: else{ ((TRISD) &= ~(1<<(pin-24)));}
  2824   000C4A  C04D  F051         	movff	pinMode@pin,??_pinMode
  2825   000C4E  0EE8               	movlw	-24
  2826   000C50  2651               	addwf	??_pinMode^0,f,c
  2827   000C52  0E01               	movlw	1
  2828   000C54  6E52               	movwf	(??_pinMode+1)^0,c
  2829   000C56  2A51               	incf	??_pinMode^0,f,c
  2830   000C58  EF30  F006         	goto	u2924
  2831   000C5C                     u2925:
  2832   000C5C  90D8               	bcf	status,0,c
  2833   000C5E  3652               	rlcf	(??_pinMode+1)^0,f,c
  2834   000C60                     u2924:
  2835   000C60  2E51               	decfsz	??_pinMode^0,f,c
  2836   000C62  EF2E  F006         	goto	u2925
  2837   000C66  5052               	movf	(??_pinMode+1)^0,w,c
  2838   000C68  0AFF               	xorlw	255
  2839   000C6A  1695               	andwf	149,f,c	;volatile
  2840   000C6C  EF72  F006         	goto	l236
  2841   000C70                     l2864:
  2842   000C70  BE4E               	btfsc	(pinMode@pin+1)^0,7,c
  2843   000C72  EF46  F006         	goto	u2930
  2844   000C76  504E               	movf	(pinMode@pin+1)^0,w,c
  2845   000C78  E107               	bnz	u2931
  2846   000C7A  0E28               	movlw	40
  2847   000C7C  5C4D               	subwf	pinMode@pin^0,w,c
  2848   000C7E  B0D8               	btfsc	status,0,c
  2849   000C80  EF44  F006         	goto	u2931
  2850   000C84  EF46  F006         	goto	u2930
  2851   000C88                     u2931:
  2852   000C88  EF72  F006         	goto	l236
  2853   000C8C                     u2930:
  2854   000C8C                     
  2855                           ;io.c: 69: if (type){ ((TRISE) |= (1<<(pin-32)));}
  2856   000C8C  504F               	movf	pinMode@type^0,w,c
  2857   000C8E  1050               	iorwf	(pinMode@type+1)^0,w,c
  2858   000C90  B4D8               	btfsc	status,2,c
  2859   000C92  EF4D  F006         	goto	u2941
  2860   000C96  EF4F  F006         	goto	u2940
  2861   000C9A                     u2941:
  2862   000C9A  EF61  F006         	goto	l2870
  2863   000C9E                     u2940:
  2864   000C9E  C04D  F051         	movff	pinMode@pin,??_pinMode
  2865   000CA2  0EE0               	movlw	-32
  2866   000CA4  2651               	addwf	??_pinMode^0,f,c
  2867   000CA6  0E01               	movlw	1
  2868   000CA8  6E52               	movwf	(??_pinMode+1)^0,c
  2869   000CAA  2A51               	incf	??_pinMode^0,f,c
  2870   000CAC  EF5A  F006         	goto	u2954
  2871   000CB0                     u2955:
  2872   000CB0  90D8               	bcf	status,0,c
  2873   000CB2  3652               	rlcf	(??_pinMode+1)^0,f,c
  2874   000CB4                     u2954:
  2875   000CB4  2E51               	decfsz	??_pinMode^0,f,c
  2876   000CB6  EF58  F006         	goto	u2955
  2877   000CBA  5052               	movf	(??_pinMode+1)^0,w,c
  2878   000CBC  1296               	iorwf	150,f,c	;volatile
  2879   000CBE  EF72  F006         	goto	l236
  2880   000CC2                     l2870:
  2881                           
  2882                           ;io.c: 70: else{ ((TRISE) &= ~(1<<(pin-32)));}
  2883   000CC2  C04D  F051         	movff	pinMode@pin,??_pinMode
  2884   000CC6  0EE0               	movlw	-32
  2885   000CC8  2651               	addwf	??_pinMode^0,f,c
  2886   000CCA  0E01               	movlw	1
  2887   000CCC  6E52               	movwf	(??_pinMode+1)^0,c
  2888   000CCE  2A51               	incf	??_pinMode^0,f,c
  2889   000CD0  EF6C  F006         	goto	u2964
  2890   000CD4                     u2965:
  2891   000CD4  90D8               	bcf	status,0,c
  2892   000CD6  3652               	rlcf	(??_pinMode+1)^0,f,c
  2893   000CD8                     u2964:
  2894   000CD8  2E51               	decfsz	??_pinMode^0,f,c
  2895   000CDA  EF6A  F006         	goto	u2965
  2896   000CDE  5052               	movf	(??_pinMode+1)^0,w,c
  2897   000CE0  0AFF               	xorlw	255
  2898   000CE2  1696               	andwf	150,f,c	;volatile
  2899   000CE4                     l236:
  2900   000CE4  0012               	return		;funcret
  2901   000CE6                     __end_of_pinMode:
  2902                           	callstack 0
  2903                           
  2904 ;; *************** function _lcdCommand *****************
  2905 ;; Defined at:
  2906 ;;		line 48 in file "lcd.c"
  2907 ;; Parameters:    Size  Location     Type
  2908 ;;  cmd             1    wreg     unsigned char 
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;  cmd             1   22[COMRAM] unsigned char 
  2911 ;;  old_D           1   21[COMRAM] unsigned char 
  2912 ;; Return value:  Size  Location     Type
  2913 ;;                  1    wreg      void 
  2914 ;; Registers used:
  2915 ;;		wreg, status,2, status,0, cstack
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2921 ;;      Params:         0       0       0       0       0       0       0
  2922 ;;      Locals:         2       0       0       0       0       0       0
  2923 ;;      Temps:          0       0       0       0       0       0       0
  2924 ;;      Totals:         2       0       0       0       0       0       0
  2925 ;;Total ram usage:        2 bytes
  2926 ;; Hardware stack levels used: 1
  2927 ;; Hardware stack levels required when called: 5
  2928 ;; This function calls:
  2929 ;;		_Delay2ms
  2930 ;;		_Delay40us
  2931 ;;		_digitalWrite
  2932 ;; This function is called by:
  2933 ;;		_lcdInit
  2934 ;;		_command
  2935 ;; This function uses a non-reentrant model
  2936 ;;
  2937                           
  2938                           	psect	text18
  2939   00156A                     __ptext18:
  2940                           	callstack 0
  2941   00156A                     _lcdCommand:
  2942                           	callstack 22
  2943                           
  2944                           ;incstack = 0
  2945                           ;lcdCommand@cmd stored from wreg
  2946   00156A  6E54               	movwf	lcdCommand@cmd^0,c
  2947   00156C                     
  2948                           ;lcd.c: 50: unsigned char old_D;;lcd.c: 51: old_D = PORTD;
  2949   00156C  CF83 F053          	movff	3971,lcdCommand@old_D	;volatile
  2950   001570                     
  2951                           ;lcd.c: 54: TRISD = 0x00;
  2952   001570  0E00               	movlw	0
  2953   001572  6E95               	movwf	149,c	;volatile
  2954   001574                     
  2955                           ;lcd.c: 56: digitalWrite(PIN_E2, 0);
  2956   001574  0E00               	movlw	0
  2957   001576  6E4E               	movwf	(digitalWrite@pin+1)^0,c
  2958   001578  0E22               	movlw	34
  2959   00157A  6E4D               	movwf	digitalWrite@pin^0,c
  2960   00157C  0E00               	movlw	0
  2961   00157E  6E50               	movwf	(digitalWrite@value+1)^0,c
  2962   001580  0E00               	movlw	0
  2963   001582  6E4F               	movwf	digitalWrite@value^0,c
  2964   001584  EC73  F006         	call	_digitalWrite	;wreg free
  2965   001588                     
  2966                           ;lcd.c: 57: PORTD = cmd;
  2967   001588  C054  FF83         	movff	lcdCommand@cmd,3971	;volatile
  2968   00158C                     
  2969                           ;lcd.c: 59: digitalWrite(PIN_E1, 1);
  2970   00158C  0E00               	movlw	0
  2971   00158E  6E4E               	movwf	(digitalWrite@pin+1)^0,c
  2972   001590  0E21               	movlw	33
  2973   001592  6E4D               	movwf	digitalWrite@pin^0,c
  2974   001594  0E00               	movlw	0
  2975   001596  6E50               	movwf	(digitalWrite@value+1)^0,c
  2976   001598  0E01               	movlw	1
  2977   00159A  6E4F               	movwf	digitalWrite@value^0,c
  2978   00159C  EC73  F006         	call	_digitalWrite	;wreg free
  2979   0015A0                     
  2980                           ;lcd.c: 60: digitalWrite(PIN_E1, 0);
  2981   0015A0  0E00               	movlw	0
  2982   0015A2  6E4E               	movwf	(digitalWrite@pin+1)^0,c
  2983   0015A4  0E21               	movlw	33
  2984   0015A6  6E4D               	movwf	digitalWrite@pin^0,c
  2985   0015A8  0E00               	movlw	0
  2986   0015AA  6E50               	movwf	(digitalWrite@value+1)^0,c
  2987   0015AC  0E00               	movlw	0
  2988   0015AE  6E4F               	movwf	digitalWrite@value^0,c
  2989   0015B0  EC73  F006         	call	_digitalWrite	;wreg free
  2990   0015B4                     
  2991                           ;lcd.c: 63: PORTD= old_D;
  2992   0015B4  C053  FF83         	movff	lcdCommand@old_D,3971	;volatile
  2993   0015B8                     
  2994                           ;lcd.c: 65: if((cmd == 0x02)||(cmd == 0x01)){
  2995   0015B8  0E02               	movlw	2
  2996   0015BA  1854               	xorwf	lcdCommand@cmd^0,w,c
  2997   0015BC  B4D8               	btfsc	status,2,c
  2998   0015BE  EFE3  F00A         	goto	u2751
  2999   0015C2  EFE5  F00A         	goto	u2750
  3000   0015C6                     u2751:
  3001   0015C6  EFED  F00A         	goto	l2806
  3002   0015CA                     u2750:
  3003   0015CA  0454               	decf	lcdCommand@cmd^0,w,c
  3004   0015CC  A4D8               	btfss	status,2,c
  3005   0015CE  EFEB  F00A         	goto	u2761
  3006   0015D2  EFED  F00A         	goto	u2760
  3007   0015D6                     u2761:
  3008   0015D6  EFF1  F00A         	goto	l2808
  3009   0015DA                     u2760:
  3010   0015DA                     l2806:
  3011                           
  3012                           ;lcd.c: 66: Delay2ms();
  3013   0015DA  ECC5  F00B         	call	_Delay2ms	;wreg free
  3014                           
  3015                           ;lcd.c: 67: }else{
  3016   0015DE  EFF3  F00A         	goto	l297
  3017   0015E2                     l2808:
  3018                           
  3019                           ;lcd.c: 68: Delay40us();
  3020   0015E2  ECD3  F00B         	call	_Delay40us	;wreg free
  3021   0015E6                     l297:
  3022   0015E6  0012               	return		;funcret
  3023   0015E8                     __end_of_lcdCommand:
  3024                           	callstack 0
  3025                           
  3026 ;; *************** function _digitalWrite *****************
  3027 ;; Defined at:
  3028 ;;		line 14 in file "io.c"
  3029 ;; Parameters:    Size  Location     Type
  3030 ;;  pin             2   15[COMRAM] int 
  3031 ;;  value           2   17[COMRAM] int 
  3032 ;; Auto vars:     Size  Location     Type
  3033 ;;		None
  3034 ;; Return value:  Size  Location     Type
  3035 ;;                  1    wreg      void 
  3036 ;; Registers used:
  3037 ;;		wreg, status,2, status,0
  3038 ;; Tracked objects:
  3039 ;;		On entry : 0/0
  3040 ;;		On exit  : 0/0
  3041 ;;		Unchanged: 0/0
  3042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3043 ;;      Params:         4       0       0       0       0       0       0
  3044 ;;      Locals:         0       0       0       0       0       0       0
  3045 ;;      Temps:          2       0       0       0       0       0       0
  3046 ;;      Totals:         6       0       0       0       0       0       0
  3047 ;;Total ram usage:        6 bytes
  3048 ;; Hardware stack levels used: 1
  3049 ;; Hardware stack levels required when called: 3
  3050 ;; This function calls:
  3051 ;;		Nothing
  3052 ;; This function is called by:
  3053 ;;		_lcdCommand
  3054 ;;		_lcdData
  3055 ;;		_clear_SCL
  3056 ;;		_clear_SDA
  3057 ;;		_ssdUpdate
  3058 ;; This function uses a non-reentrant model
  3059 ;;
  3060                           
  3061                           	psect	text19
  3062   000CE6                     __ptext19:
  3063                           	callstack 0
  3064   000CE6                     _digitalWrite:
  3065                           	callstack 23
  3066   000CE6                     
  3067                           ;io.c: 16: if(pin <8){
  3068   000CE6  BE4E               	btfsc	(digitalWrite@pin+1)^0,7,c
  3069   000CE8  EF81  F006         	goto	u2540
  3070   000CEC  504E               	movf	(digitalWrite@pin+1)^0,w,c
  3071   000CEE  E107               	bnz	u2541
  3072   000CF0  0E08               	movlw	8
  3073   000CF2  5C4D               	subwf	digitalWrite@pin^0,w,c
  3074   000CF4  B0D8               	btfsc	status,0,c
  3075   000CF6  EF7F  F006         	goto	u2541
  3076   000CFA  EF81  F006         	goto	u2540
  3077   000CFE                     u2541:
  3078   000CFE  EFAB  F006         	goto	l2744
  3079   000D02                     u2540:
  3080   000D02                     
  3081                           ;io.c: 17: if (value){ ((PORTA) |= (1<<(pin)));}
  3082   000D02  504F               	movf	digitalWrite@value^0,w,c
  3083   000D04  1050               	iorwf	(digitalWrite@value+1)^0,w,c
  3084   000D06  B4D8               	btfsc	status,2,c
  3085   000D08  EF88  F006         	goto	u2551
  3086   000D0C  EF8A  F006         	goto	u2550
  3087   000D10                     u2551:
  3088   000D10  EF9A  F006         	goto	l2742
  3089   000D14                     u2550:
  3090   000D14  C04D  F051         	movff	digitalWrite@pin,??_digitalWrite
  3091   000D18  0E01               	movlw	1
  3092   000D1A  6E52               	movwf	(??_digitalWrite+1)^0,c
  3093   000D1C  2A51               	incf	??_digitalWrite^0,f,c
  3094   000D1E  EF93  F006         	goto	u2564
  3095   000D22                     u2565:
  3096   000D22  90D8               	bcf	status,0,c
  3097   000D24  3652               	rlcf	(??_digitalWrite+1)^0,f,c
  3098   000D26                     u2564:
  3099   000D26  2E51               	decfsz	??_digitalWrite^0,f,c
  3100   000D28  EF91  F006         	goto	u2565
  3101   000D2C  5052               	movf	(??_digitalWrite+1)^0,w,c
  3102   000D2E  1280               	iorwf	128,f,c	;volatile
  3103   000D30  EF99  F007         	goto	l202
  3104   000D34                     l2742:
  3105                           
  3106                           ;io.c: 18: else{ ((PORTA) &= ~(1<<(pin)));}
  3107   000D34  C04D  F051         	movff	digitalWrite@pin,??_digitalWrite
  3108   000D38  0E01               	movlw	1
  3109   000D3A  6E52               	movwf	(??_digitalWrite+1)^0,c
  3110   000D3C  2A51               	incf	??_digitalWrite^0,f,c
  3111   000D3E  EFA3  F006         	goto	u2574
  3112   000D42                     u2575:
  3113   000D42  90D8               	bcf	status,0,c
  3114   000D44  3652               	rlcf	(??_digitalWrite+1)^0,f,c
  3115   000D46                     u2574:
  3116   000D46  2E51               	decfsz	??_digitalWrite^0,f,c
  3117   000D48  EFA1  F006         	goto	u2575
  3118   000D4C  5052               	movf	(??_digitalWrite+1)^0,w,c
  3119   000D4E  0AFF               	xorlw	255
  3120   000D50  1680               	andwf	128,f,c	;volatile
  3121   000D52  EF99  F007         	goto	l202
  3122   000D56                     l2744:
  3123   000D56  BE4E               	btfsc	(digitalWrite@pin+1)^0,7,c
  3124   000D58  EFB9  F006         	goto	u2580
  3125   000D5C  504E               	movf	(digitalWrite@pin+1)^0,w,c
  3126   000D5E  E107               	bnz	u2581
  3127   000D60  0E10               	movlw	16
  3128   000D62  5C4D               	subwf	digitalWrite@pin^0,w,c
  3129   000D64  B0D8               	btfsc	status,0,c
  3130   000D66  EFB7  F006         	goto	u2581
  3131   000D6A  EFB9  F006         	goto	u2580
  3132   000D6E                     u2581:
  3133   000D6E  EFE7  F006         	goto	l2752
  3134   000D72                     u2580:
  3135   000D72                     
  3136                           ;io.c: 20: pin -=8;
  3137   000D72  0EF8               	movlw	248
  3138   000D74  264D               	addwf	digitalWrite@pin^0,f,c
  3139   000D76  0EFF               	movlw	255
  3140   000D78  224E               	addwfc	(digitalWrite@pin+1)^0,f,c
  3141                           
  3142                           ;io.c: 21: if (value){ ((PORTB) |= (1<<(pin)));}
  3143   000D7A  504F               	movf	digitalWrite@value^0,w,c
  3144   000D7C  1050               	iorwf	(digitalWrite@value+1)^0,w,c
  3145   000D7E  B4D8               	btfsc	status,2,c
  3146   000D80  EFC4  F006         	goto	u2591
  3147   000D84  EFC6  F006         	goto	u2590
  3148   000D88                     u2591:
  3149   000D88  EFD6  F006         	goto	l2750
  3150   000D8C                     u2590:
  3151   000D8C  C04D  F051         	movff	digitalWrite@pin,??_digitalWrite
  3152   000D90  0E01               	movlw	1
  3153   000D92  6E52               	movwf	(??_digitalWrite+1)^0,c
  3154   000D94  2A51               	incf	??_digitalWrite^0,f,c
  3155   000D96  EFCF  F006         	goto	u2604
  3156   000D9A                     u2605:
  3157   000D9A  90D8               	bcf	status,0,c
  3158   000D9C  3652               	rlcf	(??_digitalWrite+1)^0,f,c
  3159   000D9E                     u2604:
  3160   000D9E  2E51               	decfsz	??_digitalWrite^0,f,c
  3161   000DA0  EFCD  F006         	goto	u2605
  3162   000DA4  5052               	movf	(??_digitalWrite+1)^0,w,c
  3163   000DA6  1281               	iorwf	129,f,c	;volatile
  3164   000DA8  EF99  F007         	goto	l202
  3165   000DAC                     l2750:
  3166                           
  3167                           ;io.c: 22: else{ ((PORTB) &= ~(1<<(pin)));}
  3168   000DAC  C04D  F051         	movff	digitalWrite@pin,??_digitalWrite
  3169   000DB0  0E01               	movlw	1
  3170   000DB2  6E52               	movwf	(??_digitalWrite+1)^0,c
  3171   000DB4  2A51               	incf	??_digitalWrite^0,f,c
  3172   000DB6  EFDF  F006         	goto	u2614
  3173   000DBA                     u2615:
  3174   000DBA  90D8               	bcf	status,0,c
  3175   000DBC  3652               	rlcf	(??_digitalWrite+1)^0,f,c
  3176   000DBE                     u2614:
  3177   000DBE  2E51               	decfsz	??_digitalWrite^0,f,c
  3178   000DC0  EFDD  F006         	goto	u2615
  3179   000DC4  5052               	movf	(??_digitalWrite+1)^0,w,c
  3180   000DC6  0AFF               	xorlw	255
  3181   000DC8  1681               	andwf	129,f,c	;volatile
  3182   000DCA  EF99  F007         	goto	l202
  3183   000DCE                     l2752:
  3184   000DCE  BE4E               	btfsc	(digitalWrite@pin+1)^0,7,c
  3185   000DD0  EFF5  F006         	goto	u2620
  3186   000DD4  504E               	movf	(digitalWrite@pin+1)^0,w,c
  3187   000DD6  E107               	bnz	u2621
  3188   000DD8  0E18               	movlw	24
  3189   000DDA  5C4D               	subwf	digitalWrite@pin^0,w,c
  3190   000DDC  B0D8               	btfsc	status,0,c
  3191   000DDE  EFF3  F006         	goto	u2621
  3192   000DE2  EFF5  F006         	goto	u2620
  3193   000DE6                     u2621:
  3194   000DE6  EF23  F007         	goto	l2760
  3195   000DEA                     u2620:
  3196   000DEA                     
  3197                           ;io.c: 24: pin -=16;
  3198   000DEA  0EF0               	movlw	240
  3199   000DEC  264D               	addwf	digitalWrite@pin^0,f,c
  3200   000DEE  0EFF               	movlw	255
  3201   000DF0  224E               	addwfc	(digitalWrite@pin+1)^0,f,c
  3202                           
  3203                           ;io.c: 25: if (value){ ((PORTC) |= (1<<(pin)));}
  3204   000DF2  504F               	movf	digitalWrite@value^0,w,c
  3205   000DF4  1050               	iorwf	(digitalWrite@value+1)^0,w,c
  3206   000DF6  B4D8               	btfsc	status,2,c
  3207   000DF8  EF00  F007         	goto	u2631
  3208   000DFC  EF02  F007         	goto	u2630
  3209   000E00                     u2631:
  3210   000E00  EF12  F007         	goto	l2758
  3211   000E04                     u2630:
  3212   000E04  C04D  F051         	movff	digitalWrite@pin,??_digitalWrite
  3213   000E08  0E01               	movlw	1
  3214   000E0A  6E52               	movwf	(??_digitalWrite+1)^0,c
  3215   000E0C  2A51               	incf	??_digitalWrite^0,f,c
  3216   000E0E  EF0B  F007         	goto	u2644
  3217   000E12                     u2645:
  3218   000E12  90D8               	bcf	status,0,c
  3219   000E14  3652               	rlcf	(??_digitalWrite+1)^0,f,c
  3220   000E16                     u2644:
  3221   000E16  2E51               	decfsz	??_digitalWrite^0,f,c
  3222   000E18  EF09  F007         	goto	u2645
  3223   000E1C  5052               	movf	(??_digitalWrite+1)^0,w,c
  3224   000E1E  1282               	iorwf	130,f,c	;volatile
  3225   000E20  EF99  F007         	goto	l202
  3226   000E24                     l2758:
  3227                           
  3228                           ;io.c: 26: else{ ((PORTC) &= ~(1<<(pin)));}
  3229   000E24  C04D  F051         	movff	digitalWrite@pin,??_digitalWrite
  3230   000E28  0E01               	movlw	1
  3231   000E2A  6E52               	movwf	(??_digitalWrite+1)^0,c
  3232   000E2C  2A51               	incf	??_digitalWrite^0,f,c
  3233   000E2E  EF1B  F007         	goto	u2654
  3234   000E32                     u2655:
  3235   000E32  90D8               	bcf	status,0,c
  3236   000E34  3652               	rlcf	(??_digitalWrite+1)^0,f,c
  3237   000E36                     u2654:
  3238   000E36  2E51               	decfsz	??_digitalWrite^0,f,c
  3239   000E38  EF19  F007         	goto	u2655
  3240   000E3C  5052               	movf	(??_digitalWrite+1)^0,w,c
  3241   000E3E  0AFF               	xorlw	255
  3242   000E40  1682               	andwf	130,f,c	;volatile
  3243   000E42  EF99  F007         	goto	l202
  3244   000E46                     l2760:
  3245   000E46  BE4E               	btfsc	(digitalWrite@pin+1)^0,7,c
  3246   000E48  EF31  F007         	goto	u2660
  3247   000E4C  504E               	movf	(digitalWrite@pin+1)^0,w,c
  3248   000E4E  E107               	bnz	u2661
  3249   000E50  0E20               	movlw	32
  3250   000E52  5C4D               	subwf	digitalWrite@pin^0,w,c
  3251   000E54  B0D8               	btfsc	status,0,c
  3252   000E56  EF2F  F007         	goto	u2661
  3253   000E5A  EF31  F007         	goto	u2660
  3254   000E5E                     u2661:
  3255   000E5E  EF5F  F007         	goto	l2768
  3256   000E62                     u2660:
  3257   000E62                     
  3258                           ;io.c: 28: pin -=24;
  3259   000E62  0EE8               	movlw	232
  3260   000E64  264D               	addwf	digitalWrite@pin^0,f,c
  3261   000E66  0EFF               	movlw	255
  3262   000E68  224E               	addwfc	(digitalWrite@pin+1)^0,f,c
  3263                           
  3264                           ;io.c: 29: if (value){ ((PORTD) |= (1<<(pin)));}
  3265   000E6A  504F               	movf	digitalWrite@value^0,w,c
  3266   000E6C  1050               	iorwf	(digitalWrite@value+1)^0,w,c
  3267   000E6E  B4D8               	btfsc	status,2,c
  3268   000E70  EF3C  F007         	goto	u2671
  3269   000E74  EF3E  F007         	goto	u2670
  3270   000E78                     u2671:
  3271   000E78  EF4E  F007         	goto	l2766
  3272   000E7C                     u2670:
  3273   000E7C  C04D  F051         	movff	digitalWrite@pin,??_digitalWrite
  3274   000E80  0E01               	movlw	1
  3275   000E82  6E52               	movwf	(??_digitalWrite+1)^0,c
  3276   000E84  2A51               	incf	??_digitalWrite^0,f,c
  3277   000E86  EF47  F007         	goto	u2684
  3278   000E8A                     u2685:
  3279   000E8A  90D8               	bcf	status,0,c
  3280   000E8C  3652               	rlcf	(??_digitalWrite+1)^0,f,c
  3281   000E8E                     u2684:
  3282   000E8E  2E51               	decfsz	??_digitalWrite^0,f,c
  3283   000E90  EF45  F007         	goto	u2685
  3284   000E94  5052               	movf	(??_digitalWrite+1)^0,w,c
  3285   000E96  1283               	iorwf	131,f,c	;volatile
  3286   000E98  EF99  F007         	goto	l202
  3287   000E9C                     l2766:
  3288                           
  3289                           ;io.c: 30: else{ ((PORTD) &= ~(1<<(pin)));}
  3290   000E9C  C04D  F051         	movff	digitalWrite@pin,??_digitalWrite
  3291   000EA0  0E01               	movlw	1
  3292   000EA2  6E52               	movwf	(??_digitalWrite+1)^0,c
  3293   000EA4  2A51               	incf	??_digitalWrite^0,f,c
  3294   000EA6  EF57  F007         	goto	u2694
  3295   000EAA                     u2695:
  3296   000EAA  90D8               	bcf	status,0,c
  3297   000EAC  3652               	rlcf	(??_digitalWrite+1)^0,f,c
  3298   000EAE                     u2694:
  3299   000EAE  2E51               	decfsz	??_digitalWrite^0,f,c
  3300   000EB0  EF55  F007         	goto	u2695
  3301   000EB4  5052               	movf	(??_digitalWrite+1)^0,w,c
  3302   000EB6  0AFF               	xorlw	255
  3303   000EB8  1683               	andwf	131,f,c	;volatile
  3304   000EBA  EF99  F007         	goto	l202
  3305   000EBE                     l2768:
  3306   000EBE  BE4E               	btfsc	(digitalWrite@pin+1)^0,7,c
  3307   000EC0  EF6D  F007         	goto	u2700
  3308   000EC4  504E               	movf	(digitalWrite@pin+1)^0,w,c
  3309   000EC6  E107               	bnz	u2701
  3310   000EC8  0E28               	movlw	40
  3311   000ECA  5C4D               	subwf	digitalWrite@pin^0,w,c
  3312   000ECC  B0D8               	btfsc	status,0,c
  3313   000ECE  EF6B  F007         	goto	u2701
  3314   000ED2  EF6D  F007         	goto	u2700
  3315   000ED6                     u2701:
  3316   000ED6  EF99  F007         	goto	l202
  3317   000EDA                     u2700:
  3318   000EDA                     
  3319                           ;io.c: 32: pin -=32;
  3320   000EDA  0EE0               	movlw	224
  3321   000EDC  264D               	addwf	digitalWrite@pin^0,f,c
  3322   000EDE  0EFF               	movlw	255
  3323   000EE0  224E               	addwfc	(digitalWrite@pin+1)^0,f,c
  3324                           
  3325                           ;io.c: 33: if (value){ ((PORTE) |= (1<<(pin)));}
  3326   000EE2  504F               	movf	digitalWrite@value^0,w,c
  3327   000EE4  1050               	iorwf	(digitalWrite@value+1)^0,w,c
  3328   000EE6  B4D8               	btfsc	status,2,c
  3329   000EE8  EF78  F007         	goto	u2711
  3330   000EEC  EF7A  F007         	goto	u2710
  3331   000EF0                     u2711:
  3332   000EF0  EF8A  F007         	goto	l2774
  3333   000EF4                     u2710:
  3334   000EF4  C04D  F051         	movff	digitalWrite@pin,??_digitalWrite
  3335   000EF8  0E01               	movlw	1
  3336   000EFA  6E52               	movwf	(??_digitalWrite+1)^0,c
  3337   000EFC  2A51               	incf	??_digitalWrite^0,f,c
  3338   000EFE  EF83  F007         	goto	u2724
  3339   000F02                     u2725:
  3340   000F02  90D8               	bcf	status,0,c
  3341   000F04  3652               	rlcf	(??_digitalWrite+1)^0,f,c
  3342   000F06                     u2724:
  3343   000F06  2E51               	decfsz	??_digitalWrite^0,f,c
  3344   000F08  EF81  F007         	goto	u2725
  3345   000F0C  5052               	movf	(??_digitalWrite+1)^0,w,c
  3346   000F0E  1284               	iorwf	132,f,c	;volatile
  3347   000F10  EF99  F007         	goto	l202
  3348   000F14                     l2774:
  3349                           
  3350                           ;io.c: 34: else{ ((PORTE) &= ~(1<<(pin)));}
  3351   000F14  C04D  F051         	movff	digitalWrite@pin,??_digitalWrite
  3352   000F18  0E01               	movlw	1
  3353   000F1A  6E52               	movwf	(??_digitalWrite+1)^0,c
  3354   000F1C  2A51               	incf	??_digitalWrite^0,f,c
  3355   000F1E  EF93  F007         	goto	u2734
  3356   000F22                     u2735:
  3357   000F22  90D8               	bcf	status,0,c
  3358   000F24  3652               	rlcf	(??_digitalWrite+1)^0,f,c
  3359   000F26                     u2734:
  3360   000F26  2E51               	decfsz	??_digitalWrite^0,f,c
  3361   000F28  EF91  F007         	goto	u2735
  3362   000F2C  5052               	movf	(??_digitalWrite+1)^0,w,c
  3363   000F2E  0AFF               	xorlw	255
  3364   000F30  1684               	andwf	132,f,c	;volatile
  3365   000F32                     l202:
  3366   000F32  0012               	return		;funcret
  3367   000F34                     __end_of_digitalWrite:
  3368                           	callstack 0
  3369                           
  3370 ;; *************** function _Delay2ms *****************
  3371 ;; Defined at:
  3372 ;;		line 37 in file "lcd.c"
  3373 ;; Parameters:    Size  Location     Type
  3374 ;;		None
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;  i               1   16[COMRAM] unsigned char 
  3377 ;; Return value:  Size  Location     Type
  3378 ;;                  1    wreg      void 
  3379 ;; Registers used:
  3380 ;;		wreg, status,2, status,0, cstack
  3381 ;; Tracked objects:
  3382 ;;		On entry : 0/0
  3383 ;;		On exit  : 0/0
  3384 ;;		Unchanged: 0/0
  3385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3386 ;;      Params:         0       0       0       0       0       0       0
  3387 ;;      Locals:         1       0       0       0       0       0       0
  3388 ;;      Temps:          0       0       0       0       0       0       0
  3389 ;;      Totals:         1       0       0       0       0       0       0
  3390 ;;Total ram usage:        1 bytes
  3391 ;; Hardware stack levels used: 1
  3392 ;; Hardware stack levels required when called: 4
  3393 ;; This function calls:
  3394 ;;		_Delay40us
  3395 ;; This function is called by:
  3396 ;;		_lcdCommand
  3397 ;;		_lcdInit
  3398 ;; This function uses a non-reentrant model
  3399 ;;
  3400                           
  3401                           	psect	text20
  3402   00178A                     __ptext20:
  3403                           	callstack 0
  3404   00178A                     _Delay2ms:
  3405                           	callstack 22
  3406   00178A                     
  3407                           ;lcd.c: 39: unsigned char i;;lcd.c: 40: for(i=0; i < 50; i++)
  3408   00178A  0E00               	movlw	0
  3409   00178C  6E4E               	movwf	Delay2ms@i^0,c
  3410   00178E                     l2782:
  3411                           
  3412                           ;lcd.c: 41: {;lcd.c: 42: Delay40us();
  3413   00178E  ECD3  F00B         	call	_Delay40us	;wreg free
  3414   001792  2A4E               	incf	Delay2ms@i^0,f,c
  3415   001794  0E31               	movlw	49
  3416   001796  644E               	cpfsgt	Delay2ms@i^0,c
  3417   001798  EFD0  F00B         	goto	u2741
  3418   00179C  EFD2  F00B         	goto	u2740
  3419   0017A0                     u2741:
  3420   0017A0  EFC7  F00B         	goto	l2782
  3421   0017A4                     u2740:
  3422   0017A4  0012               	return		;funcret
  3423   0017A6                     __end_of_Delay2ms:
  3424                           	callstack 0
  3425                           
  3426 ;; *************** function _Delay40us *****************
  3427 ;; Defined at:
  3428 ;;		line 31 in file "lcd.c"
  3429 ;; Parameters:    Size  Location     Type
  3430 ;;		None
  3431 ;; Auto vars:     Size  Location     Type
  3432 ;;  i               1   15[COMRAM] unsigned char 
  3433 ;; Return value:  Size  Location     Type
  3434 ;;                  1    wreg      void 
  3435 ;; Registers used:
  3436 ;;		wreg, status,2, status,0
  3437 ;; Tracked objects:
  3438 ;;		On entry : 0/0
  3439 ;;		On exit  : 0/0
  3440 ;;		Unchanged: 0/0
  3441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3442 ;;      Params:         0       0       0       0       0       0       0
  3443 ;;      Locals:         1       0       0       0       0       0       0
  3444 ;;      Temps:          0       0       0       0       0       0       0
  3445 ;;      Totals:         1       0       0       0       0       0       0
  3446 ;;Total ram usage:        1 bytes
  3447 ;; Hardware stack levels used: 1
  3448 ;; Hardware stack levels required when called: 3
  3449 ;; This function calls:
  3450 ;;		Nothing
  3451 ;; This function is called by:
  3452 ;;		_Delay2ms
  3453 ;;		_lcdCommand
  3454 ;;		_lcdData
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457                           
  3458                           	psect	text21
  3459   0017A6                     __ptext21:
  3460                           	callstack 0
  3461   0017A6                     _Delay40us:
  3462                           	callstack 23
  3463   0017A6                     
  3464                           ;lcd.c: 33: unsigned char i;;lcd.c: 34: for(i=0; i < 25; i++);
  3465   0017A6  0E00               	movlw	0
  3466   0017A8  6E4D               	movwf	Delay40us@i^0,c
  3467   0017AA                     l2732:
  3468   0017AA  2A4D               	incf	Delay40us@i^0,f,c
  3469   0017AC  0E18               	movlw	24
  3470   0017AE  644D               	cpfsgt	Delay40us@i^0,c
  3471   0017B0  EFDC  F00B         	goto	u2531
  3472   0017B4  EFDE  F00B         	goto	u2530
  3473   0017B8                     u2531:
  3474   0017B8  EFD5  F00B         	goto	l2732
  3475   0017BC                     u2530:
  3476   0017BC  0012               	return		;funcret
  3477   0017BE                     __end_of_Delay40us:
  3478                           	callstack 0
  3479                           
  3480 ;; *************** function _getLcdDriver2 *****************
  3481 ;; Defined at:
  3482 ;;		line 30 in file "drv_lcd2.c"
  3483 ;; Parameters:    Size  Location     Type
  3484 ;;		None
  3485 ;; Auto vars:     Size  Location     Type
  3486 ;;		None
  3487 ;; Return value:  Size  Location     Type
  3488 ;;                  2   15[COMRAM] PTR struct .
  3489 ;; Registers used:
  3490 ;;		wreg, status,2, status,0
  3491 ;; Tracked objects:
  3492 ;;		On entry : 0/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3496 ;;      Params:         2       0       0       0       0       0       0
  3497 ;;      Locals:         0       0       0       0       0       0       0
  3498 ;;      Temps:          0       0       0       0       0       0       0
  3499 ;;      Totals:         2       0       0       0       0       0       0
  3500 ;;Total ram usage:        2 bytes
  3501 ;; Hardware stack levels used: 1
  3502 ;; Hardware stack levels required when called: 3
  3503 ;; This function calls:
  3504 ;;		Nothing
  3505 ;; This function is called by:
  3506 ;;		_main
  3507 ;; This function uses a non-reentrant model
  3508 ;;
  3509                           
  3510                           	psect	text22
  3511   001760                     __ptext22:
  3512                           	callstack 0
  3513   001760                     _getLcdDriver2:
  3514                           	callstack 27
  3515   001760                     
  3516                           ;drv_lcd2.c: 31: myself.initFunc = initGenerico2;
  3517   001760  0EEA               	movlw	low _initGenerico2
  3518   001762  6E2F               	movwf	(_myself@drv_lcd2$F558+3)^0,c
  3519   001764  0E17               	movlw	high _initGenerico2
  3520   001766  6E30               	movwf	(_myself@drv_lcd2$F558+4)^0,c
  3521                           
  3522                           ;drv_lcd2.c: 32: my_funcs[LCD_CMD] = command;
  3523   001768  0ECA               	movlw	low _command
  3524   00176A  6E36               	movwf	_my_funcs@drv_lcd2$F562^0,c
  3525   00176C  0E17               	movlw	high _command
  3526   00176E  6E37               	movwf	(_my_funcs@drv_lcd2$F562+1)^0,c
  3527                           
  3528                           ;drv_lcd2.c: 33: my_funcs[LCD_DATA] = data;
  3529   001770  0EBE               	movlw	low _data
  3530   001772  6E38               	movwf	(_my_funcs@drv_lcd2$F562+2)^0,c
  3531   001774  0E17               	movlw	high _data
  3532   001776  6E39               	movwf	(_my_funcs@drv_lcd2$F562+3)^0,c
  3533                           
  3534                           ;drv_lcd2.c: 34: myself.funcoes = my_funcs;
  3535   001778  0E36               	movlw	low _my_funcs@drv_lcd2$F562
  3536   00177A  6E2D               	movwf	(_myself@drv_lcd2$F558+1)^0,c
  3537   00177C  0E00               	movlw	high _my_funcs@drv_lcd2$F562
  3538   00177E  6E2E               	movwf	(_myself@drv_lcd2$F558+2)^0,c
  3539                           
  3540                           ;drv_lcd2.c: 35: return &myself;
  3541   001780  0E2C               	movlw	low _myself@drv_lcd2$F558
  3542   001782  6E4D               	movwf	?_getLcdDriver2^0,c
  3543   001784  0E00               	movlw	high _myself@drv_lcd2$F558
  3544   001786  6E4E               	movwf	(?_getLcdDriver2+1)^0,c
  3545   001788  0012               	return		;funcret
  3546   00178A                     __end_of_getLcdDriver2:
  3547                           	callstack 0
  3548                           
  3549 ;; *************** function _ISR *****************
  3550 ;; Defined at:
  3551 ;;		line 11 in file "main.c"
  3552 ;; Parameters:    Size  Location     Type
  3553 ;;		None
  3554 ;; Auto vars:     Size  Location     Type
  3555 ;;		None
  3556 ;; Return value:  Size  Location     Type
  3557 ;;                  1    wreg      void 
  3558 ;; Registers used:
  3559 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3560 ;; Tracked objects:
  3561 ;;		On entry : 0/0
  3562 ;;		On exit  : 0/0
  3563 ;;		Unchanged: 0/0
  3564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3565 ;;      Params:         0       0       0       0       0       0       0
  3566 ;;      Locals:         0       0       0       0       0       0       0
  3567 ;;      Temps:          6       0       0       0       0       0       0
  3568 ;;      Totals:         6       0       0       0       0       0       0
  3569 ;;Total ram usage:        6 bytes
  3570 ;; Hardware stack levels used: 1
  3571 ;; Hardware stack levels required when called: 2
  3572 ;; This function calls:
  3573 ;;		_KernelClock
  3574 ;; This function is called by:
  3575 ;;		Interrupt level 2
  3576 ;; This function uses a non-reentrant model
  3577 ;;
  3578                           
  3579                           	psect	intcode
  3580   000008                     __pintcode:
  3581                           	callstack 0
  3582   000008                     _ISR:
  3583                           	callstack 22
  3584                           
  3585                           ;incstack = 0
  3586   000008  826D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3587   00000A  ED87  F00B         	call	int_func,f	;refresh shadow registers
  3588                           
  3589                           	psect	intcode_body
  3590   00170E                     __pintcode_body:
  3591                           	callstack 22
  3592   00170E                     int_func:
  3593                           	callstack 22
  3594   00170E  0006               	pop		; remove dummy address from shadow register refresh
  3595   001710  CFE1 F047          	movff	fsr1l,??_ISR
  3596   001714  CFE2 F048          	movff	fsr1h,??_ISR+1
  3597   001718  CFD9 F049          	movff	fsr2l,??_ISR+2
  3598   00171C  CFDA F04A          	movff	fsr2h,??_ISR+3
  3599   001720  CFF3 F04B          	movff	prodl,??_ISR+4
  3600   001724  CFF4 F04C          	movff	prodh,??_ISR+5
  3601   001728                     
  3602                           ;main.c: 13: if (((INTCON) & (1<<(2)))) {
  3603   001728  A4F2               	btfss	242,2,c	;volatile
  3604   00172A  EF99  F00B         	goto	i2u352_41
  3605   00172E  EF9B  F00B         	goto	i2u352_40
  3606   001732                     i2u352_41:
  3607   001732  EFA2  F00B         	goto	i2l30
  3608   001736                     i2u352_40:
  3609   001736                     
  3610                           ;main.c: 15: TMR0H = (45535 >> 8);
  3611   001736  0EB1               	movlw	177
  3612   001738  6ED7               	movwf	215,c	;volatile
  3613                           
  3614                           ;main.c: 16: TMR0L = (45535 & 0x00FF);
  3615   00173A  0EDF               	movlw	223
  3616   00173C  6ED6               	movwf	214,c	;volatile
  3617   00173E                     
  3618                           ;main.c: 18: KernelClock();
  3619   00173E  ECE0  F009         	call	_KernelClock	;wreg free
  3620   001742                     
  3621                           ;main.c: 21: ((INTCON) &= ~(1<<(2)));
  3622   001742  94F2               	bcf	242,2,c	;volatile
  3623   001744                     i2l30:
  3624   001744  C04C  FFF4         	movff	??_ISR+5,prodh
  3625   001748  C04B  FFF3         	movff	??_ISR+4,prodl
  3626   00174C  C04A  FFDA         	movff	??_ISR+3,fsr2h
  3627   001750  C049  FFD9         	movff	??_ISR+2,fsr2l
  3628   001754  C048  FFE2         	movff	??_ISR+1,fsr1h
  3629   001758  C047  FFE1         	movff	??_ISR,fsr1l
  3630   00175C  926D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3631   00175E  0011               	retfie		f
  3632   001760                     __end_of_ISR:
  3633                           	callstack 0
  3634                           
  3635 ;; *************** function _KernelClock *****************
  3636 ;; Defined at:
  3637 ;;		line 57 in file "kernel.c"
  3638 ;; Parameters:    Size  Location     Type
  3639 ;;		None
  3640 ;; Auto vars:     Size  Location     Type
  3641 ;;  proc            1    8[COMRAM] unsigned char 
  3642 ;; Return value:  Size  Location     Type
  3643 ;;                  1    wreg      void 
  3644 ;; Registers used:
  3645 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 0/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3651 ;;      Params:         0       0       0       0       0       0       0
  3652 ;;      Locals:         1       0       0       0       0       0       0
  3653 ;;      Temps:          2       0       0       0       0       0       0
  3654 ;;      Totals:         3       0       0       0       0       0       0
  3655 ;;Total ram usage:        3 bytes
  3656 ;; Hardware stack levels used: 1
  3657 ;; Hardware stack levels required when called: 1
  3658 ;; This function calls:
  3659 ;;		i2___awmod
  3660 ;; This function is called by:
  3661 ;;		_ISR
  3662 ;; This function uses a non-reentrant model
  3663 ;;
  3664                           
  3665                           	psect	text24
  3666   0013C0                     __ptext24:
  3667                           	callstack 0
  3668   0013C0                     _KernelClock:
  3669                           	callstack 22
  3670   0013C0                     
  3671                           ;kernel.c: 58: unsigned char proc;;kernel.c: 59: for (proc = start; proc != end; proc = 
      +                          (proc + 1) % 10) {
  3672   0013C0  C02B  F046         	movff	_start,KernelClock@proc
  3673   0013C4  EF20  F00A         	goto	i2l3104
  3674   0013C8                     i2l3098:
  3675                           
  3676                           ;kernel.c: 60: if ((pool[proc]->start)>(-30000)) {
  3677   0013C8  5046               	movf	KernelClock@proc^0,w,c
  3678   0013CA  0D02               	mullw	2
  3679   0013CC  0E01               	movlw	low _pool
  3680   0013CE  24F3               	addwf	243,w,c
  3681   0013D0  6ED9               	movwf	fsr2l,c
  3682   0013D2  0E00               	movlw	high _pool
  3683   0013D4  20F4               	addwfc	prodh,w,c
  3684   0013D6  6EDA               	movwf	fsr2h,c
  3685   0013D8  EE10 F004          	lfsr	1,4
  3686   0013DC  50DE               	movf	postinc2,w,c
  3687   0013DE  26E1               	addwf	fsr1l,f,c
  3688   0013E0  50DD               	movf	postdec2,w,c
  3689   0013E2  22E2               	addwfc	fsr1h,f,c
  3690   0013E4  0E01               	movlw	1
  3691   0013E6  AEE3               	btfss	plusw1,7,c
  3692   0013E8  EF01  F00A         	goto	i2u337_40
  3693   0013EC  0ED1               	movlw	209
  3694   0013EE  5CE6               	subwf	postinc1,w,c
  3695   0013F0  0E8A               	movlw	138
  3696   0013F2  58E6               	subwfb	postinc1,w,c
  3697   0013F4  A0D8               	btfss	status,0,c
  3698   0013F6  EFFF  F009         	goto	i2u337_41
  3699   0013FA  EF01  F00A         	goto	i2u337_40
  3700   0013FE                     i2u337_41:
  3701   0013FE  EF12  F00A         	goto	i2l3102
  3702   001402                     i2u337_40:
  3703   001402                     
  3704                           ;kernel.c: 61: pool[proc]->start--;
  3705   001402  5046               	movf	KernelClock@proc^0,w,c
  3706   001404  0D02               	mullw	2
  3707   001406  0E01               	movlw	low _pool
  3708   001408  24F3               	addwf	243,w,c
  3709   00140A  6ED9               	movwf	fsr2l,c
  3710   00140C  0E00               	movlw	high _pool
  3711   00140E  20F4               	addwfc	prodh,w,c
  3712   001410  6EDA               	movwf	fsr2h,c
  3713   001412  EE10 F004          	lfsr	1,4
  3714   001416  50DE               	movf	postinc2,w,c
  3715   001418  26E1               	addwf	fsr1l,f,c
  3716   00141A  50DD               	movf	postdec2,w,c
  3717   00141C  22E2               	addwfc	fsr1h,f,c
  3718   00141E  06E6               	decf	postinc1,f,c
  3719   001420  0E00               	movlw	0
  3720   001422  5AE5               	subwfb	postdec1,f,c
  3721   001424                     i2l3102:
  3722   001424  0E01               	movlw	1
  3723   001426  2446               	addwf	KernelClock@proc^0,w,c
  3724   001428  6E3E               	movwf	i2___awmod@dividend^0,c
  3725   00142A  6A3F               	clrf	(i2___awmod@dividend+1)^0,c
  3726   00142C  0E00               	movlw	0
  3727   00142E  223F               	addwfc	(i2___awmod@dividend+1)^0,f,c
  3728   001430  0E00               	movlw	0
  3729   001432  6E41               	movwf	(i2___awmod@divisor+1)^0,c
  3730   001434  0E0A               	movlw	10
  3731   001436  6E40               	movwf	i2___awmod@divisor^0,c
  3732   001438  EC36  F009         	call	i2___awmod	;wreg free
  3733   00143C  503E               	movf	?i2___awmod^0,w,c
  3734   00143E  6E46               	movwf	KernelClock@proc^0,c
  3735   001440                     i2l3104:
  3736   001440  502A               	movf	_end^0,w,c
  3737   001442  1846               	xorwf	KernelClock@proc^0,w,c
  3738   001444  A4D8               	btfss	status,2,c
  3739   001446  EF27  F00A         	goto	i2u338_41
  3740   00144A  EF29  F00A         	goto	i2u338_40
  3741   00144E                     i2u338_41:
  3742   00144E  EFE4  F009         	goto	i2l3098
  3743   001452                     i2u338_40:
  3744   001452  0012               	return		;funcret
  3745   001454                     __end_of_KernelClock:
  3746                           	callstack 0
  3747                           
  3748 ;; *************** function i2___awmod *****************
  3749 ;; Defined at:
  3750 ;;		line 7 in file "C:\Microchip\xc8\pic\sources\c90\common\awmod.c"
  3751 ;; Parameters:    Size  Location     Type
  3752 ;;  dividend        2    0[COMRAM] int 
  3753 ;;  divisor         2    2[COMRAM] int 
  3754 ;; Auto vars:     Size  Location     Type
  3755 ;;  sign            1    5[COMRAM] unsigned char 
  3756 ;;  counter         1    4[COMRAM] unsigned char 
  3757 ;; Return value:  Size  Location     Type
  3758 ;;                  2    0[COMRAM] int 
  3759 ;; Registers used:
  3760 ;;		wreg, status,2, status,0
  3761 ;; Tracked objects:
  3762 ;;		On entry : 0/0
  3763 ;;		On exit  : 0/0
  3764 ;;		Unchanged: 0/0
  3765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3766 ;;      Params:         4       0       0       0       0       0       0
  3767 ;;      Locals:         2       0       0       0       0       0       0
  3768 ;;      Temps:          0       0       0       0       0       0       0
  3769 ;;      Totals:         6       0       0       0       0       0       0
  3770 ;;Total ram usage:        6 bytes
  3771 ;; Hardware stack levels used: 1
  3772 ;; This function calls:
  3773 ;;		Nothing
  3774 ;; This function is called by:
  3775 ;;		_KernelClock
  3776 ;; This function uses a non-reentrant model
  3777 ;;
  3778                           
  3779                           	psect	text25
  3780   00126C                     __ptext25:
  3781                           	callstack 0
  3782   00126C                     i2___awmod:
  3783                           	callstack 22
  3784   00126C  0E00               	movlw	0
  3785   00126E  6E43               	movwf	i2___awmod@sign^0,c
  3786   001270  BE3F               	btfsc	(i2___awmod@dividend+1)^0,7,c
  3787   001272  EF3F  F009         	goto	i2u331_40
  3788   001276  EF3D  F009         	goto	i2u331_41
  3789   00127A                     i2u331_41:
  3790   00127A  EF45  F009         	goto	i2l3068
  3791   00127E                     i2u331_40:
  3792   00127E  6C3E               	negf	i2___awmod@dividend^0,c
  3793   001280  1E3F               	comf	(i2___awmod@dividend+1)^0,f,c
  3794   001282  B0D8               	btfsc	status,0,c
  3795   001284  2A3F               	incf	(i2___awmod@dividend+1)^0,f,c
  3796   001286  0E01               	movlw	1
  3797   001288  6E43               	movwf	i2___awmod@sign^0,c
  3798   00128A                     i2l3068:
  3799   00128A  BE41               	btfsc	(i2___awmod@divisor+1)^0,7,c
  3800   00128C  EF4C  F009         	goto	i2u332_40
  3801   001290  EF4A  F009         	goto	i2u332_41
  3802   001294                     i2u332_41:
  3803   001294  EF50  F009         	goto	i2l3072
  3804   001298                     i2u332_40:
  3805   001298  6C40               	negf	i2___awmod@divisor^0,c
  3806   00129A  1E41               	comf	(i2___awmod@divisor+1)^0,f,c
  3807   00129C  B0D8               	btfsc	status,0,c
  3808   00129E  2A41               	incf	(i2___awmod@divisor+1)^0,f,c
  3809   0012A0                     i2l3072:
  3810   0012A0  5040               	movf	i2___awmod@divisor^0,w,c
  3811   0012A2  1041               	iorwf	(i2___awmod@divisor+1)^0,w,c
  3812   0012A4  B4D8               	btfsc	status,2,c
  3813   0012A6  EF57  F009         	goto	i2u333_41
  3814   0012AA  EF59  F009         	goto	i2u333_40
  3815   0012AE                     i2u333_41:
  3816   0012AE  EF7D  F009         	goto	i2l3088
  3817   0012B2                     i2u333_40:
  3818   0012B2  0E01               	movlw	1
  3819   0012B4  6E42               	movwf	i2___awmod@counter^0,c
  3820   0012B6  EF61  F009         	goto	i2l3078
  3821   0012BA                     i2l3076:
  3822   0012BA  90D8               	bcf	status,0,c
  3823   0012BC  3640               	rlcf	i2___awmod@divisor^0,f,c
  3824   0012BE  3641               	rlcf	(i2___awmod@divisor+1)^0,f,c
  3825   0012C0  2A42               	incf	i2___awmod@counter^0,f,c
  3826   0012C2                     i2l3078:
  3827   0012C2  AE41               	btfss	(i2___awmod@divisor+1)^0,7,c
  3828   0012C4  EF66  F009         	goto	i2u334_41
  3829   0012C8  EF68  F009         	goto	i2u334_40
  3830   0012CC                     i2u334_41:
  3831   0012CC  EF5D  F009         	goto	i2l3076
  3832   0012D0                     i2u334_40:
  3833   0012D0                     i2l3080:
  3834   0012D0  5040               	movf	i2___awmod@divisor^0,w,c
  3835   0012D2  5C3E               	subwf	i2___awmod@dividend^0,w,c
  3836   0012D4  5041               	movf	(i2___awmod@divisor+1)^0,w,c
  3837   0012D6  583F               	subwfb	(i2___awmod@dividend+1)^0,w,c
  3838   0012D8  A0D8               	btfss	status,0,c
  3839   0012DA  EF71  F009         	goto	i2u335_41
  3840   0012DE  EF73  F009         	goto	i2u335_40
  3841   0012E2                     i2u335_41:
  3842   0012E2  EF77  F009         	goto	i2l3084
  3843   0012E6                     i2u335_40:
  3844   0012E6  5040               	movf	i2___awmod@divisor^0,w,c
  3845   0012E8  5E3E               	subwf	i2___awmod@dividend^0,f,c
  3846   0012EA  5041               	movf	(i2___awmod@divisor+1)^0,w,c
  3847   0012EC  5A3F               	subwfb	(i2___awmod@dividend+1)^0,f,c
  3848   0012EE                     i2l3084:
  3849   0012EE  90D8               	bcf	status,0,c
  3850   0012F0  3241               	rrcf	(i2___awmod@divisor+1)^0,f,c
  3851   0012F2  3240               	rrcf	i2___awmod@divisor^0,f,c
  3852   0012F4  2E42               	decfsz	i2___awmod@counter^0,f,c
  3853   0012F6  EF68  F009         	goto	i2l3080
  3854   0012FA                     i2l3088:
  3855   0012FA  5043               	movf	i2___awmod@sign^0,w,c
  3856   0012FC  B4D8               	btfsc	status,2,c
  3857   0012FE  EF83  F009         	goto	i2u336_41
  3858   001302  EF85  F009         	goto	i2u336_40
  3859   001306                     i2u336_41:
  3860   001306  EF89  F009         	goto	i2l3092
  3861   00130A                     i2u336_40:
  3862   00130A  6C3E               	negf	i2___awmod@dividend^0,c
  3863   00130C  1E3F               	comf	(i2___awmod@dividend+1)^0,f,c
  3864   00130E  B0D8               	btfsc	status,0,c
  3865   001310  2A3F               	incf	(i2___awmod@dividend+1)^0,f,c
  3866   001312                     i2l3092:
  3867   001312  C03E  F03E         	movff	i2___awmod@dividend,?i2___awmod
  3868   001316  C03F  F03F         	movff	i2___awmod@dividend+1,?i2___awmod+1
  3869   00131A  0012               	return		;funcret
  3870   00131C                     __end_ofi2___awmod:
  3871                           	callstack 0
  3872                           
  3873                           	psect	text26
  3874   000000                     __ptext26:
  3875                           	callstack 0
  3876   000000                     
  3877                           	psect	rparam
  3878   000000                     
  3879                           	psect	temp
  3880   00006D                     btemp:
  3881                           	callstack 0
  3882   00006D                     	ds	1
  3883   000000                     int$flags	set	btemp
  3884   000000                     wtemp8	set	btemp+1
  3885   000000                     ttemp5	set	btemp+1
  3886   000000                     ttemp6	set	btemp+4
  3887   000000                     ttemp7	set	btemp+8
  3888                           
  3889                           	psect	idloc
  3890                           
  3891                           ;Config register IDLOC0 @ 0x200000
  3892                           ;	unspecified, using default values
  3893   200000                     	org	2097152
  3894   200000  FF                 	db	255
  3895                           
  3896                           ;Config register IDLOC1 @ 0x200001
  3897                           ;	unspecified, using default values
  3898   200001                     	org	2097153
  3899   200001  FF                 	db	255
  3900                           
  3901                           ;Config register IDLOC2 @ 0x200002
  3902                           ;	unspecified, using default values
  3903   200002                     	org	2097154
  3904   200002  FF                 	db	255
  3905                           
  3906                           ;Config register IDLOC3 @ 0x200003
  3907                           ;	unspecified, using default values
  3908   200003                     	org	2097155
  3909   200003  FF                 	db	255
  3910                           
  3911                           ;Config register IDLOC4 @ 0x200004
  3912                           ;	unspecified, using default values
  3913   200004                     	org	2097156
  3914   200004  FF                 	db	255
  3915                           
  3916                           ;Config register IDLOC5 @ 0x200005
  3917                           ;	unspecified, using default values
  3918   200005                     	org	2097157
  3919   200005  FF                 	db	255
  3920                           
  3921                           ;Config register IDLOC6 @ 0x200006
  3922                           ;	unspecified, using default values
  3923   200006                     	org	2097158
  3924   200006  FF                 	db	255
  3925                           
  3926                           ;Config register IDLOC7 @ 0x200007
  3927                           ;	unspecified, using default values
  3928   200007                     	org	2097159
  3929   200007  FF                 	db	255
  3930                           
  3931                           	psect	config
  3932                           
  3933                           ; Padding undefined space
  3934   300000                     	org	3145728
  3935   300000  FF                 	db	255
  3936                           
  3937                           ;Config register CONFIG1H @ 0x300001
  3938                           ;	Oscillator Selection bits
  3939                           ;	OSC = HS, HS oscillator
  3940                           ;	Fail-Safe Clock Monitor Enable bit
  3941                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3942                           ;	Internal/External Oscillator Switchover bit
  3943                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3944   300001                     	org	3145729
  3945   300001  02                 	db	2
  3946                           
  3947                           ;Config register CONFIG2L @ 0x300002
  3948                           ;	Power-up Timer Enable bit
  3949                           ;	PWRT = OFF, PWRT disabled
  3950                           ;	Brown-out Reset Enable bits
  3951                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3952                           ;	Brown Out Reset Voltage bits
  3953                           ;	BORV = 2, 
  3954   300002                     	org	3145730
  3955   300002  11                 	db	17
  3956                           
  3957                           ;Config register CONFIG2H @ 0x300003
  3958                           ;	Watchdog Timer Enable bit
  3959                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3960                           ;	Watchdog Timer Postscale Select bits
  3961                           ;	WDTPS = 1, 1:1
  3962   300003                     	org	3145731
  3963   300003  00                 	db	0
  3964                           
  3965                           ; Padding undefined space
  3966   300004                     	org	3145732
  3967   300004  FF                 	db	255
  3968                           
  3969                           ;Config register CONFIG3H @ 0x300005
  3970                           ;	CCP2 MUX bit
  3971                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3972                           ;	PORTB A/D Enable bit
  3973                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  3974                           ;	Low-Power Timer1 Oscillator Enable bit
  3975                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3976                           ;	MCLR Pin Enable bit
  3977                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3978   300005                     	org	3145733
  3979   300005  83                 	db	131
  3980                           
  3981                           ;Config register CONFIG4L @ 0x300006
  3982                           ;	Stack Full/Underflow Reset Enable bit
  3983                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  3984                           ;	Single-Supply ICSP Enable bit
  3985                           ;	LVP = OFF, Single-Supply ICSP disabled
  3986                           ;	Extended Instruction Set Enable bit
  3987                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3988                           ;	Background Debugger Enable bit
  3989                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  3990   300006                     	org	3145734
  3991   300006  80                 	db	128
  3992                           
  3993                           ; Padding undefined space
  3994   300007                     	org	3145735
  3995   300007  FF                 	db	255
  3996                           
  3997                           ;Config register CONFIG5L @ 0x300008
  3998                           ;	Code Protection bit
  3999                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  4000                           ;	Code Protection bit
  4001                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  4002                           ;	Code Protection bit
  4003                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  4004                           ;	Code Protection bit
  4005                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  4006   300008                     	org	3145736
  4007   300008  0F                 	db	15
  4008                           
  4009                           ;Config register CONFIG5H @ 0x300009
  4010                           ;	Boot Block Code Protection bit
  4011                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4012                           ;	Data EEPROM Code Protection bit
  4013                           ;	CPD = OFF, Data EEPROM not code-protected
  4014   300009                     	org	3145737
  4015   300009  C0                 	db	192
  4016                           
  4017                           ;Config register CONFIG6L @ 0x30000A
  4018                           ;	Write Protection bit
  4019                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  4020                           ;	Write Protection bit
  4021                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  4022                           ;	Write Protection bit
  4023                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  4024                           ;	Write Protection bit
  4025                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  4026   30000A                     	org	3145738
  4027   30000A  0F                 	db	15
  4028                           
  4029                           ;Config register CONFIG6H @ 0x30000B
  4030                           ;	Configuration Register Write Protection bit
  4031                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4032                           ;	Boot Block Write Protection bit
  4033                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  4034                           ;	Data EEPROM Write Protection bit
  4035                           ;	WRTD = OFF, Data EEPROM not write-protected
  4036   30000B                     	org	3145739
  4037   30000B  E0                 	db	224
  4038                           
  4039                           ;Config register CONFIG7L @ 0x30000C
  4040                           ;	Table Read Protection bit
  4041                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  4042                           ;	Table Read Protection bit
  4043                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  4044                           ;	Table Read Protection bit
  4045                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  4046                           ;	Table Read Protection bit
  4047                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4048   30000C                     	org	3145740
  4049   30000C  0F                 	db	15
  4050                           
  4051                           ;Config register CONFIG7H @ 0x30000D
  4052                           ;	Boot Block Table Read Protection bit
  4053                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4054   30000D                     	org	3145741
  4055   30000D  40                 	db	64
  4056                           tosu	equ	0xFFF
  4057                           tosh	equ	0xFFE
  4058                           tosl	equ	0xFFD
  4059                           stkptr	equ	0xFFC
  4060                           pclatu	equ	0xFFB
  4061                           pclath	equ	0xFFA
  4062                           pcl	equ	0xFF9
  4063                           tblptru	equ	0xFF8
  4064                           tblptrh	equ	0xFF7
  4065                           tblptrl	equ	0xFF6
  4066                           tablat	equ	0xFF5
  4067                           prodh	equ	0xFF4
  4068                           prodl	equ	0xFF3
  4069                           indf0	equ	0xFEF
  4070                           postinc0	equ	0xFEE
  4071                           postdec0	equ	0xFED
  4072                           preinc0	equ	0xFEC
  4073                           plusw0	equ	0xFEB
  4074                           fsr0h	equ	0xFEA
  4075                           fsr0l	equ	0xFE9
  4076                           wreg	equ	0xFE8
  4077                           indf1	equ	0xFE7
  4078                           postinc1	equ	0xFE6
  4079                           postdec1	equ	0xFE5
  4080                           preinc1	equ	0xFE4
  4081                           plusw1	equ	0xFE3
  4082                           fsr1h	equ	0xFE2
  4083                           fsr1l	equ	0xFE1
  4084                           bsr	equ	0xFE0
  4085                           indf2	equ	0xFDF
  4086                           postinc2	equ	0xFDE
  4087                           postdec2	equ	0xFDD
  4088                           preinc2	equ	0xFDC
  4089                           plusw2	equ	0xFDB
  4090                           fsr2h	equ	0xFDA
  4091                           fsr2l	equ	0xFD9
  4092                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    16
    Data        12
    BSS         61
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     39     108
    BANK0           128     16      22
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    kernelLoop$1321	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> updateLCD(), counter(), 

    my_funcs$0	PTR void  size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    my_funcs$0	PTR void  size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    kernelLoop$1320	PTR struct . size(2) Largest target is 6
		 -> main@p2(BANK0[6]), main@p1(BANK0[6]), 

    ?_getLcdDriver2.initFunc	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> initGenerico2(), initGenerico(), 

    ?_getLcdDriver2.funcoes	PTR PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 4
		 -> my_funcs@drv_lcd2$F562(COMRAM[4]), my_funcs(COMRAM[4]), 

    ?_getLedDriver.initFunc	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> initGenerico2(), initGenerico(), 

    ?_getLedDriver.funcoes	PTR PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 4
		 -> my_funcs@drv_lcd2$F562(COMRAM[4]), my_funcs(COMRAM[4]), 

    S33$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    lcd.funcoes$0	PTR void  size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    sp__getLcdDriver2.initFunc	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> initGenerico2(), initGenerico(), 

    sp__getLcdDriver2.funcoes	PTR PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 4
		 -> my_funcs@drv_lcd2$F562(COMRAM[4]), my_funcs(COMRAM[4]), 

    my_funcs@drv_lcd2$F562	PTR FTN(PTR void ,)unsigned char [2] size(2) Largest target is 1
		 -> data(), command(), inverte(), changePORTD(), 

    data@parameters	PTR void  size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    command@parameters	PTR void  size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    initGenerico2@parameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    myself.initFunc	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> initGenerico2(), initGenerico(), 

    myself.funcoes	PTR PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 4
		 -> my_funcs@drv_lcd2$F562(COMRAM[4]), my_funcs(COMRAM[4]), 

    sp__getLedDriver.initFunc	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> initGenerico2(), initGenerico(), 

    sp__getLedDriver.funcoes	PTR PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 4
		 -> my_funcs@drv_lcd2$F562(COMRAM[4]), my_funcs(COMRAM[4]), 

    sp__getLedDriver	PTR struct . size(2) Largest target is 6
		 -> myself(COMRAM[5]), 

    my_funcs	PTR FTN(PTR void ,)unsigned char [2] size(2) Largest target is 1
		 -> data(), command(), inverte(), changePORTD(), 

    initGenerico@parameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    inverte@parameters	PTR void  size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    changePORTD@parameters	PTR void  size(2) Largest target is 1535
		 -> RAM(DATA[1535]), 

    myself.initFunc	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> initGenerico2(), initGenerico(), 

    myself.funcoes	PTR PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 4
		 -> my_funcs@drv_lcd2$F562(COMRAM[4]), my_funcs(COMRAM[4]), 

    kernelLoop@tempProc	PTR struct . size(2) Largest target is 6
		 -> main@p2(BANK0[6]), main@p1(BANK0[6]), 

    kernelAddProc@newProc.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> updateLCD(), counter(), 

    pool.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> updateLCD(), counter(), 

    kernelAddProc@newProc	PTR struct . size(2) Largest target is 6
		 -> main@p2(BANK0[6]), main@p1(BANK0[6]), 

    pool	PTR struct .[10] size(2) Largest target is 6
		 -> main@p2(BANK0[6]), main@p1(BANK0[6]), 

    sp__getLcdDriver2	PTR struct . size(2) Largest target is 6
		 -> myself@drv_lcd2$F558(COMRAM[5]), 

    F2427.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> updateLCD(), counter(), 

    p2.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> updateLCD(), counter(), 

    F2424.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> updateLCD(), counter(), 

    S46$function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> updateLCD(), counter(), 

    p1.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> updateLCD(), counter(), 

    S33$initFunc	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> initGenerico2(), initGenerico(), 

    lcd.initFunc	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> initGenerico2(), initGenerico(), 

    S33$funcoes	PTR PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 4
		 -> my_funcs@drv_lcd2$F562(COMRAM[4]), my_funcs(COMRAM[4]), 

    lcd.funcoes	PTR PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 4
		 -> my_funcs@drv_lcd2$F562(COMRAM[4]), my_funcs(COMRAM[4]), 

    lcd	PTR struct . size(2) Largest target is 6
		 -> myself@drv_lcd2$F558(COMRAM[5]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_kernelLoop
    _kernelLoop->_updateLCD
    _updateLCD->_command
    _updateLCD->_data
    _inverte->___awmod
    _data->___awmod
    _lcdData->_digitalWrite
    _command->___awmod
    _changePORTD->___awmod
    _kernelAddProc->___awmod
    _counter->___awmod
    ___awmod->___awdiv
    _lcdInit->_lcdCommand
    _lcdCommand->_digitalWrite
    _Delay2ms->_Delay40us

Critical Paths under _ISR in COMRAM

    _ISR->_KernelClock
    _KernelClock->i2___awmod

Critical Paths under _main in BANK0

    _main->_kernelLoop

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   32570
                                              4 BANK0     12    12      0
                      _getLcdDriver2
                       _initGenerico *
                      _initGenerico2 *
                      _kernelAddProc
                         _kernelInit
                         _kernelLoop
                          _timerInit
 ---------------------------------------------------------------------------------
 (1) _timerInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _kernelLoop                                           9     9      0   22341
                                             34 COMRAM     5     5      0
                                              0 BANK0      4     4      0
                            ___awmod
                            _counter *
                      _kernelAddProc
                          _updateLCD *
 ---------------------------------------------------------------------------------
 (2) _updateLCD                                            2     2      0   12472
                                             32 COMRAM     2     2      0
                            ___awdiv
                            ___awmod
                        _changePORTD *
                            _command *
                               _data *
                            _inverte *
 ---------------------------------------------------------------------------------
 (3) _inverte                                              2     0      2       0
                                             29 COMRAM     2     0      2
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _data                                                 3     1      2    4305
                                             29 COMRAM     3     1      2
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            _lcdData
 ---------------------------------------------------------------------------------
 (4) _lcdData                                              2     2      0    3645
                                             21 COMRAM     2     2      0
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _command                                              3     1      2    3908
                                             29 COMRAM     3     1      2
                            ___awdiv (ARG)
                            ___awmod (ARG)
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (3) _changePORTD                                          2     0      2      31
                                             29 COMRAM     2     0      2
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _kernelAddProc                                        4     2      2    2855
                                             29 COMRAM     4     2      2
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _counter                                              0     0      0    4228
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    2523
                                             23 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1705
                                             15 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _kernelInit                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initGenerico2                                        2     0      2    7215
                                             23 COMRAM     2     0      2
                            _lcdInit
 ---------------------------------------------------------------------------------
 (2) _lcdInit                                              0     0      0    7119
                           _Delay2ms
                         _lcdCommand
                            _pinMode
 ---------------------------------------------------------------------------------
 (3) _pinMode                                              6     2      4    3140
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _lcdCommand                                           2     2      0    3843
                                             21 COMRAM     2     2      0
                           _Delay2ms
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _digitalWrite                                         6     2      4    3512
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _Delay2ms                                             1     1      0     136
                                             16 COMRAM     1     1      0
                          _Delay40us
 ---------------------------------------------------------------------------------
 (5) _Delay40us                                            1     1      0      68
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initGenerico                                         2     0      2      31
                                             23 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _getLcdDriver2                                        2     0      2       0
                                             15 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  6     6      0     633
                                              9 COMRAM     6     6      0
                        _KernelClock
 ---------------------------------------------------------------------------------
 (8) _KernelClock                                          3     3      0     633
                                              6 COMRAM     3     3      0
                          i2___awmod
 ---------------------------------------------------------------------------------
 (9) i2___awmod                                            6     2      4     503
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _getLcdDriver2
   _initGenerico *
   _initGenerico2 *
     _lcdInit
       _Delay2ms
         _Delay40us
       _lcdCommand
         _Delay2ms
         _Delay40us
         _digitalWrite
       _pinMode
   _kernelAddProc *
     ___awmod
       ___awdiv (ARG)
   _kernelInit *
   _kernelLoop *
     ___awmod
     _counter *
       ___awdiv
       ___awmod
     _kernelAddProc *
     _updateLCD *
       ___awdiv
       ___awmod
       _changePORTD *
         ___awdiv (ARG)
         ___awmod (ARG)
       _command *
         ___awdiv (ARG)
         ___awmod (ARG)
         _lcdCommand (ARG)
       _data *
         ___awdiv (ARG)
         ___awmod (ARG)
         _lcdData (ARG)
           _Delay40us
           _digitalWrite
       _inverte *
         ___awdiv (ARG)
         ___awmod (ARG)
   _timerInit *

 _ISR (ROOT)
   _KernelClock
     i2___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     10      16       5       17.2%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     27      6C       1       85.7%
BITBIGSFRlh         1A      0       0      17        0.0%
BITBIGSFRllhll       D      0       0      27        0.0%
BITBIGSFRh           D      0       0      16        0.0%
BITBIGSFRllhhll      C      0       0      25        0.0%
BITBIGSFRllhhll      7      0       0      24        0.0%
BITBIGSFRllhhll      7      0       0      26        0.0%
BITBIGSFRllhhlh      5      0       0      20        0.0%
BITBIGSFRllhhll      4      0       0      23        0.0%
BITBIGSFRllhhlh      4      0       0      19        0.0%
BITBIGSFRllhhh       4      0       0      18        0.0%
BITBIGSFRllhhll      1      0       0      22        0.0%
BITBIGSFRllhhll      1      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      82      28        0.0%
DATA                 0      0      82       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Nov 15 18:45:04 2022

                     l44 1568                       l71 13BE                       l49 0A96  
                     l74 0F34                       l58 14E2                       l67 17DE  
           ___awdiv@sign 0052                       _v0 0026                       _v1 0025  
                     _v2 0024                       _v3 0023                      l103 180C  
                    l202 0F32                      l106 1810                      l300 170C  
                    l109 17E8                      l303 165E                      l236 0CE4  
                    l501 17F2                      l510 1788                      l504 17D4  
                    l290 17A4                      l507 17C8                      l285 17BC  
                    l297 15E6                      l744 11BA                      l488 17FA  
                    l757 126A                      _PR2 000FCB                      _ISR 0008  
                    _end 002A                      _lcd 006B                      _min 001D  
                    _seg 001F             ___awmod@sign 005A                      prod 000FF3  
                    tosl 000FFD                      wreg 000FE8                     ?_ISR 003E  
                   l3000 0A94                     l3010 13A2                     l3020 1618  
                   l3004 131C                     l3110 1760                     l3030 162E  
                   l3022 161C                     l3014 15E8                     l3006 1352  
                   l3040 1646                     l3032 1632                     l3024 1620  
                   l3016 1610                     l3008 136A                     l3120 0F46  
                   l3042 164C                     l3034 1636                     l3026 1624  
                   l3018 1614                     l3114 17D6                     l3130 0FDE  
                   l3122 0F52                     l3106 17F4                     l3210 1454  
                   l3044 1652                     l3036 163C                     l3028 1628  
                   l3140 10BA                     l3132 0FF6                     l3124 0FA8  
                   l3108 17F8                     l3220 14BA                     l3212 1478  
                   l3046 1658                     l3038 1640                     l3142 10D6  
                   l3134 101E                     l3126 0FAC                     l3118 0F34  
                   l3230 14DA                     l3222 14BE                     l3214 147C  
                   l3144 17E0                     l3136 1036                     l3128 0FCA  
                   l3232 14DC                     l3224 14CA                     l3216 1480  
                   l3146 17E4                     l3138 1070                     l3234 14DE  
                   l3226 14D6                     l3218 148C                     l3228 14D8  
                   l2800 15B4                     l2802 15B8                     l2810 16BC  
                   l2732 17AA                     l2740 0D14                     l2804 15CA  
                   l3196 17EA                     l2900 1138                     l2820 16F0  
                   l2812 16C0                     l2734 17AC                     l2726 17A6  
                   l2750 0DAC                     l2742 0D34                     l2806 15DA  
                   l3198 17EE                     l2910 116E                     l2902 114A  
                   l2822 1704                     l2814 16C4                     l2760 0E46  
                   l2752 0DCE                     l2744 0D56                     l2736 0CE6  
                   l2808 15E2                     l2840 0B08                     l2832 0A98  
                   l2912 1184                     l2904 1152                     l2920 119A  
                   l2824 1708                     l2816 16D8                     l2770 0EDA  
                   l2762 0E62                     l2754 0DEA                     l2746 0D72  
                   l2738 0D02                     l2850 0B9C                     l2842 0B24  
                   l2834 0AB4                     l2922 11AA                     l2914 118C  
                   l2906 115A                     l2930 11C0                     l2818 16DC  
                   l2826 1808                     l2772 0EF4                     l2764 0E7C  
                   l2756 0E04                     l2748 0D8C                     l2860 0C26  
                   l2852 0BAE                     l2844 0B36                     l2836 0AC6  
                   l2924 11B2                     l2916 118E                     l2908 1168  
                   l2940 11F0                     l2932 11CE                     l2828 180E  
                   l2782 178E                     l2774 0F14                     l2766 0E9C  
                   l2758 0E24                     l2790 1570                     l2870 0CC2  
                   l2862 0C4A                     l2854 0BD2                     l2846 0B5A  
                   l2838 0AE6                     l2918 1194                     l2950 1236  
                   l2942 1202                     l2934 11D6                     l2784 1792  
                   l2776 178A                     l2768 0EBE                     l2792 1574  
                   l2864 0C70                     l2856 0BF8                     l2848 0B80  
                   l2960 1262                     l2952 123E                     l2944 120A  
                   l2936 11DA                     l2928 11BC                     l2872 17CA  
                   l2880 17C2                     l2786 1794                     l2794 1588  
                   l2866 0C8C                     l2858 0C14                     l2890 1112  
                   l2954 1244                     l2946 1212                     l2938 11E8  
                   l2874 17CE                     l2970 1536                     l2796 158C  
                   l2788 156C                     l2868 0C9E                     l2892 1116  
                   l2884 10F8                     l2948 1220                     l2956 124A  
                   l2980 06A0                     l2972 1566                     l2964 14E6  
                   l2798 15A0                     l2894 1124                     l2886 10FC  
                   l2958 125A                     l2878 17BE                     l2990 08C2  
                   l2982 072E                     l2966 14EA                     l2896 112C  
                   l2888 110A                     l2992 0900                     l2984 076C  
                   l2976 0612                     l2968 1506                     l2898 1130  
                   l2994 0978                     l2986 07E4                     l2978 0650  
                   l2996 09C8                     l2988 0834                     l2998 0A56  
                   u3000 1168                     u3001 1164                     u3010 1184  
                   u3011 1180                     u3020 11AA                     u3021 11A6  
                   u3030 11CE                     u3031 11CA                     u3040 11E8  
                   u3041 11E4                     u3050 1202                     u3051 11FE  
                   u3060 1220                     u3108 068C                     u3061 121C  
                   u3109 06A0                     u3070 1236                     u3118 06CA  
                   u3071 1232                     u3119 06DE                     u3080 125A  
                   u3208 0926                     u3128 071A                     u3400 0FA8  
                   u3081 1256                     u3209 093A                     u3129 072E  
                   u3401 0FA4                     u2530 17BC                     u3218 0964  
                   u3138 0758                     u3410 0FDE                     u2531 17B8  
                   u3219 0978                     u3139 076C                     u3411 0FDA  
                   u2700 0EDA                     u2620 0DEA                     u2604 0D9E  
                   u2540 0D02                     u3260 1352                     u3228 09B4  
                   u3148 0792                     u3420 1070                     u2701 0ED6  
                   u2621 0DE6                     u2605 0D9A                     u2541 0CFE  
                   u3261 134E                     u3229 09C8                     u3149 07A6  
                   u3421 106C                     u2710 0EF4                     u2630 0E04  
                   u2614 0DBE                     u2550 0D14                     u3238 09F2  
                   u3158 07D0                     u2711 0EF0                     u2631 0E00  
                   u2615 0DBA                     u2551 0D10                     u3239 0A06  
                   u3159 07E4                     u3248 0A42                     u3168 0820  
                   u3440 10BA                     u3249 0A56                     u3169 0834  
                   u3441 10B6                     u2810 0B24                     u3258 0A80  
                   u3178 085E                     u3098 063C                     u2811 0B20  
                   u3259 0A94                     u3179 0872                     u3099 0650  
                   u3531 145E                     u2740 17A4                     u2724 0F06  
                   u2660 0E62                     u2644 0E16                     u2580 0D72  
                   u2564 0D26                     u2900 0C26                     u2820 0B36  
                   u2804 0AF8                     u3188 08AE                     u2741 17A0  
                   u2725 0F02                     u2661 0E5E                     u2645 0E12  
                   u2581 0D6E                     u2565 0D22                     u2901 0C22  
                   u2821 0B32                     u2805 0AF4                     u3189 08C2  
                   u3541 1470                     u2734 0F26                     u2670 0E7C  
                   u2654 0E36                     u2590 0D8C                     u2574 0D46  
                   u2750 15CA                     u3198 08EC                     u3438 1096  
                   u3390 0F46                     u2735 0F22                     u2671 0E78  
                   u2655 0E32                     u2591 0D88                     u2575 0D42  
                   u2751 15C6                     u3199 0900                     u3439 10AA  
                   u3391 0F42                     u2760 15DA                     u2761 15D6  
                   u2930 0C8C                     u2914 0C3C                     u2850 0B9C  
                   u2834 0B4C                     u2770 0AB4                     u2931 0C88  
                   u2915 0C38                     u2851 0B98                     u2835 0B48  
                   u2771 0AB0                     u2684 0E8E                     u2940 0C9E  
                   u2924 0C60                     u2860 0BAE                     u2844 0B70  
                   u2780 0AC6                     u2685 0E8A                     u2941 0C9A  
                   u2925 0C5C                     u2861 0BAA                     u2845 0B6C  
                   u2781 0AC2                     u2694 0EAE                     u3558 14A6  
                   u2695 0EAA                     u3559 14BA                     u2954 0CB4  
                   u2890 0C14                     u2874 0BC4                     u2794 0AD8  
                   u2970 110A                     u2955 0CB0                     u2891 0C10  
                   u2875 0BC0                     u2795 0AD4                     u2971 1106  
                   u2964 0CD8                     u2884 0BE8                     u2980 1124  
                   u2965 0CD4                     u2885 0BE4                     u2981 1120  
                   i2l30 1744                     u2990 114A                     u2991 1146  
                   _PIR1 000F9E                     i2l92 1452                     _RCON 000FD0  
        fp__initGenerico 0000                     _data 17BE                     _main 1454  
                   _hora 001B             fp__updateLCD 0000                     _pool 0001  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr2h 000FDA  
                   fsr0l 000FE9                     fsr1l 000FE1                     fsr2l 000FD9  
                   btemp 006D       kernelLoop@tempProc 0080                     prodh 000FF4  
                   prodl 000FF3                     start 000E            ??_KernelClock 0044  
           ___param_bank 000000                    ??_ISR 0047                    ?_data 005B  
                  ?_main 003E          __end_of___awdiv 11BC          __end_of___awmod 126C  
                  _T0CON 000FD5          ___awdiv@divisor 004F                    _T2CON 000FCA  
                  i2l757 131A          ___awdiv@counter 0051                    _RCREG 000FAE  
                  _RCSTA 000FAB                    _TMR0H 000FD7                    _TMR0L 000FD6  
                  _SPBRG 000FAF                    _PORTA 000F80                    _PORTB 000F81  
                  _PORTC 000F82                    _PORTD 000F83                    _PORTE 000F84  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    _TRISE 000F96                    _TXREG 000FAD  
                  _TXSTA 000FAC          __end_of_lcdData 170E          __end_of_lcdInit 1660  
       fp__initGenerico2 0000          __end_of_command 17D6          __end_of_counter 156A  
                  _count 0021          __end_of_pinMode 0CE6                    _valor 0019  
        __end_of_inverte 1812                    _start 002B                    pclath 000FFA  
                  tablat 000FF5                    plusw1 000FE3                    plusw2 000FDB  
                  ttemp5 006E                    ttemp6 0071                    ttemp7 0075  
                  status 000FD8                    wtemp8 006E         __end_of_Delay2ms 17A6  
          ?_initGenerico 0055     __end_of_digitalWrite 0F34          __initialization 1660  
           __end_of_data 17CA             __end_of_main 14E6      __end_of_KernelClock 1454  
                 ??_data 005D                   ??_main 0065            __activetblptr 000002  
                 _ADCON0 000FC2                   _ADCON2 000FC0                   _ADRESH 000FC4  
                 _ADRESL 000FC3                   _CCPR1L 000FBE         ___awdiv@dividend 004D  
                 i2l3100 1402                   i2l3102 1424                   i2l3104 1440  
                 i2l3202 1728                   i2l3060 126C                   i2l3204 1736  
                 i2l3070 1298                   i2l3062 1270                   i2l3206 173E  
                 i2l3080 12D0                   i2l3072 12A0                   i2l3064 127E  
                 i2l3208 1742                   i2l3090 130A                   i2l3082 12E6  
                 i2l3074 12B2                   i2l3066 1286                   i2l3092 1312  
                 i2l3084 12EE                   i2l3076 12BA                   i2l3068 128A  
                 i2l3086 12F4                   i2l3078 12C2                   i2l3088 12FA  
                 i2l3096 13C0                   i2l3098 13C8                   _INTCON 000FF2  
                 _SPBRGH 000FB0              kernelLoop@p 0083        command@parameters 005B  
         ??_initGenerico 0057            _initGenerico2 17EA                ??___awdiv 0051  
              ??___awmod 0059    __end_of_getLcdDriver2 178A                   clear_0 16A6  
       ___awdiv@quotient 0053          ___awmod@divisor 0057                ??_lcdData 0053  
                 isa$std 000001                ??_lcdInit 0055          ___awmod@counter 0059  
                 _myself 0031            _kernelAddProc 131C                   main@p1 0084  
                 main@p2 008A                ??_command 005D                ??_counter 005B  
           __pdataCOMRAM 0065                ??_pinMode 0051        __end_ofi2___awmod 131C  
              ??_inverte 005D             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8           i2___awmod@sign 0043  
      __end_of_Delay40us 17BE               __accesstop 0080  __end_of__initialization 16AC  
         data@parameters 005B            ___rparam_used 000001           ?_initGenerico2 0055  
            _KernelClock 13C0              pinMode@type 004F           __pcstackCOMRAM 003E  
           __pidataBANK0 1802           ?_kernelAddProc 005B                ?_Delay2ms 003E  
             __pnvCOMRAM 006B               _lcdCommand 156A                  _CCP1CON 000FBD  
                _BAUDCON 000FB8               ??_Delay2ms 004E     __end_of_initGenerico 17EA  
           _digitalWrite 0CE6          ??_initGenerico2 0057                  __Hparam 0000  
                __Lparam 0000          kpDebounce@tempo 0029     _myself@drv_lcd2$F558 002C  
             _kernelInit 17D6               _kernelLoop 0F34                  ___awdiv 10F8  
                ___awmod 11BC          ??_kernelAddProc 005D             __psmallconst 0600  
                __pcinit 1660                  _lcdData 16BA                  __ramtop 0600  
          ??_changePORTD 005D                  _lcdInit 15E8                  __ptext0 1454  
                __ptext1 17F4                  __ptext2 0F34                  __ptext3 14E6  
                __ptext4 0612                  __ptext5 17BE                  __ptext6 17CA  
                __ptext7 1808                  __ptext8 180E                  __ptext9 16BA  
                _command 17CA                  _display 0027                  _counter 14E6  
                _pinMode 0A98         ___awmod@dividend 0055                  _inverte 180E  
                fp__data 0000                Delay2ms@i 004E                  _started 0028  
    kpDebounce@valorNovo 0017           __pintcode_body 170E     end_of_initialization 16AC  
          __Lmediumconst 0000                  int_func 170E        __end_of_timerInit 17FC  
      __end_of_updateLCD 0A98                  postdec1 000FE5                  postdec2 000FDD  
            ?_lcdCommand 003E                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE           _valor@ssd$F521 0601               fp__command 0000  
             fp__counter 0000      __end_of_changePORTD 180E           kernelLoop@next 0082  
             fp__inverte 0000                i2___awmod 126C    changePORTD@parameters 005B  
             command@cmd 005D                _Delay40us 17A6             ?_KernelClock 003E  
            ?_kernelInit 003E              ?_kernelLoop 003E            __pidataCOMRAM 17FC  
 __end_of_valor@ssd$F521 0611        inverte@parameters 005B      start_initialization 1660  
            __end_of_ISR 1760               ?i2___awmod 003E          KernelClock@proc 0046  
             ?_Delay40us 003E             _initGenerico 17E0              __pdataBANK0 0090  
            _changePORTD 1808              __pbssCOMRAM 0001            __pcstackBANK0 0080  
   kernelAddProc@newProc 005B               pinMode@pin 004D  initGenerico2@parameters 0055  
              __pintcode 0008                 ?___awdiv 004D                 ?___awmod 0055  
               ?_lcdData 003E            _getLcdDriver2 1760                 ?_lcdInit 003E  
               ?_command 005B            lcdCommand@cmd 0054              __smallconst 0600  
               ?_counter 003E                 ?_pinMode 004D                 ?_inverte 005B  
              data@valor 005D              ??i2___awmod 0042              ??_Delay40us 004D  
  __end_of_initGenerico2 17F4                 i2u331_40 127E                 i2u331_41 127A  
               i2u332_40 1298                 i2u332_41 1294                 i2u333_40 12B2  
               i2u333_41 12AE                 i2u334_40 12D0                 i2u334_41 12CC  
               i2u335_40 12E6                 i2u335_41 12E2                 i2u336_40 130A  
               i2u352_40 1736                 i2u336_41 1306                 i2u352_41 1732  
               i2u337_40 1402                 i2u337_41 13FE                 i2u338_40 1452  
               i2u338_41 144E             ??_lcdCommand 0053                main@F2424 0065  
              main@F2427 0090                _timerInit 17F4                _updateLCD 0612  
         ?_getLcdDriver2 004D    __end_of_kernelAddProc 13C0          lcdCommand@old_D 0053  
  kpDebounce@valorAntigo 0015                 _Delay2ms 178A                copy_data0 1674  
              copy_data1 1694   _my_funcs@drv_lcd2$F562 0036       i2___awmod@dividend 003E  
     __end_of_lcdCommand 15E8             lcdData@old_D 0054             lcdData@valor 0053  
               __Hrparam 0000                 __Lrparam 0000             ??_kernelInit 004D  
           ??_kernelLoop 0060               ?_timerInit 003E               ?_updateLCD 003E  
               __ptext10 131C                 __ptext11 11BC                 __ptext20 178A  
               __ptext12 10F8                 __ptext21 17A6                 __ptext13 17D6  
               __ptext22 1760                 __ptext14 17E0                 __ptext15 17EA  
               __ptext24 13C0                 __ptext16 15E8                 __ptext25 126C  
               __ptext17 0A98                 __ptext26 0000                 __ptext18 156A  
               __ptext19 0CE6       __end_of_kernelInit 17E0           fp__changePORTD 0000  
     __end_of_kernelLoop 10F8               Delay40us@i 004D                 _my_funcs 003A  
               isa$xinst 000000          ??_getLcdDriver2 004F                 int$flags 006D  
           ?_changePORTD 005B        i2___awmod@divisor 0040        i2___awmod@counter 0042  
          ?_digitalWrite 004D                 intlevel2 0000        digitalWrite@value 004F  
 initGenerico@parameters 0055              ??_timerInit 004D              ??_updateLCD 005E  
         ??_digitalWrite 0051          digitalWrite@pin 004D  
