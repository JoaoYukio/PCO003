

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Nov 08 08:18:52 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    37                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    39   000000                     
    40                           ; Version 2.40
    41                           ; Generated 17/11/2021 GMT
    42                           ; 
    43                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F4520 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75   000000                     
    76 ;; Function _changePORTD is unused but had its address taken
    77   000000                     
    78 ;; Function _inverte is unused but had its address taken
    79   000000                     
    80 ;; Function _initGenerico is unused but had its address taken
    81   000000                     
    82                           	psect	idataCOMRAM
    83   00149E                     __pidataCOMRAM:
    84                           	callstack 0
    85                           
    86                           ;initializer for main@F2405
    87   00149E  AE                 	db	low _initPORTAD
    88   00149F  14                 	db	high _initPORTAD
    89   0014A0  0000               	dw	0
    90   0014A2  0000               	dw	0
    91   0014A4  000F               	dw	15
    92                           
    93                           	psect	idataBANK0
    94   001484                     __pidataBANK0:
    95                           	callstack 0
    96                           
    97                           ;initializer for main@F2411
    98   001484  7C                 	db	low _countTime
    99   001485  0E                 	db	high _countTime
   100   001486  03E8               	dw	1000
   101   001488  0000               	dw	0
   102   00148A  000A               	dw	10
   103                           
   104                           ;initializer for main@F2408
   105   00148C  B6                 	db	low _updateSSD
   106   00148D  14                 	db	high _updateSSD
   107   00148E  0005               	dw	5
   108   001490  0000               	dw	0
   109   001492  0005               	dw	5
   110                           
   111                           	psect	smallconst
   112   000600                     __psmallconst:
   113                           	callstack 0
   114   000600  00                 	db	0
   115   000601                     _valor@ssd$F527:
   116                           	callstack 0
   117   000601  3F                 	db	63
   118   000602  06                 	db	6
   119   000603  5B                 	db	91
   120   000604  4F                 	db	79
   121   000605  66                 	db	102
   122   000606  6D                 	db	109
   123   000607  7D                 	db	125
   124   000608  07                 	db	7
   125   000609  7F                 	db	127
   126   00060A  6F                 	db	111
   127   00060B  77                 	db	119
   128   00060C  7C                 	db	124
   129   00060D  39                 	db	57
   130   00060E  5E                 	db	94
   131   00060F  79                 	db	121
   132   000610  71                 	db	113
   133   000611                     __end_of_valor@ssd$F527:
   134                           	callstack 0
   135   000000                     _SPBRG	set	4015
   136   000000                     _SPBRGH	set	4016
   137   000000                     _BAUDCON	set	4024
   138   000000                     _TXSTA	set	4012
   139   000000                     _RCREG	set	4014
   140   000000                     _TRISC	set	3988
   141   000000                     _TRISB	set	3987
   142   000000                     _PORTC	set	3970
   143   000000                     _PORTB	set	3969
   144   000000                     _PORTA	set	3968
   145   000000                     _ADRESL	set	4035
   146   000000                     _ADRESH	set	4036
   147   000000                     _PORTD	set	3971
   148   000000                     _TMR0L	set	4054
   149   000000                     _TMR0H	set	4055
   150   000000                     _INTCON	set	4082
   151   000000                     _TRISA	set	3986
   152   000000                     _PORTE	set	3972
   153   000000                     _TRISD	set	3989
   154   000000                     _PIR1	set	3998
   155   000000                     _CCP1CON	set	4029
   156   000000                     _CCPR1L	set	4030
   157   000000                     _TRISE	set	3990
   158   000000                     _ADCON2	set	4032
   159   000000                     _ADCON0	set	4034
   160   000000                     _RCON	set	4048
   161   000000                     _T0CON	set	4053
   162   000000                     _T2CON	set	4042
   163   000000                     _PR2	set	4043
   164   000000                     _RCSTA	set	4011
   165   000000                     _TXREG	set	4013
   166   000611  00                 	db	0	; dummy byte at the end
   167   000000                     
   168                           ; #config settings
   169                           
   170                           	psect	cinit
   171   00132A                     __pcinit:
   172                           	callstack 0
   173   00132A                     start_initialization:
   174                           	callstack 0
   175   00132A                     __initialization:
   176                           	callstack 0
   177                           
   178                           ; Initialize objects allocated to BANK0 (16 bytes)
   179                           ; load TBLPTR registers with __pidataBANK0
   180   00132A  0E84               	movlw	low __pidataBANK0
   181   00132C  6EF6               	movwf	tblptrl,c
   182   00132E  0E14               	movlw	high __pidataBANK0
   183   001330  6EF7               	movwf	tblptrh,c
   184   001332  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   185   001334  6EF8               	movwf	tblptru,c
   186   001336  EE00  F098         	lfsr	0,__pdataBANK0
   187   00133A  EE10 F010          	lfsr	1,16
   188   00133E                     copy_data0:
   189   00133E  0009               	tblrd		*+
   190   001340  CFF5 FFEE          	movff	tablat,postinc0
   191   001344  50E5               	movf	postdec1,w,c
   192   001346  50E1               	movf	fsr1l,w,c
   193   001348  E1FA               	bnz	copy_data0
   194                           
   195                           ; Initialize objects allocated to COMRAM (8 bytes)
   196                           ; load TBLPTR registers with __pidataCOMRAM
   197   00134A  0E9E               	movlw	low __pidataCOMRAM
   198   00134C  6EF6               	movwf	tblptrl,c
   199   00134E  0E14               	movlw	high __pidataCOMRAM
   200   001350  6EF7               	movwf	tblptrh,c
   201   001352  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   202   001354  6EF8               	movwf	tblptru,c
   203   001356  EE00  F059         	lfsr	0,__pdataCOMRAM
   204   00135A  EE10 F008          	lfsr	1,8
   205   00135E                     copy_data1:
   206   00135E  0009               	tblrd		*+
   207   001360  CFF5 FFEE          	movff	tablat,postinc0
   208   001364  50E5               	movf	postdec1,w,c
   209   001366  50E1               	movf	fsr1l,w,c
   210   001368  E1FA               	bnz	copy_data1
   211                           
   212                           ; Clear objects allocated to COMRAM (46 bytes)
   213   00136A  EE00  F001         	lfsr	0,__pbssCOMRAM
   214   00136E  0E2E               	movlw	46
   215   001370                     clear_0:
   216   001370  6AEE               	clrf	postinc0,c
   217   001372  06E8               	decf	wreg,f,c
   218   001374  E1FD               	bnz	clear_0
   219   001376                     end_of_initialization:
   220                           	callstack 0
   221   001376                     __end_of__initialization:
   222                           	callstack 0
   223   001376  9061               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   224   001378  9261               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   225   00137A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   226   00137C  6EF8               	movwf	tblptru,c
   227   00137E  0100               	movlb	0
   228   001380  EF5A  F009         	goto	_main	;jump to C main() function
   229                           
   230                           	psect	bssCOMRAM
   231   000001                     __pbssCOMRAM:
   232                           	callstack 0
   233   000001                     _pool:
   234                           	callstack 0
   235   000001                     	ds	20
   236   000015                     kpDebounce@valorAntigo:
   237                           	callstack 0
   238   000015                     	ds	2
   239   000017                     kpDebounce@valorNovo:
   240                           	callstack 0
   241   000017                     	ds	2
   242   000019                     _valor@keypad$F305:
   243                           	callstack 0
   244   000019                     	ds	2
   245   00001B                     _valor:
   246                           	callstack 0
   247   00001B                     	ds	2
   248   00001D                     _v3:
   249                           	callstack 0
   250   00001D                     	ds	1
   251   00001E                     _v2:
   252                           	callstack 0
   253   00001E                     	ds	1
   254   00001F                     _v1:
   255                           	callstack 0
   256   00001F                     	ds	1
   257   000020                     _v0:
   258                           	callstack 0
   259   000020                     	ds	1
   260   000021                     _display:
   261                           	callstack 0
   262   000021                     	ds	1
   263   000022                     _started:
   264                           	callstack 0
   265   000022                     	ds	1
   266   000023                     kpDebounce@tempo:
   267                           	callstack 0
   268   000023                     	ds	1
   269   000024                     _end:
   270                           	callstack 0
   271   000024                     	ds	1
   272   000025                     _start:
   273                           	callstack 0
   274   000025                     	ds	1
   275   000026                     _myself:
   276                           	callstack 0
   277   000026                     	ds	5
   278   00002B                     _my_funcs:
   279                           	callstack 0
   280   00002B                     	ds	4
   281                           
   282                           	psect	dataCOMRAM
   283   000059                     __pdataCOMRAM:
   284                           	callstack 0
   285   000059                     main@F2405:
   286                           	callstack 0
   287   000059                     	ds	8
   288                           
   289                           	psect	dataBANK0
   290   000098                     __pdataBANK0:
   291                           	callstack 0
   292   000098                     main@F2411:
   293                           	callstack 0
   294   000098                     	ds	8
   295   0000A0                     main@F2408:
   296                           	callstack 0
   297   0000A0                     	ds	8
   298                           
   299                           	psect	cstackBANK0
   300   000080                     __pcstackBANK0:
   301                           	callstack 0
   302   000080                     main@init_PD:
   303                           	callstack 0
   304                           
   305                           ; 8 bytes @ 0x0
   306   000080                     	ds	8
   307   000088                     main@SSDUpdate_proc:
   308                           	callstack 0
   309                           
   310                           ; 8 bytes @ 0x8
   311   000088                     	ds	8
   312   000090                     main@countTime_proc:
   313                           	callstack 0
   314                           
   315                           ; 8 bytes @ 0x10
   316   000090                     	ds	8
   317                           
   318                           	psect	cstackCOMRAM
   319   00002F                     __pcstackCOMRAM:
   320                           	callstack 0
   321   00002F                     ?i2___awmod:
   322                           	callstack 0
   323   00002F                     i2___awmod@dividend:
   324                           	callstack 0
   325                           
   326                           ; 2 bytes @ 0x0
   327   00002F                     	ds	2
   328   000031                     i2___awmod@divisor:
   329                           	callstack 0
   330                           
   331                           ; 2 bytes @ 0x2
   332   000031                     	ds	2
   333   000033                     i2___awmod@counter:
   334                           	callstack 0
   335                           
   336                           ; 1 bytes @ 0x4
   337   000033                     	ds	1
   338   000034                     i2___awmod@sign:
   339                           	callstack 0
   340                           
   341                           ; 1 bytes @ 0x5
   342   000034                     	ds	1
   343   000035                     
   344                           ; 1 bytes @ 0x6
   345   000035                     	ds	2
   346   000037                     KernelClock@proc:
   347                           	callstack 0
   348                           
   349                           ; 1 bytes @ 0x8
   350   000037                     	ds	1
   351   000038                     ??_ISR:
   352                           
   353                           ; 1 bytes @ 0x9
   354   000038                     	ds	6
   355   00003E                     ?___awdiv:
   356                           	callstack 0
   357   00003E                     ssdDigit@pos:
   358                           	callstack 0
   359   00003E                     digitalWrite@pin:
   360                           	callstack 0
   361   00003E                     pinMode@pin:
   362                           	callstack 0
   363   00003E                     ___awdiv@dividend:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0xF
   367   00003E                     	ds	1
   368   00003F                     ssdDigit@val:
   369                           	callstack 0
   370                           
   371                           ; 1 bytes @ 0x10
   372   00003F                     	ds	1
   373   000040                     digitalWrite@value:
   374                           	callstack 0
   375   000040                     pinMode@type:
   376                           	callstack 0
   377   000040                     ___awdiv@divisor:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0x11
   381   000040                     	ds	2
   382   000042                     ??_pinMode:
   383   000042                     ??_digitalWrite:
   384   000042                     ___awdiv@counter:
   385                           	callstack 0
   386                           
   387                           ; 1 bytes @ 0x13
   388   000042                     	ds	1
   389   000043                     ___awdiv@sign:
   390                           	callstack 0
   391                           
   392                           ; 1 bytes @ 0x14
   393   000043                     	ds	1
   394   000044                     ___awdiv@quotient:
   395                           	callstack 0
   396                           
   397                           ; 2 bytes @ 0x15
   398   000044                     	ds	2
   399   000046                     ?___awmod:
   400                           	callstack 0
   401   000046                     ___awmod@dividend:
   402                           	callstack 0
   403                           
   404                           ; 2 bytes @ 0x17
   405   000046                     	ds	2
   406   000048                     ___awmod@divisor:
   407                           	callstack 0
   408                           
   409                           ; 2 bytes @ 0x19
   410   000048                     	ds	2
   411   00004A                     ___awmod@counter:
   412                           	callstack 0
   413                           
   414                           ; 1 bytes @ 0x1B
   415   00004A                     	ds	1
   416   00004B                     ___awmod@sign:
   417                           	callstack 0
   418                           
   419                           ; 1 bytes @ 0x1C
   420   00004B                     	ds	1
   421   00004C                     countTime@dig:
   422                           	callstack 0
   423   00004C                     kernelAddProc@newProc:
   424                           	callstack 0
   425                           
   426                           ; 2 bytes @ 0x1D
   427   00004C                     	ds	2
   428   00004E                     ??_kernelAddProc:
   429                           
   430                           ; 1 bytes @ 0x1F
   431   00004E                     	ds	2
   432   000050                     ??_kernelLoop:
   433                           
   434                           ; 1 bytes @ 0x21
   435   000050                     	ds	5
   436   000055                     kernelLoop@tempProc:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x26
   440   000055                     	ds	2
   441   000057                     kernelLoop@next:
   442                           	callstack 0
   443                           
   444                           ; 1 bytes @ 0x28
   445   000057                     	ds	1
   446   000058                     kernelLoop@p:
   447                           	callstack 0
   448                           
   449                           ; 1 bytes @ 0x29
   450   000058                     	ds	1
   451   000059                     
   452                           ; 1 bytes @ 0x2A
   453 ;;
   454 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   455 ;;
   456 ;; *************** function _main *****************
   457 ;; Defined at:
   458 ;;		line 76 in file "main.c"
   459 ;; Parameters:    Size  Location     Type
   460 ;;		None
   461 ;; Auto vars:     Size  Location     Type
   462 ;;  countTime_pr    8   16[BANK0 ] struct .
   463 ;;  SSDUpdate_pr    8    8[BANK0 ] struct .
   464 ;;  init_PD         8    0[BANK0 ] struct .
   465 ;; Return value:  Size  Location     Type
   466 ;;                  1    wreg      void 
   467 ;; Registers used:
   468 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
   469 ;; Tracked objects:
   470 ;;		On entry : 0/0
   471 ;;		On exit  : 0/0
   472 ;;		Unchanged: 0/0
   473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   474 ;;      Params:         0       0       0       0       0       0       0
   475 ;;      Locals:         0      24       0       0       0       0       0
   476 ;;      Temps:          0       0       0       0       0       0       0
   477 ;;      Totals:         0      24       0       0       0       0       0
   478 ;;Total ram usage:       24 bytes
   479 ;; Hardware stack levels required when called: 7
   480 ;; This function calls:
   481 ;;		_kernelAddProc
   482 ;;		_kernelInit
   483 ;;		_kernelLoop
   484 ;;		_ssdInit
   485 ;;		_timerInit
   486 ;; This function is called by:
   487 ;;		Startup code after reset
   488 ;; This function uses a non-reentrant model
   489 ;;
   490                           
   491                           	psect	text0
   492   0012B4                     __ptext0:
   493                           	callstack 0
   494   0012B4                     _main:
   495                           	callstack 24
   496   0012B4                     
   497                           ;main.c: 80: process init_PD = {initPORTAD, 0, 0, 15};
   498   0012B4  EE20  F059         	lfsr	2,main@F2405
   499   0012B8  EE10  F080         	lfsr	1,main@init_PD
   500   0012BC  0E07               	movlw	7
   501   0012BE                     u3151:
   502   0012BE  CFDB FFE3          	movff	plusw2,plusw1
   503   0012C2  06E8               	decf	wreg,f,c
   504   0012C4  E2FC               	bc	u3151
   505                           
   506                           ;main.c: 87: process SSDUpdate_proc = {updateSSD, 5, 0, 5};
   507   0012C6  EE20  F0A0         	lfsr	2,main@F2408
   508   0012CA  EE10  F088         	lfsr	1,main@SSDUpdate_proc
   509   0012CE  0E07               	movlw	7
   510   0012D0                     u3161:
   511   0012D0  CFDB FFE3          	movff	plusw2,plusw1
   512   0012D4  06E8               	decf	wreg,f,c
   513   0012D6  E2FC               	bc	u3161
   514                           
   515                           ;main.c: 88: process countTime_proc = {countTime, 1000, 0, 10};
   516   0012D8  EE20  F098         	lfsr	2,main@F2411
   517   0012DC  EE10  F090         	lfsr	1,main@countTime_proc
   518   0012E0  0E07               	movlw	7
   519   0012E2                     u3171:
   520   0012E2  CFDB FFE3          	movff	plusw2,plusw1
   521   0012E6  06E8               	decf	wreg,f,c
   522   0012E8  E2FC               	bc	u3171
   523   0012EA                     
   524                           ;main.c: 90: timerInit();
   525   0012EA  EC53  F00A         	call	_timerInit	;wreg free
   526   0012EE                     
   527                           ;main.c: 91: ssdInit();
   528   0012EE  ECEE  F009         	call	_ssdInit	;wreg free
   529   0012F2                     
   530                           ;main.c: 96: kernelInit();
   531   0012F2  EC4A  F00A         	call	_kernelInit	;wreg free
   532   0012F6                     
   533                           ;main.c: 97: kernelAddProc(&init_PD);
   534   0012F6  0E80               	movlw	low main@init_PD
   535   0012F8  6E4C               	movwf	kernelAddProc@newProc^0,c
   536   0012FA  0E00               	movlw	high main@init_PD
   537   0012FC  6E4D               	movwf	(kernelAddProc@newProc+1)^0,c
   538   0012FE  ECBE  F008         	call	_kernelAddProc	;wreg free
   539   001302                     
   540                           ;main.c: 103: kernelAddProc(&SSDUpdate_proc);
   541   001302  0E88               	movlw	low main@SSDUpdate_proc
   542   001304  6E4C               	movwf	kernelAddProc@newProc^0,c
   543   001306  0E00               	movlw	high main@SSDUpdate_proc
   544   001308  6E4D               	movwf	(kernelAddProc@newProc+1)^0,c
   545   00130A  ECBE  F008         	call	_kernelAddProc	;wreg free
   546   00130E                     
   547                           ;main.c: 104: kernelAddProc(&countTime_proc);
   548   00130E  0E90               	movlw	low main@countTime_proc
   549   001310  6E4C               	movwf	kernelAddProc@newProc^0,c
   550   001312  0E00               	movlw	high main@countTime_proc
   551   001314  6E4D               	movwf	(kernelAddProc@newProc+1)^0,c
   552   001316  ECBE  F008         	call	_kernelAddProc	;wreg free
   553   00131A                     
   554                           ;main.c: 108: ((RCON) &= ~(1<<(7)));
   555   00131A  9ED0               	bcf	208,7,c	;volatile
   556   00131C                     
   557                           ;main.c: 109: ((INTCON) |= (1<<(5)));
   558   00131C  8AF2               	bsf	242,5,c	;volatile
   559   00131E                     
   560                           ;main.c: 110: ((INTCON) |= (1<<(7)));
   561   00131E  8EF2               	bsf	242,7,c	;volatile
   562   001320                     
   563                           ;main.c: 111: ((INTCON) |= (1<<(6)));
   564   001320  8CF2               	bsf	242,6,c	;volatile
   565   001322                     
   566                           ;main.c: 114: kernelLoop();
   567   001322  EC09  F003         	call	_kernelLoop	;wreg free
   568   001326  EF07  F000         	goto	start
   569   00132A                     __end_of_main:
   570                           	callstack 0
   571                           
   572 ;; *************** function _timerInit *****************
   573 ;; Defined at:
   574 ;;		line 51 in file "timer.c"
   575 ;; Parameters:    Size  Location     Type
   576 ;;		None
   577 ;; Auto vars:     Size  Location     Type
   578 ;;		None
   579 ;; Return value:  Size  Location     Type
   580 ;;                  1    wreg      void 
   581 ;; Registers used:
   582 ;;		wreg, status,2, status,0
   583 ;; Tracked objects:
   584 ;;		On entry : 0/0
   585 ;;		On exit  : 0/0
   586 ;;		Unchanged: 0/0
   587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   588 ;;      Params:         0       0       0       0       0       0       0
   589 ;;      Locals:         0       0       0       0       0       0       0
   590 ;;      Temps:          0       0       0       0       0       0       0
   591 ;;      Totals:         0       0       0       0       0       0       0
   592 ;;Total ram usage:        0 bytes
   593 ;; Hardware stack levels used: 1
   594 ;; Hardware stack levels required when called: 3
   595 ;; This function calls:
   596 ;;		Nothing
   597 ;; This function is called by:
   598 ;;		_main
   599 ;; This function uses a non-reentrant model
   600 ;;
   601                           
   602                           	psect	text1
   603   0014A6                     __ptext1:
   604                           	callstack 0
   605   0014A6                     _timerInit:
   606                           	callstack 27
   607   0014A6                     
   608                           ;timer.c: 53: T0CON = 0b00001000;
   609   0014A6  0E08               	movlw	8
   610   0014A8  6ED5               	movwf	213,c	;volatile
   611   0014AA                     
   612                           ;timer.c: 54: ((T0CON) |= (1<<(7)));
   613   0014AA  8ED5               	bsf	213,7,c	;volatile
   614   0014AC  0012               	return		;funcret
   615   0014AE                     __end_of_timerInit:
   616                           	callstack 0
   617                           
   618 ;; *************** function _ssdInit *****************
   619 ;; Defined at:
   620 ;;		line 101 in file "ssd.c"
   621 ;; Parameters:    Size  Location     Type
   622 ;;		None
   623 ;; Auto vars:     Size  Location     Type
   624 ;;		None
   625 ;; Return value:  Size  Location     Type
   626 ;;                  1    wreg      void 
   627 ;; Registers used:
   628 ;;		wreg, status,2, status,0, cstack
   629 ;; Tracked objects:
   630 ;;		On entry : 0/0
   631 ;;		On exit  : 0/0
   632 ;;		Unchanged: 0/0
   633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   634 ;;      Params:         0       0       0       0       0       0       0
   635 ;;      Locals:         0       0       0       0       0       0       0
   636 ;;      Temps:          0       0       0       0       0       0       0
   637 ;;      Totals:         0       0       0       0       0       0       0
   638 ;;Total ram usage:        0 bytes
   639 ;; Hardware stack levels used: 1
   640 ;; Hardware stack levels required when called: 4
   641 ;; This function calls:
   642 ;;		_pinMode
   643 ;; This function is called by:
   644 ;;		_main
   645 ;; This function uses a non-reentrant model
   646 ;;
   647                           
   648                           	psect	text2
   649   0013DC                     __ptext2:
   650                           	callstack 0
   651   0013DC                     _ssdInit:
   652                           	callstack 26
   653   0013DC                     
   654                           ;ssd.c: 103: pinMode(PIN_A2, 0);
   655   0013DC  0E00               	movlw	0
   656   0013DE  6E3F               	movwf	(pinMode@pin+1)^0,c
   657   0013E0  0E02               	movlw	2
   658   0013E2  6E3E               	movwf	pinMode@pin^0,c
   659   0013E4  0E00               	movlw	0
   660   0013E6  6E41               	movwf	(pinMode@type+1)^0,c
   661   0013E8  0E00               	movlw	0
   662   0013EA  6E40               	movwf	pinMode@type^0,c
   663   0013EC  EC52  F004         	call	_pinMode	;wreg free
   664                           
   665                           ;ssd.c: 104: pinMode(PIN_A3, 0);
   666   0013F0  0E00               	movlw	0
   667   0013F2  6E3F               	movwf	(pinMode@pin+1)^0,c
   668   0013F4  0E03               	movlw	3
   669   0013F6  6E3E               	movwf	pinMode@pin^0,c
   670   0013F8  0E00               	movlw	0
   671   0013FA  6E41               	movwf	(pinMode@type+1)^0,c
   672   0013FC  0E00               	movlw	0
   673   0013FE  6E40               	movwf	pinMode@type^0,c
   674   001400  EC52  F004         	call	_pinMode	;wreg free
   675                           
   676                           ;ssd.c: 105: pinMode(PIN_A4, 0);
   677   001404  0E00               	movlw	0
   678   001406  6E3F               	movwf	(pinMode@pin+1)^0,c
   679   001408  0E04               	movlw	4
   680   00140A  6E3E               	movwf	pinMode@pin^0,c
   681   00140C  0E00               	movlw	0
   682   00140E  6E41               	movwf	(pinMode@type+1)^0,c
   683   001410  0E00               	movlw	0
   684   001412  6E40               	movwf	pinMode@type^0,c
   685   001414  EC52  F004         	call	_pinMode	;wreg free
   686                           
   687                           ;ssd.c: 106: pinMode(PIN_A5, 0);
   688   001418  0E00               	movlw	0
   689   00141A  6E3F               	movwf	(pinMode@pin+1)^0,c
   690   00141C  0E05               	movlw	5
   691   00141E  6E3E               	movwf	pinMode@pin^0,c
   692   001420  0E00               	movlw	0
   693   001422  6E41               	movwf	(pinMode@type+1)^0,c
   694   001424  0E00               	movlw	0
   695   001426  6E40               	movwf	pinMode@type^0,c
   696   001428  EC52  F004         	call	_pinMode	;wreg free
   697   00142C                     
   698                           ;ssd.c: 109: TRISD = 0x00;
   699   00142C  0E00               	movlw	0
   700   00142E  6E95               	movwf	149,c	;volatile
   701   001430  0012               	return		;funcret
   702   001432                     __end_of_ssdInit:
   703                           	callstack 0
   704                           
   705 ;; *************** function _pinMode *****************
   706 ;; Defined at:
   707 ;;		line 54 in file "io.c"
   708 ;; Parameters:    Size  Location     Type
   709 ;;  pin             2   15[COMRAM] int 
   710 ;;  type            2   17[COMRAM] int 
   711 ;; Auto vars:     Size  Location     Type
   712 ;;		None
   713 ;; Return value:  Size  Location     Type
   714 ;;                  1    wreg      void 
   715 ;; Registers used:
   716 ;;		wreg, status,2, status,0
   717 ;; Tracked objects:
   718 ;;		On entry : 0/0
   719 ;;		On exit  : 0/0
   720 ;;		Unchanged: 0/0
   721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   722 ;;      Params:         4       0       0       0       0       0       0
   723 ;;      Locals:         0       0       0       0       0       0       0
   724 ;;      Temps:          2       0       0       0       0       0       0
   725 ;;      Totals:         6       0       0       0       0       0       0
   726 ;;Total ram usage:        6 bytes
   727 ;; Hardware stack levels used: 1
   728 ;; Hardware stack levels required when called: 3
   729 ;; This function calls:
   730 ;;		Nothing
   731 ;; This function is called by:
   732 ;;		_ssdInit
   733 ;;		_adcInit
   734 ;;		_lcdInit
   735 ;;		_i2cInit
   736 ;;		_read_SCL
   737 ;;		_read_SDA
   738 ;;		_clear_SCL
   739 ;;		_clear_SDA
   740 ;; This function uses a non-reentrant model
   741 ;;
   742                           
   743                           	psect	text3
   744   0008A4                     __ptext3:
   745                           	callstack 0
   746   0008A4                     _pinMode:
   747                           	callstack 26
   748   0008A4                     
   749                           ;io.c: 56: if(pin <8){
   750   0008A4  BE3F               	btfsc	(pinMode@pin+1)^0,7,c
   751   0008A6  EF60  F004         	goto	u2640
   752   0008AA  503F               	movf	(pinMode@pin+1)^0,w,c
   753   0008AC  E107               	bnz	u2641
   754   0008AE  0E08               	movlw	8
   755   0008B0  5C3E               	subwf	pinMode@pin^0,w,c
   756   0008B2  B0D8               	btfsc	status,0,c
   757   0008B4  EF5E  F004         	goto	u2641
   758   0008B8  EF60  F004         	goto	u2640
   759   0008BC                     u2641:
   760   0008BC  EF8A  F004         	goto	l2883
   761   0008C0                     u2640:
   762   0008C0                     
   763                           ;io.c: 57: if (type){ ((TRISA) |= (1<<(pin)));}
   764   0008C0  5040               	movf	pinMode@type^0,w,c
   765   0008C2  1041               	iorwf	(pinMode@type+1)^0,w,c
   766   0008C4  B4D8               	btfsc	status,2,c
   767   0008C6  EF67  F004         	goto	u2651
   768   0008CA  EF69  F004         	goto	u2650
   769   0008CE                     u2651:
   770   0008CE  EF79  F004         	goto	l2881
   771   0008D2                     u2650:
   772   0008D2  C03E  F042         	movff	pinMode@pin,??_pinMode
   773   0008D6  0E01               	movlw	1
   774   0008D8  6E43               	movwf	(??_pinMode+1)^0,c
   775   0008DA  2A42               	incf	??_pinMode^0,f,c
   776   0008DC  EF72  F004         	goto	u2664
   777   0008E0                     u2665:
   778   0008E0  90D8               	bcf	status,0,c
   779   0008E2  3643               	rlcf	(??_pinMode+1)^0,f,c
   780   0008E4                     u2664:
   781   0008E4  2E42               	decfsz	??_pinMode^0,f,c
   782   0008E6  EF70  F004         	goto	u2665
   783   0008EA  5043               	movf	(??_pinMode+1)^0,w,c
   784   0008EC  1292               	iorwf	146,f,c	;volatile
   785   0008EE  EF78  F005         	goto	l245
   786   0008F2                     l2881:
   787                           
   788                           ;io.c: 58: else{ ((TRISA) &= ~(1<<(pin)));}
   789   0008F2  C03E  F042         	movff	pinMode@pin,??_pinMode
   790   0008F6  0E01               	movlw	1
   791   0008F8  6E43               	movwf	(??_pinMode+1)^0,c
   792   0008FA  2A42               	incf	??_pinMode^0,f,c
   793   0008FC  EF82  F004         	goto	u2674
   794   000900                     u2675:
   795   000900  90D8               	bcf	status,0,c
   796   000902  3643               	rlcf	(??_pinMode+1)^0,f,c
   797   000904                     u2674:
   798   000904  2E42               	decfsz	??_pinMode^0,f,c
   799   000906  EF80  F004         	goto	u2675
   800   00090A  5043               	movf	(??_pinMode+1)^0,w,c
   801   00090C  0AFF               	xorlw	255
   802   00090E  1692               	andwf	146,f,c	;volatile
   803   000910  EF78  F005         	goto	l245
   804   000914                     l2883:
   805   000914  BE3F               	btfsc	(pinMode@pin+1)^0,7,c
   806   000916  EF98  F004         	goto	u2680
   807   00091A  503F               	movf	(pinMode@pin+1)^0,w,c
   808   00091C  E107               	bnz	u2681
   809   00091E  0E10               	movlw	16
   810   000920  5C3E               	subwf	pinMode@pin^0,w,c
   811   000922  B0D8               	btfsc	status,0,c
   812   000924  EF96  F004         	goto	u2681
   813   000928  EF98  F004         	goto	u2680
   814   00092C                     u2681:
   815   00092C  EFC6  F004         	goto	l2891
   816   000930                     u2680:
   817   000930                     
   818                           ;io.c: 60: if (type){ ((TRISB) |= (1<<(pin-8)));}
   819   000930  5040               	movf	pinMode@type^0,w,c
   820   000932  1041               	iorwf	(pinMode@type+1)^0,w,c
   821   000934  B4D8               	btfsc	status,2,c
   822   000936  EF9F  F004         	goto	u2691
   823   00093A  EFA1  F004         	goto	u2690
   824   00093E                     u2691:
   825   00093E  EFB3  F004         	goto	l2889
   826   000942                     u2690:
   827   000942  C03E  F042         	movff	pinMode@pin,??_pinMode
   828   000946  0EF8               	movlw	-8
   829   000948  2642               	addwf	??_pinMode^0,f,c
   830   00094A  0E01               	movlw	1
   831   00094C  6E43               	movwf	(??_pinMode+1)^0,c
   832   00094E  2A42               	incf	??_pinMode^0,f,c
   833   000950  EFAC  F004         	goto	u2704
   834   000954                     u2705:
   835   000954  90D8               	bcf	status,0,c
   836   000956  3643               	rlcf	(??_pinMode+1)^0,f,c
   837   000958                     u2704:
   838   000958  2E42               	decfsz	??_pinMode^0,f,c
   839   00095A  EFAA  F004         	goto	u2705
   840   00095E  5043               	movf	(??_pinMode+1)^0,w,c
   841   000960  1293               	iorwf	147,f,c	;volatile
   842   000962  EF78  F005         	goto	l245
   843   000966                     l2889:
   844                           
   845                           ;io.c: 61: else{ ((TRISB) &= ~(1<<(pin-8)));}
   846   000966  C03E  F042         	movff	pinMode@pin,??_pinMode
   847   00096A  0EF8               	movlw	-8
   848   00096C  2642               	addwf	??_pinMode^0,f,c
   849   00096E  0E01               	movlw	1
   850   000970  6E43               	movwf	(??_pinMode+1)^0,c
   851   000972  2A42               	incf	??_pinMode^0,f,c
   852   000974  EFBE  F004         	goto	u2714
   853   000978                     u2715:
   854   000978  90D8               	bcf	status,0,c
   855   00097A  3643               	rlcf	(??_pinMode+1)^0,f,c
   856   00097C                     u2714:
   857   00097C  2E42               	decfsz	??_pinMode^0,f,c
   858   00097E  EFBC  F004         	goto	u2715
   859   000982  5043               	movf	(??_pinMode+1)^0,w,c
   860   000984  0AFF               	xorlw	255
   861   000986  1693               	andwf	147,f,c	;volatile
   862   000988  EF78  F005         	goto	l245
   863   00098C                     l2891:
   864   00098C  BE3F               	btfsc	(pinMode@pin+1)^0,7,c
   865   00098E  EFD4  F004         	goto	u2720
   866   000992  503F               	movf	(pinMode@pin+1)^0,w,c
   867   000994  E107               	bnz	u2721
   868   000996  0E18               	movlw	24
   869   000998  5C3E               	subwf	pinMode@pin^0,w,c
   870   00099A  B0D8               	btfsc	status,0,c
   871   00099C  EFD2  F004         	goto	u2721
   872   0009A0  EFD4  F004         	goto	u2720
   873   0009A4                     u2721:
   874   0009A4  EF02  F005         	goto	l2899
   875   0009A8                     u2720:
   876   0009A8                     
   877                           ;io.c: 63: if (type){ ((TRISC) |= (1<<(pin-16)));}
   878   0009A8  5040               	movf	pinMode@type^0,w,c
   879   0009AA  1041               	iorwf	(pinMode@type+1)^0,w,c
   880   0009AC  B4D8               	btfsc	status,2,c
   881   0009AE  EFDB  F004         	goto	u2731
   882   0009B2  EFDD  F004         	goto	u2730
   883   0009B6                     u2731:
   884   0009B6  EFEF  F004         	goto	l2897
   885   0009BA                     u2730:
   886   0009BA  C03E  F042         	movff	pinMode@pin,??_pinMode
   887   0009BE  0EF0               	movlw	-16
   888   0009C0  2642               	addwf	??_pinMode^0,f,c
   889   0009C2  0E01               	movlw	1
   890   0009C4  6E43               	movwf	(??_pinMode+1)^0,c
   891   0009C6  2A42               	incf	??_pinMode^0,f,c
   892   0009C8  EFE8  F004         	goto	u2744
   893   0009CC                     u2745:
   894   0009CC  90D8               	bcf	status,0,c
   895   0009CE  3643               	rlcf	(??_pinMode+1)^0,f,c
   896   0009D0                     u2744:
   897   0009D0  2E42               	decfsz	??_pinMode^0,f,c
   898   0009D2  EFE6  F004         	goto	u2745
   899   0009D6  5043               	movf	(??_pinMode+1)^0,w,c
   900   0009D8  1294               	iorwf	148,f,c	;volatile
   901   0009DA  EF78  F005         	goto	l245
   902   0009DE                     l2897:
   903                           
   904                           ;io.c: 64: else{ ((TRISC) &= ~(1<<(pin-16)));}
   905   0009DE  C03E  F042         	movff	pinMode@pin,??_pinMode
   906   0009E2  0EF0               	movlw	-16
   907   0009E4  2642               	addwf	??_pinMode^0,f,c
   908   0009E6  0E01               	movlw	1
   909   0009E8  6E43               	movwf	(??_pinMode+1)^0,c
   910   0009EA  2A42               	incf	??_pinMode^0,f,c
   911   0009EC  EFFA  F004         	goto	u2754
   912   0009F0                     u2755:
   913   0009F0  90D8               	bcf	status,0,c
   914   0009F2  3643               	rlcf	(??_pinMode+1)^0,f,c
   915   0009F4                     u2754:
   916   0009F4  2E42               	decfsz	??_pinMode^0,f,c
   917   0009F6  EFF8  F004         	goto	u2755
   918   0009FA  5043               	movf	(??_pinMode+1)^0,w,c
   919   0009FC  0AFF               	xorlw	255
   920   0009FE  1694               	andwf	148,f,c	;volatile
   921   000A00  EF78  F005         	goto	l245
   922   000A04                     l2899:
   923   000A04  BE3F               	btfsc	(pinMode@pin+1)^0,7,c
   924   000A06  EF10  F005         	goto	u2760
   925   000A0A  503F               	movf	(pinMode@pin+1)^0,w,c
   926   000A0C  E107               	bnz	u2761
   927   000A0E  0E20               	movlw	32
   928   000A10  5C3E               	subwf	pinMode@pin^0,w,c
   929   000A12  B0D8               	btfsc	status,0,c
   930   000A14  EF0E  F005         	goto	u2761
   931   000A18  EF10  F005         	goto	u2760
   932   000A1C                     u2761:
   933   000A1C  EF3E  F005         	goto	l2907
   934   000A20                     u2760:
   935   000A20                     
   936                           ;io.c: 66: if (type){ ((TRISD) |= (1<<(pin-24)));}
   937   000A20  5040               	movf	pinMode@type^0,w,c
   938   000A22  1041               	iorwf	(pinMode@type+1)^0,w,c
   939   000A24  B4D8               	btfsc	status,2,c
   940   000A26  EF17  F005         	goto	u2771
   941   000A2A  EF19  F005         	goto	u2770
   942   000A2E                     u2771:
   943   000A2E  EF2B  F005         	goto	l2905
   944   000A32                     u2770:
   945   000A32  C03E  F042         	movff	pinMode@pin,??_pinMode
   946   000A36  0EE8               	movlw	-24
   947   000A38  2642               	addwf	??_pinMode^0,f,c
   948   000A3A  0E01               	movlw	1
   949   000A3C  6E43               	movwf	(??_pinMode+1)^0,c
   950   000A3E  2A42               	incf	??_pinMode^0,f,c
   951   000A40  EF24  F005         	goto	u2784
   952   000A44                     u2785:
   953   000A44  90D8               	bcf	status,0,c
   954   000A46  3643               	rlcf	(??_pinMode+1)^0,f,c
   955   000A48                     u2784:
   956   000A48  2E42               	decfsz	??_pinMode^0,f,c
   957   000A4A  EF22  F005         	goto	u2785
   958   000A4E  5043               	movf	(??_pinMode+1)^0,w,c
   959   000A50  1295               	iorwf	149,f,c	;volatile
   960   000A52  EF78  F005         	goto	l245
   961   000A56                     l2905:
   962                           
   963                           ;io.c: 67: else{ ((TRISD) &= ~(1<<(pin-24)));}
   964   000A56  C03E  F042         	movff	pinMode@pin,??_pinMode
   965   000A5A  0EE8               	movlw	-24
   966   000A5C  2642               	addwf	??_pinMode^0,f,c
   967   000A5E  0E01               	movlw	1
   968   000A60  6E43               	movwf	(??_pinMode+1)^0,c
   969   000A62  2A42               	incf	??_pinMode^0,f,c
   970   000A64  EF36  F005         	goto	u2794
   971   000A68                     u2795:
   972   000A68  90D8               	bcf	status,0,c
   973   000A6A  3643               	rlcf	(??_pinMode+1)^0,f,c
   974   000A6C                     u2794:
   975   000A6C  2E42               	decfsz	??_pinMode^0,f,c
   976   000A6E  EF34  F005         	goto	u2795
   977   000A72  5043               	movf	(??_pinMode+1)^0,w,c
   978   000A74  0AFF               	xorlw	255
   979   000A76  1695               	andwf	149,f,c	;volatile
   980   000A78  EF78  F005         	goto	l245
   981   000A7C                     l2907:
   982   000A7C  BE3F               	btfsc	(pinMode@pin+1)^0,7,c
   983   000A7E  EF4C  F005         	goto	u2800
   984   000A82  503F               	movf	(pinMode@pin+1)^0,w,c
   985   000A84  E107               	bnz	u2801
   986   000A86  0E28               	movlw	40
   987   000A88  5C3E               	subwf	pinMode@pin^0,w,c
   988   000A8A  B0D8               	btfsc	status,0,c
   989   000A8C  EF4A  F005         	goto	u2801
   990   000A90  EF4C  F005         	goto	u2800
   991   000A94                     u2801:
   992   000A94  EF78  F005         	goto	l245
   993   000A98                     u2800:
   994   000A98                     
   995                           ;io.c: 69: if (type){ ((TRISE) |= (1<<(pin-32)));}
   996   000A98  5040               	movf	pinMode@type^0,w,c
   997   000A9A  1041               	iorwf	(pinMode@type+1)^0,w,c
   998   000A9C  B4D8               	btfsc	status,2,c
   999   000A9E  EF53  F005         	goto	u2811
  1000   000AA2  EF55  F005         	goto	u2810
  1001   000AA6                     u2811:
  1002   000AA6  EF67  F005         	goto	l2913
  1003   000AAA                     u2810:
  1004   000AAA  C03E  F042         	movff	pinMode@pin,??_pinMode
  1005   000AAE  0EE0               	movlw	-32
  1006   000AB0  2642               	addwf	??_pinMode^0,f,c
  1007   000AB2  0E01               	movlw	1
  1008   000AB4  6E43               	movwf	(??_pinMode+1)^0,c
  1009   000AB6  2A42               	incf	??_pinMode^0,f,c
  1010   000AB8  EF60  F005         	goto	u2824
  1011   000ABC                     u2825:
  1012   000ABC  90D8               	bcf	status,0,c
  1013   000ABE  3643               	rlcf	(??_pinMode+1)^0,f,c
  1014   000AC0                     u2824:
  1015   000AC0  2E42               	decfsz	??_pinMode^0,f,c
  1016   000AC2  EF5E  F005         	goto	u2825
  1017   000AC6  5043               	movf	(??_pinMode+1)^0,w,c
  1018   000AC8  1296               	iorwf	150,f,c	;volatile
  1019   000ACA  EF78  F005         	goto	l245
  1020   000ACE                     l2913:
  1021                           
  1022                           ;io.c: 70: else{ ((TRISE) &= ~(1<<(pin-32)));}
  1023   000ACE  C03E  F042         	movff	pinMode@pin,??_pinMode
  1024   000AD2  0EE0               	movlw	-32
  1025   000AD4  2642               	addwf	??_pinMode^0,f,c
  1026   000AD6  0E01               	movlw	1
  1027   000AD8  6E43               	movwf	(??_pinMode+1)^0,c
  1028   000ADA  2A42               	incf	??_pinMode^0,f,c
  1029   000ADC  EF72  F005         	goto	u2834
  1030   000AE0                     u2835:
  1031   000AE0  90D8               	bcf	status,0,c
  1032   000AE2  3643               	rlcf	(??_pinMode+1)^0,f,c
  1033   000AE4                     u2834:
  1034   000AE4  2E42               	decfsz	??_pinMode^0,f,c
  1035   000AE6  EF70  F005         	goto	u2835
  1036   000AEA  5043               	movf	(??_pinMode+1)^0,w,c
  1037   000AEC  0AFF               	xorlw	255
  1038   000AEE  1696               	andwf	150,f,c	;volatile
  1039   000AF0                     l245:
  1040   000AF0  0012               	return		;funcret
  1041   000AF2                     __end_of_pinMode:
  1042                           	callstack 0
  1043                           
  1044 ;; *************** function _kernelLoop *****************
  1045 ;; Defined at:
  1046 ;;		line 25 in file "kernel.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;		None
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;  tempProc        2   38[COMRAM] PTR struct .
  1051 ;;		 -> main@countTime_proc(8), main@SSDUpdate_proc(8), main@init_PD(8), 
  1052 ;;  p               1   41[COMRAM] unsigned char 
  1053 ;;  next            1   40[COMRAM] unsigned char 
  1054 ;; Return value:  Size  Location     Type
  1055 ;;                  1    wreg      void 
  1056 ;; Registers used:
  1057 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  1058 ;; Tracked objects:
  1059 ;;		On entry : 0/0
  1060 ;;		On exit  : 0/0
  1061 ;;		Unchanged: 0/0
  1062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1063 ;;      Params:         0       0       0       0       0       0       0
  1064 ;;      Locals:         4       0       0       0       0       0       0
  1065 ;;      Temps:          5       0       0       0       0       0       0
  1066 ;;      Totals:         9       0       0       0       0       0       0
  1067 ;;Total ram usage:        9 bytes
  1068 ;; Hardware stack levels used: 1
  1069 ;; Hardware stack levels required when called: 6
  1070 ;; This function calls:
  1071 ;;		___awmod
  1072 ;;		_countTime
  1073 ;;		_initPORTAD
  1074 ;;		_kernelAddProc
  1075 ;;		_updateSSD
  1076 ;; This function is called by:
  1077 ;;		_main
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           
  1081                           	psect	text4
  1082   000612                     __ptext4:
  1083                           	callstack 0
  1084   000612                     _kernelLoop:
  1085                           	callstack 24
  1086   000612                     l81:
  1087   000612                     
  1088                           ;kernel.c: 30: if (start != end) {
  1089   000612  5024               	movf	_end^0,w,c
  1090   000614  1825               	xorwf	_start^0,w,c
  1091   000616  B4D8               	btfsc	status,2,c
  1092   000618  EF10  F003         	goto	u2961
  1093   00061C  EF12  F003         	goto	u2960
  1094   000620                     u2961:
  1095   000620  EF09  F003         	goto	l81
  1096   000624                     u2960:
  1097   000624                     
  1098                           ;kernel.c: 33: next = start;
  1099   000624  C025  F057         	movff	_start,kernelLoop@next
  1100                           
  1101                           ;kernel.c: 39: for (p = start; p != end; p = (p + 1) % 10) {
  1102   000628  C025  F058         	movff	_start,kernelLoop@p
  1103   00062C  EFBC  F003         	goto	l3003
  1104   000630                     l2989:
  1105                           
  1106                           ;kernel.c: 50: if((pool[p]->start <= 0 && pool[next]->start <= 0) && (pool[p]->prio > po
      +                          ol[next]->prio))next = p;
  1107   000630  5058               	movf	kernelLoop@p^0,w,c
  1108   000632  0D02               	mullw	2
  1109   000634  0E01               	movlw	low _pool
  1110   000636  24F3               	addwf	243,w,c
  1111   000638  6ED9               	movwf	fsr2l,c
  1112   00063A  0E00               	movlw	high _pool
  1113   00063C  20F4               	addwfc	prodh,w,c
  1114   00063E  6EDA               	movwf	fsr2h,c
  1115   000640  EE10 F004          	lfsr	1,4
  1116   000644  50DE               	movf	postinc2,w,c
  1117   000646  26E1               	addwf	fsr1l,f,c
  1118   000648  50DD               	movf	postdec2,w,c
  1119   00064A  22E2               	addwfc	fsr1h,f,c
  1120   00064C  0E01               	movlw	1
  1121   00064E  BEE3               	btfsc	plusw1,7,c
  1122   000650  EF35  F003         	goto	u2970
  1123   000654  0E01               	movlw	1
  1124   000656  50E3               	movf	plusw1,w,c
  1125   000658  E106               	bnz	u2971
  1126   00065A  04E6               	decf	postinc1,w,c
  1127   00065C  B0D8               	btfsc	status,0,c
  1128   00065E  EF33  F003         	goto	u2971
  1129   000662  EF35  F003         	goto	u2970
  1130   000666                     u2971:
  1131   000666  EF81  F003         	goto	l2997
  1132   00066A                     u2970:
  1133   00066A  5057               	movf	kernelLoop@next^0,w,c
  1134   00066C  0D02               	mullw	2
  1135   00066E  0E01               	movlw	low _pool
  1136   000670  24F3               	addwf	243,w,c
  1137   000672  6ED9               	movwf	fsr2l,c
  1138   000674  0E00               	movlw	high _pool
  1139   000676  20F4               	addwfc	prodh,w,c
  1140   000678  6EDA               	movwf	fsr2h,c
  1141   00067A  EE10 F004          	lfsr	1,4
  1142   00067E  50DE               	movf	postinc2,w,c
  1143   000680  26E1               	addwf	fsr1l,f,c
  1144   000682  50DD               	movf	postdec2,w,c
  1145   000684  22E2               	addwfc	fsr1h,f,c
  1146   000686  0E01               	movlw	1
  1147   000688  BEE3               	btfsc	plusw1,7,c
  1148   00068A  EF52  F003         	goto	u2980
  1149   00068E  0E01               	movlw	1
  1150   000690  50E3               	movf	plusw1,w,c
  1151   000692  E106               	bnz	u2981
  1152   000694  04E6               	decf	postinc1,w,c
  1153   000696  B0D8               	btfsc	status,0,c
  1154   000698  EF50  F003         	goto	u2981
  1155   00069C  EF52  F003         	goto	u2980
  1156   0006A0                     u2981:
  1157   0006A0  EF81  F003         	goto	l2997
  1158   0006A4                     u2980:
  1159   0006A4  5058               	movf	kernelLoop@p^0,w,c
  1160   0006A6  0D02               	mullw	2
  1161   0006A8  0E01               	movlw	low _pool
  1162   0006AA  24F3               	addwf	243,w,c
  1163   0006AC  6ED9               	movwf	fsr2l,c
  1164   0006AE  0E00               	movlw	high _pool
  1165   0006B0  20F4               	addwfc	prodh,w,c
  1166   0006B2  6EDA               	movwf	fsr2h,c
  1167   0006B4  EE10 F006          	lfsr	1,6
  1168   0006B8  50DE               	movf	postinc2,w,c
  1169   0006BA  26E1               	addwf	fsr1l,f,c
  1170   0006BC  50DD               	movf	postdec2,w,c
  1171   0006BE  22E2               	addwfc	fsr1h,f,c
  1172   0006C0  5057               	movf	kernelLoop@next^0,w,c
  1173   0006C2  0D02               	mullw	2
  1174   0006C4  0E01               	movlw	low _pool
  1175   0006C6  24F3               	addwf	243,w,c
  1176   0006C8  6ED9               	movwf	fsr2l,c
  1177   0006CA  0E00               	movlw	high _pool
  1178   0006CC  20F4               	addwfc	prodh,w,c
  1179   0006CE  6EDA               	movwf	fsr2h,c
  1180   0006D0  EE00 F006          	lfsr	0,6
  1181   0006D4  50DE               	movf	postinc2,w,c
  1182   0006D6  26E9               	addwf	fsr0l,f,c
  1183   0006D8  50DD               	movf	postdec2,w,c
  1184   0006DA  22EA               	addwfc	fsr0h,f,c
  1185   0006DC  50E6               	movf	postinc1,w,c
  1186   0006DE  5CEE               	subwf	postinc0,w,c
  1187   0006E0  50EE               	movf	postinc0,w,c
  1188   0006E2  0A80               	xorlw	128
  1189   0006E4  6E54               	movwf	(??_kernelLoop+4)^0,c
  1190   0006E6  50E6               	movf	postinc1,w,c
  1191   0006E8  0A80               	xorlw	128
  1192   0006EA  5854               	subwfb	(??_kernelLoop+4)^0,w,c
  1193   0006EC  B0D8               	btfsc	status,0,c
  1194   0006EE  EF7B  F003         	goto	u2991
  1195   0006F2  EF7D  F003         	goto	u2990
  1196   0006F6                     u2991:
  1197   0006F6  EF81  F003         	goto	l2997
  1198   0006FA                     u2990:
  1199   0006FA                     l2995:
  1200   0006FA  C058  F057         	movff	kernelLoop@p,kernelLoop@next
  1201   0006FE  EFAE  F003         	goto	l3001
  1202   000702                     l2997:
  1203                           
  1204                           ;kernel.c: 51: else if(pool[p]->start < pool[next]->start)next = p;
  1205   000702  5057               	movf	kernelLoop@next^0,w,c
  1206   000704  0D02               	mullw	2
  1207   000706  0E01               	movlw	low _pool
  1208   000708  24F3               	addwf	243,w,c
  1209   00070A  6ED9               	movwf	fsr2l,c
  1210   00070C  0E00               	movlw	high _pool
  1211   00070E  20F4               	addwfc	prodh,w,c
  1212   000710  6EDA               	movwf	fsr2h,c
  1213   000712  EE10 F004          	lfsr	1,4
  1214   000716  50DE               	movf	postinc2,w,c
  1215   000718  26E1               	addwf	fsr1l,f,c
  1216   00071A  50DD               	movf	postdec2,w,c
  1217   00071C  22E2               	addwfc	fsr1h,f,c
  1218   00071E  5058               	movf	kernelLoop@p^0,w,c
  1219   000720  0D02               	mullw	2
  1220   000722  0E01               	movlw	low _pool
  1221   000724  24F3               	addwf	243,w,c
  1222   000726  6ED9               	movwf	fsr2l,c
  1223   000728  0E00               	movlw	high _pool
  1224   00072A  20F4               	addwfc	prodh,w,c
  1225   00072C  6EDA               	movwf	fsr2h,c
  1226   00072E  EE00 F004          	lfsr	0,4
  1227   000732  50DE               	movf	postinc2,w,c
  1228   000734  26E9               	addwf	fsr0l,f,c
  1229   000736  50DD               	movf	postdec2,w,c
  1230   000738  22EA               	addwfc	fsr0h,f,c
  1231   00073A  50E6               	movf	postinc1,w,c
  1232   00073C  5CEE               	subwf	postinc0,w,c
  1233   00073E  50EE               	movf	postinc0,w,c
  1234   000740  0A80               	xorlw	128
  1235   000742  6E54               	movwf	(??_kernelLoop+4)^0,c
  1236   000744  50E6               	movf	postinc1,w,c
  1237   000746  0A80               	xorlw	128
  1238   000748  5854               	subwfb	(??_kernelLoop+4)^0,w,c
  1239   00074A  B0D8               	btfsc	status,0,c
  1240   00074C  EFAA  F003         	goto	u3001
  1241   000750  EFAC  F003         	goto	u3000
  1242   000754                     u3001:
  1243   000754  EFAE  F003         	goto	l3001
  1244   000758                     u3000:
  1245   000758  EF7D  F003         	goto	l2995
  1246   00075C                     l3001:
  1247   00075C  0E01               	movlw	1
  1248   00075E  2458               	addwf	kernelLoop@p^0,w,c
  1249   000760  6E46               	movwf	___awmod@dividend^0,c
  1250   000762  6A47               	clrf	(___awmod@dividend+1)^0,c
  1251   000764  0E00               	movlw	0
  1252   000766  2247               	addwfc	(___awmod@dividend+1)^0,f,c
  1253   000768  0E00               	movlw	0
  1254   00076A  6E49               	movwf	(___awmod@divisor+1)^0,c
  1255   00076C  0E0A               	movlw	10
  1256   00076E  6E48               	movwf	___awmod@divisor^0,c
  1257   000770  EC0E  F008         	call	___awmod	;wreg free
  1258   000774  5046               	movf	?___awmod^0,w,c
  1259   000776  6E58               	movwf	kernelLoop@p^0,c
  1260   000778                     l3003:
  1261   000778  5024               	movf	_end^0,w,c
  1262   00077A  1858               	xorwf	kernelLoop@p^0,w,c
  1263   00077C  A4D8               	btfss	status,2,c
  1264   00077E  EFC3  F003         	goto	u3011
  1265   000782  EFC5  F003         	goto	u3010
  1266   000786                     u3011:
  1267   000786  EF18  F003         	goto	l2989
  1268   00078A                     u3010:
  1269   00078A                     
  1270                           ;kernel.c: 52: };kernel.c: 55: tempProc = pool[next];
  1271   00078A  5057               	movf	kernelLoop@next^0,w,c
  1272   00078C  0D02               	mullw	2
  1273   00078E  0E01               	movlw	low _pool
  1274   000790  24F3               	addwf	243,w,c
  1275   000792  6ED9               	movwf	fsr2l,c
  1276   000794  0E00               	movlw	high _pool
  1277   000796  20F4               	addwfc	prodh,w,c
  1278   000798  6EDA               	movwf	fsr2h,c
  1279   00079A  CFDE F055          	movff	postinc2,kernelLoop@tempProc
  1280   00079E  CFDD F056          	movff	postdec2,kernelLoop@tempProc+1
  1281   0007A2                     
  1282                           ;kernel.c: 56: pool[next] = pool[start];
  1283   0007A2  5025               	movf	_start^0,w,c
  1284   0007A4  0D02               	mullw	2
  1285   0007A6  0E01               	movlw	low _pool
  1286   0007A8  24F3               	addwf	243,w,c
  1287   0007AA  6ED9               	movwf	fsr2l,c
  1288   0007AC  0E00               	movlw	high _pool
  1289   0007AE  20F4               	addwfc	prodh,w,c
  1290   0007B0  6EDA               	movwf	fsr2h,c
  1291   0007B2  5057               	movf	kernelLoop@next^0,w,c
  1292   0007B4  0D02               	mullw	2
  1293   0007B6  0E01               	movlw	low _pool
  1294   0007B8  24F3               	addwf	243,w,c
  1295   0007BA  6EE1               	movwf	fsr1l,c
  1296   0007BC  0E00               	movlw	high _pool
  1297   0007BE  20F4               	addwfc	prodh,w,c
  1298   0007C0  6EE2               	movwf	fsr1h,c
  1299   0007C2  CFDE FFE6          	movff	postinc2,postinc1
  1300   0007C6  CFDD FFE5          	movff	postdec2,postdec1
  1301   0007CA                     
  1302                           ;kernel.c: 57: pool[start] = tempProc;
  1303   0007CA  5025               	movf	_start^0,w,c
  1304   0007CC  0D02               	mullw	2
  1305   0007CE  0E01               	movlw	low _pool
  1306   0007D0  24F3               	addwf	243,w,c
  1307   0007D2  6ED9               	movwf	fsr2l,c
  1308   0007D4  0E00               	movlw	high _pool
  1309   0007D6  20F4               	addwfc	prodh,w,c
  1310   0007D8  6EDA               	movwf	fsr2h,c
  1311   0007DA  C055  FFDE         	movff	kernelLoop@tempProc,postinc2
  1312   0007DE  C056  FFDD         	movff	kernelLoop@tempProc+1,postdec2
  1313   0007E2                     l3011:
  1314   0007E2  5025               	movf	_start^0,w,c
  1315   0007E4  0D02               	mullw	2
  1316   0007E6  0E01               	movlw	low _pool
  1317   0007E8  24F3               	addwf	243,w,c
  1318   0007EA  6ED9               	movwf	fsr2l,c
  1319   0007EC  0E00               	movlw	high _pool
  1320   0007EE  20F4               	addwfc	prodh,w,c
  1321   0007F0  6EDA               	movwf	fsr2h,c
  1322   0007F2  EE10 F004          	lfsr	1,4
  1323   0007F6  50DE               	movf	postinc2,w,c
  1324   0007F8  26E1               	addwf	fsr1l,f,c
  1325   0007FA  50DD               	movf	postdec2,w,c
  1326   0007FC  22E2               	addwfc	fsr1h,f,c
  1327   0007FE  0E01               	movlw	1
  1328   000800  BEE3               	btfsc	plusw1,7,c
  1329   000802  EF0E  F004         	goto	u3020
  1330   000806  0E01               	movlw	1
  1331   000808  50E3               	movf	plusw1,w,c
  1332   00080A  E106               	bnz	u3021
  1333   00080C  04E6               	decf	postinc1,w,c
  1334   00080E  B0D8               	btfsc	status,0,c
  1335   000810  EF0C  F004         	goto	u3021
  1336   000814  EF0E  F004         	goto	u3020
  1337   000818                     u3021:
  1338   000818  EFF1  F003         	goto	l3011
  1339   00081C                     u3020:
  1340   00081C                     
  1341                           ;kernel.c: 62: };kernel.c: 63: if (pool[start]->function() == 2) {
  1342   00081C  5025               	movf	_start^0,w,c
  1343   00081E  0D02               	mullw	2
  1344   000820  0E01               	movlw	low _pool
  1345   000822  24F3               	addwf	243,w,c
  1346   000824  6ED9               	movwf	fsr2l,c
  1347   000826  0E00               	movlw	high _pool
  1348   000828  20F4               	addwfc	prodh,w,c
  1349   00082A  6EDA               	movwf	fsr2h,c
  1350   00082C  CFDE F050          	movff	postinc2,??_kernelLoop
  1351   000830  CFDD F051          	movff	postdec2,??_kernelLoop+1
  1352   000834  C050  FFD9         	movff	??_kernelLoop,fsr2l
  1353   000838  C051  FFDA         	movff	??_kernelLoop+1,fsr2h
  1354   00083C  D802               	call	u3038
  1355   00083E  EF2B  F004         	goto	u3039
  1356   000842                     u3038:
  1357   000842  0005               	push	
  1358   000844  6EFA               	movwf	pclath,c
  1359   000846  50DE               	movf	postinc2,w,c
  1360   000848  6EFD               	movwf	tosl,c
  1361   00084A  50DE               	movf	postinc2,w,c
  1362   00084C  6EFE               	movwf	tosh,c
  1363   00084E  50F8               	movf	tblptru,w,c
  1364   000850  6EFF               	movwf	tosu,c
  1365   000852  50FA               	movf	pclath,w,c
  1366   000854  0012               	return		;indir
  1367   000856                     u3039:
  1368   000856  0A02               	xorlw	2
  1369   000858  A4D8               	btfss	status,2,c
  1370   00085A  EF31  F004         	goto	u3041
  1371   00085E  EF33  F004         	goto	u3040
  1372   000862                     u3041:
  1373   000862  EF41  F004         	goto	l3017
  1374   000866                     u3040:
  1375   000866                     
  1376                           ;kernel.c: 64: kernelAddProc(pool[start]);
  1377   000866  5025               	movf	_start^0,w,c
  1378   000868  0D02               	mullw	2
  1379   00086A  0E01               	movlw	low _pool
  1380   00086C  24F3               	addwf	243,w,c
  1381   00086E  6ED9               	movwf	fsr2l,c
  1382   000870  0E00               	movlw	high _pool
  1383   000872  20F4               	addwfc	prodh,w,c
  1384   000874  6EDA               	movwf	fsr2h,c
  1385   000876  CFDE F04C          	movff	postinc2,kernelAddProc@newProc
  1386   00087A  CFDD F04D          	movff	postdec2,kernelAddProc@newProc+1
  1387   00087E  ECBE  F008         	call	_kernelAddProc	;wreg free
  1388   000882                     l3017:
  1389                           
  1390                           ;kernel.c: 65: };kernel.c: 66: start = (start + 1) % 10;
  1391   000882  0E01               	movlw	1
  1392   000884  2425               	addwf	_start^0,w,c
  1393   000886  6E46               	movwf	___awmod@dividend^0,c
  1394   000888  6A47               	clrf	(___awmod@dividend+1)^0,c
  1395   00088A  0E00               	movlw	0
  1396   00088C  2247               	addwfc	(___awmod@dividend+1)^0,f,c
  1397   00088E  0E00               	movlw	0
  1398   000890  6E49               	movwf	(___awmod@divisor+1)^0,c
  1399   000892  0E0A               	movlw	10
  1400   000894  6E48               	movwf	___awmod@divisor^0,c
  1401   000896  EC0E  F008         	call	___awmod	;wreg free
  1402   00089A  5046               	movf	?___awmod^0,w,c
  1403   00089C  6E25               	movwf	_start^0,c
  1404   00089E  EF09  F003         	goto	l81
  1405   0008A2  0012               	return		;funcret
  1406   0008A4                     __end_of_kernelLoop:
  1407                           	callstack 0
  1408                           
  1409 ;; *************** function _countTime *****************
  1410 ;; Defined at:
  1411 ;;		line 55 in file "main.c"
  1412 ;; Parameters:    Size  Location     Type
  1413 ;;		None
  1414 ;; Auto vars:     Size  Location     Type
  1415 ;;  dig             2   29[COMRAM] int 
  1416 ;; Return value:  Size  Location     Type
  1417 ;;                  1    wreg      unsigned char 
  1418 ;; Registers used:
  1419 ;;		wreg, status,2, status,0, cstack
  1420 ;; Tracked objects:
  1421 ;;		On entry : 0/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1425 ;;      Params:         0       0       0       0       0       0       0
  1426 ;;      Locals:         2       0       0       0       0       0       0
  1427 ;;      Temps:          0       0       0       0       0       0       0
  1428 ;;      Totals:         2       0       0       0       0       0       0
  1429 ;;Total ram usage:        2 bytes
  1430 ;; Hardware stack levels used: 1
  1431 ;; Hardware stack levels required when called: 4
  1432 ;; This function calls:
  1433 ;;		___awdiv
  1434 ;;		___awmod
  1435 ;;		_ssdDigit
  1436 ;; This function is called by:
  1437 ;;		_kernelLoop
  1438 ;; This function uses a non-reentrant model
  1439 ;;
  1440                           
  1441                           	psect	text5
  1442   000E7C                     __ptext5:
  1443                           	callstack 0
  1444   000E7C                     _countTime:
  1445                           	callstack 25
  1446   000E7C                     
  1447                           ;main.c: 57: valor++;
  1448   000E7C  4A1B               	infsnz	_valor^0,f,c
  1449   000E7E  2A1C               	incf	(_valor+1)^0,f,c
  1450   000E80                     
  1451                           ;main.c: 58: int dig;;main.c: 62: dig = (valor)%10;
  1452   000E80  C01B  F046         	movff	_valor,___awmod@dividend
  1453   000E84  C01C  F047         	movff	_valor+1,___awmod@dividend+1
  1454   000E88  0E00               	movlw	0
  1455   000E8A  6E49               	movwf	(___awmod@divisor+1)^0,c
  1456   000E8C  0E0A               	movlw	10
  1457   000E8E  6E48               	movwf	___awmod@divisor^0,c
  1458   000E90  EC0E  F008         	call	___awmod	;wreg free
  1459   000E94  C046  F04C         	movff	?___awmod,countTime@dig
  1460   000E98  C047  F04D         	movff	?___awmod+1,countTime@dig+1
  1461   000E9C                     
  1462                           ;main.c: 63: ssdDigit(dig, 3);
  1463   000E9C  0E03               	movlw	3
  1464   000E9E  6E3E               	movwf	ssdDigit@pos^0,c
  1465   000EA0  504C               	movf	countTime@dig^0,w,c
  1466   000EA2  ECC2  F009         	call	_ssdDigit
  1467   000EA6                     
  1468                           ;main.c: 65: dig = (valor/10)%10;
  1469   000EA6  0E00               	movlw	0
  1470   000EA8  6E41               	movwf	(___awdiv@divisor+1)^0,c
  1471   000EAA  0E0A               	movlw	10
  1472   000EAC  6E40               	movwf	___awdiv@divisor^0,c
  1473   000EAE  C01B  F03E         	movff	_valor,___awdiv@dividend
  1474   000EB2  C01C  F03F         	movff	_valor+1,___awdiv@dividend+1
  1475   000EB6  ECAC  F007         	call	___awdiv	;wreg free
  1476   000EBA  C03E  F046         	movff	?___awdiv,___awmod@dividend
  1477   000EBE  C03F  F047         	movff	?___awdiv+1,___awmod@dividend+1
  1478   000EC2  0E00               	movlw	0
  1479   000EC4  6E49               	movwf	(___awmod@divisor+1)^0,c
  1480   000EC6  0E0A               	movlw	10
  1481   000EC8  6E48               	movwf	___awmod@divisor^0,c
  1482   000ECA  EC0E  F008         	call	___awmod	;wreg free
  1483   000ECE  C046  F04C         	movff	?___awmod,countTime@dig
  1484   000ED2  C047  F04D         	movff	?___awmod+1,countTime@dig+1
  1485   000ED6                     
  1486                           ;main.c: 66: ssdDigit(dig, 2);
  1487   000ED6  0E02               	movlw	2
  1488   000ED8  6E3E               	movwf	ssdDigit@pos^0,c
  1489   000EDA  504C               	movf	countTime@dig^0,w,c
  1490   000EDC  ECC2  F009         	call	_ssdDigit
  1491   000EE0                     
  1492                           ;main.c: 68: dig = (valor/100)%10;
  1493   000EE0  0E00               	movlw	0
  1494   000EE2  6E41               	movwf	(___awdiv@divisor+1)^0,c
  1495   000EE4  0E64               	movlw	100
  1496   000EE6  6E40               	movwf	___awdiv@divisor^0,c
  1497   000EE8  C01B  F03E         	movff	_valor,___awdiv@dividend
  1498   000EEC  C01C  F03F         	movff	_valor+1,___awdiv@dividend+1
  1499   000EF0  ECAC  F007         	call	___awdiv	;wreg free
  1500   000EF4  C03E  F046         	movff	?___awdiv,___awmod@dividend
  1501   000EF8  C03F  F047         	movff	?___awdiv+1,___awmod@dividend+1
  1502   000EFC  0E00               	movlw	0
  1503   000EFE  6E49               	movwf	(___awmod@divisor+1)^0,c
  1504   000F00  0E0A               	movlw	10
  1505   000F02  6E48               	movwf	___awmod@divisor^0,c
  1506   000F04  EC0E  F008         	call	___awmod	;wreg free
  1507   000F08  C046  F04C         	movff	?___awmod,countTime@dig
  1508   000F0C  C047  F04D         	movff	?___awmod+1,countTime@dig+1
  1509   000F10                     
  1510                           ;main.c: 69: ssdDigit(dig, 1);
  1511   000F10  0E01               	movlw	1
  1512   000F12  6E3E               	movwf	ssdDigit@pos^0,c
  1513   000F14  504C               	movf	countTime@dig^0,w,c
  1514   000F16  ECC2  F009         	call	_ssdDigit
  1515   000F1A                     
  1516                           ;main.c: 71: dig = (valor/1000)%10;
  1517   000F1A  0E03               	movlw	3
  1518   000F1C  6E41               	movwf	(___awdiv@divisor+1)^0,c
  1519   000F1E  0EE8               	movlw	232
  1520   000F20  6E40               	movwf	___awdiv@divisor^0,c
  1521   000F22  C01B  F03E         	movff	_valor,___awdiv@dividend
  1522   000F26  C01C  F03F         	movff	_valor+1,___awdiv@dividend+1
  1523   000F2A  ECAC  F007         	call	___awdiv	;wreg free
  1524   000F2E  C03E  F046         	movff	?___awdiv,___awmod@dividend
  1525   000F32  C03F  F047         	movff	?___awdiv+1,___awmod@dividend+1
  1526   000F36  0E00               	movlw	0
  1527   000F38  6E49               	movwf	(___awmod@divisor+1)^0,c
  1528   000F3A  0E0A               	movlw	10
  1529   000F3C  6E48               	movwf	___awmod@divisor^0,c
  1530   000F3E  EC0E  F008         	call	___awmod	;wreg free
  1531   000F42  C046  F04C         	movff	?___awmod,countTime@dig
  1532   000F46  C047  F04D         	movff	?___awmod+1,countTime@dig+1
  1533   000F4A                     
  1534                           ;main.c: 72: ssdDigit(dig, 0);
  1535   000F4A  0E00               	movlw	0
  1536   000F4C  6E3E               	movwf	ssdDigit@pos^0,c
  1537   000F4E  504C               	movf	countTime@dig^0,w,c
  1538   000F50  ECC2  F009         	call	_ssdDigit
  1539   000F54                     
  1540                           ;main.c: 73: return 2;
  1541   000F54  0E02               	movlw	2
  1542   000F56  0012               	return		;funcret
  1543   000F58                     __end_of_countTime:
  1544                           	callstack 0
  1545                           
  1546 ;; *************** function _initPORTAD *****************
  1547 ;; Defined at:
  1548 ;;		line 30 in file "main.c"
  1549 ;; Parameters:    Size  Location     Type
  1550 ;;		None
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;		None
  1553 ;; Return value:  Size  Location     Type
  1554 ;;                  1    wreg      unsigned char 
  1555 ;; Registers used:
  1556 ;;		wreg, status,2
  1557 ;; Tracked objects:
  1558 ;;		On entry : 0/0
  1559 ;;		On exit  : 0/0
  1560 ;;		Unchanged: 0/0
  1561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1562 ;;      Params:         0       0       0       0       0       0       0
  1563 ;;      Locals:         0       0       0       0       0       0       0
  1564 ;;      Temps:          0       0       0       0       0       0       0
  1565 ;;      Totals:         0       0       0       0       0       0       0
  1566 ;;Total ram usage:        0 bytes
  1567 ;; Hardware stack levels used: 1
  1568 ;; Hardware stack levels required when called: 3
  1569 ;; This function calls:
  1570 ;;		Nothing
  1571 ;; This function is called by:
  1572 ;;		_kernelLoop
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           
  1576                           	psect	text6
  1577   0014AE                     __ptext6:
  1578                           	callstack 0
  1579   0014AE                     _initPORTAD:
  1580                           	callstack 26
  1581   0014AE                     
  1582                           ;main.c: 32: TRISD = 0x00;
  1583   0014AE  0E00               	movlw	0
  1584   0014B0  6E95               	movwf	149,c	;volatile
  1585   0014B2                     
  1586                           ;main.c: 33: return 0;
  1587   0014B2  0E00               	movlw	0
  1588   0014B4  0012               	return		;funcret
  1589   0014B6                     __end_of_initPORTAD:
  1590                           	callstack 0
  1591                           
  1592 ;; *************** function _updateSSD *****************
  1593 ;; Defined at:
  1594 ;;		line 48 in file "main.c"
  1595 ;; Parameters:    Size  Location     Type
  1596 ;;		None
  1597 ;; Auto vars:     Size  Location     Type
  1598 ;;		None
  1599 ;; Return value:  Size  Location     Type
  1600 ;;                  1    wreg      unsigned char 
  1601 ;; Registers used:
  1602 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1603 ;; Tracked objects:
  1604 ;;		On entry : 0/0
  1605 ;;		On exit  : 0/0
  1606 ;;		Unchanged: 0/0
  1607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1608 ;;      Params:         0       0       0       0       0       0       0
  1609 ;;      Locals:         0       0       0       0       0       0       0
  1610 ;;      Temps:          0       0       0       0       0       0       0
  1611 ;;      Totals:         0       0       0       0       0       0       0
  1612 ;;Total ram usage:        0 bytes
  1613 ;; Hardware stack levels used: 1
  1614 ;; Hardware stack levels required when called: 5
  1615 ;; This function calls:
  1616 ;;		_ssdUpdate
  1617 ;; This function is called by:
  1618 ;;		_kernelLoop
  1619 ;; This function uses a non-reentrant model
  1620 ;;
  1621                           
  1622                           	psect	text7
  1623   0014B6                     __ptext7:
  1624                           	callstack 0
  1625   0014B6                     _updateSSD:
  1626                           	callstack 24
  1627   0014B6                     
  1628                           ;main.c: 50: ssdUpdate();
  1629   0014B6  ECA0  F006         	call	_ssdUpdate	;wreg free
  1630   0014BA                     
  1631                           ;main.c: 51: return 2;
  1632   0014BA  0E02               	movlw	2
  1633   0014BC  0012               	return		;funcret
  1634   0014BE                     __end_of_updateSSD:
  1635                           	callstack 0
  1636                           
  1637 ;; *************** function _ssdUpdate *****************
  1638 ;; Defined at:
  1639 ;;		line 54 in file "ssd.c"
  1640 ;; Parameters:    Size  Location     Type
  1641 ;;		None
  1642 ;; Auto vars:     Size  Location     Type
  1643 ;;		None
  1644 ;; Return value:  Size  Location     Type
  1645 ;;                  1    wreg      void 
  1646 ;; Registers used:
  1647 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1648 ;; Tracked objects:
  1649 ;;		On entry : 0/0
  1650 ;;		On exit  : 0/0
  1651 ;;		Unchanged: 0/0
  1652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1653 ;;      Params:         0       0       0       0       0       0       0
  1654 ;;      Locals:         0       0       0       0       0       0       0
  1655 ;;      Temps:          0       0       0       0       0       0       0
  1656 ;;      Totals:         0       0       0       0       0       0       0
  1657 ;;Total ram usage:        0 bytes
  1658 ;; Hardware stack levels used: 1
  1659 ;; Hardware stack levels required when called: 4
  1660 ;; This function calls:
  1661 ;;		_digitalWrite
  1662 ;; This function is called by:
  1663 ;;		_updateSSD
  1664 ;; This function uses a non-reentrant model
  1665 ;;
  1666                           
  1667                           	psect	text8
  1668   000D40                     __ptext8:
  1669                           	callstack 0
  1670   000D40                     _ssdUpdate:
  1671                           	callstack 24
  1672   000D40                     
  1673                           ;ssd.c: 58: TRISD= 0x00;
  1674   000D40  0E00               	movlw	0
  1675   000D42  6E95               	movwf	149,c	;volatile
  1676   000D44                     
  1677                           ;ssd.c: 60: digitalWrite(PIN_A2,0);
  1678   000D44  0E00               	movlw	0
  1679   000D46  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  1680   000D48  0E02               	movlw	2
  1681   000D4A  6E3E               	movwf	digitalWrite@pin^0,c
  1682   000D4C  0E00               	movlw	0
  1683   000D4E  6E41               	movwf	(digitalWrite@value+1)^0,c
  1684   000D50  0E00               	movlw	0
  1685   000D52  6E40               	movwf	digitalWrite@value^0,c
  1686   000D54  EC79  F005         	call	_digitalWrite	;wreg free
  1687   000D58                     
  1688                           ;ssd.c: 61: digitalWrite(PIN_A3,0);
  1689   000D58  0E00               	movlw	0
  1690   000D5A  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  1691   000D5C  0E03               	movlw	3
  1692   000D5E  6E3E               	movwf	digitalWrite@pin^0,c
  1693   000D60  0E00               	movlw	0
  1694   000D62  6E41               	movwf	(digitalWrite@value+1)^0,c
  1695   000D64  0E00               	movlw	0
  1696   000D66  6E40               	movwf	digitalWrite@value^0,c
  1697   000D68  EC79  F005         	call	_digitalWrite	;wreg free
  1698   000D6C                     
  1699                           ;ssd.c: 62: digitalWrite(PIN_A4,0);
  1700   000D6C  0E00               	movlw	0
  1701   000D6E  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  1702   000D70  0E04               	movlw	4
  1703   000D72  6E3E               	movwf	digitalWrite@pin^0,c
  1704   000D74  0E00               	movlw	0
  1705   000D76  6E41               	movwf	(digitalWrite@value+1)^0,c
  1706   000D78  0E00               	movlw	0
  1707   000D7A  6E40               	movwf	digitalWrite@value^0,c
  1708   000D7C  EC79  F005         	call	_digitalWrite	;wreg free
  1709   000D80                     
  1710                           ;ssd.c: 63: digitalWrite(PIN_A5,0);
  1711   000D80  0E00               	movlw	0
  1712   000D82  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  1713   000D84  0E05               	movlw	5
  1714   000D86  6E3E               	movwf	digitalWrite@pin^0,c
  1715   000D88  0E00               	movlw	0
  1716   000D8A  6E41               	movwf	(digitalWrite@value+1)^0,c
  1717   000D8C  0E00               	movlw	0
  1718   000D8E  6E40               	movwf	digitalWrite@value^0,c
  1719   000D90  EC79  F005         	call	_digitalWrite	;wreg free
  1720                           
  1721                           ;ssd.c: 66: PORTD = 0x00;
  1722   000D94  0E00               	movlw	0
  1723   000D96  6E83               	movwf	131,c	;volatile
  1724                           
  1725                           ;ssd.c: 69: switch (display)
  1726   000D98  EF2A  F007         	goto	l2733
  1727   000D9C                     l2705:
  1728                           
  1729                           ;ssd.c: 72: PORTD = valor[v0];
  1730   000D9C  0E01               	movlw	low _valor@ssd$F527
  1731   000D9E  2420               	addwf	_v0^0,w,c
  1732   000DA0  6EF6               	movwf	tblptrl,c
  1733   000DA2  6AF7               	clrf	tblptrh,c
  1734   000DA4  0E06               	movlw	high _valor@ssd$F527
  1735   000DA6  22F7               	addwfc	tblptrh,f,c
  1736   000DA8                     	if	0	;There are less than 3 active tblptr bytes
  1737   000DA8                     	endif
  1738   000DA8  0008               	tblrd		*
  1739   000DAA  CFF5 FF83          	movff	tablat,3971	;volatile
  1740   000DAE                     
  1741                           ;ssd.c: 73: digitalWrite(PIN_A2,1);
  1742   000DAE  0E00               	movlw	0
  1743   000DB0  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  1744   000DB2  0E02               	movlw	2
  1745   000DB4  6E3E               	movwf	digitalWrite@pin^0,c
  1746   000DB6  0E00               	movlw	0
  1747   000DB8  6E41               	movwf	(digitalWrite@value+1)^0,c
  1748   000DBA  0E01               	movlw	1
  1749   000DBC  6E40               	movwf	digitalWrite@value^0,c
  1750   000DBE  EC79  F005         	call	_digitalWrite	;wreg free
  1751   000DC2                     
  1752                           ;ssd.c: 74: display = 1;
  1753   000DC2  0E01               	movlw	1
  1754   000DC4  6E21               	movwf	_display^0,c
  1755                           
  1756                           ;ssd.c: 75: break;
  1757   000DC6  EF3D  F007         	goto	l471
  1758   000DCA                     l2711:
  1759                           
  1760                           ;ssd.c: 78: PORTD = valor[v1];
  1761   000DCA  0E01               	movlw	low _valor@ssd$F527
  1762   000DCC  241F               	addwf	_v1^0,w,c
  1763   000DCE  6EF6               	movwf	tblptrl,c
  1764   000DD0  6AF7               	clrf	tblptrh,c
  1765   000DD2  0E06               	movlw	high _valor@ssd$F527
  1766   000DD4  22F7               	addwfc	tblptrh,f,c
  1767   000DD6                     	if	0	;There are less than 3 active tblptr bytes
  1768   000DD6                     	endif
  1769   000DD6  0008               	tblrd		*
  1770   000DD8  CFF5 FF83          	movff	tablat,3971	;volatile
  1771   000DDC                     
  1772                           ;ssd.c: 79: digitalWrite(PIN_A3,1);
  1773   000DDC  0E00               	movlw	0
  1774   000DDE  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  1775   000DE0  0E03               	movlw	3
  1776   000DE2  6E3E               	movwf	digitalWrite@pin^0,c
  1777   000DE4  0E00               	movlw	0
  1778   000DE6  6E41               	movwf	(digitalWrite@value+1)^0,c
  1779   000DE8  0E01               	movlw	1
  1780   000DEA  6E40               	movwf	digitalWrite@value^0,c
  1781   000DEC  EC79  F005         	call	_digitalWrite	;wreg free
  1782   000DF0                     
  1783                           ;ssd.c: 80: display = 2;
  1784   000DF0  0E02               	movlw	2
  1785   000DF2  6E21               	movwf	_display^0,c
  1786                           
  1787                           ;ssd.c: 81: break;
  1788   000DF4  EF3D  F007         	goto	l471
  1789   000DF8                     l2717:
  1790                           
  1791                           ;ssd.c: 84: PORTD = valor[v2];
  1792   000DF8  0E01               	movlw	low _valor@ssd$F527
  1793   000DFA  241E               	addwf	_v2^0,w,c
  1794   000DFC  6EF6               	movwf	tblptrl,c
  1795   000DFE  6AF7               	clrf	tblptrh,c
  1796   000E00  0E06               	movlw	high _valor@ssd$F527
  1797   000E02  22F7               	addwfc	tblptrh,f,c
  1798   000E04                     	if	0	;There are less than 3 active tblptr bytes
  1799   000E04                     	endif
  1800   000E04  0008               	tblrd		*
  1801   000E06  CFF5 FF83          	movff	tablat,3971	;volatile
  1802   000E0A                     
  1803                           ;ssd.c: 85: digitalWrite(PIN_A4,1);
  1804   000E0A  0E00               	movlw	0
  1805   000E0C  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  1806   000E0E  0E04               	movlw	4
  1807   000E10  6E3E               	movwf	digitalWrite@pin^0,c
  1808   000E12  0E00               	movlw	0
  1809   000E14  6E41               	movwf	(digitalWrite@value+1)^0,c
  1810   000E16  0E01               	movlw	1
  1811   000E18  6E40               	movwf	digitalWrite@value^0,c
  1812   000E1A  EC79  F005         	call	_digitalWrite	;wreg free
  1813   000E1E                     
  1814                           ;ssd.c: 86: display = 3;
  1815   000E1E  0E03               	movlw	3
  1816   000E20  6E21               	movwf	_display^0,c
  1817                           
  1818                           ;ssd.c: 87: break;
  1819   000E22  EF3D  F007         	goto	l471
  1820   000E26                     l2723:
  1821                           
  1822                           ;ssd.c: 90: PORTD = valor[v3];
  1823   000E26  0E01               	movlw	low _valor@ssd$F527
  1824   000E28  241D               	addwf	_v3^0,w,c
  1825   000E2A  6EF6               	movwf	tblptrl,c
  1826   000E2C  6AF7               	clrf	tblptrh,c
  1827   000E2E  0E06               	movlw	high _valor@ssd$F527
  1828   000E30  22F7               	addwfc	tblptrh,f,c
  1829   000E32                     	if	0	;There are less than 3 active tblptr bytes
  1830   000E32                     	endif
  1831   000E32  0008               	tblrd		*
  1832   000E34  CFF5 FF83          	movff	tablat,3971	;volatile
  1833   000E38                     
  1834                           ;ssd.c: 91: digitalWrite(PIN_A5,1);
  1835   000E38  0E00               	movlw	0
  1836   000E3A  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  1837   000E3C  0E05               	movlw	5
  1838   000E3E  6E3E               	movwf	digitalWrite@pin^0,c
  1839   000E40  0E00               	movlw	0
  1840   000E42  6E41               	movwf	(digitalWrite@value+1)^0,c
  1841   000E44  0E01               	movlw	1
  1842   000E46  6E40               	movwf	digitalWrite@value^0,c
  1843   000E48  EC79  F005         	call	_digitalWrite	;wreg free
  1844   000E4C                     l2727:
  1845                           
  1846                           ;ssd.c: 92: display = 0;
  1847   000E4C  0E00               	movlw	0
  1848   000E4E  6E21               	movwf	_display^0,c
  1849                           
  1850                           ;ssd.c: 93: break;
  1851   000E50  EF3D  F007         	goto	l471
  1852   000E54                     l2733:
  1853   000E54  5021               	movf	_display^0,w,c
  1854                           
  1855                           ; Switch size 1, requested type "simple"
  1856                           ; Number of cases is 4, Range of values is 0 to 3
  1857                           ; switch strategies available:
  1858                           ; Name         Instructions Cycles
  1859                           ; simple_byte           13     7 (average)
  1860                           ;	Chosen strategy is simple_byte
  1861   000E56  0A00               	xorlw	0	; case 0
  1862   000E58  B4D8               	btfsc	status,2,c
  1863   000E5A  EFCE  F006         	goto	l2705
  1864   000E5E  0A01               	xorlw	1	; case 1
  1865   000E60  B4D8               	btfsc	status,2,c
  1866   000E62  EFE5  F006         	goto	l2711
  1867   000E66  0A03               	xorlw	3	; case 2
  1868   000E68  B4D8               	btfsc	status,2,c
  1869   000E6A  EFFC  F006         	goto	l2717
  1870   000E6E  0A01               	xorlw	1	; case 3
  1871   000E70  B4D8               	btfsc	status,2,c
  1872   000E72  EF13  F007         	goto	l2723
  1873   000E76  EF26  F007         	goto	l2727
  1874   000E7A                     l471:
  1875   000E7A  0012               	return		;funcret
  1876   000E7C                     __end_of_ssdUpdate:
  1877                           	callstack 0
  1878                           
  1879 ;; *************** function _digitalWrite *****************
  1880 ;; Defined at:
  1881 ;;		line 14 in file "io.c"
  1882 ;; Parameters:    Size  Location     Type
  1883 ;;  pin             2   15[COMRAM] int 
  1884 ;;  value           2   17[COMRAM] int 
  1885 ;; Auto vars:     Size  Location     Type
  1886 ;;		None
  1887 ;; Return value:  Size  Location     Type
  1888 ;;                  1    wreg      void 
  1889 ;; Registers used:
  1890 ;;		wreg, status,2, status,0
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/0
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1896 ;;      Params:         4       0       0       0       0       0       0
  1897 ;;      Locals:         0       0       0       0       0       0       0
  1898 ;;      Temps:          2       0       0       0       0       0       0
  1899 ;;      Totals:         6       0       0       0       0       0       0
  1900 ;;Total ram usage:        6 bytes
  1901 ;; Hardware stack levels used: 1
  1902 ;; Hardware stack levels required when called: 3
  1903 ;; This function calls:
  1904 ;;		Nothing
  1905 ;; This function is called by:
  1906 ;;		_ssdUpdate
  1907 ;;		_lcdCommand
  1908 ;;		_lcdData
  1909 ;;		_clear_SCL
  1910 ;;		_clear_SDA
  1911 ;; This function uses a non-reentrant model
  1912 ;;
  1913                           
  1914                           	psect	text9
  1915   000AF2                     __ptext9:
  1916                           	callstack 0
  1917   000AF2                     _digitalWrite:
  1918                           	callstack 24
  1919   000AF2                     
  1920                           ;io.c: 16: if(pin <8){
  1921   000AF2  BE3F               	btfsc	(digitalWrite@pin+1)^0,7,c
  1922   000AF4  EF87  F005         	goto	u2270
  1923   000AF8  503F               	movf	(digitalWrite@pin+1)^0,w,c
  1924   000AFA  E107               	bnz	u2271
  1925   000AFC  0E08               	movlw	8
  1926   000AFE  5C3E               	subwf	digitalWrite@pin^0,w,c
  1927   000B00  B0D8               	btfsc	status,0,c
  1928   000B02  EF85  F005         	goto	u2271
  1929   000B06  EF87  F005         	goto	u2270
  1930   000B0A                     u2271:
  1931   000B0A  EFB1  F005         	goto	l2663
  1932   000B0E                     u2270:
  1933   000B0E                     
  1934                           ;io.c: 17: if (value){ ((PORTA) |= (1<<(pin)));}
  1935   000B0E  5040               	movf	digitalWrite@value^0,w,c
  1936   000B10  1041               	iorwf	(digitalWrite@value+1)^0,w,c
  1937   000B12  B4D8               	btfsc	status,2,c
  1938   000B14  EF8E  F005         	goto	u2281
  1939   000B18  EF90  F005         	goto	u2280
  1940   000B1C                     u2281:
  1941   000B1C  EFA0  F005         	goto	l2661
  1942   000B20                     u2280:
  1943   000B20  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  1944   000B24  0E01               	movlw	1
  1945   000B26  6E43               	movwf	(??_digitalWrite+1)^0,c
  1946   000B28  2A42               	incf	??_digitalWrite^0,f,c
  1947   000B2A  EF99  F005         	goto	u2294
  1948   000B2E                     u2295:
  1949   000B2E  90D8               	bcf	status,0,c
  1950   000B30  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  1951   000B32                     u2294:
  1952   000B32  2E42               	decfsz	??_digitalWrite^0,f,c
  1953   000B34  EF97  F005         	goto	u2295
  1954   000B38  5043               	movf	(??_digitalWrite+1)^0,w,c
  1955   000B3A  1280               	iorwf	128,f,c	;volatile
  1956   000B3C  EF9F  F006         	goto	l211
  1957   000B40                     l2661:
  1958                           
  1959                           ;io.c: 18: else{ ((PORTA) &= ~(1<<(pin)));}
  1960   000B40  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  1961   000B44  0E01               	movlw	1
  1962   000B46  6E43               	movwf	(??_digitalWrite+1)^0,c
  1963   000B48  2A42               	incf	??_digitalWrite^0,f,c
  1964   000B4A  EFA9  F005         	goto	u2304
  1965   000B4E                     u2305:
  1966   000B4E  90D8               	bcf	status,0,c
  1967   000B50  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  1968   000B52                     u2304:
  1969   000B52  2E42               	decfsz	??_digitalWrite^0,f,c
  1970   000B54  EFA7  F005         	goto	u2305
  1971   000B58  5043               	movf	(??_digitalWrite+1)^0,w,c
  1972   000B5A  0AFF               	xorlw	255
  1973   000B5C  1680               	andwf	128,f,c	;volatile
  1974   000B5E  EF9F  F006         	goto	l211
  1975   000B62                     l2663:
  1976   000B62  BE3F               	btfsc	(digitalWrite@pin+1)^0,7,c
  1977   000B64  EFBF  F005         	goto	u2310
  1978   000B68  503F               	movf	(digitalWrite@pin+1)^0,w,c
  1979   000B6A  E107               	bnz	u2311
  1980   000B6C  0E10               	movlw	16
  1981   000B6E  5C3E               	subwf	digitalWrite@pin^0,w,c
  1982   000B70  B0D8               	btfsc	status,0,c
  1983   000B72  EFBD  F005         	goto	u2311
  1984   000B76  EFBF  F005         	goto	u2310
  1985   000B7A                     u2311:
  1986   000B7A  EFED  F005         	goto	l2671
  1987   000B7E                     u2310:
  1988   000B7E                     
  1989                           ;io.c: 20: pin -=8;
  1990   000B7E  0EF8               	movlw	248
  1991   000B80  263E               	addwf	digitalWrite@pin^0,f,c
  1992   000B82  0EFF               	movlw	255
  1993   000B84  223F               	addwfc	(digitalWrite@pin+1)^0,f,c
  1994                           
  1995                           ;io.c: 21: if (value){ ((PORTB) |= (1<<(pin)));}
  1996   000B86  5040               	movf	digitalWrite@value^0,w,c
  1997   000B88  1041               	iorwf	(digitalWrite@value+1)^0,w,c
  1998   000B8A  B4D8               	btfsc	status,2,c
  1999   000B8C  EFCA  F005         	goto	u2321
  2000   000B90  EFCC  F005         	goto	u2320
  2001   000B94                     u2321:
  2002   000B94  EFDC  F005         	goto	l2669
  2003   000B98                     u2320:
  2004   000B98  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2005   000B9C  0E01               	movlw	1
  2006   000B9E  6E43               	movwf	(??_digitalWrite+1)^0,c
  2007   000BA0  2A42               	incf	??_digitalWrite^0,f,c
  2008   000BA2  EFD5  F005         	goto	u2334
  2009   000BA6                     u2335:
  2010   000BA6  90D8               	bcf	status,0,c
  2011   000BA8  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2012   000BAA                     u2334:
  2013   000BAA  2E42               	decfsz	??_digitalWrite^0,f,c
  2014   000BAC  EFD3  F005         	goto	u2335
  2015   000BB0  5043               	movf	(??_digitalWrite+1)^0,w,c
  2016   000BB2  1281               	iorwf	129,f,c	;volatile
  2017   000BB4  EF9F  F006         	goto	l211
  2018   000BB8                     l2669:
  2019                           
  2020                           ;io.c: 22: else{ ((PORTB) &= ~(1<<(pin)));}
  2021   000BB8  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2022   000BBC  0E01               	movlw	1
  2023   000BBE  6E43               	movwf	(??_digitalWrite+1)^0,c
  2024   000BC0  2A42               	incf	??_digitalWrite^0,f,c
  2025   000BC2  EFE5  F005         	goto	u2344
  2026   000BC6                     u2345:
  2027   000BC6  90D8               	bcf	status,0,c
  2028   000BC8  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2029   000BCA                     u2344:
  2030   000BCA  2E42               	decfsz	??_digitalWrite^0,f,c
  2031   000BCC  EFE3  F005         	goto	u2345
  2032   000BD0  5043               	movf	(??_digitalWrite+1)^0,w,c
  2033   000BD2  0AFF               	xorlw	255
  2034   000BD4  1681               	andwf	129,f,c	;volatile
  2035   000BD6  EF9F  F006         	goto	l211
  2036   000BDA                     l2671:
  2037   000BDA  BE3F               	btfsc	(digitalWrite@pin+1)^0,7,c
  2038   000BDC  EFFB  F005         	goto	u2350
  2039   000BE0  503F               	movf	(digitalWrite@pin+1)^0,w,c
  2040   000BE2  E107               	bnz	u2351
  2041   000BE4  0E18               	movlw	24
  2042   000BE6  5C3E               	subwf	digitalWrite@pin^0,w,c
  2043   000BE8  B0D8               	btfsc	status,0,c
  2044   000BEA  EFF9  F005         	goto	u2351
  2045   000BEE  EFFB  F005         	goto	u2350
  2046   000BF2                     u2351:
  2047   000BF2  EF29  F006         	goto	l2679
  2048   000BF6                     u2350:
  2049   000BF6                     
  2050                           ;io.c: 24: pin -=16;
  2051   000BF6  0EF0               	movlw	240
  2052   000BF8  263E               	addwf	digitalWrite@pin^0,f,c
  2053   000BFA  0EFF               	movlw	255
  2054   000BFC  223F               	addwfc	(digitalWrite@pin+1)^0,f,c
  2055                           
  2056                           ;io.c: 25: if (value){ ((PORTC) |= (1<<(pin)));}
  2057   000BFE  5040               	movf	digitalWrite@value^0,w,c
  2058   000C00  1041               	iorwf	(digitalWrite@value+1)^0,w,c
  2059   000C02  B4D8               	btfsc	status,2,c
  2060   000C04  EF06  F006         	goto	u2361
  2061   000C08  EF08  F006         	goto	u2360
  2062   000C0C                     u2361:
  2063   000C0C  EF18  F006         	goto	l2677
  2064   000C10                     u2360:
  2065   000C10  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2066   000C14  0E01               	movlw	1
  2067   000C16  6E43               	movwf	(??_digitalWrite+1)^0,c
  2068   000C18  2A42               	incf	??_digitalWrite^0,f,c
  2069   000C1A  EF11  F006         	goto	u2374
  2070   000C1E                     u2375:
  2071   000C1E  90D8               	bcf	status,0,c
  2072   000C20  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2073   000C22                     u2374:
  2074   000C22  2E42               	decfsz	??_digitalWrite^0,f,c
  2075   000C24  EF0F  F006         	goto	u2375
  2076   000C28  5043               	movf	(??_digitalWrite+1)^0,w,c
  2077   000C2A  1282               	iorwf	130,f,c	;volatile
  2078   000C2C  EF9F  F006         	goto	l211
  2079   000C30                     l2677:
  2080                           
  2081                           ;io.c: 26: else{ ((PORTC) &= ~(1<<(pin)));}
  2082   000C30  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2083   000C34  0E01               	movlw	1
  2084   000C36  6E43               	movwf	(??_digitalWrite+1)^0,c
  2085   000C38  2A42               	incf	??_digitalWrite^0,f,c
  2086   000C3A  EF21  F006         	goto	u2384
  2087   000C3E                     u2385:
  2088   000C3E  90D8               	bcf	status,0,c
  2089   000C40  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2090   000C42                     u2384:
  2091   000C42  2E42               	decfsz	??_digitalWrite^0,f,c
  2092   000C44  EF1F  F006         	goto	u2385
  2093   000C48  5043               	movf	(??_digitalWrite+1)^0,w,c
  2094   000C4A  0AFF               	xorlw	255
  2095   000C4C  1682               	andwf	130,f,c	;volatile
  2096   000C4E  EF9F  F006         	goto	l211
  2097   000C52                     l2679:
  2098   000C52  BE3F               	btfsc	(digitalWrite@pin+1)^0,7,c
  2099   000C54  EF37  F006         	goto	u2390
  2100   000C58  503F               	movf	(digitalWrite@pin+1)^0,w,c
  2101   000C5A  E107               	bnz	u2391
  2102   000C5C  0E20               	movlw	32
  2103   000C5E  5C3E               	subwf	digitalWrite@pin^0,w,c
  2104   000C60  B0D8               	btfsc	status,0,c
  2105   000C62  EF35  F006         	goto	u2391
  2106   000C66  EF37  F006         	goto	u2390
  2107   000C6A                     u2391:
  2108   000C6A  EF65  F006         	goto	l2687
  2109   000C6E                     u2390:
  2110   000C6E                     
  2111                           ;io.c: 28: pin -=24;
  2112   000C6E  0EE8               	movlw	232
  2113   000C70  263E               	addwf	digitalWrite@pin^0,f,c
  2114   000C72  0EFF               	movlw	255
  2115   000C74  223F               	addwfc	(digitalWrite@pin+1)^0,f,c
  2116                           
  2117                           ;io.c: 29: if (value){ ((PORTD) |= (1<<(pin)));}
  2118   000C76  5040               	movf	digitalWrite@value^0,w,c
  2119   000C78  1041               	iorwf	(digitalWrite@value+1)^0,w,c
  2120   000C7A  B4D8               	btfsc	status,2,c
  2121   000C7C  EF42  F006         	goto	u2401
  2122   000C80  EF44  F006         	goto	u2400
  2123   000C84                     u2401:
  2124   000C84  EF54  F006         	goto	l2685
  2125   000C88                     u2400:
  2126   000C88  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2127   000C8C  0E01               	movlw	1
  2128   000C8E  6E43               	movwf	(??_digitalWrite+1)^0,c
  2129   000C90  2A42               	incf	??_digitalWrite^0,f,c
  2130   000C92  EF4D  F006         	goto	u2414
  2131   000C96                     u2415:
  2132   000C96  90D8               	bcf	status,0,c
  2133   000C98  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2134   000C9A                     u2414:
  2135   000C9A  2E42               	decfsz	??_digitalWrite^0,f,c
  2136   000C9C  EF4B  F006         	goto	u2415
  2137   000CA0  5043               	movf	(??_digitalWrite+1)^0,w,c
  2138   000CA2  1283               	iorwf	131,f,c	;volatile
  2139   000CA4  EF9F  F006         	goto	l211
  2140   000CA8                     l2685:
  2141                           
  2142                           ;io.c: 30: else{ ((PORTD) &= ~(1<<(pin)));}
  2143   000CA8  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2144   000CAC  0E01               	movlw	1
  2145   000CAE  6E43               	movwf	(??_digitalWrite+1)^0,c
  2146   000CB0  2A42               	incf	??_digitalWrite^0,f,c
  2147   000CB2  EF5D  F006         	goto	u2424
  2148   000CB6                     u2425:
  2149   000CB6  90D8               	bcf	status,0,c
  2150   000CB8  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2151   000CBA                     u2424:
  2152   000CBA  2E42               	decfsz	??_digitalWrite^0,f,c
  2153   000CBC  EF5B  F006         	goto	u2425
  2154   000CC0  5043               	movf	(??_digitalWrite+1)^0,w,c
  2155   000CC2  0AFF               	xorlw	255
  2156   000CC4  1683               	andwf	131,f,c	;volatile
  2157   000CC6  EF9F  F006         	goto	l211
  2158   000CCA                     l2687:
  2159   000CCA  BE3F               	btfsc	(digitalWrite@pin+1)^0,7,c
  2160   000CCC  EF73  F006         	goto	u2430
  2161   000CD0  503F               	movf	(digitalWrite@pin+1)^0,w,c
  2162   000CD2  E107               	bnz	u2431
  2163   000CD4  0E28               	movlw	40
  2164   000CD6  5C3E               	subwf	digitalWrite@pin^0,w,c
  2165   000CD8  B0D8               	btfsc	status,0,c
  2166   000CDA  EF71  F006         	goto	u2431
  2167   000CDE  EF73  F006         	goto	u2430
  2168   000CE2                     u2431:
  2169   000CE2  EF9F  F006         	goto	l211
  2170   000CE6                     u2430:
  2171   000CE6                     
  2172                           ;io.c: 32: pin -=32;
  2173   000CE6  0EE0               	movlw	224
  2174   000CE8  263E               	addwf	digitalWrite@pin^0,f,c
  2175   000CEA  0EFF               	movlw	255
  2176   000CEC  223F               	addwfc	(digitalWrite@pin+1)^0,f,c
  2177                           
  2178                           ;io.c: 33: if (value){ ((PORTE) |= (1<<(pin)));}
  2179   000CEE  5040               	movf	digitalWrite@value^0,w,c
  2180   000CF0  1041               	iorwf	(digitalWrite@value+1)^0,w,c
  2181   000CF2  B4D8               	btfsc	status,2,c
  2182   000CF4  EF7E  F006         	goto	u2441
  2183   000CF8  EF80  F006         	goto	u2440
  2184   000CFC                     u2441:
  2185   000CFC  EF90  F006         	goto	l2693
  2186   000D00                     u2440:
  2187   000D00  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2188   000D04  0E01               	movlw	1
  2189   000D06  6E43               	movwf	(??_digitalWrite+1)^0,c
  2190   000D08  2A42               	incf	??_digitalWrite^0,f,c
  2191   000D0A  EF89  F006         	goto	u2454
  2192   000D0E                     u2455:
  2193   000D0E  90D8               	bcf	status,0,c
  2194   000D10  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2195   000D12                     u2454:
  2196   000D12  2E42               	decfsz	??_digitalWrite^0,f,c
  2197   000D14  EF87  F006         	goto	u2455
  2198   000D18  5043               	movf	(??_digitalWrite+1)^0,w,c
  2199   000D1A  1284               	iorwf	132,f,c	;volatile
  2200   000D1C  EF9F  F006         	goto	l211
  2201   000D20                     l2693:
  2202                           
  2203                           ;io.c: 34: else{ ((PORTE) &= ~(1<<(pin)));}
  2204   000D20  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2205   000D24  0E01               	movlw	1
  2206   000D26  6E43               	movwf	(??_digitalWrite+1)^0,c
  2207   000D28  2A42               	incf	??_digitalWrite^0,f,c
  2208   000D2A  EF99  F006         	goto	u2464
  2209   000D2E                     u2465:
  2210   000D2E  90D8               	bcf	status,0,c
  2211   000D30  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2212   000D32                     u2464:
  2213   000D32  2E42               	decfsz	??_digitalWrite^0,f,c
  2214   000D34  EF97  F006         	goto	u2465
  2215   000D38  5043               	movf	(??_digitalWrite+1)^0,w,c
  2216   000D3A  0AFF               	xorlw	255
  2217   000D3C  1684               	andwf	132,f,c	;volatile
  2218   000D3E                     l211:
  2219   000D3E  0012               	return		;funcret
  2220   000D40                     __end_of_digitalWrite:
  2221                           	callstack 0
  2222                           
  2223 ;; *************** function _kernelAddProc *****************
  2224 ;; Defined at:
  2225 ;;		line 14 in file "kernel.c"
  2226 ;; Parameters:    Size  Location     Type
  2227 ;;  newProc         2   29[COMRAM] PTR struct .
  2228 ;;		 -> main@countTime_proc(8), main@SSDUpdate_proc(8), main@init_PD(8), 
  2229 ;; Auto vars:     Size  Location     Type
  2230 ;;		None
  2231 ;; Return value:  Size  Location     Type
  2232 ;;                  1    wreg      unsigned char 
  2233 ;; Registers used:
  2234 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2235 ;; Tracked objects:
  2236 ;;		On entry : 0/0
  2237 ;;		On exit  : 0/0
  2238 ;;		Unchanged: 0/0
  2239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2240 ;;      Params:         2       0       0       0       0       0       0
  2241 ;;      Locals:         0       0       0       0       0       0       0
  2242 ;;      Temps:          2       0       0       0       0       0       0
  2243 ;;      Totals:         4       0       0       0       0       0       0
  2244 ;;Total ram usage:        4 bytes
  2245 ;; Hardware stack levels used: 1
  2246 ;; Hardware stack levels required when called: 4
  2247 ;; This function calls:
  2248 ;;		___awmod
  2249 ;; This function is called by:
  2250 ;;		_main
  2251 ;;		_kernelLoop
  2252 ;; This function uses a non-reentrant model
  2253 ;;
  2254                           
  2255                           	psect	text10
  2256   00117C                     __ptext10:
  2257                           	callstack 0
  2258   00117C                     _kernelAddProc:
  2259                           	callstack 25
  2260   00117C                     
  2261                           ;kernel.c: 16: if (((end + 1) % 10) != start) {
  2262   00117C  5025               	movf	_start^0,w,c
  2263   00117E  6E4E               	movwf	??_kernelAddProc^0,c
  2264   001180  6A4F               	clrf	(??_kernelAddProc+1)^0,c
  2265   001182  0E01               	movlw	1
  2266   001184  2424               	addwf	_end^0,w,c
  2267   001186  6E46               	movwf	___awmod@dividend^0,c
  2268   001188  6A47               	clrf	(___awmod@dividend+1)^0,c
  2269   00118A  0E00               	movlw	0
  2270   00118C  2247               	addwfc	(___awmod@dividend+1)^0,f,c
  2271   00118E  0E00               	movlw	0
  2272   001190  6E49               	movwf	(___awmod@divisor+1)^0,c
  2273   001192  0E0A               	movlw	10
  2274   001194  6E48               	movwf	___awmod@divisor^0,c
  2275   001196  EC0E  F008         	call	___awmod	;wreg free
  2276   00119A  504E               	movf	??_kernelAddProc^0,w,c
  2277   00119C  1846               	xorwf	?___awmod^0,w,c
  2278   00119E  E109               	bnz	u2630
  2279   0011A0  504F               	movf	(??_kernelAddProc+1)^0,w,c
  2280   0011A2  1847               	xorwf	(?___awmod+1)^0,w,c
  2281   0011A4  B4D8               	btfsc	status,2,c
  2282   0011A6  EFD7  F008         	goto	u2631
  2283   0011AA  EFD9  F008         	goto	u2630
  2284   0011AE                     u2631:
  2285   0011AE  EF0F  F009         	goto	l78
  2286   0011B2                     u2630:
  2287   0011B2                     
  2288                           ;kernel.c: 17: pool[end] = newProc;
  2289   0011B2  5024               	movf	_end^0,w,c
  2290   0011B4  0D02               	mullw	2
  2291   0011B6  0E01               	movlw	low _pool
  2292   0011B8  24F3               	addwf	243,w,c
  2293   0011BA  6ED9               	movwf	fsr2l,c
  2294   0011BC  0E00               	movlw	high _pool
  2295   0011BE  20F4               	addwfc	prodh,w,c
  2296   0011C0  6EDA               	movwf	fsr2h,c
  2297   0011C2  C04C  FFDE         	movff	kernelAddProc@newProc,postinc2
  2298   0011C6  C04D  FFDD         	movff	kernelAddProc@newProc+1,postdec2
  2299   0011CA                     
  2300                           ;kernel.c: 18: pool[end]->start += newProc->period;
  2301   0011CA  EE20 F002          	lfsr	2,2
  2302   0011CE  504C               	movf	kernelAddProc@newProc^0,w,c
  2303   0011D0  26D9               	addwf	fsr2l,f,c
  2304   0011D2  504D               	movf	(kernelAddProc@newProc+1)^0,w,c
  2305   0011D4  22DA               	addwfc	fsr2h,f,c
  2306   0011D6  CFDE F04E          	movff	postinc2,??_kernelAddProc
  2307   0011DA  CFDD F04F          	movff	postdec2,??_kernelAddProc+1
  2308   0011DE  5024               	movf	_end^0,w,c
  2309   0011E0  0D02               	mullw	2
  2310   0011E2  0E01               	movlw	low _pool
  2311   0011E4  24F3               	addwf	243,w,c
  2312   0011E6  6ED9               	movwf	fsr2l,c
  2313   0011E8  0E00               	movlw	high _pool
  2314   0011EA  20F4               	addwfc	prodh,w,c
  2315   0011EC  6EDA               	movwf	fsr2h,c
  2316   0011EE  EE10 F004          	lfsr	1,4
  2317   0011F2  50DE               	movf	postinc2,w,c
  2318   0011F4  26E1               	addwf	fsr1l,f,c
  2319   0011F6  50DD               	movf	postdec2,w,c
  2320   0011F8  22E2               	addwfc	fsr1h,f,c
  2321   0011FA  504E               	movf	??_kernelAddProc^0,w,c
  2322   0011FC  26E6               	addwf	postinc1,f,c
  2323   0011FE  504F               	movf	(??_kernelAddProc+1)^0,w,c
  2324   001200  22E5               	addwfc	postdec1,f,c
  2325   001202                     
  2326                           ;kernel.c: 19: end = (end + 1) % 10;
  2327   001202  0E01               	movlw	1
  2328   001204  2424               	addwf	_end^0,w,c
  2329   001206  6E46               	movwf	___awmod@dividend^0,c
  2330   001208  6A47               	clrf	(___awmod@dividend+1)^0,c
  2331   00120A  0E00               	movlw	0
  2332   00120C  2247               	addwfc	(___awmod@dividend+1)^0,f,c
  2333   00120E  0E00               	movlw	0
  2334   001210  6E49               	movwf	(___awmod@divisor+1)^0,c
  2335   001212  0E0A               	movlw	10
  2336   001214  6E48               	movwf	___awmod@divisor^0,c
  2337   001216  EC0E  F008         	call	___awmod	;wreg free
  2338   00121A  5046               	movf	?___awmod^0,w,c
  2339   00121C  6E24               	movwf	_end^0,c
  2340   00121E                     l78:
  2341   00121E  0012               	return		;funcret
  2342   001220                     __end_of_kernelAddProc:
  2343                           	callstack 0
  2344                           
  2345 ;; *************** function _ssdDigit *****************
  2346 ;; Defined at:
  2347 ;;		line 38 in file "ssd.c"
  2348 ;; Parameters:    Size  Location     Type
  2349 ;;  val             1    wreg     unsigned char 
  2350 ;;  pos             1   15[COMRAM] unsigned char 
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;  val             1   16[COMRAM] unsigned char 
  2353 ;; Return value:  Size  Location     Type
  2354 ;;                  1    wreg      void 
  2355 ;; Registers used:
  2356 ;;		wreg, status,2, status,0
  2357 ;; Tracked objects:
  2358 ;;		On entry : 0/0
  2359 ;;		On exit  : 0/0
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2362 ;;      Params:         1       0       0       0       0       0       0
  2363 ;;      Locals:         1       0       0       0       0       0       0
  2364 ;;      Temps:          0       0       0       0       0       0       0
  2365 ;;      Totals:         2       0       0       0       0       0       0
  2366 ;;Total ram usage:        2 bytes
  2367 ;; Hardware stack levels used: 1
  2368 ;; Hardware stack levels required when called: 3
  2369 ;; This function calls:
  2370 ;;		Nothing
  2371 ;; This function is called by:
  2372 ;;		_countTime
  2373 ;; This function uses a non-reentrant model
  2374 ;;
  2375                           
  2376                           	psect	text11
  2377   001384                     __ptext11:
  2378                           	callstack 0
  2379   001384                     _ssdDigit:
  2380                           	callstack 25
  2381                           
  2382                           ;incstack = 0
  2383                           ;ssdDigit@val stored from wreg
  2384   001384  6E3F               	movwf	ssdDigit@val^0,c
  2385   001386                     
  2386                           ;ssd.c: 39: if (pos == 0) {
  2387   001386  503E               	movf	ssdDigit@pos^0,w,c
  2388   001388  A4D8               	btfss	status,2,c
  2389   00138A  EFC9  F009         	goto	u2471
  2390   00138E  EFCB  F009         	goto	u2470
  2391   001392                     u2471:
  2392   001392  EFCD  F009         	goto	l2739
  2393   001396                     u2470:
  2394   001396                     
  2395                           ;ssd.c: 40: v0 = val;
  2396   001396  C03F  F020         	movff	ssdDigit@val,_v0
  2397   00139A                     l2739:
  2398                           
  2399                           ;ssd.c: 41: };ssd.c: 42: if (pos == 1) {
  2400   00139A  043E               	decf	ssdDigit@pos^0,w,c
  2401   00139C  A4D8               	btfss	status,2,c
  2402   00139E  EFD3  F009         	goto	u2481
  2403   0013A2  EFD5  F009         	goto	u2480
  2404   0013A6                     u2481:
  2405   0013A6  EFD7  F009         	goto	l2743
  2406   0013AA                     u2480:
  2407   0013AA                     
  2408                           ;ssd.c: 43: v1 = val;
  2409   0013AA  C03F  F01F         	movff	ssdDigit@val,_v1
  2410   0013AE                     l2743:
  2411                           
  2412                           ;ssd.c: 44: };ssd.c: 45: if (pos == 2) {
  2413   0013AE  0E02               	movlw	2
  2414   0013B0  183E               	xorwf	ssdDigit@pos^0,w,c
  2415   0013B2  A4D8               	btfss	status,2,c
  2416   0013B4  EFDE  F009         	goto	u2491
  2417   0013B8  EFE0  F009         	goto	u2490
  2418   0013BC                     u2491:
  2419   0013BC  EFE2  F009         	goto	l2747
  2420   0013C0                     u2490:
  2421   0013C0                     
  2422                           ;ssd.c: 46: v2 = val;
  2423   0013C0  C03F  F01E         	movff	ssdDigit@val,_v2
  2424   0013C4                     l2747:
  2425                           
  2426                           ;ssd.c: 47: };ssd.c: 48: if (pos == 3) {
  2427   0013C4  0E03               	movlw	3
  2428   0013C6  183E               	xorwf	ssdDigit@pos^0,w,c
  2429   0013C8  A4D8               	btfss	status,2,c
  2430   0013CA  EFE9  F009         	goto	u2501
  2431   0013CE  EFEB  F009         	goto	u2500
  2432   0013D2                     u2501:
  2433   0013D2  EFED  F009         	goto	l461
  2434   0013D6                     u2500:
  2435   0013D6                     
  2436                           ;ssd.c: 49: v3 = val;
  2437   0013D6  C03F  F01D         	movff	ssdDigit@val,_v3
  2438   0013DA                     l461:
  2439   0013DA  0012               	return		;funcret
  2440   0013DC                     __end_of_ssdDigit:
  2441                           	callstack 0
  2442                           
  2443 ;; *************** function ___awmod *****************
  2444 ;; Defined at:
  2445 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  2446 ;; Parameters:    Size  Location     Type
  2447 ;;  dividend        2   23[COMRAM] int 
  2448 ;;  divisor         2   25[COMRAM] int 
  2449 ;; Auto vars:     Size  Location     Type
  2450 ;;  sign            1   28[COMRAM] unsigned char 
  2451 ;;  counter         1   27[COMRAM] unsigned char 
  2452 ;; Return value:  Size  Location     Type
  2453 ;;                  2   23[COMRAM] int 
  2454 ;; Registers used:
  2455 ;;		wreg, status,2, status,0
  2456 ;; Tracked objects:
  2457 ;;		On entry : 0/0
  2458 ;;		On exit  : 0/0
  2459 ;;		Unchanged: 0/0
  2460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2461 ;;      Params:         4       0       0       0       0       0       0
  2462 ;;      Locals:         2       0       0       0       0       0       0
  2463 ;;      Temps:          0       0       0       0       0       0       0
  2464 ;;      Totals:         6       0       0       0       0       0       0
  2465 ;;Total ram usage:        6 bytes
  2466 ;; Hardware stack levels used: 1
  2467 ;; Hardware stack levels required when called: 3
  2468 ;; This function calls:
  2469 ;;		Nothing
  2470 ;; This function is called by:
  2471 ;;		_countTime
  2472 ;;		_kernelAddProc
  2473 ;;		_kernelLoop
  2474 ;;		_dsdec2bcd
  2475 ;; This function uses a non-reentrant model
  2476 ;;
  2477                           
  2478                           	psect	text12
  2479   00101C                     __ptext12:
  2480                           	callstack 0
  2481   00101C                     ___awmod:
  2482                           	callstack 25
  2483   00101C  0E00               	movlw	0
  2484   00101E  6E4B               	movwf	___awmod@sign^0,c
  2485   001020  BE47               	btfsc	(___awmod@dividend+1)^0,7,c
  2486   001022  EF17  F008         	goto	u2570
  2487   001026  EF15  F008         	goto	u2571
  2488   00102A                     u2571:
  2489   00102A  EF1D  F008         	goto	l2803
  2490   00102E                     u2570:
  2491   00102E  6C46               	negf	___awmod@dividend^0,c
  2492   001030  1E47               	comf	(___awmod@dividend+1)^0,f,c
  2493   001032  B0D8               	btfsc	status,0,c
  2494   001034  2A47               	incf	(___awmod@dividend+1)^0,f,c
  2495   001036  0E01               	movlw	1
  2496   001038  6E4B               	movwf	___awmod@sign^0,c
  2497   00103A                     l2803:
  2498   00103A  BE49               	btfsc	(___awmod@divisor+1)^0,7,c
  2499   00103C  EF24  F008         	goto	u2580
  2500   001040  EF22  F008         	goto	u2581
  2501   001044                     u2581:
  2502   001044  EF28  F008         	goto	l2807
  2503   001048                     u2580:
  2504   001048  6C48               	negf	___awmod@divisor^0,c
  2505   00104A  1E49               	comf	(___awmod@divisor+1)^0,f,c
  2506   00104C  B0D8               	btfsc	status,0,c
  2507   00104E  2A49               	incf	(___awmod@divisor+1)^0,f,c
  2508   001050                     l2807:
  2509   001050  5048               	movf	___awmod@divisor^0,w,c
  2510   001052  1049               	iorwf	(___awmod@divisor+1)^0,w,c
  2511   001054  B4D8               	btfsc	status,2,c
  2512   001056  EF2F  F008         	goto	u2591
  2513   00105A  EF31  F008         	goto	u2590
  2514   00105E                     u2591:
  2515   00105E  EF55  F008         	goto	l2823
  2516   001062                     u2590:
  2517   001062  0E01               	movlw	1
  2518   001064  6E4A               	movwf	___awmod@counter^0,c
  2519   001066  EF39  F008         	goto	l2813
  2520   00106A                     l2811:
  2521   00106A  90D8               	bcf	status,0,c
  2522   00106C  3648               	rlcf	___awmod@divisor^0,f,c
  2523   00106E  3649               	rlcf	(___awmod@divisor+1)^0,f,c
  2524   001070  2A4A               	incf	___awmod@counter^0,f,c
  2525   001072                     l2813:
  2526   001072  AE49               	btfss	(___awmod@divisor+1)^0,7,c
  2527   001074  EF3E  F008         	goto	u2601
  2528   001078  EF40  F008         	goto	u2600
  2529   00107C                     u2601:
  2530   00107C  EF35  F008         	goto	l2811
  2531   001080                     u2600:
  2532   001080                     l2815:
  2533   001080  5048               	movf	___awmod@divisor^0,w,c
  2534   001082  5C46               	subwf	___awmod@dividend^0,w,c
  2535   001084  5049               	movf	(___awmod@divisor+1)^0,w,c
  2536   001086  5847               	subwfb	(___awmod@dividend+1)^0,w,c
  2537   001088  A0D8               	btfss	status,0,c
  2538   00108A  EF49  F008         	goto	u2611
  2539   00108E  EF4B  F008         	goto	u2610
  2540   001092                     u2611:
  2541   001092  EF4F  F008         	goto	l2819
  2542   001096                     u2610:
  2543   001096  5048               	movf	___awmod@divisor^0,w,c
  2544   001098  5E46               	subwf	___awmod@dividend^0,f,c
  2545   00109A  5049               	movf	(___awmod@divisor+1)^0,w,c
  2546   00109C  5A47               	subwfb	(___awmod@dividend+1)^0,f,c
  2547   00109E                     l2819:
  2548   00109E  90D8               	bcf	status,0,c
  2549   0010A0  3249               	rrcf	(___awmod@divisor+1)^0,f,c
  2550   0010A2  3248               	rrcf	___awmod@divisor^0,f,c
  2551   0010A4  2E4A               	decfsz	___awmod@counter^0,f,c
  2552   0010A6  EF40  F008         	goto	l2815
  2553   0010AA                     l2823:
  2554   0010AA  504B               	movf	___awmod@sign^0,w,c
  2555   0010AC  B4D8               	btfsc	status,2,c
  2556   0010AE  EF5B  F008         	goto	u2621
  2557   0010B2  EF5D  F008         	goto	u2620
  2558   0010B6                     u2621:
  2559   0010B6  EF61  F008         	goto	l2827
  2560   0010BA                     u2620:
  2561   0010BA  6C46               	negf	___awmod@dividend^0,c
  2562   0010BC  1E47               	comf	(___awmod@dividend+1)^0,f,c
  2563   0010BE  B0D8               	btfsc	status,0,c
  2564   0010C0  2A47               	incf	(___awmod@dividend+1)^0,f,c
  2565   0010C2                     l2827:
  2566   0010C2  C046  F046         	movff	___awmod@dividend,?___awmod
  2567   0010C6  C047  F047         	movff	___awmod@dividend+1,?___awmod+1
  2568   0010CA  0012               	return		;funcret
  2569   0010CC                     __end_of___awmod:
  2570                           	callstack 0
  2571                           
  2572 ;; *************** function ___awdiv *****************
  2573 ;; Defined at:
  2574 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  2575 ;; Parameters:    Size  Location     Type
  2576 ;;  dividend        2   15[COMRAM] int 
  2577 ;;  divisor         2   17[COMRAM] int 
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;  quotient        2   21[COMRAM] int 
  2580 ;;  sign            1   20[COMRAM] unsigned char 
  2581 ;;  counter         1   19[COMRAM] unsigned char 
  2582 ;; Return value:  Size  Location     Type
  2583 ;;                  2   15[COMRAM] int 
  2584 ;; Registers used:
  2585 ;;		wreg, status,2, status,0
  2586 ;; Tracked objects:
  2587 ;;		On entry : 0/0
  2588 ;;		On exit  : 0/0
  2589 ;;		Unchanged: 0/0
  2590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2591 ;;      Params:         4       0       0       0       0       0       0
  2592 ;;      Locals:         4       0       0       0       0       0       0
  2593 ;;      Temps:          0       0       0       0       0       0       0
  2594 ;;      Totals:         8       0       0       0       0       0       0
  2595 ;;Total ram usage:        8 bytes
  2596 ;; Hardware stack levels used: 1
  2597 ;; Hardware stack levels required when called: 3
  2598 ;; This function calls:
  2599 ;;		Nothing
  2600 ;; This function is called by:
  2601 ;;		_countTime
  2602 ;;		_dsdec2bcd
  2603 ;;		_dsbcd2dec
  2604 ;; This function uses a non-reentrant model
  2605 ;;
  2606                           
  2607                           	psect	text13
  2608   000F58                     __ptext13:
  2609                           	callstack 0
  2610   000F58                     ___awdiv:
  2611                           	callstack 25
  2612   000F58  0E00               	movlw	0
  2613   000F5A  6E43               	movwf	___awdiv@sign^0,c
  2614   000F5C  BE41               	btfsc	(___awdiv@divisor+1)^0,7,c
  2615   000F5E  EFB5  F007         	goto	u2510
  2616   000F62  EFB3  F007         	goto	u2511
  2617   000F66                     u2511:
  2618   000F66  EFBB  F007         	goto	l2759
  2619   000F6A                     u2510:
  2620   000F6A  6C40               	negf	___awdiv@divisor^0,c
  2621   000F6C  1E41               	comf	(___awdiv@divisor+1)^0,f,c
  2622   000F6E  B0D8               	btfsc	status,0,c
  2623   000F70  2A41               	incf	(___awdiv@divisor+1)^0,f,c
  2624   000F72  0E01               	movlw	1
  2625   000F74  6E43               	movwf	___awdiv@sign^0,c
  2626   000F76                     l2759:
  2627   000F76  BE3F               	btfsc	(___awdiv@dividend+1)^0,7,c
  2628   000F78  EFC2  F007         	goto	u2520
  2629   000F7C  EFC0  F007         	goto	u2521
  2630   000F80                     u2521:
  2631   000F80  EFC8  F007         	goto	l2765
  2632   000F84                     u2520:
  2633   000F84  6C3E               	negf	___awdiv@dividend^0,c
  2634   000F86  1E3F               	comf	(___awdiv@dividend+1)^0,f,c
  2635   000F88  B0D8               	btfsc	status,0,c
  2636   000F8A  2A3F               	incf	(___awdiv@dividend+1)^0,f,c
  2637   000F8C  0E01               	movlw	1
  2638   000F8E  1A43               	xorwf	___awdiv@sign^0,f,c
  2639   000F90                     l2765:
  2640   000F90  0E00               	movlw	0
  2641   000F92  6E45               	movwf	(___awdiv@quotient+1)^0,c
  2642   000F94  0E00               	movlw	0
  2643   000F96  6E44               	movwf	___awdiv@quotient^0,c
  2644   000F98  5040               	movf	___awdiv@divisor^0,w,c
  2645   000F9A  1041               	iorwf	(___awdiv@divisor+1)^0,w,c
  2646   000F9C  B4D8               	btfsc	status,2,c
  2647   000F9E  EFD3  F007         	goto	u2531
  2648   000FA2  EFD5  F007         	goto	u2530
  2649   000FA6                     u2531:
  2650   000FA6  EFFD  F007         	goto	l2787
  2651   000FAA                     u2530:
  2652   000FAA  0E01               	movlw	1
  2653   000FAC  6E42               	movwf	___awdiv@counter^0,c
  2654   000FAE  EFDD  F007         	goto	l2773
  2655   000FB2                     l2771:
  2656   000FB2  90D8               	bcf	status,0,c
  2657   000FB4  3640               	rlcf	___awdiv@divisor^0,f,c
  2658   000FB6  3641               	rlcf	(___awdiv@divisor+1)^0,f,c
  2659   000FB8  2A42               	incf	___awdiv@counter^0,f,c
  2660   000FBA                     l2773:
  2661   000FBA  AE41               	btfss	(___awdiv@divisor+1)^0,7,c
  2662   000FBC  EFE2  F007         	goto	u2541
  2663   000FC0  EFE4  F007         	goto	u2540
  2664   000FC4                     u2541:
  2665   000FC4  EFD9  F007         	goto	l2771
  2666   000FC8                     u2540:
  2667   000FC8                     l2775:
  2668   000FC8  90D8               	bcf	status,0,c
  2669   000FCA  3644               	rlcf	___awdiv@quotient^0,f,c
  2670   000FCC  3645               	rlcf	(___awdiv@quotient+1)^0,f,c
  2671   000FCE  5040               	movf	___awdiv@divisor^0,w,c
  2672   000FD0  5C3E               	subwf	___awdiv@dividend^0,w,c
  2673   000FD2  5041               	movf	(___awdiv@divisor+1)^0,w,c
  2674   000FD4  583F               	subwfb	(___awdiv@dividend+1)^0,w,c
  2675   000FD6  A0D8               	btfss	status,0,c
  2676   000FD8  EFF0  F007         	goto	u2551
  2677   000FDC  EFF2  F007         	goto	u2550
  2678   000FE0                     u2551:
  2679   000FE0  EFF7  F007         	goto	l2783
  2680   000FE4                     u2550:
  2681   000FE4  5040               	movf	___awdiv@divisor^0,w,c
  2682   000FE6  5E3E               	subwf	___awdiv@dividend^0,f,c
  2683   000FE8  5041               	movf	(___awdiv@divisor+1)^0,w,c
  2684   000FEA  5A3F               	subwfb	(___awdiv@dividend+1)^0,f,c
  2685   000FEC  8044               	bsf	___awdiv@quotient^0,0,c
  2686   000FEE                     l2783:
  2687   000FEE  90D8               	bcf	status,0,c
  2688   000FF0  3241               	rrcf	(___awdiv@divisor+1)^0,f,c
  2689   000FF2  3240               	rrcf	___awdiv@divisor^0,f,c
  2690   000FF4  2E42               	decfsz	___awdiv@counter^0,f,c
  2691   000FF6  EFE4  F007         	goto	l2775
  2692   000FFA                     l2787:
  2693   000FFA  5043               	movf	___awdiv@sign^0,w,c
  2694   000FFC  B4D8               	btfsc	status,2,c
  2695   000FFE  EF03  F008         	goto	u2561
  2696   001002  EF05  F008         	goto	u2560
  2697   001006                     u2561:
  2698   001006  EF09  F008         	goto	l2791
  2699   00100A                     u2560:
  2700   00100A  6C44               	negf	___awdiv@quotient^0,c
  2701   00100C  1E45               	comf	(___awdiv@quotient+1)^0,f,c
  2702   00100E  B0D8               	btfsc	status,0,c
  2703   001010  2A45               	incf	(___awdiv@quotient+1)^0,f,c
  2704   001012                     l2791:
  2705   001012  C044  F03E         	movff	___awdiv@quotient,?___awdiv
  2706   001016  C045  F03F         	movff	___awdiv@quotient+1,?___awdiv+1
  2707   00101A  0012               	return		;funcret
  2708   00101C                     __end_of___awdiv:
  2709                           	callstack 0
  2710                           
  2711 ;; *************** function _kernelInit *****************
  2712 ;; Defined at:
  2713 ;;		line 8 in file "kernel.c"
  2714 ;; Parameters:    Size  Location     Type
  2715 ;;		None
  2716 ;; Auto vars:     Size  Location     Type
  2717 ;;		None
  2718 ;; Return value:  Size  Location     Type
  2719 ;;                  1    wreg      unsigned char 
  2720 ;; Registers used:
  2721 ;;		wreg, status,2
  2722 ;; Tracked objects:
  2723 ;;		On entry : 0/0
  2724 ;;		On exit  : 0/0
  2725 ;;		Unchanged: 0/0
  2726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2727 ;;      Params:         0       0       0       0       0       0       0
  2728 ;;      Locals:         0       0       0       0       0       0       0
  2729 ;;      Temps:          0       0       0       0       0       0       0
  2730 ;;      Totals:         0       0       0       0       0       0       0
  2731 ;;Total ram usage:        0 bytes
  2732 ;; Hardware stack levels used: 1
  2733 ;; Hardware stack levels required when called: 3
  2734 ;; This function calls:
  2735 ;;		Nothing
  2736 ;; This function is called by:
  2737 ;;		_main
  2738 ;; This function uses a non-reentrant model
  2739 ;;
  2740                           
  2741                           	psect	text14
  2742   001494                     __ptext14:
  2743                           	callstack 0
  2744   001494                     _kernelInit:
  2745                           	callstack 27
  2746   001494                     
  2747                           ;kernel.c: 9: start = 0;
  2748   001494  0E00               	movlw	0
  2749   001496  6E25               	movwf	_start^0,c
  2750                           
  2751                           ;kernel.c: 10: end = 0;
  2752   001498  0E00               	movlw	0
  2753   00149A  6E24               	movwf	_end^0,c
  2754   00149C  0012               	return		;funcret
  2755   00149E                     __end_of_kernelInit:
  2756                           	callstack 0
  2757                           
  2758 ;; *************** function _ISR *****************
  2759 ;; Defined at:
  2760 ;;		line 10 in file "main.c"
  2761 ;; Parameters:    Size  Location     Type
  2762 ;;		None
  2763 ;; Auto vars:     Size  Location     Type
  2764 ;;		None
  2765 ;; Return value:  Size  Location     Type
  2766 ;;                  1    wreg      void 
  2767 ;; Registers used:
  2768 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2769 ;; Tracked objects:
  2770 ;;		On entry : 0/0
  2771 ;;		On exit  : 0/0
  2772 ;;		Unchanged: 0/0
  2773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2774 ;;      Params:         0       0       0       0       0       0       0
  2775 ;;      Locals:         0       0       0       0       0       0       0
  2776 ;;      Temps:          6       0       0       0       0       0       0
  2777 ;;      Totals:         6       0       0       0       0       0       0
  2778 ;;Total ram usage:        6 bytes
  2779 ;; Hardware stack levels used: 1
  2780 ;; Hardware stack levels required when called: 2
  2781 ;; This function calls:
  2782 ;;		_KernelClock
  2783 ;; This function is called by:
  2784 ;;		Interrupt level 2
  2785 ;; This function uses a non-reentrant model
  2786 ;;
  2787                           
  2788                           	psect	intcode
  2789   000008                     __pintcode:
  2790                           	callstack 0
  2791   000008                     _ISR:
  2792                           	callstack 24
  2793                           
  2794                           ;incstack = 0
  2795   000008  8261               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2796   00000A  ED19  F00A         	call	int_func,f	;refresh shadow registers
  2797                           
  2798                           	psect	intcode_body
  2799   001432                     __pintcode_body:
  2800                           	callstack 24
  2801   001432                     int_func:
  2802                           	callstack 24
  2803   001432  0006               	pop		; remove dummy address from shadow register refresh
  2804   001434  CFE1 F038          	movff	fsr1l,??_ISR
  2805   001438  CFE2 F039          	movff	fsr1h,??_ISR+1
  2806   00143C  CFD9 F03A          	movff	fsr2l,??_ISR+2
  2807   001440  CFDA F03B          	movff	fsr2h,??_ISR+3
  2808   001444  CFF3 F03C          	movff	prodl,??_ISR+4
  2809   001448  CFF4 F03D          	movff	prodh,??_ISR+5
  2810   00144C                     
  2811                           ;main.c: 12: if (((INTCON) & (1<<(2)))) {
  2812   00144C  A4F2               	btfss	242,2,c	;volatile
  2813   00144E  EF2B  F00A         	goto	i2u314_41
  2814   001452  EF2D  F00A         	goto	i2u314_40
  2815   001456                     i2u314_41:
  2816   001456  EF34  F00A         	goto	i2l34
  2817   00145A                     i2u314_40:
  2818   00145A                     
  2819                           ;main.c: 15: TMR0H = (63535 >> 8);
  2820   00145A  0EF8               	movlw	248
  2821   00145C  6ED7               	movwf	215,c	;volatile
  2822                           
  2823                           ;main.c: 16: TMR0L = (63535 & 0x00FF);
  2824   00145E  0E2F               	movlw	47
  2825   001460  6ED6               	movwf	214,c	;volatile
  2826   001462                     
  2827                           ;main.c: 18: KernelClock();
  2828   001462  EC10  F009         	call	_KernelClock	;wreg free
  2829   001466                     
  2830                           ;main.c: 21: ((INTCON) &= ~(1<<(2)));
  2831   001466  94F2               	bcf	242,2,c	;volatile
  2832   001468                     i2l34:
  2833   001468  C03D  FFF4         	movff	??_ISR+5,prodh
  2834   00146C  C03C  FFF3         	movff	??_ISR+4,prodl
  2835   001470  C03B  FFDA         	movff	??_ISR+3,fsr2h
  2836   001474  C03A  FFD9         	movff	??_ISR+2,fsr2l
  2837   001478  C039  FFE2         	movff	??_ISR+1,fsr1h
  2838   00147C  C038  FFE1         	movff	??_ISR,fsr1l
  2839   001480  9261               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2840   001482  0011               	retfie		f
  2841   001484                     __end_of_ISR:
  2842                           	callstack 0
  2843                           
  2844 ;; *************** function _KernelClock *****************
  2845 ;; Defined at:
  2846 ;;		line 74 in file "kernel.c"
  2847 ;; Parameters:    Size  Location     Type
  2848 ;;		None
  2849 ;; Auto vars:     Size  Location     Type
  2850 ;;  proc            1    8[COMRAM] unsigned char 
  2851 ;; Return value:  Size  Location     Type
  2852 ;;                  1    wreg      void 
  2853 ;; Registers used:
  2854 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2855 ;; Tracked objects:
  2856 ;;		On entry : 0/0
  2857 ;;		On exit  : 0/0
  2858 ;;		Unchanged: 0/0
  2859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2860 ;;      Params:         0       0       0       0       0       0       0
  2861 ;;      Locals:         1       0       0       0       0       0       0
  2862 ;;      Temps:          2       0       0       0       0       0       0
  2863 ;;      Totals:         3       0       0       0       0       0       0
  2864 ;;Total ram usage:        3 bytes
  2865 ;; Hardware stack levels used: 1
  2866 ;; Hardware stack levels required when called: 1
  2867 ;; This function calls:
  2868 ;;		i2___awmod
  2869 ;; This function is called by:
  2870 ;;		_ISR
  2871 ;; This function uses a non-reentrant model
  2872 ;;
  2873                           
  2874                           	psect	text16
  2875   001220                     __ptext16:
  2876                           	callstack 0
  2877   001220                     _KernelClock:
  2878                           	callstack 24
  2879   001220                     
  2880                           ;kernel.c: 75: unsigned char proc;;kernel.c: 76: for (proc = start; proc != end; proc = 
      +                          (proc + 1) % 10) {
  2881   001220  C025  F037         	movff	_start,KernelClock@proc
  2882   001224  EF50  F009         	goto	i2l2971
  2883   001228                     i2l2965:
  2884                           
  2885                           ;kernel.c: 77: if ((pool[proc]->start)>(-30000)) {
  2886   001228  5037               	movf	KernelClock@proc^0,w,c
  2887   00122A  0D02               	mullw	2
  2888   00122C  0E01               	movlw	low _pool
  2889   00122E  24F3               	addwf	243,w,c
  2890   001230  6ED9               	movwf	fsr2l,c
  2891   001232  0E00               	movlw	high _pool
  2892   001234  20F4               	addwfc	prodh,w,c
  2893   001236  6EDA               	movwf	fsr2h,c
  2894   001238  EE10 F004          	lfsr	1,4
  2895   00123C  50DE               	movf	postinc2,w,c
  2896   00123E  26E1               	addwf	fsr1l,f,c
  2897   001240  50DD               	movf	postdec2,w,c
  2898   001242  22E2               	addwfc	fsr1h,f,c
  2899   001244  0E01               	movlw	1
  2900   001246  AEE3               	btfss	plusw1,7,c
  2901   001248  EF31  F009         	goto	i2u294_40
  2902   00124C  0ED1               	movlw	209
  2903   00124E  5CE6               	subwf	postinc1,w,c
  2904   001250  0E8A               	movlw	138
  2905   001252  58E6               	subwfb	postinc1,w,c
  2906   001254  A0D8               	btfss	status,0,c
  2907   001256  EF2F  F009         	goto	i2u294_41
  2908   00125A  EF31  F009         	goto	i2u294_40
  2909   00125E                     i2u294_41:
  2910   00125E  EF42  F009         	goto	i2l2969
  2911   001262                     i2u294_40:
  2912   001262                     
  2913                           ;kernel.c: 78: pool[proc]->start--;
  2914   001262  5037               	movf	KernelClock@proc^0,w,c
  2915   001264  0D02               	mullw	2
  2916   001266  0E01               	movlw	low _pool
  2917   001268  24F3               	addwf	243,w,c
  2918   00126A  6ED9               	movwf	fsr2l,c
  2919   00126C  0E00               	movlw	high _pool
  2920   00126E  20F4               	addwfc	prodh,w,c
  2921   001270  6EDA               	movwf	fsr2h,c
  2922   001272  EE10 F004          	lfsr	1,4
  2923   001276  50DE               	movf	postinc2,w,c
  2924   001278  26E1               	addwf	fsr1l,f,c
  2925   00127A  50DD               	movf	postdec2,w,c
  2926   00127C  22E2               	addwfc	fsr1h,f,c
  2927   00127E  06E6               	decf	postinc1,f,c
  2928   001280  0E00               	movlw	0
  2929   001282  5AE5               	subwfb	postdec1,f,c
  2930   001284                     i2l2969:
  2931   001284  0E01               	movlw	1
  2932   001286  2437               	addwf	KernelClock@proc^0,w,c
  2933   001288  6E2F               	movwf	i2___awmod@dividend^0,c
  2934   00128A  6A30               	clrf	(i2___awmod@dividend+1)^0,c
  2935   00128C  0E00               	movlw	0
  2936   00128E  2230               	addwfc	(i2___awmod@dividend+1)^0,f,c
  2937   001290  0E00               	movlw	0
  2938   001292  6E32               	movwf	(i2___awmod@divisor+1)^0,c
  2939   001294  0E0A               	movlw	10
  2940   001296  6E31               	movwf	i2___awmod@divisor^0,c
  2941   001298  EC66  F008         	call	i2___awmod	;wreg free
  2942   00129C  502F               	movf	?i2___awmod^0,w,c
  2943   00129E  6E37               	movwf	KernelClock@proc^0,c
  2944   0012A0                     i2l2971:
  2945   0012A0  5024               	movf	_end^0,w,c
  2946   0012A2  1837               	xorwf	KernelClock@proc^0,w,c
  2947   0012A4  A4D8               	btfss	status,2,c
  2948   0012A6  EF57  F009         	goto	i2u295_41
  2949   0012AA  EF59  F009         	goto	i2u295_40
  2950   0012AE                     i2u295_41:
  2951   0012AE  EF14  F009         	goto	i2l2965
  2952   0012B2                     i2u295_40:
  2953   0012B2  0012               	return		;funcret
  2954   0012B4                     __end_of_KernelClock:
  2955                           	callstack 0
  2956                           
  2957 ;; *************** function i2___awmod *****************
  2958 ;; Defined at:
  2959 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  2960 ;; Parameters:    Size  Location     Type
  2961 ;;  dividend        2    0[COMRAM] int 
  2962 ;;  divisor         2    2[COMRAM] int 
  2963 ;; Auto vars:     Size  Location     Type
  2964 ;;  sign            1    5[COMRAM] unsigned char 
  2965 ;;  counter         1    4[COMRAM] unsigned char 
  2966 ;; Return value:  Size  Location     Type
  2967 ;;                  2    0[COMRAM] int 
  2968 ;; Registers used:
  2969 ;;		wreg, status,2, status,0
  2970 ;; Tracked objects:
  2971 ;;		On entry : 0/0
  2972 ;;		On exit  : 0/0
  2973 ;;		Unchanged: 0/0
  2974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2975 ;;      Params:         4       0       0       0       0       0       0
  2976 ;;      Locals:         2       0       0       0       0       0       0
  2977 ;;      Temps:          0       0       0       0       0       0       0
  2978 ;;      Totals:         6       0       0       0       0       0       0
  2979 ;;Total ram usage:        6 bytes
  2980 ;; Hardware stack levels used: 1
  2981 ;; This function calls:
  2982 ;;		Nothing
  2983 ;; This function is called by:
  2984 ;;		_KernelClock
  2985 ;; This function uses a non-reentrant model
  2986 ;;
  2987                           
  2988                           	psect	text17
  2989   0010CC                     __ptext17:
  2990                           	callstack 0
  2991   0010CC                     i2___awmod:
  2992                           	callstack 24
  2993   0010CC  0E00               	movlw	0
  2994   0010CE  6E34               	movwf	i2___awmod@sign^0,c
  2995   0010D0  BE30               	btfsc	(i2___awmod@dividend+1)^0,7,c
  2996   0010D2  EF6F  F008         	goto	i2u288_40
  2997   0010D6  EF6D  F008         	goto	i2u288_41
  2998   0010DA                     i2u288_41:
  2999   0010DA  EF75  F008         	goto	i2l2935
  3000   0010DE                     i2u288_40:
  3001   0010DE  6C2F               	negf	i2___awmod@dividend^0,c
  3002   0010E0  1E30               	comf	(i2___awmod@dividend+1)^0,f,c
  3003   0010E2  B0D8               	btfsc	status,0,c
  3004   0010E4  2A30               	incf	(i2___awmod@dividend+1)^0,f,c
  3005   0010E6  0E01               	movlw	1
  3006   0010E8  6E34               	movwf	i2___awmod@sign^0,c
  3007   0010EA                     i2l2935:
  3008   0010EA  BE32               	btfsc	(i2___awmod@divisor+1)^0,7,c
  3009   0010EC  EF7C  F008         	goto	i2u289_40
  3010   0010F0  EF7A  F008         	goto	i2u289_41
  3011   0010F4                     i2u289_41:
  3012   0010F4  EF80  F008         	goto	i2l2939
  3013   0010F8                     i2u289_40:
  3014   0010F8  6C31               	negf	i2___awmod@divisor^0,c
  3015   0010FA  1E32               	comf	(i2___awmod@divisor+1)^0,f,c
  3016   0010FC  B0D8               	btfsc	status,0,c
  3017   0010FE  2A32               	incf	(i2___awmod@divisor+1)^0,f,c
  3018   001100                     i2l2939:
  3019   001100  5031               	movf	i2___awmod@divisor^0,w,c
  3020   001102  1032               	iorwf	(i2___awmod@divisor+1)^0,w,c
  3021   001104  B4D8               	btfsc	status,2,c
  3022   001106  EF87  F008         	goto	i2u290_41
  3023   00110A  EF89  F008         	goto	i2u290_40
  3024   00110E                     i2u290_41:
  3025   00110E  EFAD  F008         	goto	i2l2955
  3026   001112                     i2u290_40:
  3027   001112  0E01               	movlw	1
  3028   001114  6E33               	movwf	i2___awmod@counter^0,c
  3029   001116  EF91  F008         	goto	i2l2945
  3030   00111A                     i2l2943:
  3031   00111A  90D8               	bcf	status,0,c
  3032   00111C  3631               	rlcf	i2___awmod@divisor^0,f,c
  3033   00111E  3632               	rlcf	(i2___awmod@divisor+1)^0,f,c
  3034   001120  2A33               	incf	i2___awmod@counter^0,f,c
  3035   001122                     i2l2945:
  3036   001122  AE32               	btfss	(i2___awmod@divisor+1)^0,7,c
  3037   001124  EF96  F008         	goto	i2u291_41
  3038   001128  EF98  F008         	goto	i2u291_40
  3039   00112C                     i2u291_41:
  3040   00112C  EF8D  F008         	goto	i2l2943
  3041   001130                     i2u291_40:
  3042   001130                     i2l2947:
  3043   001130  5031               	movf	i2___awmod@divisor^0,w,c
  3044   001132  5C2F               	subwf	i2___awmod@dividend^0,w,c
  3045   001134  5032               	movf	(i2___awmod@divisor+1)^0,w,c
  3046   001136  5830               	subwfb	(i2___awmod@dividend+1)^0,w,c
  3047   001138  A0D8               	btfss	status,0,c
  3048   00113A  EFA1  F008         	goto	i2u292_41
  3049   00113E  EFA3  F008         	goto	i2u292_40
  3050   001142                     i2u292_41:
  3051   001142  EFA7  F008         	goto	i2l2951
  3052   001146                     i2u292_40:
  3053   001146  5031               	movf	i2___awmod@divisor^0,w,c
  3054   001148  5E2F               	subwf	i2___awmod@dividend^0,f,c
  3055   00114A  5032               	movf	(i2___awmod@divisor+1)^0,w,c
  3056   00114C  5A30               	subwfb	(i2___awmod@dividend+1)^0,f,c
  3057   00114E                     i2l2951:
  3058   00114E  90D8               	bcf	status,0,c
  3059   001150  3232               	rrcf	(i2___awmod@divisor+1)^0,f,c
  3060   001152  3231               	rrcf	i2___awmod@divisor^0,f,c
  3061   001154  2E33               	decfsz	i2___awmod@counter^0,f,c
  3062   001156  EF98  F008         	goto	i2l2947
  3063   00115A                     i2l2955:
  3064   00115A  5034               	movf	i2___awmod@sign^0,w,c
  3065   00115C  B4D8               	btfsc	status,2,c
  3066   00115E  EFB3  F008         	goto	i2u293_41
  3067   001162  EFB5  F008         	goto	i2u293_40
  3068   001166                     i2u293_41:
  3069   001166  EFB9  F008         	goto	i2l2959
  3070   00116A                     i2u293_40:
  3071   00116A  6C2F               	negf	i2___awmod@dividend^0,c
  3072   00116C  1E30               	comf	(i2___awmod@dividend+1)^0,f,c
  3073   00116E  B0D8               	btfsc	status,0,c
  3074   001170  2A30               	incf	(i2___awmod@dividend+1)^0,f,c
  3075   001172                     i2l2959:
  3076   001172  C02F  F02F         	movff	i2___awmod@dividend,?i2___awmod
  3077   001176  C030  F030         	movff	i2___awmod@dividend+1,?i2___awmod+1
  3078   00117A  0012               	return		;funcret
  3079   00117C                     __end_ofi2___awmod:
  3080                           	callstack 0
  3081                           
  3082                           	psect	text18
  3083   000000                     __ptext18:
  3084                           	callstack 0
  3085   000000                     
  3086                           	psect	rparam
  3087   000000                     
  3088                           	psect	temp
  3089   000061                     btemp:
  3090                           	callstack 0
  3091   000061                     	ds	1
  3092   000000                     int$flags	set	btemp
  3093   000000                     wtemp8	set	btemp+1
  3094   000000                     ttemp5	set	btemp+1
  3095   000000                     ttemp6	set	btemp+4
  3096   000000                     ttemp7	set	btemp+8
  3097                           
  3098                           	psect	idloc
  3099                           
  3100                           ;Config register IDLOC0 @ 0x200000
  3101                           ;	unspecified, using default values
  3102   200000                     	org	2097152
  3103   200000  FF                 	db	255
  3104                           
  3105                           ;Config register IDLOC1 @ 0x200001
  3106                           ;	unspecified, using default values
  3107   200001                     	org	2097153
  3108   200001  FF                 	db	255
  3109                           
  3110                           ;Config register IDLOC2 @ 0x200002
  3111                           ;	unspecified, using default values
  3112   200002                     	org	2097154
  3113   200002  FF                 	db	255
  3114                           
  3115                           ;Config register IDLOC3 @ 0x200003
  3116                           ;	unspecified, using default values
  3117   200003                     	org	2097155
  3118   200003  FF                 	db	255
  3119                           
  3120                           ;Config register IDLOC4 @ 0x200004
  3121                           ;	unspecified, using default values
  3122   200004                     	org	2097156
  3123   200004  FF                 	db	255
  3124                           
  3125                           ;Config register IDLOC5 @ 0x200005
  3126                           ;	unspecified, using default values
  3127   200005                     	org	2097157
  3128   200005  FF                 	db	255
  3129                           
  3130                           ;Config register IDLOC6 @ 0x200006
  3131                           ;	unspecified, using default values
  3132   200006                     	org	2097158
  3133   200006  FF                 	db	255
  3134                           
  3135                           ;Config register IDLOC7 @ 0x200007
  3136                           ;	unspecified, using default values
  3137   200007                     	org	2097159
  3138   200007  FF                 	db	255
  3139                           
  3140                           	psect	config
  3141                           
  3142                           ; Padding undefined space
  3143   300000                     	org	3145728
  3144   300000  FF                 	db	255
  3145                           
  3146                           ;Config register CONFIG1H @ 0x300001
  3147                           ;	Oscillator Selection bits
  3148                           ;	OSC = HS, HS oscillator
  3149                           ;	Fail-Safe Clock Monitor Enable bit
  3150                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3151                           ;	Internal/External Oscillator Switchover bit
  3152                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3153   300001                     	org	3145729
  3154   300001  02                 	db	2
  3155                           
  3156                           ;Config register CONFIG2L @ 0x300002
  3157                           ;	Power-up Timer Enable bit
  3158                           ;	PWRT = OFF, PWRT disabled
  3159                           ;	Brown-out Reset Enable bits
  3160                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3161                           ;	Brown Out Reset Voltage bits
  3162                           ;	BORV = 2, 
  3163   300002                     	org	3145730
  3164   300002  11                 	db	17
  3165                           
  3166                           ;Config register CONFIG2H @ 0x300003
  3167                           ;	Watchdog Timer Enable bit
  3168                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3169                           ;	Watchdog Timer Postscale Select bits
  3170                           ;	WDTPS = 1, 1:1
  3171   300003                     	org	3145731
  3172   300003  00                 	db	0
  3173                           
  3174                           ; Padding undefined space
  3175   300004                     	org	3145732
  3176   300004  FF                 	db	255
  3177                           
  3178                           ;Config register CONFIG3H @ 0x300005
  3179                           ;	CCP2 MUX bit
  3180                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3181                           ;	PORTB A/D Enable bit
  3182                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  3183                           ;	Low-Power Timer1 Oscillator Enable bit
  3184                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3185                           ;	MCLR Pin Enable bit
  3186                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3187   300005                     	org	3145733
  3188   300005  83                 	db	131
  3189                           
  3190                           ;Config register CONFIG4L @ 0x300006
  3191                           ;	Stack Full/Underflow Reset Enable bit
  3192                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  3193                           ;	Single-Supply ICSP Enable bit
  3194                           ;	LVP = OFF, Single-Supply ICSP disabled
  3195                           ;	Extended Instruction Set Enable bit
  3196                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3197                           ;	Background Debugger Enable bit
  3198                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  3199   300006                     	org	3145734
  3200   300006  80                 	db	128
  3201                           
  3202                           ; Padding undefined space
  3203   300007                     	org	3145735
  3204   300007  FF                 	db	255
  3205                           
  3206                           ;Config register CONFIG5L @ 0x300008
  3207                           ;	Code Protection bit
  3208                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  3209                           ;	Code Protection bit
  3210                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  3211                           ;	Code Protection bit
  3212                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  3213                           ;	Code Protection bit
  3214                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  3215   300008                     	org	3145736
  3216   300008  0F                 	db	15
  3217                           
  3218                           ;Config register CONFIG5H @ 0x300009
  3219                           ;	Boot Block Code Protection bit
  3220                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3221                           ;	Data EEPROM Code Protection bit
  3222                           ;	CPD = OFF, Data EEPROM not code-protected
  3223   300009                     	org	3145737
  3224   300009  C0                 	db	192
  3225                           
  3226                           ;Config register CONFIG6L @ 0x30000A
  3227                           ;	Write Protection bit
  3228                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  3229                           ;	Write Protection bit
  3230                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  3231                           ;	Write Protection bit
  3232                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  3233                           ;	Write Protection bit
  3234                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  3235   30000A                     	org	3145738
  3236   30000A  0F                 	db	15
  3237                           
  3238                           ;Config register CONFIG6H @ 0x30000B
  3239                           ;	Configuration Register Write Protection bit
  3240                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3241                           ;	Boot Block Write Protection bit
  3242                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  3243                           ;	Data EEPROM Write Protection bit
  3244                           ;	WRTD = OFF, Data EEPROM not write-protected
  3245   30000B                     	org	3145739
  3246   30000B  E0                 	db	224
  3247                           
  3248                           ;Config register CONFIG7L @ 0x30000C
  3249                           ;	Table Read Protection bit
  3250                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  3251                           ;	Table Read Protection bit
  3252                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  3253                           ;	Table Read Protection bit
  3254                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  3255                           ;	Table Read Protection bit
  3256                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3257   30000C                     	org	3145740
  3258   30000C  0F                 	db	15
  3259                           
  3260                           ;Config register CONFIG7H @ 0x30000D
  3261                           ;	Boot Block Table Read Protection bit
  3262                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3263   30000D                     	org	3145741
  3264   30000D  40                 	db	64
  3265                           tosu	equ	0xFFF
  3266                           tosh	equ	0xFFE
  3267                           tosl	equ	0xFFD
  3268                           stkptr	equ	0xFFC
  3269                           pclatu	equ	0xFFB
  3270                           pclath	equ	0xFFA
  3271                           pcl	equ	0xFF9
  3272                           tblptru	equ	0xFF8
  3273                           tblptrh	equ	0xFF7
  3274                           tblptrl	equ	0xFF6
  3275                           tablat	equ	0xFF5
  3276                           prodh	equ	0xFF4
  3277                           prodl	equ	0xFF3
  3278                           indf0	equ	0xFEF
  3279                           postinc0	equ	0xFEE
  3280                           postdec0	equ	0xFED
  3281                           preinc0	equ	0xFEC
  3282                           plusw0	equ	0xFEB
  3283                           fsr0h	equ	0xFEA
  3284                           fsr0l	equ	0xFE9
  3285                           wreg	equ	0xFE8
  3286                           indf1	equ	0xFE7
  3287                           postinc1	equ	0xFE6
  3288                           postdec1	equ	0xFE5
  3289                           preinc1	equ	0xFE4
  3290                           plusw1	equ	0xFE3
  3291                           fsr1h	equ	0xFE2
  3292                           fsr1l	equ	0xFE1
  3293                           bsr	equ	0xFE0
  3294                           indf2	equ	0xFDF
  3295                           postinc2	equ	0xFDE
  3296                           postdec2	equ	0xFDD
  3297                           preinc2	equ	0xFDC
  3298                           plusw2	equ	0xFDB
  3299                           fsr2h	equ	0xFDA
  3300                           fsr2l	equ	0xFD9
  3301                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    16
    Data        24
    BSS         46
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     42      96
    BANK0           128     24      40
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    my_funcs$0	PTR void  size(2) Largest target is 0

    S148$2$0	PTR void  size(2) Largest target is 0

    kernelLoop$1274	PTR struct . size(2) Largest target is 8
		 -> main@countTime_proc(BANK0[8]), main@SSDUpdate_proc(BANK0[8]), main@init_PD(BANK0[8]), 

    ?_getLedDriver.initFunc	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> initGenerico(), 

    ?_getLedDriver.funcoes	PTR PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 4
		 -> my_funcs(COMRAM[4]), 

    sp__getLedDriver.initFunc	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> initGenerico(), 

    sp__getLedDriver.funcoes	PTR PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 4
		 -> my_funcs(COMRAM[4]), 

    sp__getLedDriver	PTR struct . size(2) Largest target is 6
		 -> myself(COMRAM[5]), 

    my_funcs	PTR FTN(PTR void ,)unsigned char [2] size(2) Largest target is 1
		 -> inverte(), changePORTD(), 

    S148$initFunc	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> initGenerico(), 

    myself.initFunc	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> initGenerico(), 

    S148$funcoes	PTR PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 4
		 -> my_funcs(COMRAM[4]), 

    myself.funcoes	PTR PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 4
		 -> my_funcs(COMRAM[4]), 

    kernelLoop@tempProc	PTR struct . size(2) Largest target is 8
		 -> main@countTime_proc(BANK0[8]), main@SSDUpdate_proc(BANK0[8]), main@init_PD(BANK0[8]), 

    kernelAddProc@newProc.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), initPORTAD(), 

    pool.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), initPORTAD(), 

    kernelAddProc@newProc	PTR struct . size(2) Largest target is 8
		 -> main@countTime_proc(BANK0[8]), main@SSDUpdate_proc(BANK0[8]), main@init_PD(BANK0[8]), 

    pool	PTR struct .[10] size(2) Largest target is 8
		 -> main@countTime_proc(BANK0[8]), main@SSDUpdate_proc(BANK0[8]), main@init_PD(BANK0[8]), 

    F2411.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), initPORTAD(), 

    countTime_proc.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), initPORTAD(), 

    F2408.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), initPORTAD(), 

    SSDUpdate_proc.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), initPORTAD(), 

    F2405.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), initPORTAD(), 

    S44$function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), initPORTAD(), 

    init_PD.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), initPORTAD(), 


Critical Paths under _main in COMRAM

    _main->_kernelLoop
    _ssdInit->_pinMode
    _kernelLoop->_kernelAddProc
    _ssdUpdate->_digitalWrite
    _kernelAddProc->___awmod
    _countTime->___awmod
    ___awmod->___awdiv

Critical Paths under _ISR in COMRAM

    _ISR->_KernelClock
    _KernelClock->i2___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0   18886
                                              0 BANK0     24    24      0
                      _kernelAddProc
                         _kernelInit
                         _kernelLoop
                            _ssdInit
                          _timerInit
 ---------------------------------------------------------------------------------
 (1) _timerInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    3140
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              6     2      4    3140
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _kernelLoop                                           9     9      0   12933
                                             33 COMRAM     9     9      0
                            ___awmod
                          _countTime *
                         _initPORTAD *
                      _kernelAddProc
                          _updateSSD *
 ---------------------------------------------------------------------------------
 (2) _updateSSD                                            0     0      0    3512
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (3) _ssdUpdate                                            0     0      0    3512
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (4) _digitalWrite                                         6     2      4    3512
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _kernelAddProc                                        4     2      2    2585
                                             29 COMRAM     4     2      2
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _initPORTAD                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _countTime                                            2     2      0    4252
                                             29 COMRAM     2     2      0
                            ___awdiv
                            ___awmod
                           _ssdDigit
 ---------------------------------------------------------------------------------
 (3) _ssdDigit                                             2     1      1     608
                                             15 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    2163
                                             23 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1345
                                             15 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _kernelInit                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  6     6      0     633
                                              9 COMRAM     6     6      0
                        _KernelClock
 ---------------------------------------------------------------------------------
 (6) _KernelClock                                          3     3      0     633
                                              6 COMRAM     3     3      0
                          i2___awmod
 ---------------------------------------------------------------------------------
 (7) i2___awmod                                            6     2      4     503
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _kernelAddProc
     ___awmod
       ___awdiv (ARG)
   _kernelInit
   _kernelLoop
     ___awmod
     _countTime *
       ___awdiv
       ___awmod
       _ssdDigit
     _initPORTAD *
     _kernelAddProc *
     _updateSSD *
       _ssdUpdate
         _digitalWrite
   _ssdInit
     _pinMode
   _timerInit

 _ISR (ROOT)
   _KernelClock
     i2___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     18      28       5       31.2%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     2A      60       1       76.2%
BITBIGSFRlh         1A      0       0      17        0.0%
BITBIGSFRllhll       D      0       0      27        0.0%
BITBIGSFRh           D      0       0      16        0.0%
BITBIGSFRllhhll      C      0       0      25        0.0%
BITBIGSFRllhhll      7      0       0      24        0.0%
BITBIGSFRllhhll      7      0       0      26        0.0%
BITBIGSFRllhhlh      5      0       0      20        0.0%
BITBIGSFRllhhll      4      0       0      23        0.0%
BITBIGSFRllhhlh      4      0       0      19        0.0%
BITBIGSFRllhhh       4      0       0      18        0.0%
BITBIGSFRllhhll      1      0       0      22        0.0%
BITBIGSFRllhhll      1      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      88      28        0.0%
DATA                 0      0      88       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Nov 08 08:18:52 2022

           fp__countTime 0000            fp__initPORTAD 0000                       l40 14B4  
                     l54 0F56                       l49 14BC                       l81 0612  
                     l65 1326                       l74 149C                       l78 121E  
           ___awdiv@sign 0043                       _v0 0020                       _v1 001F  
                     _v2 001E                       _v3 001D                      l211 0D3E  
                    l245 0AF0                      l461 13DA                      l471 0E7A  
                    l474 1430                      l731 101A                      l744 10CA  
                    l497 14AC                      _PR2 000FCB                      _ISR 0008  
                    _end 0024             ___awmod@sign 004B                      prod 000FF3  
                    tosl 000FFD                      wreg 000FE8                     ?_ISR 002F  
                   l3001 075C                     l3011 07E2                     l3003 0778  
                   l3013 081C                     l3005 078A                     l3101 12F2  
                   l3015 0866                     l3007 07A2                     l3111 131C  
                   l3103 12F6                     l3017 0882                     l3009 07CA  
                   l3113 131E                     l3105 1302                     l3115 1320  
                   l3107 130E                     l3117 1322                     l3109 131A  
                   l2701 0D6C                     l2711 0DCA                     l2703 0D80  
                   l3095 12B4                     l2801 1036                     l2721 0E1E  
                   l2713 0DDC                     l2705 0D9C                     l3097 12EA  
                   l2811 106A                     l2803 103A                     l2723 0E26  
                   l2715 0DF0                     l2707 0DAE                     l3099 12EE  
                   l2821 10A4                     l2813 1072                     l2805 1048  
                   l2741 13AA                     l2661 0B40                     l2725 0E38  
                   l2717 0DF8                     l2709 0DC2                     l2733 0E54  
                   l2901 0A20                     l2751 0F58                     l2815 1080  
                   l2823 10AA                     l2807 1050                     l2743 13AE  
                   l2735 1386                     l2671 0BDA                     l2663 0B62  
                   l2655 0AF2                     l2727 0E4C                     l2719 0E0A  
                   l2831 14AE                     l2911 0AAA                     l2903 0A32  
                   l2761 0F84                     l2753 0F5C                     l2825 10BA  
                   l2817 1096                     l2809 1062                     l2745 13C0  
                   l2737 1396                     l2681 0C6E                     l2673 0BF6  
                   l2665 0B7E                     l2657 0B0E                     l2833 14B2  
                   l2913 0ACE                     l2905 0A56                     l2771 0FB2  
                   l2763 0F8C                     l2755 0F6A                     l2827 10C2  
                   l2819 109E                     l2747 13C4                     l2739 139A  
                   l2691 0D00                     l2683 0C88                     l2675 0C10  
                   l2667 0B98                     l2659 0B20                     l2851 0ED6  
                   l2843 0E7C                     l2907 0A7C                     l2781 0FEC  
                   l2773 0FBA                     l2765 0F90                     l2757 0F72  
                   l2749 13D6                     l2693 0D20                     l2685 0CA8  
                   l2677 0C30                     l2669 0BB8                     l2837 14B6  
                   l2861 0F54                     l2853 0EE0                     l2845 0E80  
                   l2909 0A98                     l2791 1012                     l2783 0FEE  
                   l2775 0FC8                     l2767 0F98                     l2759 0F76  
                   l2871 1202                     l2687 0CCA                     l2679 0C52  
                   l2695 0D40                     l2839 14BA                     l2855 0F10  
                   l2847 0E9C                     l2785 0FF4                     l2777 0FCE  
                   l2769 0FAA                     l2865 117C                     l2689 0CE6  
                   l2697 0D44                     l2857 0F1A                     l2849 0EA6  
                   l2881 08F2                     l2779 0FE4                     l2787 0FFA  
                   l2795 101C                     l2867 11B2                     l2699 0D58  
                   l2859 0F4A                     l2891 098C                     l2883 0914  
                   l2875 08A4                     l2981 1494                     l2789 100A  
                   l2797 1020                     l2869 11CA                     l2893 09A8  
                   l2885 0930                     l2877 08C0                     l2973 14A6  
                   l2799 102E                     l2991 066A                     l2895 09BA  
                   l2887 0942                     l2879 08D2                     l2975 14AA  
                   l2993 06A4                     l2985 0612                     l2897 09DE  
                   l2889 0966                     l2977 13DC                     l2995 06FA  
                   l2987 0624                     l2899 0A04                     l2979 142C  
                   l2997 0702                     l2989 0630                     u3000 0758  
                   u3001 0754                     u3010 078A                     u3011 0786  
                   u3020 081C                     u3021 0818                     u2310 0B7E  
                   u2311 0B7A                     u2400 0C88                     u2320 0B98  
                   u2304 0B52                     u3040 0866                     u2401 0C84  
                   u2321 0B94                     u2305 0B4E                     u3041 0862  
                   u2500 13D6                     u2501 13D2                     u2510 0F6A  
                   u2430 0CE6                     u2414 0C9A                     u2350 0BF6  
                   u2334 0BAA                     u2270 0B0E                     u3038 0842  
                   u2511 0F66                     u2431 0CE2                     u2415 0C96  
                   u2351 0BF2                     u2335 0BA6                     u2271 0B0A  
                   u3039 0856                     u3151 12BE                     u2520 0F84  
                   u2600 1080                     u2440 0D00                     u2424 0CBA  
                   u2360 0C10                     u2344 0BCA                     u2280 0B20  
                   u2521 0F80                     u2601 107C                     u2441 0CFC  
                   u2425 0CB6                     u2361 0C0C                     u2345 0BC6  
                   u2281 0B1C                     u3161 12D0                     u2530 0FAA  
                   u2610 1096                     u2531 0FA6                     u2611 1092  
                   u3171 12E2                     u2540 0FC8                     u2620 10BA  
                   u2541 0FC4                     u2621 10B6                     u2550 0FE4  
                   u2470 1396                     u2630 11B2                     u2454 0D12  
                   u2390 0C6E                     u2374 0C22                     u2294 0B32  
                   u2551 0FE0                     u2471 1392                     u2631 11AE  
                   u2455 0D0E                     u2391 0C6A                     u2375 0C1E  
                   u2295 0B2E                     u2560 100A                     u2480 13AA  
                   u2464 0D32                     u2384 0C42                     u2800 0A98  
                   u2720 09A8                     u2704 0958                     u2640 08C0  
                   u2561 1006                     u2481 13A6                     u2465 0D2E  
                   u2385 0C3E                     u2801 0A94                     u2721 09A4  
                   u2705 0954                     u2641 08BC                     u2570 102E  
                   u2490 13C0                     u2810 0AAA                     u2730 09BA  
                   u2714 097C                     u2650 08D2                     u2571 102A  
                   u2491 13BC                     u2811 0AA6                     u2731 09B6  
                   u2715 0978                     u2651 08CE                     u2580 1048  
                   u2581 1044                     u2590 1062                     u2591 105E  
                   u2824 0AC0                     u2760 0A20                     u2744 09D0  
                   u2680 0930                     u2664 08E4                     u2825 0ABC  
                   u2761 0A1C                     u2745 09CC                     u2681 092C  
                   u2665 08E0                     u2834 0AE4                     u2770 0A32  
                   u2754 09F4                     u2690 0942                     u2674 0904  
                   u2835 0AE0                     u2771 0A2E                     u2755 09F0  
                   u2691 093E                     u2675 0900                     u2960 0624  
                   u2784 0A48                     u2961 0620                     u2785 0A44  
                   u2970 066A                     u2794 0A6C                     u2971 0666  
                   u2795 0A68                     u2980 06A4                     u2981 06A0  
                   u2990 06FA                     u2991 06F6                     _PIR1 000F9E  
                   i2l34 1468              main@init_PD 0080                     _RCON 000FD0  
                   _main 12B4                     _pool 0001             fp__updateSSD 0000  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr2h 000FDA  
                   fsr0l 000FE9                     fsr1l 000FE1                     fsr2l 000FD9  
                   btemp 0061       kernelLoop@tempProc 0055                     prodh 000FF4  
                   prodl 000FF3                     start 000E            ??_KernelClock 0035  
           ___param_bank 000000                    ??_ISR 0038                    ?_main 002F  
        __end_of___awdiv 101C          __end_of___awmod 10CC                    _T0CON 000FD5  
        ___awdiv@divisor 0040                    _T2CON 000FCA                    i2l101 12B2  
                  i2l744 117A          ___awdiv@counter 0042                    _RCREG 000FAE  
                  _RCSTA 000FAB                    _TMR0H 000FD7                    _TMR0L 000FD6  
                  _SPBRG 000FAF                    _PORTA 000F80                    _PORTB 000F81  
                  _PORTC 000F82                    _PORTD 000F83                    _PORTE 000F84  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    _TRISE 000F96                    _TXREG 000FAD  
                  _TXSTA 000FAC          __end_of_pinMode 0AF2                    _valor 001B  
                  _start 0025                    pclath 000FFA                    tablat 000FF5  
        __end_of_ssdInit 1432                    plusw1 000FE3                    plusw2 000FDB  
                  ttemp5 0062                    ttemp6 0065                    ttemp7 0069  
                  status 000FD8                    wtemp8 0062     __end_of_digitalWrite 0D40  
        __initialization 132A             __end_of_main 132A      __end_of_KernelClock 12B4  
                 ??_main 0059            __activetblptr 000002                   _ADCON0 000FC2  
                 _ADCON2 000FC0                   _ADRESH 000FC4                   _ADRESL 000FC3  
                 _CCPR1L 000FBE         ___awdiv@dividend 003E                   i2l3091 1462  
                 i2l3093 1466                   i2l3087 144C                   i2l3089 145A  
                 i2l2931 10DE                   i2l2941 1112                   i2l2933 10E6  
                 i2l2951 114E                   i2l2943 111A                   i2l2935 10EA  
                 i2l2927 10CC                   i2l2953 1154                   i2l2945 1122  
                 i2l2937 10F8                   i2l2929 10D0                   i2l2947 1130  
                 i2l2955 115A                   i2l2939 1100                   i2l2971 12A0  
                 i2l2963 1220                   i2l2957 116A                   i2l2949 1146  
                 i2l2965 1228                   i2l2959 1172                   i2l2967 1262  
                 _INTCON 000FF2                   i2l2969 1284                   _SPBRGH 000FB0  
            kernelLoop@p 0058                ??___awdiv 0042                ??___awmod 004A  
                 clear_0 1370         ___awdiv@quotient 0044          ___awmod@divisor 0048  
                 isa$std 000001          ___awmod@counter 004A                   _myself 0026  
          _kernelAddProc 117C         __end_of_ssdDigit 13DC             __pdataCOMRAM 0059  
              ??_pinMode 0042        __end_ofi2___awmod 117C             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
              ??_ssdInit 0044           i2___awmod@sign 0034               __accesstop 0080  
__end_of__initialization 1376            ___rparam_used 000001             countTime@dig 004C  
            _KernelClock 1220              pinMode@type 0040           __pcstackCOMRAM 002F  
           __pidataBANK0 1484           ?_kernelAddProc 004C                  _CCP1CON 000FBD  
                _BAUDCON 000FB8             _digitalWrite 0AF2               _initPORTAD 14AE  
                __Hparam 0000                  __Lparam 0000                ?_ssdDigit 003E  
        kpDebounce@tempo 0023               _kernelInit 1494               _kernelLoop 0612  
                ___awdiv 0F58                  ___awmod 101C          ??_kernelAddProc 004E  
           __psmallconst 0600              ssdDigit@val 003F              ssdDigit@pos 003E  
                __pcinit 132A        __end_of_countTime 0F58                  __ramtop 0600  
                __ptext0 12B4                  __ptext1 14A6                  __ptext2 13DC  
                __ptext3 08A4                  __ptext4 0612                  __ptext5 0E7C  
                __ptext6 14AE                  __ptext7 14B6                  __ptext8 0D40  
                __ptext9 0AF2                  _display 0021                  _pinMode 08A4  
       ___awmod@dividend 0046                  _inverte 000000                  _ssdInit 13DC  
                _started 0022      kpDebounce@valorNovo 0017           __pintcode_body 1432  
   end_of_initialization 1376            __Lmediumconst 0000                  int_func 1432  
      __end_of_timerInit 14AE        __end_of_ssdUpdate 0E7C               ??_ssdDigit 003F  
      __end_of_updateSSD 14BE                  postdec1 000FE5                  postdec2 000FDD  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
         _valor@ssd$F527 0601           kernelLoop@next 0057                i2___awmod 10CC  
            ?_initPORTAD 002F             ?_KernelClock 002F              ?_kernelInit 002F  
            ?_kernelLoop 002F            __pidataCOMRAM 149E   __end_of_valor@ssd$F527 0611  
    start_initialization 132A              __end_of_ISR 1484               ?i2___awmod 002F  
        KernelClock@proc 0037             _initGenerico 000000       main@SSDUpdate_proc 0088  
            __pdataBANK0 0098              _changePORTD 000000              __pbssCOMRAM 0001  
          __pcstackBANK0 0080     kernelAddProc@newProc 004C               pinMode@pin 003E  
              __pintcode 0008                 ?___awdiv 003E                 ?___awmod 0046  
            __smallconst 0600                 ?_pinMode 003E                _countTime 0E7C  
               ?_ssdInit 002F              ??i2___awmod 0033       main@countTime_proc 0090  
               i2u314_40 145A                 i2u314_41 1456                 i2u290_40 1112  
               i2u290_41 110E                 i2u291_40 1130                 i2u291_41 112C  
               i2u292_40 1146                 i2u292_41 1142                 i2u293_40 116A  
               i2u293_41 1166                 i2u294_40 1262                 i2u294_41 125E  
               i2u295_40 12B2                 i2u295_41 12AE                 i2u288_40 10DE  
               i2u288_41 10DA                 i2u289_40 10F8                 i2u289_41 10F4  
              main@F2411 0098                main@F2405 0059                main@F2408 00A0  
              _timerInit 14A6                _ssdUpdate 0D40                _updateSSD 14B6  
  __end_of_kernelAddProc 1220    kpDebounce@valorAntigo 0015               ?_countTime 002F  
              copy_data0 133E                copy_data1 135E       i2___awmod@dividend 002F  
           ??_initPORTAD 003E                 __Hrparam 0000                 __Lrparam 0000  
           ??_kernelInit 003E             ??_kernelLoop 0050               ?_timerInit 002F  
             ?_ssdUpdate 002F               ?_updateSSD 002F       __end_of_initPORTAD 14B6  
               __ptext10 117C                 __ptext11 1384                 __ptext12 101C  
               __ptext13 0F58                 __ptext14 1494                 __ptext16 1220  
               __ptext17 10CC                 __ptext18 0000       __end_of_kernelInit 149E  
     __end_of_kernelLoop 08A4                 _ssdDigit 1384                 _my_funcs 002B  
               isa$xinst 000000                 int$flags 0061        i2___awmod@divisor 0031  
      i2___awmod@counter 0033              ??_countTime 004C            ?_digitalWrite 003E  
               intlevel2 0000        digitalWrite@value 0040              ??_timerInit 003E  
            ??_ssdUpdate 0044              ??_updateSSD 0044           ??_digitalWrite 0042  
        digitalWrite@pin 003E        _valor@keypad$F305 0019  
