

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Nov 13 19:53:54 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    42                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    44   000000                     
    45                           ; Version 2.40
    46                           ; Generated 17/11/2021 GMT
    47                           ; 
    48                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution. Publication is not required when
    62                           ;        this file is used in an embedded application.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC18F4520 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80   000000                     
    81 ;; Function _changePORTD is unused but had its address taken
    82   000000                     
    83 ;; Function _inverte is unused but had its address taken
    84   000000                     
    85 ;; Function _initGenerico is unused but had its address taken
    86   000000                     
    87                           	psect	idataCOMRAM
    88   001638                     __pidataCOMRAM:
    89                           	callstack 0
    90                           
    91                           ;initializer for main@F2411
    92   001638  48                 	db	low _initPORTAD
    93   001639  16                 	db	high _initPORTAD
    94   00163A  0000               	dw	0
    95   00163C  0000               	dw	0
    96   00163E  000F               	dw	15
    97                           
    98                           	psect	idataBANK0
    99   00161E                     __pidataBANK0:
   100                           	callstack 0
   101                           
   102                           ;initializer for main@F2417
   103   00161E  7C                 	db	low _countTime
   104   00161F  0E                 	db	high _countTime
   105   001620  03E8               	dw	1000
   106   001622  0000               	dw	0
   107   001624  000A               	dw	10
   108                           
   109                           ;initializer for main@F2414
   110   001626  50                 	db	low _updateSSD
   111   001627  16                 	db	high _updateSSD
   112   001628  0005               	dw	5
   113   00162A  0000               	dw	0
   114   00162C  0005               	dw	5
   115                           
   116                           	psect	smallconst
   117   000600                     __psmallconst:
   118                           	callstack 0
   119   000600  00                 	db	0
   120   000601                     _valor@ssd$F540:
   121                           	callstack 0
   122   000601  3F                 	db	63
   123   000602  06                 	db	6
   124   000603  5B                 	db	91
   125   000604  4F                 	db	79
   126   000605  66                 	db	102
   127   000606  6D                 	db	109
   128   000607  7D                 	db	125
   129   000608  07                 	db	7
   130   000609  7F                 	db	127
   131   00060A  6F                 	db	111
   132   00060B  77                 	db	119
   133   00060C  7C                 	db	124
   134   00060D  39                 	db	57
   135   00060E  5E                 	db	94
   136   00060F  79                 	db	121
   137   000610  71                 	db	113
   138   000611                     __end_of_valor@ssd$F540:
   139                           	callstack 0
   140   000000                     _SPBRG	set	4015
   141   000000                     _SPBRGH	set	4016
   142   000000                     _BAUDCON	set	4024
   143   000000                     _TXSTA	set	4012
   144   000000                     _RCREG	set	4014
   145   000000                     _TRISC	set	3988
   146   000000                     _TRISB	set	3987
   147   000000                     _PORTC	set	3970
   148   000000                     _PORTB	set	3969
   149   000000                     _PORTA	set	3968
   150   000000                     _ADRESL	set	4035
   151   000000                     _ADRESH	set	4036
   152   000000                     _PORTD	set	3971
   153   000000                     _TMR0L	set	4054
   154   000000                     _TMR0H	set	4055
   155   000000                     _INTCON	set	4082
   156   000000                     _TRISA	set	3986
   157   000000                     _PORTE	set	3972
   158   000000                     _TRISD	set	3989
   159   000000                     _PIR1	set	3998
   160   000000                     _CCP1CON	set	4029
   161   000000                     _CCPR1L	set	4030
   162   000000                     _TRISE	set	3990
   163   000000                     _ADCON2	set	4032
   164   000000                     _ADCON0	set	4034
   165   000000                     _RCON	set	4048
   166   000000                     _T0CON	set	4053
   167   000000                     _T2CON	set	4042
   168   000000                     _PR2	set	4043
   169   000000                     _RCSTA	set	4011
   170   000000                     _TXREG	set	4013
   171   000611  00                 	db	0	; dummy byte at the end
   172   000000                     
   173                           ; #config settings
   174                           
   175                           	psect	cinit
   176   00143C                     __pcinit:
   177                           	callstack 0
   178   00143C                     start_initialization:
   179                           	callstack 0
   180   00143C                     __initialization:
   181                           	callstack 0
   182                           
   183                           ; Initialize objects allocated to BANK0 (16 bytes)
   184                           ; load TBLPTR registers with __pidataBANK0
   185   00143C  0E1E               	movlw	low __pidataBANK0
   186   00143E  6EF6               	movwf	tblptrl,c
   187   001440  0E16               	movlw	high __pidataBANK0
   188   001442  6EF7               	movwf	tblptrh,c
   189   001444  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   190   001446  6EF8               	movwf	tblptru,c
   191   001448  EE00  F098         	lfsr	0,__pdataBANK0
   192   00144C  EE10 F010          	lfsr	1,16
   193   001450                     copy_data0:
   194   001450  0009               	tblrd		*+
   195   001452  CFF5 FFEE          	movff	tablat,postinc0
   196   001456  50E5               	movf	postdec1,w,c
   197   001458  50E1               	movf	fsr1l,w,c
   198   00145A  E1FA               	bnz	copy_data0
   199                           
   200                           ; Initialize objects allocated to COMRAM (8 bytes)
   201                           ; load TBLPTR registers with __pidataCOMRAM
   202   00145C  0E38               	movlw	low __pidataCOMRAM
   203   00145E  6EF6               	movwf	tblptrl,c
   204   001460  0E16               	movlw	high __pidataCOMRAM
   205   001462  6EF7               	movwf	tblptrh,c
   206   001464  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   207   001466  6EF8               	movwf	tblptru,c
   208   001468  EE00  F059         	lfsr	0,__pdataCOMRAM
   209   00146C  EE10 F008          	lfsr	1,8
   210   001470                     copy_data1:
   211   001470  0009               	tblrd		*+
   212   001472  CFF5 FFEE          	movff	tablat,postinc0
   213   001476  50E5               	movf	postdec1,w,c
   214   001478  50E1               	movf	fsr1l,w,c
   215   00147A  E1FA               	bnz	copy_data1
   216                           
   217                           ; Clear objects allocated to COMRAM (46 bytes)
   218   00147C  EE00  F001         	lfsr	0,__pbssCOMRAM
   219   001480  0E2E               	movlw	46
   220   001482                     clear_0:
   221   001482  6AEE               	clrf	postinc0,c
   222   001484  06E8               	decf	wreg,f,c
   223   001486  E1FD               	bnz	clear_0
   224   001488                     end_of_initialization:
   225                           	callstack 0
   226   001488                     __end_of__initialization:
   227                           	callstack 0
   228   001488  9061               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   229   00148A  9261               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   230   00148C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   231   00148E  6EF8               	movwf	tblptru,c
   232   001490  0100               	movlb	0
   233   001492  EF5A  F009         	goto	_main	;jump to C main() function
   234                           
   235                           	psect	bssCOMRAM
   236   000001                     __pbssCOMRAM:
   237                           	callstack 0
   238   000001                     _pool:
   239                           	callstack 0
   240   000001                     	ds	20
   241   000015                     kpDebounce@valorAntigo:
   242                           	callstack 0
   243   000015                     	ds	2
   244   000017                     kpDebounce@valorNovo:
   245                           	callstack 0
   246   000017                     	ds	2
   247   000019                     _valor@keypad$F319:
   248                           	callstack 0
   249   000019                     	ds	2
   250   00001B                     _valor:
   251                           	callstack 0
   252   00001B                     	ds	2
   253   00001D                     _v3:
   254                           	callstack 0
   255   00001D                     	ds	1
   256   00001E                     _v2:
   257                           	callstack 0
   258   00001E                     	ds	1
   259   00001F                     _v1:
   260                           	callstack 0
   261   00001F                     	ds	1
   262   000020                     _v0:
   263                           	callstack 0
   264   000020                     	ds	1
   265   000021                     _display:
   266                           	callstack 0
   267   000021                     	ds	1
   268   000022                     _started:
   269                           	callstack 0
   270   000022                     	ds	1
   271   000023                     kpDebounce@tempo:
   272                           	callstack 0
   273   000023                     	ds	1
   274   000024                     _end:
   275                           	callstack 0
   276   000024                     	ds	1
   277   000025                     _start:
   278                           	callstack 0
   279   000025                     	ds	1
   280   000026                     _myself:
   281                           	callstack 0
   282   000026                     	ds	5
   283   00002B                     _my_funcs:
   284                           	callstack 0
   285   00002B                     	ds	4
   286                           
   287                           	psect	dataCOMRAM
   288   000059                     __pdataCOMRAM:
   289                           	callstack 0
   290   000059                     main@F2411:
   291                           	callstack 0
   292   000059                     	ds	8
   293                           
   294                           	psect	dataBANK0
   295   000098                     __pdataBANK0:
   296                           	callstack 0
   297   000098                     main@F2417:
   298                           	callstack 0
   299   000098                     	ds	8
   300   0000A0                     main@F2414:
   301                           	callstack 0
   302   0000A0                     	ds	8
   303                           
   304                           	psect	cstackBANK0
   305   000080                     __pcstackBANK0:
   306                           	callstack 0
   307   000080                     main@init_PD:
   308                           	callstack 0
   309                           
   310                           ; 8 bytes @ 0x0
   311   000080                     	ds	8
   312   000088                     main@SSDUpdate_proc:
   313                           	callstack 0
   314                           
   315                           ; 8 bytes @ 0x8
   316   000088                     	ds	8
   317   000090                     main@countTime_proc:
   318                           	callstack 0
   319                           
   320                           ; 8 bytes @ 0x10
   321   000090                     	ds	8
   322                           
   323                           	psect	cstackCOMRAM
   324   00002F                     __pcstackCOMRAM:
   325                           	callstack 0
   326   00002F                     ?i2___awmod:
   327                           	callstack 0
   328   00002F                     i2___awmod@dividend:
   329                           	callstack 0
   330                           
   331                           ; 2 bytes @ 0x0
   332   00002F                     	ds	2
   333   000031                     i2___awmod@divisor:
   334                           	callstack 0
   335                           
   336                           ; 2 bytes @ 0x2
   337   000031                     	ds	2
   338   000033                     i2___awmod@counter:
   339                           	callstack 0
   340                           
   341                           ; 1 bytes @ 0x4
   342   000033                     	ds	1
   343   000034                     i2___awmod@sign:
   344                           	callstack 0
   345                           
   346                           ; 1 bytes @ 0x5
   347   000034                     	ds	1
   348   000035                     
   349                           ; 1 bytes @ 0x6
   350   000035                     	ds	2
   351   000037                     KernelClock@proc:
   352                           	callstack 0
   353                           
   354                           ; 1 bytes @ 0x8
   355   000037                     	ds	1
   356   000038                     ??_ISR:
   357                           
   358                           ; 1 bytes @ 0x9
   359   000038                     	ds	6
   360   00003E                     ?___awdiv:
   361                           	callstack 0
   362   00003E                     Delay40us@i:
   363                           	callstack 0
   364   00003E                     ssdDigit@pos:
   365                           	callstack 0
   366   00003E                     digitalWrite@pin:
   367                           	callstack 0
   368   00003E                     pinMode@pin:
   369                           	callstack 0
   370   00003E                     ___awdiv@dividend:
   371                           	callstack 0
   372                           
   373                           ; 2 bytes @ 0xF
   374   00003E                     	ds	1
   375   00003F                     Delay2ms@i:
   376                           	callstack 0
   377   00003F                     ssdDigit@val:
   378                           	callstack 0
   379                           
   380                           ; 1 bytes @ 0x10
   381   00003F                     	ds	1
   382   000040                     digitalWrite@value:
   383                           	callstack 0
   384   000040                     pinMode@type:
   385                           	callstack 0
   386   000040                     ___awdiv@divisor:
   387                           	callstack 0
   388                           
   389                           ; 2 bytes @ 0x11
   390   000040                     	ds	2
   391   000042                     ??_pinMode:
   392   000042                     ??_digitalWrite:
   393   000042                     ___awdiv@counter:
   394                           	callstack 0
   395                           
   396                           ; 1 bytes @ 0x13
   397   000042                     	ds	1
   398   000043                     ___awdiv@sign:
   399                           	callstack 0
   400                           
   401                           ; 1 bytes @ 0x14
   402   000043                     	ds	1
   403   000044                     lcdCommand@old_D:
   404                           	callstack 0
   405   000044                     lcdData@valor:
   406                           	callstack 0
   407   000044                     ___awdiv@quotient:
   408                           	callstack 0
   409                           
   410                           ; 2 bytes @ 0x15
   411   000044                     	ds	1
   412   000045                     lcdCommand@cmd:
   413                           	callstack 0
   414   000045                     lcdData@old_D:
   415                           	callstack 0
   416                           
   417                           ; 1 bytes @ 0x16
   418   000045                     	ds	1
   419   000046                     ?___awmod:
   420                           	callstack 0
   421   000046                     ___awmod@dividend:
   422                           	callstack 0
   423                           
   424                           ; 2 bytes @ 0x17
   425   000046                     	ds	2
   426   000048                     ___awmod@divisor:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x19
   430   000048                     	ds	2
   431   00004A                     ___awmod@counter:
   432                           	callstack 0
   433                           
   434                           ; 1 bytes @ 0x1B
   435   00004A                     	ds	1
   436   00004B                     ___awmod@sign:
   437                           	callstack 0
   438                           
   439                           ; 1 bytes @ 0x1C
   440   00004B                     	ds	1
   441   00004C                     countTime@dig:
   442                           	callstack 0
   443   00004C                     kernelAddProc@newProc:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0x1D
   447   00004C                     	ds	2
   448   00004E                     ??_kernelAddProc:
   449                           
   450                           ; 1 bytes @ 0x1F
   451   00004E                     	ds	2
   452   000050                     ??_kernelLoop:
   453                           
   454                           ; 1 bytes @ 0x21
   455   000050                     	ds	5
   456   000055                     kernelLoop@tempProc:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x26
   460   000055                     	ds	2
   461   000057                     kernelLoop@next:
   462                           	callstack 0
   463                           
   464                           ; 1 bytes @ 0x28
   465   000057                     	ds	1
   466   000058                     kernelLoop@p:
   467                           	callstack 0
   468                           
   469                           ; 1 bytes @ 0x29
   470   000058                     	ds	1
   471   000059                     
   472                           ; 1 bytes @ 0x2A
   473 ;;
   474 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   475 ;;
   476 ;; *************** function _main *****************
   477 ;; Defined at:
   478 ;;		line 77 in file "main.c"
   479 ;; Parameters:    Size  Location     Type
   480 ;;		None
   481 ;; Auto vars:     Size  Location     Type
   482 ;;  countTime_pr    8   16[BANK0 ] struct .
   483 ;;  SSDUpdate_pr    8    8[BANK0 ] struct .
   484 ;;  init_PD         8    0[BANK0 ] struct .
   485 ;; Return value:  Size  Location     Type
   486 ;;                  1    wreg      void 
   487 ;; Registers used:
   488 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
   489 ;; Tracked objects:
   490 ;;		On entry : 0/0
   491 ;;		On exit  : 0/0
   492 ;;		Unchanged: 0/0
   493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   494 ;;      Params:         0       0       0       0       0       0       0
   495 ;;      Locals:         0      24       0       0       0       0       0
   496 ;;      Temps:          0       0       0       0       0       0       0
   497 ;;      Totals:         0      24       0       0       0       0       0
   498 ;;Total ram usage:       24 bytes
   499 ;; Hardware stack levels required when called: 7
   500 ;; This function calls:
   501 ;;		_kernelAddProc
   502 ;;		_kernelInit
   503 ;;		_kernelLoop
   504 ;;		_lcdCommand
   505 ;;		_lcdData
   506 ;;		_lcdInit
   507 ;;		_ssdInit
   508 ;;		_timerInit
   509 ;; This function is called by:
   510 ;;		Startup code after reset
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           
   514                           	psect	text0
   515   0012B4                     __ptext0:
   516                           	callstack 0
   517   0012B4                     _main:
   518                           	callstack 24
   519   0012B4                     
   520                           ;main.c: 81: process init_PD = {initPORTAD, 0, 0, 15};
   521   0012B4  EE20  F059         	lfsr	2,main@F2411
   522   0012B8  EE10  F080         	lfsr	1,main@init_PD
   523   0012BC  0E07               	movlw	7
   524   0012BE                     u3191:
   525   0012BE  CFDB FFE3          	movff	plusw2,plusw1
   526   0012C2  06E8               	decf	wreg,f,c
   527   0012C4  E2FC               	bc	u3191
   528                           
   529                           ;main.c: 88: process SSDUpdate_proc = {updateSSD, 5, 0, 5};
   530   0012C6  EE20  F0A0         	lfsr	2,main@F2414
   531   0012CA  EE10  F088         	lfsr	1,main@SSDUpdate_proc
   532   0012CE  0E07               	movlw	7
   533   0012D0                     u3201:
   534   0012D0  CFDB FFE3          	movff	plusw2,plusw1
   535   0012D4  06E8               	decf	wreg,f,c
   536   0012D6  E2FC               	bc	u3201
   537                           
   538                           ;main.c: 89: process countTime_proc = {countTime, 1000, 0, 10};
   539   0012D8  EE20  F098         	lfsr	2,main@F2417
   540   0012DC  EE10  F090         	lfsr	1,main@countTime_proc
   541   0012E0  0E07               	movlw	7
   542   0012E2                     u3211:
   543   0012E2  CFDB FFE3          	movff	plusw2,plusw1
   544   0012E6  06E8               	decf	wreg,f,c
   545   0012E8  E2FC               	bc	u3211
   546   0012EA                     
   547                           ;main.c: 91: timerInit();
   548   0012EA  EC20  F00B         	call	_timerInit	;wreg free
   549   0012EE                     
   550                           ;main.c: 92: ssdInit();
   551   0012EE  EC77  F00A         	call	_ssdInit	;wreg free
   552   0012F2                     
   553                           ;main.c: 97: kernelInit();
   554   0012F2  EC17  F00B         	call	_kernelInit	;wreg free
   555   0012F6                     
   556                           ;main.c: 98: kernelAddProc(&init_PD);
   557   0012F6  0E80               	movlw	low main@init_PD
   558   0012F8  6E4C               	movwf	kernelAddProc@newProc^0,c
   559   0012FA  0E00               	movlw	high main@init_PD
   560   0012FC  6E4D               	movwf	(kernelAddProc@newProc+1)^0,c
   561   0012FE  ECBE  F008         	call	_kernelAddProc	;wreg free
   562   001302                     
   563                           ;main.c: 104: kernelAddProc(&SSDUpdate_proc);
   564   001302  0E88               	movlw	low main@SSDUpdate_proc
   565   001304  6E4C               	movwf	kernelAddProc@newProc^0,c
   566   001306  0E00               	movlw	high main@SSDUpdate_proc
   567   001308  6E4D               	movwf	(kernelAddProc@newProc+1)^0,c
   568   00130A  ECBE  F008         	call	_kernelAddProc	;wreg free
   569   00130E                     
   570                           ;main.c: 105: kernelAddProc(&countTime_proc);
   571   00130E  0E90               	movlw	low main@countTime_proc
   572   001310  6E4C               	movwf	kernelAddProc@newProc^0,c
   573   001312  0E00               	movlw	high main@countTime_proc
   574   001314  6E4D               	movwf	(kernelAddProc@newProc+1)^0,c
   575   001316  ECBE  F008         	call	_kernelAddProc	;wreg free
   576   00131A                     
   577                           ;main.c: 109: ((RCON) &= ~(1<<(7)));
   578   00131A  9ED0               	bcf	208,7,c	;volatile
   579   00131C                     
   580                           ;main.c: 110: ((INTCON) |= (1<<(5)));
   581   00131C  8AF2               	bsf	242,5,c	;volatile
   582   00131E                     
   583                           ;main.c: 111: ((INTCON) |= (1<<(7)));
   584   00131E  8EF2               	bsf	242,7,c	;volatile
   585   001320                     
   586                           ;main.c: 112: ((INTCON) |= (1<<(6)));
   587   001320  8CF2               	bsf	242,6,c	;volatile
   588   001322                     
   589                           ;main.c: 114: lcdInit();
   590   001322  ECE2  F009         	call	_lcdInit	;wreg free
   591   001326                     
   592                           ;main.c: 115: lcdCommand(0x01);
   593   001326  0E01               	movlw	1
   594   001328  ECA3  F009         	call	_lcdCommand
   595   00132C                     
   596                           ;main.c: 116: lcdData('O');
   597   00132C  0E4F               	movlw	79
   598   00132E  ECA2  F00A         	call	_lcdData
   599   001332                     
   600                           ;main.c: 117: lcdCommand(0x06);
   601   001332  0E06               	movlw	6
   602   001334  ECA3  F009         	call	_lcdCommand
   603   001338                     
   604                           ;main.c: 118: lcdData('i');
   605   001338  0E69               	movlw	105
   606   00133A  ECA2  F00A         	call	_lcdData
   607   00133E                     
   608                           ;main.c: 121: kernelLoop();
   609   00133E  EC09  F003         	call	_kernelLoop	;wreg free
   610   001342  EF07  F000         	goto	start
   611   001346                     __end_of_main:
   612                           	callstack 0
   613                           
   614 ;; *************** function _timerInit *****************
   615 ;; Defined at:
   616 ;;		line 51 in file "timer.c"
   617 ;; Parameters:    Size  Location     Type
   618 ;;		None
   619 ;; Auto vars:     Size  Location     Type
   620 ;;		None
   621 ;; Return value:  Size  Location     Type
   622 ;;                  1    wreg      void 
   623 ;; Registers used:
   624 ;;		wreg, status,2, status,0
   625 ;; Tracked objects:
   626 ;;		On entry : 0/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   630 ;;      Params:         0       0       0       0       0       0       0
   631 ;;      Locals:         0       0       0       0       0       0       0
   632 ;;      Temps:          0       0       0       0       0       0       0
   633 ;;      Totals:         0       0       0       0       0       0       0
   634 ;;Total ram usage:        0 bytes
   635 ;; Hardware stack levels used: 1
   636 ;; Hardware stack levels required when called: 3
   637 ;; This function calls:
   638 ;;		Nothing
   639 ;; This function is called by:
   640 ;;		_main
   641 ;; This function uses a non-reentrant model
   642 ;;
   643                           
   644                           	psect	text1
   645   001640                     __ptext1:
   646                           	callstack 0
   647   001640                     _timerInit:
   648                           	callstack 27
   649   001640                     
   650                           ;timer.c: 53: T0CON = 0b00001000;
   651   001640  0E08               	movlw	8
   652   001642  6ED5               	movwf	213,c	;volatile
   653   001644                     
   654                           ;timer.c: 54: ((T0CON) |= (1<<(7)));
   655   001644  8ED5               	bsf	213,7,c	;volatile
   656   001646  0012               	return		;funcret
   657   001648                     __end_of_timerInit:
   658                           	callstack 0
   659                           
   660 ;; *************** function _ssdInit *****************
   661 ;; Defined at:
   662 ;;		line 101 in file "ssd.c"
   663 ;; Parameters:    Size  Location     Type
   664 ;;		None
   665 ;; Auto vars:     Size  Location     Type
   666 ;;		None
   667 ;; Return value:  Size  Location     Type
   668 ;;                  1    wreg      void 
   669 ;; Registers used:
   670 ;;		wreg, status,2, status,0, cstack
   671 ;; Tracked objects:
   672 ;;		On entry : 0/0
   673 ;;		On exit  : 0/0
   674 ;;		Unchanged: 0/0
   675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   676 ;;      Params:         0       0       0       0       0       0       0
   677 ;;      Locals:         0       0       0       0       0       0       0
   678 ;;      Temps:          0       0       0       0       0       0       0
   679 ;;      Totals:         0       0       0       0       0       0       0
   680 ;;Total ram usage:        0 bytes
   681 ;; Hardware stack levels used: 1
   682 ;; Hardware stack levels required when called: 4
   683 ;; This function calls:
   684 ;;		_pinMode
   685 ;; This function is called by:
   686 ;;		_main
   687 ;; This function uses a non-reentrant model
   688 ;;
   689                           
   690                           	psect	text2
   691   0014EE                     __ptext2:
   692                           	callstack 0
   693   0014EE                     _ssdInit:
   694                           	callstack 26
   695   0014EE                     
   696                           ;ssd.c: 103: pinMode(PIN_A2, 0);
   697   0014EE  0E00               	movlw	0
   698   0014F0  6E3F               	movwf	(pinMode@pin+1)^0,c
   699   0014F2  0E02               	movlw	2
   700   0014F4  6E3E               	movwf	pinMode@pin^0,c
   701   0014F6  0E00               	movlw	0
   702   0014F8  6E41               	movwf	(pinMode@type+1)^0,c
   703   0014FA  0E00               	movlw	0
   704   0014FC  6E40               	movwf	pinMode@type^0,c
   705   0014FE  EC52  F004         	call	_pinMode	;wreg free
   706                           
   707                           ;ssd.c: 104: pinMode(PIN_A3, 0);
   708   001502  0E00               	movlw	0
   709   001504  6E3F               	movwf	(pinMode@pin+1)^0,c
   710   001506  0E03               	movlw	3
   711   001508  6E3E               	movwf	pinMode@pin^0,c
   712   00150A  0E00               	movlw	0
   713   00150C  6E41               	movwf	(pinMode@type+1)^0,c
   714   00150E  0E00               	movlw	0
   715   001510  6E40               	movwf	pinMode@type^0,c
   716   001512  EC52  F004         	call	_pinMode	;wreg free
   717                           
   718                           ;ssd.c: 105: pinMode(PIN_A4, 0);
   719   001516  0E00               	movlw	0
   720   001518  6E3F               	movwf	(pinMode@pin+1)^0,c
   721   00151A  0E04               	movlw	4
   722   00151C  6E3E               	movwf	pinMode@pin^0,c
   723   00151E  0E00               	movlw	0
   724   001520  6E41               	movwf	(pinMode@type+1)^0,c
   725   001522  0E00               	movlw	0
   726   001524  6E40               	movwf	pinMode@type^0,c
   727   001526  EC52  F004         	call	_pinMode	;wreg free
   728                           
   729                           ;ssd.c: 106: pinMode(PIN_A5, 0);
   730   00152A  0E00               	movlw	0
   731   00152C  6E3F               	movwf	(pinMode@pin+1)^0,c
   732   00152E  0E05               	movlw	5
   733   001530  6E3E               	movwf	pinMode@pin^0,c
   734   001532  0E00               	movlw	0
   735   001534  6E41               	movwf	(pinMode@type+1)^0,c
   736   001536  0E00               	movlw	0
   737   001538  6E40               	movwf	pinMode@type^0,c
   738   00153A  EC52  F004         	call	_pinMode	;wreg free
   739   00153E                     
   740                           ;ssd.c: 109: TRISD = 0x00;
   741   00153E  0E00               	movlw	0
   742   001540  6E95               	movwf	149,c	;volatile
   743   001542  0012               	return		;funcret
   744   001544                     __end_of_ssdInit:
   745                           	callstack 0
   746                           
   747 ;; *************** function _lcdInit *****************
   748 ;; Defined at:
   749 ;;		line 95 in file "lcd.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;		None
   752 ;; Auto vars:     Size  Location     Type
   753 ;;		None
   754 ;; Return value:  Size  Location     Type
   755 ;;                  1    wreg      void 
   756 ;; Registers used:
   757 ;;		wreg, status,2, status,0, cstack
   758 ;; Tracked objects:
   759 ;;		On entry : 0/0
   760 ;;		On exit  : 0/0
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   763 ;;      Params:         0       0       0       0       0       0       0
   764 ;;      Locals:         0       0       0       0       0       0       0
   765 ;;      Temps:          0       0       0       0       0       0       0
   766 ;;      Totals:         0       0       0       0       0       0       0
   767 ;;Total ram usage:        0 bytes
   768 ;; Hardware stack levels used: 1
   769 ;; Hardware stack levels required when called: 6
   770 ;; This function calls:
   771 ;;		_Delay2ms
   772 ;;		_lcdCommand
   773 ;;		_pinMode
   774 ;; This function is called by:
   775 ;;		_main
   776 ;; This function uses a non-reentrant model
   777 ;;
   778                           
   779                           	psect	text3
   780   0013C4                     __ptext3:
   781                           	callstack 0
   782   0013C4                     _lcdInit:
   783                           	callstack 24
   784   0013C4                     
   785                           ;lcd.c: 97: pinMode(PIN_E2, 0);
   786   0013C4  0E00               	movlw	0
   787   0013C6  6E3F               	movwf	(pinMode@pin+1)^0,c
   788   0013C8  0E22               	movlw	34
   789   0013CA  6E3E               	movwf	pinMode@pin^0,c
   790   0013CC  0E00               	movlw	0
   791   0013CE  6E41               	movwf	(pinMode@type+1)^0,c
   792   0013D0  0E00               	movlw	0
   793   0013D2  6E40               	movwf	pinMode@type^0,c
   794   0013D4  EC52  F004         	call	_pinMode	;wreg free
   795                           
   796                           ;lcd.c: 98: pinMode(PIN_E1, 0);
   797   0013D8  0E00               	movlw	0
   798   0013DA  6E3F               	movwf	(pinMode@pin+1)^0,c
   799   0013DC  0E21               	movlw	33
   800   0013DE  6E3E               	movwf	pinMode@pin^0,c
   801   0013E0  0E00               	movlw	0
   802   0013E2  6E41               	movwf	(pinMode@type+1)^0,c
   803   0013E4  0E00               	movlw	0
   804   0013E6  6E40               	movwf	pinMode@type^0,c
   805   0013E8  EC52  F004         	call	_pinMode	;wreg free
   806   0013EC                     
   807                           ;lcd.c: 99: TRISD = 0x00;
   808   0013EC  0E00               	movlw	0
   809   0013EE  6E95               	movwf	149,c	;volatile
   810   0013F0                     
   811                           ;lcd.c: 102: Delay2ms(); Delay2ms(); Delay2ms(); Delay2ms(); Delay2ms();
   812   0013F0  ECF5  F00A         	call	_Delay2ms	;wreg free
   813   0013F4  ECF5  F00A         	call	_Delay2ms	;wreg free
   814   0013F8  ECF5  F00A         	call	_Delay2ms	;wreg free
   815   0013FC  ECF5  F00A         	call	_Delay2ms	;wreg free
   816   001400  ECF5  F00A         	call	_Delay2ms	;wreg free
   817   001404                     
   818                           ;lcd.c: 104: lcdCommand(0x38);
   819   001404  0E38               	movlw	56
   820   001406  ECA3  F009         	call	_lcdCommand
   821   00140A                     
   822                           ;lcd.c: 105: Delay2ms(); Delay2ms();
   823   00140A  ECF5  F00A         	call	_Delay2ms	;wreg free
   824   00140E  ECF5  F00A         	call	_Delay2ms	;wreg free
   825   001412                     
   826                           ;lcd.c: 106: lcdCommand(0x38);
   827   001412  0E38               	movlw	56
   828   001414  ECA3  F009         	call	_lcdCommand
   829   001418                     
   830                           ;lcd.c: 107: Delay2ms();
   831   001418  ECF5  F00A         	call	_Delay2ms	;wreg free
   832   00141C                     
   833                           ;lcd.c: 108: lcdCommand(0x38);
   834   00141C  0E38               	movlw	56
   835   00141E  ECA3  F009         	call	_lcdCommand
   836   001422                     
   837                           ;lcd.c: 110: lcdCommand(0x38);
   838   001422  0E38               	movlw	56
   839   001424  ECA3  F009         	call	_lcdCommand
   840   001428                     
   841                           ;lcd.c: 111: lcdCommand(0x06);
   842   001428  0E06               	movlw	6
   843   00142A  ECA3  F009         	call	_lcdCommand
   844   00142E                     
   845                           ;lcd.c: 114: lcdCommand(0x0C);
   846   00142E  0E0C               	movlw	12
   847   001430  ECA3  F009         	call	_lcdCommand
   848   001434                     
   849                           ;lcd.c: 115: lcdCommand(0x01);
   850   001434  0E01               	movlw	1
   851   001436  ECA3  F009         	call	_lcdCommand
   852   00143A  0012               	return		;funcret
   853   00143C                     __end_of_lcdInit:
   854                           	callstack 0
   855                           
   856 ;; *************** function _pinMode *****************
   857 ;; Defined at:
   858 ;;		line 54 in file "io.c"
   859 ;; Parameters:    Size  Location     Type
   860 ;;  pin             2   15[COMRAM] int 
   861 ;;  type            2   17[COMRAM] int 
   862 ;; Auto vars:     Size  Location     Type
   863 ;;		None
   864 ;; Return value:  Size  Location     Type
   865 ;;                  1    wreg      void 
   866 ;; Registers used:
   867 ;;		wreg, status,2, status,0
   868 ;; Tracked objects:
   869 ;;		On entry : 0/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   873 ;;      Params:         4       0       0       0       0       0       0
   874 ;;      Locals:         0       0       0       0       0       0       0
   875 ;;      Temps:          2       0       0       0       0       0       0
   876 ;;      Totals:         6       0       0       0       0       0       0
   877 ;;Total ram usage:        6 bytes
   878 ;; Hardware stack levels used: 1
   879 ;; Hardware stack levels required when called: 3
   880 ;; This function calls:
   881 ;;		Nothing
   882 ;; This function is called by:
   883 ;;		_lcdInit
   884 ;;		_ssdInit
   885 ;;		_adcInit
   886 ;;		_i2cInit
   887 ;;		_read_SCL
   888 ;;		_read_SDA
   889 ;;		_clear_SCL
   890 ;;		_clear_SDA
   891 ;; This function uses a non-reentrant model
   892 ;;
   893                           
   894                           	psect	text4
   895   0008A4                     __ptext4:
   896                           	callstack 0
   897   0008A4                     _pinMode:
   898                           	callstack 26
   899   0008A4                     
   900                           ;io.c: 56: if(pin <8){
   901   0008A4  BE3F               	btfsc	(pinMode@pin+1)^0,7,c
   902   0008A6  EF60  F004         	goto	u2700
   903   0008AA  503F               	movf	(pinMode@pin+1)^0,w,c
   904   0008AC  E107               	bnz	u2701
   905   0008AE  0E08               	movlw	8
   906   0008B0  5C3E               	subwf	pinMode@pin^0,w,c
   907   0008B2  B0D8               	btfsc	status,0,c
   908   0008B4  EF5E  F004         	goto	u2701
   909   0008B8  EF60  F004         	goto	u2700
   910   0008BC                     u2701:
   911   0008BC  EF8A  F004         	goto	l2975
   912   0008C0                     u2700:
   913   0008C0                     
   914                           ;io.c: 57: if (type){ ((TRISA) |= (1<<(pin)));}
   915   0008C0  5040               	movf	pinMode@type^0,w,c
   916   0008C2  1041               	iorwf	(pinMode@type+1)^0,w,c
   917   0008C4  B4D8               	btfsc	status,2,c
   918   0008C6  EF67  F004         	goto	u2711
   919   0008CA  EF69  F004         	goto	u2710
   920   0008CE                     u2711:
   921   0008CE  EF79  F004         	goto	l2973
   922   0008D2                     u2710:
   923   0008D2  C03E  F042         	movff	pinMode@pin,??_pinMode
   924   0008D6  0E01               	movlw	1
   925   0008D8  6E43               	movwf	(??_pinMode+1)^0,c
   926   0008DA  2A42               	incf	??_pinMode^0,f,c
   927   0008DC  EF72  F004         	goto	u2724
   928   0008E0                     u2725:
   929   0008E0  90D8               	bcf	status,0,c
   930   0008E2  3643               	rlcf	(??_pinMode+1)^0,f,c
   931   0008E4                     u2724:
   932   0008E4  2E42               	decfsz	??_pinMode^0,f,c
   933   0008E6  EF70  F004         	goto	u2725
   934   0008EA  5043               	movf	(??_pinMode+1)^0,w,c
   935   0008EC  1292               	iorwf	146,f,c	;volatile
   936   0008EE  EF78  F005         	goto	l251
   937   0008F2                     l2973:
   938                           
   939                           ;io.c: 58: else{ ((TRISA) &= ~(1<<(pin)));}
   940   0008F2  C03E  F042         	movff	pinMode@pin,??_pinMode
   941   0008F6  0E01               	movlw	1
   942   0008F8  6E43               	movwf	(??_pinMode+1)^0,c
   943   0008FA  2A42               	incf	??_pinMode^0,f,c
   944   0008FC  EF82  F004         	goto	u2734
   945   000900                     u2735:
   946   000900  90D8               	bcf	status,0,c
   947   000902  3643               	rlcf	(??_pinMode+1)^0,f,c
   948   000904                     u2734:
   949   000904  2E42               	decfsz	??_pinMode^0,f,c
   950   000906  EF80  F004         	goto	u2735
   951   00090A  5043               	movf	(??_pinMode+1)^0,w,c
   952   00090C  0AFF               	xorlw	255
   953   00090E  1692               	andwf	146,f,c	;volatile
   954   000910  EF78  F005         	goto	l251
   955   000914                     l2975:
   956   000914  BE3F               	btfsc	(pinMode@pin+1)^0,7,c
   957   000916  EF98  F004         	goto	u2740
   958   00091A  503F               	movf	(pinMode@pin+1)^0,w,c
   959   00091C  E107               	bnz	u2741
   960   00091E  0E10               	movlw	16
   961   000920  5C3E               	subwf	pinMode@pin^0,w,c
   962   000922  B0D8               	btfsc	status,0,c
   963   000924  EF96  F004         	goto	u2741
   964   000928  EF98  F004         	goto	u2740
   965   00092C                     u2741:
   966   00092C  EFC6  F004         	goto	l2983
   967   000930                     u2740:
   968   000930                     
   969                           ;io.c: 60: if (type){ ((TRISB) |= (1<<(pin-8)));}
   970   000930  5040               	movf	pinMode@type^0,w,c
   971   000932  1041               	iorwf	(pinMode@type+1)^0,w,c
   972   000934  B4D8               	btfsc	status,2,c
   973   000936  EF9F  F004         	goto	u2751
   974   00093A  EFA1  F004         	goto	u2750
   975   00093E                     u2751:
   976   00093E  EFB3  F004         	goto	l2981
   977   000942                     u2750:
   978   000942  C03E  F042         	movff	pinMode@pin,??_pinMode
   979   000946  0EF8               	movlw	-8
   980   000948  2642               	addwf	??_pinMode^0,f,c
   981   00094A  0E01               	movlw	1
   982   00094C  6E43               	movwf	(??_pinMode+1)^0,c
   983   00094E  2A42               	incf	??_pinMode^0,f,c
   984   000950  EFAC  F004         	goto	u2764
   985   000954                     u2765:
   986   000954  90D8               	bcf	status,0,c
   987   000956  3643               	rlcf	(??_pinMode+1)^0,f,c
   988   000958                     u2764:
   989   000958  2E42               	decfsz	??_pinMode^0,f,c
   990   00095A  EFAA  F004         	goto	u2765
   991   00095E  5043               	movf	(??_pinMode+1)^0,w,c
   992   000960  1293               	iorwf	147,f,c	;volatile
   993   000962  EF78  F005         	goto	l251
   994   000966                     l2981:
   995                           
   996                           ;io.c: 61: else{ ((TRISB) &= ~(1<<(pin-8)));}
   997   000966  C03E  F042         	movff	pinMode@pin,??_pinMode
   998   00096A  0EF8               	movlw	-8
   999   00096C  2642               	addwf	??_pinMode^0,f,c
  1000   00096E  0E01               	movlw	1
  1001   000970  6E43               	movwf	(??_pinMode+1)^0,c
  1002   000972  2A42               	incf	??_pinMode^0,f,c
  1003   000974  EFBE  F004         	goto	u2774
  1004   000978                     u2775:
  1005   000978  90D8               	bcf	status,0,c
  1006   00097A  3643               	rlcf	(??_pinMode+1)^0,f,c
  1007   00097C                     u2774:
  1008   00097C  2E42               	decfsz	??_pinMode^0,f,c
  1009   00097E  EFBC  F004         	goto	u2775
  1010   000982  5043               	movf	(??_pinMode+1)^0,w,c
  1011   000984  0AFF               	xorlw	255
  1012   000986  1693               	andwf	147,f,c	;volatile
  1013   000988  EF78  F005         	goto	l251
  1014   00098C                     l2983:
  1015   00098C  BE3F               	btfsc	(pinMode@pin+1)^0,7,c
  1016   00098E  EFD4  F004         	goto	u2780
  1017   000992  503F               	movf	(pinMode@pin+1)^0,w,c
  1018   000994  E107               	bnz	u2781
  1019   000996  0E18               	movlw	24
  1020   000998  5C3E               	subwf	pinMode@pin^0,w,c
  1021   00099A  B0D8               	btfsc	status,0,c
  1022   00099C  EFD2  F004         	goto	u2781
  1023   0009A0  EFD4  F004         	goto	u2780
  1024   0009A4                     u2781:
  1025   0009A4  EF02  F005         	goto	l2991
  1026   0009A8                     u2780:
  1027   0009A8                     
  1028                           ;io.c: 63: if (type){ ((TRISC) |= (1<<(pin-16)));}
  1029   0009A8  5040               	movf	pinMode@type^0,w,c
  1030   0009AA  1041               	iorwf	(pinMode@type+1)^0,w,c
  1031   0009AC  B4D8               	btfsc	status,2,c
  1032   0009AE  EFDB  F004         	goto	u2791
  1033   0009B2  EFDD  F004         	goto	u2790
  1034   0009B6                     u2791:
  1035   0009B6  EFEF  F004         	goto	l2989
  1036   0009BA                     u2790:
  1037   0009BA  C03E  F042         	movff	pinMode@pin,??_pinMode
  1038   0009BE  0EF0               	movlw	-16
  1039   0009C0  2642               	addwf	??_pinMode^0,f,c
  1040   0009C2  0E01               	movlw	1
  1041   0009C4  6E43               	movwf	(??_pinMode+1)^0,c
  1042   0009C6  2A42               	incf	??_pinMode^0,f,c
  1043   0009C8  EFE8  F004         	goto	u2804
  1044   0009CC                     u2805:
  1045   0009CC  90D8               	bcf	status,0,c
  1046   0009CE  3643               	rlcf	(??_pinMode+1)^0,f,c
  1047   0009D0                     u2804:
  1048   0009D0  2E42               	decfsz	??_pinMode^0,f,c
  1049   0009D2  EFE6  F004         	goto	u2805
  1050   0009D6  5043               	movf	(??_pinMode+1)^0,w,c
  1051   0009D8  1294               	iorwf	148,f,c	;volatile
  1052   0009DA  EF78  F005         	goto	l251
  1053   0009DE                     l2989:
  1054                           
  1055                           ;io.c: 64: else{ ((TRISC) &= ~(1<<(pin-16)));}
  1056   0009DE  C03E  F042         	movff	pinMode@pin,??_pinMode
  1057   0009E2  0EF0               	movlw	-16
  1058   0009E4  2642               	addwf	??_pinMode^0,f,c
  1059   0009E6  0E01               	movlw	1
  1060   0009E8  6E43               	movwf	(??_pinMode+1)^0,c
  1061   0009EA  2A42               	incf	??_pinMode^0,f,c
  1062   0009EC  EFFA  F004         	goto	u2814
  1063   0009F0                     u2815:
  1064   0009F0  90D8               	bcf	status,0,c
  1065   0009F2  3643               	rlcf	(??_pinMode+1)^0,f,c
  1066   0009F4                     u2814:
  1067   0009F4  2E42               	decfsz	??_pinMode^0,f,c
  1068   0009F6  EFF8  F004         	goto	u2815
  1069   0009FA  5043               	movf	(??_pinMode+1)^0,w,c
  1070   0009FC  0AFF               	xorlw	255
  1071   0009FE  1694               	andwf	148,f,c	;volatile
  1072   000A00  EF78  F005         	goto	l251
  1073   000A04                     l2991:
  1074   000A04  BE3F               	btfsc	(pinMode@pin+1)^0,7,c
  1075   000A06  EF10  F005         	goto	u2820
  1076   000A0A  503F               	movf	(pinMode@pin+1)^0,w,c
  1077   000A0C  E107               	bnz	u2821
  1078   000A0E  0E20               	movlw	32
  1079   000A10  5C3E               	subwf	pinMode@pin^0,w,c
  1080   000A12  B0D8               	btfsc	status,0,c
  1081   000A14  EF0E  F005         	goto	u2821
  1082   000A18  EF10  F005         	goto	u2820
  1083   000A1C                     u2821:
  1084   000A1C  EF3E  F005         	goto	l2999
  1085   000A20                     u2820:
  1086   000A20                     
  1087                           ;io.c: 66: if (type){ ((TRISD) |= (1<<(pin-24)));}
  1088   000A20  5040               	movf	pinMode@type^0,w,c
  1089   000A22  1041               	iorwf	(pinMode@type+1)^0,w,c
  1090   000A24  B4D8               	btfsc	status,2,c
  1091   000A26  EF17  F005         	goto	u2831
  1092   000A2A  EF19  F005         	goto	u2830
  1093   000A2E                     u2831:
  1094   000A2E  EF2B  F005         	goto	l2997
  1095   000A32                     u2830:
  1096   000A32  C03E  F042         	movff	pinMode@pin,??_pinMode
  1097   000A36  0EE8               	movlw	-24
  1098   000A38  2642               	addwf	??_pinMode^0,f,c
  1099   000A3A  0E01               	movlw	1
  1100   000A3C  6E43               	movwf	(??_pinMode+1)^0,c
  1101   000A3E  2A42               	incf	??_pinMode^0,f,c
  1102   000A40  EF24  F005         	goto	u2844
  1103   000A44                     u2845:
  1104   000A44  90D8               	bcf	status,0,c
  1105   000A46  3643               	rlcf	(??_pinMode+1)^0,f,c
  1106   000A48                     u2844:
  1107   000A48  2E42               	decfsz	??_pinMode^0,f,c
  1108   000A4A  EF22  F005         	goto	u2845
  1109   000A4E  5043               	movf	(??_pinMode+1)^0,w,c
  1110   000A50  1295               	iorwf	149,f,c	;volatile
  1111   000A52  EF78  F005         	goto	l251
  1112   000A56                     l2997:
  1113                           
  1114                           ;io.c: 67: else{ ((TRISD) &= ~(1<<(pin-24)));}
  1115   000A56  C03E  F042         	movff	pinMode@pin,??_pinMode
  1116   000A5A  0EE8               	movlw	-24
  1117   000A5C  2642               	addwf	??_pinMode^0,f,c
  1118   000A5E  0E01               	movlw	1
  1119   000A60  6E43               	movwf	(??_pinMode+1)^0,c
  1120   000A62  2A42               	incf	??_pinMode^0,f,c
  1121   000A64  EF36  F005         	goto	u2854
  1122   000A68                     u2855:
  1123   000A68  90D8               	bcf	status,0,c
  1124   000A6A  3643               	rlcf	(??_pinMode+1)^0,f,c
  1125   000A6C                     u2854:
  1126   000A6C  2E42               	decfsz	??_pinMode^0,f,c
  1127   000A6E  EF34  F005         	goto	u2855
  1128   000A72  5043               	movf	(??_pinMode+1)^0,w,c
  1129   000A74  0AFF               	xorlw	255
  1130   000A76  1695               	andwf	149,f,c	;volatile
  1131   000A78  EF78  F005         	goto	l251
  1132   000A7C                     l2999:
  1133   000A7C  BE3F               	btfsc	(pinMode@pin+1)^0,7,c
  1134   000A7E  EF4C  F005         	goto	u2860
  1135   000A82  503F               	movf	(pinMode@pin+1)^0,w,c
  1136   000A84  E107               	bnz	u2861
  1137   000A86  0E28               	movlw	40
  1138   000A88  5C3E               	subwf	pinMode@pin^0,w,c
  1139   000A8A  B0D8               	btfsc	status,0,c
  1140   000A8C  EF4A  F005         	goto	u2861
  1141   000A90  EF4C  F005         	goto	u2860
  1142   000A94                     u2861:
  1143   000A94  EF78  F005         	goto	l251
  1144   000A98                     u2860:
  1145   000A98                     
  1146                           ;io.c: 69: if (type){ ((TRISE) |= (1<<(pin-32)));}
  1147   000A98  5040               	movf	pinMode@type^0,w,c
  1148   000A9A  1041               	iorwf	(pinMode@type+1)^0,w,c
  1149   000A9C  B4D8               	btfsc	status,2,c
  1150   000A9E  EF53  F005         	goto	u2871
  1151   000AA2  EF55  F005         	goto	u2870
  1152   000AA6                     u2871:
  1153   000AA6  EF67  F005         	goto	l3005
  1154   000AAA                     u2870:
  1155   000AAA  C03E  F042         	movff	pinMode@pin,??_pinMode
  1156   000AAE  0EE0               	movlw	-32
  1157   000AB0  2642               	addwf	??_pinMode^0,f,c
  1158   000AB2  0E01               	movlw	1
  1159   000AB4  6E43               	movwf	(??_pinMode+1)^0,c
  1160   000AB6  2A42               	incf	??_pinMode^0,f,c
  1161   000AB8  EF60  F005         	goto	u2884
  1162   000ABC                     u2885:
  1163   000ABC  90D8               	bcf	status,0,c
  1164   000ABE  3643               	rlcf	(??_pinMode+1)^0,f,c
  1165   000AC0                     u2884:
  1166   000AC0  2E42               	decfsz	??_pinMode^0,f,c
  1167   000AC2  EF5E  F005         	goto	u2885
  1168   000AC6  5043               	movf	(??_pinMode+1)^0,w,c
  1169   000AC8  1296               	iorwf	150,f,c	;volatile
  1170   000ACA  EF78  F005         	goto	l251
  1171   000ACE                     l3005:
  1172                           
  1173                           ;io.c: 70: else{ ((TRISE) &= ~(1<<(pin-32)));}
  1174   000ACE  C03E  F042         	movff	pinMode@pin,??_pinMode
  1175   000AD2  0EE0               	movlw	-32
  1176   000AD4  2642               	addwf	??_pinMode^0,f,c
  1177   000AD6  0E01               	movlw	1
  1178   000AD8  6E43               	movwf	(??_pinMode+1)^0,c
  1179   000ADA  2A42               	incf	??_pinMode^0,f,c
  1180   000ADC  EF72  F005         	goto	u2894
  1181   000AE0                     u2895:
  1182   000AE0  90D8               	bcf	status,0,c
  1183   000AE2  3643               	rlcf	(??_pinMode+1)^0,f,c
  1184   000AE4                     u2894:
  1185   000AE4  2E42               	decfsz	??_pinMode^0,f,c
  1186   000AE6  EF70  F005         	goto	u2895
  1187   000AEA  5043               	movf	(??_pinMode+1)^0,w,c
  1188   000AEC  0AFF               	xorlw	255
  1189   000AEE  1696               	andwf	150,f,c	;volatile
  1190   000AF0                     l251:
  1191   000AF0  0012               	return		;funcret
  1192   000AF2                     __end_of_pinMode:
  1193                           	callstack 0
  1194                           
  1195 ;; *************** function _lcdCommand *****************
  1196 ;; Defined at:
  1197 ;;		line 48 in file "lcd.c"
  1198 ;; Parameters:    Size  Location     Type
  1199 ;;  cmd             1    wreg     unsigned char 
  1200 ;; Auto vars:     Size  Location     Type
  1201 ;;  cmd             1   22[COMRAM] unsigned char 
  1202 ;;  old_D           1   21[COMRAM] unsigned char 
  1203 ;; Return value:  Size  Location     Type
  1204 ;;                  1    wreg      void 
  1205 ;; Registers used:
  1206 ;;		wreg, status,2, status,0, cstack
  1207 ;; Tracked objects:
  1208 ;;		On entry : 0/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1212 ;;      Params:         0       0       0       0       0       0       0
  1213 ;;      Locals:         2       0       0       0       0       0       0
  1214 ;;      Temps:          0       0       0       0       0       0       0
  1215 ;;      Totals:         2       0       0       0       0       0       0
  1216 ;;Total ram usage:        2 bytes
  1217 ;; Hardware stack levels used: 1
  1218 ;; Hardware stack levels required when called: 5
  1219 ;; This function calls:
  1220 ;;		_Delay2ms
  1221 ;;		_Delay40us
  1222 ;;		_digitalWrite
  1223 ;; This function is called by:
  1224 ;;		_main
  1225 ;;		_lcdInit
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229                           	psect	text5
  1230   001346                     __ptext5:
  1231                           	callstack 0
  1232   001346                     _lcdCommand:
  1233                           	callstack 24
  1234                           
  1235                           ;incstack = 0
  1236                           ;lcdCommand@cmd stored from wreg
  1237   001346  6E45               	movwf	lcdCommand@cmd^0,c
  1238   001348                     
  1239                           ;lcd.c: 50: unsigned char old_D;;lcd.c: 51: old_D = PORTD;
  1240   001348  CF83 F044          	movff	3971,lcdCommand@old_D	;volatile
  1241   00134C                     
  1242                           ;lcd.c: 54: TRISD = 0x00;
  1243   00134C  0E00               	movlw	0
  1244   00134E  6E95               	movwf	149,c	;volatile
  1245   001350                     
  1246                           ;lcd.c: 56: digitalWrite(PIN_E2, 0);
  1247   001350  0E00               	movlw	0
  1248   001352  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  1249   001354  0E22               	movlw	34
  1250   001356  6E3E               	movwf	digitalWrite@pin^0,c
  1251   001358  0E00               	movlw	0
  1252   00135A  6E41               	movwf	(digitalWrite@value+1)^0,c
  1253   00135C  0E00               	movlw	0
  1254   00135E  6E40               	movwf	digitalWrite@value^0,c
  1255   001360  EC79  F005         	call	_digitalWrite	;wreg free
  1256   001364                     
  1257                           ;lcd.c: 57: PORTD = cmd;
  1258   001364  C045  FF83         	movff	lcdCommand@cmd,3971	;volatile
  1259   001368                     
  1260                           ;lcd.c: 59: digitalWrite(PIN_E1, 1);
  1261   001368  0E00               	movlw	0
  1262   00136A  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  1263   00136C  0E21               	movlw	33
  1264   00136E  6E3E               	movwf	digitalWrite@pin^0,c
  1265   001370  0E00               	movlw	0
  1266   001372  6E41               	movwf	(digitalWrite@value+1)^0,c
  1267   001374  0E01               	movlw	1
  1268   001376  6E40               	movwf	digitalWrite@value^0,c
  1269   001378  EC79  F005         	call	_digitalWrite	;wreg free
  1270   00137C                     
  1271                           ;lcd.c: 60: digitalWrite(PIN_E1, 0);
  1272   00137C  0E00               	movlw	0
  1273   00137E  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  1274   001380  0E21               	movlw	33
  1275   001382  6E3E               	movwf	digitalWrite@pin^0,c
  1276   001384  0E00               	movlw	0
  1277   001386  6E41               	movwf	(digitalWrite@value+1)^0,c
  1278   001388  0E00               	movlw	0
  1279   00138A  6E40               	movwf	digitalWrite@value^0,c
  1280   00138C  EC79  F005         	call	_digitalWrite	;wreg free
  1281   001390                     
  1282                           ;lcd.c: 63: PORTD= old_D;
  1283   001390  C044  FF83         	movff	lcdCommand@old_D,3971	;volatile
  1284   001394                     
  1285                           ;lcd.c: 65: if((cmd == 0x02)||(cmd == 0x01)){
  1286   001394  0E02               	movlw	2
  1287   001396  1845               	xorwf	lcdCommand@cmd^0,w,c
  1288   001398  B4D8               	btfsc	status,2,c
  1289   00139A  EFD1  F009         	goto	u2681
  1290   00139E  EFD3  F009         	goto	u2680
  1291   0013A2                     u2681:
  1292   0013A2  EFDB  F009         	goto	l2963
  1293   0013A6                     u2680:
  1294   0013A6  0445               	decf	lcdCommand@cmd^0,w,c
  1295   0013A8  A4D8               	btfss	status,2,c
  1296   0013AA  EFD9  F009         	goto	u2691
  1297   0013AE  EFDB  F009         	goto	u2690
  1298   0013B2                     u2691:
  1299   0013B2  EFDF  F009         	goto	l2965
  1300   0013B6                     u2690:
  1301   0013B6                     l2963:
  1302                           
  1303                           ;lcd.c: 66: Delay2ms();
  1304   0013B6  ECF5  F00A         	call	_Delay2ms	;wreg free
  1305                           
  1306                           ;lcd.c: 67: }else{
  1307   0013BA  EFE1  F009         	goto	l312
  1308   0013BE                     l2965:
  1309                           
  1310                           ;lcd.c: 68: Delay40us();
  1311   0013BE  EC03  F00B         	call	_Delay40us	;wreg free
  1312   0013C2                     l312:
  1313   0013C2  0012               	return		;funcret
  1314   0013C4                     __end_of_lcdCommand:
  1315                           	callstack 0
  1316                           
  1317 ;; *************** function _Delay2ms *****************
  1318 ;; Defined at:
  1319 ;;		line 37 in file "lcd.c"
  1320 ;; Parameters:    Size  Location     Type
  1321 ;;		None
  1322 ;; Auto vars:     Size  Location     Type
  1323 ;;  i               1   16[COMRAM] unsigned char 
  1324 ;; Return value:  Size  Location     Type
  1325 ;;                  1    wreg      void 
  1326 ;; Registers used:
  1327 ;;		wreg, status,2, status,0, cstack
  1328 ;; Tracked objects:
  1329 ;;		On entry : 0/0
  1330 ;;		On exit  : 0/0
  1331 ;;		Unchanged: 0/0
  1332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1333 ;;      Params:         0       0       0       0       0       0       0
  1334 ;;      Locals:         1       0       0       0       0       0       0
  1335 ;;      Temps:          0       0       0       0       0       0       0
  1336 ;;      Totals:         1       0       0       0       0       0       0
  1337 ;;Total ram usage:        1 bytes
  1338 ;; Hardware stack levels used: 1
  1339 ;; Hardware stack levels required when called: 4
  1340 ;; This function calls:
  1341 ;;		_Delay40us
  1342 ;; This function is called by:
  1343 ;;		_lcdCommand
  1344 ;;		_lcdInit
  1345 ;; This function uses a non-reentrant model
  1346 ;;
  1347                           
  1348                           	psect	text6
  1349   0015EA                     __ptext6:
  1350                           	callstack 0
  1351   0015EA                     _Delay2ms:
  1352                           	callstack 24
  1353   0015EA                     
  1354                           ;lcd.c: 39: unsigned char i;;lcd.c: 40: for(i=0; i < 50; i++)
  1355   0015EA  0E00               	movlw	0
  1356   0015EC  6E3F               	movwf	Delay2ms@i^0,c
  1357   0015EE                     l2815:
  1358                           
  1359                           ;lcd.c: 41: {;lcd.c: 42: Delay40us();
  1360   0015EE  EC03  F00B         	call	_Delay40us	;wreg free
  1361   0015F2  2A3F               	incf	Delay2ms@i^0,f,c
  1362   0015F4  0E31               	movlw	49
  1363   0015F6  643F               	cpfsgt	Delay2ms@i^0,c
  1364   0015F8  EF00  F00B         	goto	u2541
  1365   0015FC  EF02  F00B         	goto	u2540
  1366   001600                     u2541:
  1367   001600  EFF7  F00A         	goto	l2815
  1368   001604                     u2540:
  1369   001604  0012               	return		;funcret
  1370   001606                     __end_of_Delay2ms:
  1371                           	callstack 0
  1372                           
  1373 ;; *************** function _lcdData *****************
  1374 ;; Defined at:
  1375 ;;		line 74 in file "lcd.c"
  1376 ;; Parameters:    Size  Location     Type
  1377 ;;  valor           1    wreg     unsigned char 
  1378 ;; Auto vars:     Size  Location     Type
  1379 ;;  valor           1   21[COMRAM] unsigned char 
  1380 ;;  old_D           1   22[COMRAM] unsigned char 
  1381 ;; Return value:  Size  Location     Type
  1382 ;;                  1    wreg      void 
  1383 ;; Registers used:
  1384 ;;		wreg, status,2, status,0, cstack
  1385 ;; Tracked objects:
  1386 ;;		On entry : 0/0
  1387 ;;		On exit  : 0/0
  1388 ;;		Unchanged: 0/0
  1389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1390 ;;      Params:         0       0       0       0       0       0       0
  1391 ;;      Locals:         2       0       0       0       0       0       0
  1392 ;;      Temps:          0       0       0       0       0       0       0
  1393 ;;      Totals:         2       0       0       0       0       0       0
  1394 ;;Total ram usage:        2 bytes
  1395 ;; Hardware stack levels used: 1
  1396 ;; Hardware stack levels required when called: 4
  1397 ;; This function calls:
  1398 ;;		_Delay40us
  1399 ;;		_digitalWrite
  1400 ;; This function is called by:
  1401 ;;		_main
  1402 ;; This function uses a non-reentrant model
  1403 ;;
  1404                           
  1405                           	psect	text7
  1406   001544                     __ptext7:
  1407                           	callstack 0
  1408   001544                     _lcdData:
  1409                           	callstack 26
  1410                           
  1411                           ;incstack = 0
  1412                           ;lcdData@valor stored from wreg
  1413   001544  6E44               	movwf	lcdData@valor^0,c
  1414   001546                     
  1415                           ;lcd.c: 77: unsigned char old_D;;lcd.c: 78: old_D = PORTD;
  1416   001546  CF83 F045          	movff	3971,lcdData@old_D	;volatile
  1417   00154A                     
  1418                           ;lcd.c: 80: TRISD = 0x00;
  1419   00154A  0E00               	movlw	0
  1420   00154C  6E95               	movwf	149,c	;volatile
  1421   00154E                     
  1422                           ;lcd.c: 81: digitalWrite(PIN_E2, 1);
  1423   00154E  0E00               	movlw	0
  1424   001550  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  1425   001552  0E22               	movlw	34
  1426   001554  6E3E               	movwf	digitalWrite@pin^0,c
  1427   001556  0E00               	movlw	0
  1428   001558  6E41               	movwf	(digitalWrite@value+1)^0,c
  1429   00155A  0E01               	movlw	1
  1430   00155C  6E40               	movwf	digitalWrite@value^0,c
  1431   00155E  EC79  F005         	call	_digitalWrite	;wreg free
  1432   001562                     
  1433                           ;lcd.c: 83: PORTD = valor;
  1434   001562  C044  FF83         	movff	lcdData@valor,3971	;volatile
  1435   001566                     
  1436                           ;lcd.c: 85: digitalWrite(PIN_E1, 1);
  1437   001566  0E00               	movlw	0
  1438   001568  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  1439   00156A  0E21               	movlw	33
  1440   00156C  6E3E               	movwf	digitalWrite@pin^0,c
  1441   00156E  0E00               	movlw	0
  1442   001570  6E41               	movwf	(digitalWrite@value+1)^0,c
  1443   001572  0E01               	movlw	1
  1444   001574  6E40               	movwf	digitalWrite@value^0,c
  1445   001576  EC79  F005         	call	_digitalWrite	;wreg free
  1446   00157A                     
  1447                           ;lcd.c: 86: digitalWrite(PIN_E1, 0);
  1448   00157A  0E00               	movlw	0
  1449   00157C  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  1450   00157E  0E21               	movlw	33
  1451   001580  6E3E               	movwf	digitalWrite@pin^0,c
  1452   001582  0E00               	movlw	0
  1453   001584  6E41               	movwf	(digitalWrite@value+1)^0,c
  1454   001586  0E00               	movlw	0
  1455   001588  6E40               	movwf	digitalWrite@value^0,c
  1456   00158A  EC79  F005         	call	_digitalWrite	;wreg free
  1457   00158E                     
  1458                           ;lcd.c: 88: PORTD= old_D;
  1459   00158E  C045  FF83         	movff	lcdData@old_D,3971	;volatile
  1460   001592                     
  1461                           ;lcd.c: 90: Delay40us();
  1462   001592  EC03  F00B         	call	_Delay40us	;wreg free
  1463   001596  0012               	return		;funcret
  1464   001598                     __end_of_lcdData:
  1465                           	callstack 0
  1466                           
  1467 ;; *************** function _Delay40us *****************
  1468 ;; Defined at:
  1469 ;;		line 31 in file "lcd.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;		None
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;  i               1   15[COMRAM] unsigned char 
  1474 ;; Return value:  Size  Location     Type
  1475 ;;                  1    wreg      void 
  1476 ;; Registers used:
  1477 ;;		wreg, status,2, status,0
  1478 ;; Tracked objects:
  1479 ;;		On entry : 0/0
  1480 ;;		On exit  : 0/0
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1483 ;;      Params:         0       0       0       0       0       0       0
  1484 ;;      Locals:         1       0       0       0       0       0       0
  1485 ;;      Temps:          0       0       0       0       0       0       0
  1486 ;;      Totals:         1       0       0       0       0       0       0
  1487 ;;Total ram usage:        1 bytes
  1488 ;; Hardware stack levels used: 1
  1489 ;; Hardware stack levels required when called: 3
  1490 ;; This function calls:
  1491 ;;		Nothing
  1492 ;; This function is called by:
  1493 ;;		_Delay2ms
  1494 ;;		_lcdCommand
  1495 ;;		_lcdData
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499                           	psect	text8
  1500   001606                     __ptext8:
  1501                           	callstack 0
  1502   001606                     _Delay40us:
  1503                           	callstack 25
  1504   001606                     
  1505                           ;lcd.c: 33: unsigned char i;;lcd.c: 34: for(i=0; i < 25; i++);
  1506   001606  0E00               	movlw	0
  1507   001608  6E3E               	movwf	Delay40us@i^0,c
  1508   00160A                     l2749:
  1509   00160A  2A3E               	incf	Delay40us@i^0,f,c
  1510   00160C  0E18               	movlw	24
  1511   00160E  643E               	cpfsgt	Delay40us@i^0,c
  1512   001610  EF0C  F00B         	goto	u2491
  1513   001614  EF0E  F00B         	goto	u2490
  1514   001618                     u2491:
  1515   001618  EF05  F00B         	goto	l2749
  1516   00161C                     u2490:
  1517   00161C  0012               	return		;funcret
  1518   00161E                     __end_of_Delay40us:
  1519                           	callstack 0
  1520                           
  1521 ;; *************** function _kernelLoop *****************
  1522 ;; Defined at:
  1523 ;;		line 25 in file "kernel.c"
  1524 ;; Parameters:    Size  Location     Type
  1525 ;;		None
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;  tempProc        2   38[COMRAM] PTR struct .
  1528 ;;		 -> main@countTime_proc(8), main@SSDUpdate_proc(8), main@init_PD(8), 
  1529 ;;  p               1   41[COMRAM] unsigned char 
  1530 ;;  next            1   40[COMRAM] unsigned char 
  1531 ;; Return value:  Size  Location     Type
  1532 ;;                  1    wreg      void 
  1533 ;; Registers used:
  1534 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  1535 ;; Tracked objects:
  1536 ;;		On entry : 0/0
  1537 ;;		On exit  : 0/0
  1538 ;;		Unchanged: 0/0
  1539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1540 ;;      Params:         0       0       0       0       0       0       0
  1541 ;;      Locals:         4       0       0       0       0       0       0
  1542 ;;      Temps:          5       0       0       0       0       0       0
  1543 ;;      Totals:         9       0       0       0       0       0       0
  1544 ;;Total ram usage:        9 bytes
  1545 ;; Hardware stack levels used: 1
  1546 ;; Hardware stack levels required when called: 6
  1547 ;; This function calls:
  1548 ;;		___awmod
  1549 ;;		_countTime
  1550 ;;		_initPORTAD
  1551 ;;		_kernelAddProc
  1552 ;;		_updateSSD
  1553 ;; This function is called by:
  1554 ;;		_main
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558                           	psect	text9
  1559   000612                     __ptext9:
  1560                           	callstack 0
  1561   000612                     _kernelLoop:
  1562                           	callstack 24
  1563   000612                     l87:
  1564   000612                     
  1565                           ;kernel.c: 30: if (start != end) {
  1566   000612  5024               	movf	_end^0,w,c
  1567   000614  1825               	xorwf	_start^0,w,c
  1568   000616  B4D8               	btfsc	status,2,c
  1569   000618  EF10  F003         	goto	u3021
  1570   00061C  EF12  F003         	goto	u3020
  1571   000620                     u3021:
  1572   000620  EF09  F003         	goto	l87
  1573   000624                     u3020:
  1574   000624                     
  1575                           ;kernel.c: 33: next = start;
  1576   000624  C025  F057         	movff	_start,kernelLoop@next
  1577                           
  1578                           ;kernel.c: 39: for (p = start; p != end; p = (p + 1) % 10) {
  1579   000628  C025  F058         	movff	_start,kernelLoop@p
  1580   00062C  EFBC  F003         	goto	l3145
  1581   000630                     l3131:
  1582                           
  1583                           ;kernel.c: 50: if((pool[p]->start <= 0 && pool[next]->start <= 0) && (pool[p]->prio > po
      +                          ol[next]->prio))next = p;
  1584   000630  5058               	movf	kernelLoop@p^0,w,c
  1585   000632  0D02               	mullw	2
  1586   000634  0E01               	movlw	low _pool
  1587   000636  24F3               	addwf	243,w,c
  1588   000638  6ED9               	movwf	fsr2l,c
  1589   00063A  0E00               	movlw	high _pool
  1590   00063C  20F4               	addwfc	prodh,w,c
  1591   00063E  6EDA               	movwf	fsr2h,c
  1592   000640  EE10 F004          	lfsr	1,4
  1593   000644  50DE               	movf	postinc2,w,c
  1594   000646  26E1               	addwf	fsr1l,f,c
  1595   000648  50DD               	movf	postdec2,w,c
  1596   00064A  22E2               	addwfc	fsr1h,f,c
  1597   00064C  0E01               	movlw	1
  1598   00064E  BEE3               	btfsc	plusw1,7,c
  1599   000650  EF35  F003         	goto	u3030
  1600   000654  0E01               	movlw	1
  1601   000656  50E3               	movf	plusw1,w,c
  1602   000658  E106               	bnz	u3031
  1603   00065A  04E6               	decf	postinc1,w,c
  1604   00065C  B0D8               	btfsc	status,0,c
  1605   00065E  EF33  F003         	goto	u3031
  1606   000662  EF35  F003         	goto	u3030
  1607   000666                     u3031:
  1608   000666  EF81  F003         	goto	l3139
  1609   00066A                     u3030:
  1610   00066A  5057               	movf	kernelLoop@next^0,w,c
  1611   00066C  0D02               	mullw	2
  1612   00066E  0E01               	movlw	low _pool
  1613   000670  24F3               	addwf	243,w,c
  1614   000672  6ED9               	movwf	fsr2l,c
  1615   000674  0E00               	movlw	high _pool
  1616   000676  20F4               	addwfc	prodh,w,c
  1617   000678  6EDA               	movwf	fsr2h,c
  1618   00067A  EE10 F004          	lfsr	1,4
  1619   00067E  50DE               	movf	postinc2,w,c
  1620   000680  26E1               	addwf	fsr1l,f,c
  1621   000682  50DD               	movf	postdec2,w,c
  1622   000684  22E2               	addwfc	fsr1h,f,c
  1623   000686  0E01               	movlw	1
  1624   000688  BEE3               	btfsc	plusw1,7,c
  1625   00068A  EF52  F003         	goto	u3040
  1626   00068E  0E01               	movlw	1
  1627   000690  50E3               	movf	plusw1,w,c
  1628   000692  E106               	bnz	u3041
  1629   000694  04E6               	decf	postinc1,w,c
  1630   000696  B0D8               	btfsc	status,0,c
  1631   000698  EF50  F003         	goto	u3041
  1632   00069C  EF52  F003         	goto	u3040
  1633   0006A0                     u3041:
  1634   0006A0  EF81  F003         	goto	l3139
  1635   0006A4                     u3040:
  1636   0006A4  5058               	movf	kernelLoop@p^0,w,c
  1637   0006A6  0D02               	mullw	2
  1638   0006A8  0E01               	movlw	low _pool
  1639   0006AA  24F3               	addwf	243,w,c
  1640   0006AC  6ED9               	movwf	fsr2l,c
  1641   0006AE  0E00               	movlw	high _pool
  1642   0006B0  20F4               	addwfc	prodh,w,c
  1643   0006B2  6EDA               	movwf	fsr2h,c
  1644   0006B4  EE10 F006          	lfsr	1,6
  1645   0006B8  50DE               	movf	postinc2,w,c
  1646   0006BA  26E1               	addwf	fsr1l,f,c
  1647   0006BC  50DD               	movf	postdec2,w,c
  1648   0006BE  22E2               	addwfc	fsr1h,f,c
  1649   0006C0  5057               	movf	kernelLoop@next^0,w,c
  1650   0006C2  0D02               	mullw	2
  1651   0006C4  0E01               	movlw	low _pool
  1652   0006C6  24F3               	addwf	243,w,c
  1653   0006C8  6ED9               	movwf	fsr2l,c
  1654   0006CA  0E00               	movlw	high _pool
  1655   0006CC  20F4               	addwfc	prodh,w,c
  1656   0006CE  6EDA               	movwf	fsr2h,c
  1657   0006D0  EE00 F006          	lfsr	0,6
  1658   0006D4  50DE               	movf	postinc2,w,c
  1659   0006D6  26E9               	addwf	fsr0l,f,c
  1660   0006D8  50DD               	movf	postdec2,w,c
  1661   0006DA  22EA               	addwfc	fsr0h,f,c
  1662   0006DC  50E6               	movf	postinc1,w,c
  1663   0006DE  5CEE               	subwf	postinc0,w,c
  1664   0006E0  50EE               	movf	postinc0,w,c
  1665   0006E2  0A80               	xorlw	128
  1666   0006E4  6E54               	movwf	(??_kernelLoop+4)^0,c
  1667   0006E6  50E6               	movf	postinc1,w,c
  1668   0006E8  0A80               	xorlw	128
  1669   0006EA  5854               	subwfb	(??_kernelLoop+4)^0,w,c
  1670   0006EC  B0D8               	btfsc	status,0,c
  1671   0006EE  EF7B  F003         	goto	u3051
  1672   0006F2  EF7D  F003         	goto	u3050
  1673   0006F6                     u3051:
  1674   0006F6  EF81  F003         	goto	l3139
  1675   0006FA                     u3050:
  1676   0006FA                     l3137:
  1677   0006FA  C058  F057         	movff	kernelLoop@p,kernelLoop@next
  1678   0006FE  EFAE  F003         	goto	l3143
  1679   000702                     l3139:
  1680                           
  1681                           ;kernel.c: 51: else if(pool[p]->start < pool[next]->start)next = p;
  1682   000702  5057               	movf	kernelLoop@next^0,w,c
  1683   000704  0D02               	mullw	2
  1684   000706  0E01               	movlw	low _pool
  1685   000708  24F3               	addwf	243,w,c
  1686   00070A  6ED9               	movwf	fsr2l,c
  1687   00070C  0E00               	movlw	high _pool
  1688   00070E  20F4               	addwfc	prodh,w,c
  1689   000710  6EDA               	movwf	fsr2h,c
  1690   000712  EE10 F004          	lfsr	1,4
  1691   000716  50DE               	movf	postinc2,w,c
  1692   000718  26E1               	addwf	fsr1l,f,c
  1693   00071A  50DD               	movf	postdec2,w,c
  1694   00071C  22E2               	addwfc	fsr1h,f,c
  1695   00071E  5058               	movf	kernelLoop@p^0,w,c
  1696   000720  0D02               	mullw	2
  1697   000722  0E01               	movlw	low _pool
  1698   000724  24F3               	addwf	243,w,c
  1699   000726  6ED9               	movwf	fsr2l,c
  1700   000728  0E00               	movlw	high _pool
  1701   00072A  20F4               	addwfc	prodh,w,c
  1702   00072C  6EDA               	movwf	fsr2h,c
  1703   00072E  EE00 F004          	lfsr	0,4
  1704   000732  50DE               	movf	postinc2,w,c
  1705   000734  26E9               	addwf	fsr0l,f,c
  1706   000736  50DD               	movf	postdec2,w,c
  1707   000738  22EA               	addwfc	fsr0h,f,c
  1708   00073A  50E6               	movf	postinc1,w,c
  1709   00073C  5CEE               	subwf	postinc0,w,c
  1710   00073E  50EE               	movf	postinc0,w,c
  1711   000740  0A80               	xorlw	128
  1712   000742  6E54               	movwf	(??_kernelLoop+4)^0,c
  1713   000744  50E6               	movf	postinc1,w,c
  1714   000746  0A80               	xorlw	128
  1715   000748  5854               	subwfb	(??_kernelLoop+4)^0,w,c
  1716   00074A  B0D8               	btfsc	status,0,c
  1717   00074C  EFAA  F003         	goto	u3061
  1718   000750  EFAC  F003         	goto	u3060
  1719   000754                     u3061:
  1720   000754  EFAE  F003         	goto	l3143
  1721   000758                     u3060:
  1722   000758  EF7D  F003         	goto	l3137
  1723   00075C                     l3143:
  1724   00075C  0E01               	movlw	1
  1725   00075E  2458               	addwf	kernelLoop@p^0,w,c
  1726   000760  6E46               	movwf	___awmod@dividend^0,c
  1727   000762  6A47               	clrf	(___awmod@dividend+1)^0,c
  1728   000764  0E00               	movlw	0
  1729   000766  2247               	addwfc	(___awmod@dividend+1)^0,f,c
  1730   000768  0E00               	movlw	0
  1731   00076A  6E49               	movwf	(___awmod@divisor+1)^0,c
  1732   00076C  0E0A               	movlw	10
  1733   00076E  6E48               	movwf	___awmod@divisor^0,c
  1734   000770  EC0E  F008         	call	___awmod	;wreg free
  1735   000774  5046               	movf	?___awmod^0,w,c
  1736   000776  6E58               	movwf	kernelLoop@p^0,c
  1737   000778                     l3145:
  1738   000778  5024               	movf	_end^0,w,c
  1739   00077A  1858               	xorwf	kernelLoop@p^0,w,c
  1740   00077C  A4D8               	btfss	status,2,c
  1741   00077E  EFC3  F003         	goto	u3071
  1742   000782  EFC5  F003         	goto	u3070
  1743   000786                     u3071:
  1744   000786  EF18  F003         	goto	l3131
  1745   00078A                     u3070:
  1746   00078A                     
  1747                           ;kernel.c: 52: };kernel.c: 55: tempProc = pool[next];
  1748   00078A  5057               	movf	kernelLoop@next^0,w,c
  1749   00078C  0D02               	mullw	2
  1750   00078E  0E01               	movlw	low _pool
  1751   000790  24F3               	addwf	243,w,c
  1752   000792  6ED9               	movwf	fsr2l,c
  1753   000794  0E00               	movlw	high _pool
  1754   000796  20F4               	addwfc	prodh,w,c
  1755   000798  6EDA               	movwf	fsr2h,c
  1756   00079A  CFDE F055          	movff	postinc2,kernelLoop@tempProc
  1757   00079E  CFDD F056          	movff	postdec2,kernelLoop@tempProc+1
  1758   0007A2                     
  1759                           ;kernel.c: 56: pool[next] = pool[start];
  1760   0007A2  5025               	movf	_start^0,w,c
  1761   0007A4  0D02               	mullw	2
  1762   0007A6  0E01               	movlw	low _pool
  1763   0007A8  24F3               	addwf	243,w,c
  1764   0007AA  6ED9               	movwf	fsr2l,c
  1765   0007AC  0E00               	movlw	high _pool
  1766   0007AE  20F4               	addwfc	prodh,w,c
  1767   0007B0  6EDA               	movwf	fsr2h,c
  1768   0007B2  5057               	movf	kernelLoop@next^0,w,c
  1769   0007B4  0D02               	mullw	2
  1770   0007B6  0E01               	movlw	low _pool
  1771   0007B8  24F3               	addwf	243,w,c
  1772   0007BA  6EE1               	movwf	fsr1l,c
  1773   0007BC  0E00               	movlw	high _pool
  1774   0007BE  20F4               	addwfc	prodh,w,c
  1775   0007C0  6EE2               	movwf	fsr1h,c
  1776   0007C2  CFDE FFE6          	movff	postinc2,postinc1
  1777   0007C6  CFDD FFE5          	movff	postdec2,postdec1
  1778   0007CA                     
  1779                           ;kernel.c: 57: pool[start] = tempProc;
  1780   0007CA  5025               	movf	_start^0,w,c
  1781   0007CC  0D02               	mullw	2
  1782   0007CE  0E01               	movlw	low _pool
  1783   0007D0  24F3               	addwf	243,w,c
  1784   0007D2  6ED9               	movwf	fsr2l,c
  1785   0007D4  0E00               	movlw	high _pool
  1786   0007D6  20F4               	addwfc	prodh,w,c
  1787   0007D8  6EDA               	movwf	fsr2h,c
  1788   0007DA  C055  FFDE         	movff	kernelLoop@tempProc,postinc2
  1789   0007DE  C056  FFDD         	movff	kernelLoop@tempProc+1,postdec2
  1790   0007E2                     l3153:
  1791   0007E2  5025               	movf	_start^0,w,c
  1792   0007E4  0D02               	mullw	2
  1793   0007E6  0E01               	movlw	low _pool
  1794   0007E8  24F3               	addwf	243,w,c
  1795   0007EA  6ED9               	movwf	fsr2l,c
  1796   0007EC  0E00               	movlw	high _pool
  1797   0007EE  20F4               	addwfc	prodh,w,c
  1798   0007F0  6EDA               	movwf	fsr2h,c
  1799   0007F2  EE10 F004          	lfsr	1,4
  1800   0007F6  50DE               	movf	postinc2,w,c
  1801   0007F8  26E1               	addwf	fsr1l,f,c
  1802   0007FA  50DD               	movf	postdec2,w,c
  1803   0007FC  22E2               	addwfc	fsr1h,f,c
  1804   0007FE  0E01               	movlw	1
  1805   000800  BEE3               	btfsc	plusw1,7,c
  1806   000802  EF0E  F004         	goto	u3080
  1807   000806  0E01               	movlw	1
  1808   000808  50E3               	movf	plusw1,w,c
  1809   00080A  E106               	bnz	u3081
  1810   00080C  04E6               	decf	postinc1,w,c
  1811   00080E  B0D8               	btfsc	status,0,c
  1812   000810  EF0C  F004         	goto	u3081
  1813   000814  EF0E  F004         	goto	u3080
  1814   000818                     u3081:
  1815   000818  EFF1  F003         	goto	l3153
  1816   00081C                     u3080:
  1817   00081C                     
  1818                           ;kernel.c: 62: };kernel.c: 63: if (pool[start]->function() == 2) {
  1819   00081C  5025               	movf	_start^0,w,c
  1820   00081E  0D02               	mullw	2
  1821   000820  0E01               	movlw	low _pool
  1822   000822  24F3               	addwf	243,w,c
  1823   000824  6ED9               	movwf	fsr2l,c
  1824   000826  0E00               	movlw	high _pool
  1825   000828  20F4               	addwfc	prodh,w,c
  1826   00082A  6EDA               	movwf	fsr2h,c
  1827   00082C  CFDE F050          	movff	postinc2,??_kernelLoop
  1828   000830  CFDD F051          	movff	postdec2,??_kernelLoop+1
  1829   000834  C050  FFD9         	movff	??_kernelLoop,fsr2l
  1830   000838  C051  FFDA         	movff	??_kernelLoop+1,fsr2h
  1831   00083C  D802               	call	u3098
  1832   00083E  EF2B  F004         	goto	u3099
  1833   000842                     u3098:
  1834   000842  0005               	push	
  1835   000844  6EFA               	movwf	pclath,c
  1836   000846  50DE               	movf	postinc2,w,c
  1837   000848  6EFD               	movwf	tosl,c
  1838   00084A  50DE               	movf	postinc2,w,c
  1839   00084C  6EFE               	movwf	tosh,c
  1840   00084E  50F8               	movf	tblptru,w,c
  1841   000850  6EFF               	movwf	tosu,c
  1842   000852  50FA               	movf	pclath,w,c
  1843   000854  0012               	return		;indir
  1844   000856                     u3099:
  1845   000856  0A02               	xorlw	2
  1846   000858  A4D8               	btfss	status,2,c
  1847   00085A  EF31  F004         	goto	u3101
  1848   00085E  EF33  F004         	goto	u3100
  1849   000862                     u3101:
  1850   000862  EF41  F004         	goto	l3159
  1851   000866                     u3100:
  1852   000866                     
  1853                           ;kernel.c: 64: kernelAddProc(pool[start]);
  1854   000866  5025               	movf	_start^0,w,c
  1855   000868  0D02               	mullw	2
  1856   00086A  0E01               	movlw	low _pool
  1857   00086C  24F3               	addwf	243,w,c
  1858   00086E  6ED9               	movwf	fsr2l,c
  1859   000870  0E00               	movlw	high _pool
  1860   000872  20F4               	addwfc	prodh,w,c
  1861   000874  6EDA               	movwf	fsr2h,c
  1862   000876  CFDE F04C          	movff	postinc2,kernelAddProc@newProc
  1863   00087A  CFDD F04D          	movff	postdec2,kernelAddProc@newProc+1
  1864   00087E  ECBE  F008         	call	_kernelAddProc	;wreg free
  1865   000882                     l3159:
  1866                           
  1867                           ;kernel.c: 65: };kernel.c: 66: start = (start + 1) % 10;
  1868   000882  0E01               	movlw	1
  1869   000884  2425               	addwf	_start^0,w,c
  1870   000886  6E46               	movwf	___awmod@dividend^0,c
  1871   000888  6A47               	clrf	(___awmod@dividend+1)^0,c
  1872   00088A  0E00               	movlw	0
  1873   00088C  2247               	addwfc	(___awmod@dividend+1)^0,f,c
  1874   00088E  0E00               	movlw	0
  1875   000890  6E49               	movwf	(___awmod@divisor+1)^0,c
  1876   000892  0E0A               	movlw	10
  1877   000894  6E48               	movwf	___awmod@divisor^0,c
  1878   000896  EC0E  F008         	call	___awmod	;wreg free
  1879   00089A  5046               	movf	?___awmod^0,w,c
  1880   00089C  6E25               	movwf	_start^0,c
  1881   00089E  EF09  F003         	goto	l87
  1882   0008A2  0012               	return		;funcret
  1883   0008A4                     __end_of_kernelLoop:
  1884                           	callstack 0
  1885                           
  1886 ;; *************** function _countTime *****************
  1887 ;; Defined at:
  1888 ;;		line 56 in file "main.c"
  1889 ;; Parameters:    Size  Location     Type
  1890 ;;		None
  1891 ;; Auto vars:     Size  Location     Type
  1892 ;;  dig             2   29[COMRAM] int 
  1893 ;; Return value:  Size  Location     Type
  1894 ;;                  1    wreg      unsigned char 
  1895 ;; Registers used:
  1896 ;;		wreg, status,2, status,0, cstack
  1897 ;; Tracked objects:
  1898 ;;		On entry : 0/0
  1899 ;;		On exit  : 0/0
  1900 ;;		Unchanged: 0/0
  1901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1902 ;;      Params:         0       0       0       0       0       0       0
  1903 ;;      Locals:         2       0       0       0       0       0       0
  1904 ;;      Temps:          0       0       0       0       0       0       0
  1905 ;;      Totals:         2       0       0       0       0       0       0
  1906 ;;Total ram usage:        2 bytes
  1907 ;; Hardware stack levels used: 1
  1908 ;; Hardware stack levels required when called: 4
  1909 ;; This function calls:
  1910 ;;		___awdiv
  1911 ;;		___awmod
  1912 ;;		_ssdDigit
  1913 ;; This function is called by:
  1914 ;;		_kernelLoop
  1915 ;; This function uses a non-reentrant model
  1916 ;;
  1917                           
  1918                           	psect	text10
  1919   000E7C                     __ptext10:
  1920                           	callstack 0
  1921   000E7C                     _countTime:
  1922                           	callstack 25
  1923   000E7C                     
  1924                           ;main.c: 58: valor++;
  1925   000E7C  4A1B               	infsnz	_valor^0,f,c
  1926   000E7E  2A1C               	incf	(_valor+1)^0,f,c
  1927   000E80                     
  1928                           ;main.c: 59: int dig;;main.c: 63: dig = (valor)%10;
  1929   000E80  C01B  F046         	movff	_valor,___awmod@dividend
  1930   000E84  C01C  F047         	movff	_valor+1,___awmod@dividend+1
  1931   000E88  0E00               	movlw	0
  1932   000E8A  6E49               	movwf	(___awmod@divisor+1)^0,c
  1933   000E8C  0E0A               	movlw	10
  1934   000E8E  6E48               	movwf	___awmod@divisor^0,c
  1935   000E90  EC0E  F008         	call	___awmod	;wreg free
  1936   000E94  C046  F04C         	movff	?___awmod,countTime@dig
  1937   000E98  C047  F04D         	movff	?___awmod+1,countTime@dig+1
  1938   000E9C                     
  1939                           ;main.c: 64: ssdDigit(dig, 3);
  1940   000E9C  0E03               	movlw	3
  1941   000E9E  6E3E               	movwf	ssdDigit@pos^0,c
  1942   000EA0  504C               	movf	countTime@dig^0,w,c
  1943   000EA2  EC4B  F00A         	call	_ssdDigit
  1944   000EA6                     
  1945                           ;main.c: 66: dig = (valor/10)%10;
  1946   000EA6  0E00               	movlw	0
  1947   000EA8  6E41               	movwf	(___awdiv@divisor+1)^0,c
  1948   000EAA  0E0A               	movlw	10
  1949   000EAC  6E40               	movwf	___awdiv@divisor^0,c
  1950   000EAE  C01B  F03E         	movff	_valor,___awdiv@dividend
  1951   000EB2  C01C  F03F         	movff	_valor+1,___awdiv@dividend+1
  1952   000EB6  ECAC  F007         	call	___awdiv	;wreg free
  1953   000EBA  C03E  F046         	movff	?___awdiv,___awmod@dividend
  1954   000EBE  C03F  F047         	movff	?___awdiv+1,___awmod@dividend+1
  1955   000EC2  0E00               	movlw	0
  1956   000EC4  6E49               	movwf	(___awmod@divisor+1)^0,c
  1957   000EC6  0E0A               	movlw	10
  1958   000EC8  6E48               	movwf	___awmod@divisor^0,c
  1959   000ECA  EC0E  F008         	call	___awmod	;wreg free
  1960   000ECE  C046  F04C         	movff	?___awmod,countTime@dig
  1961   000ED2  C047  F04D         	movff	?___awmod+1,countTime@dig+1
  1962   000ED6                     
  1963                           ;main.c: 67: ssdDigit(dig, 2);
  1964   000ED6  0E02               	movlw	2
  1965   000ED8  6E3E               	movwf	ssdDigit@pos^0,c
  1966   000EDA  504C               	movf	countTime@dig^0,w,c
  1967   000EDC  EC4B  F00A         	call	_ssdDigit
  1968   000EE0                     
  1969                           ;main.c: 69: dig = (valor/100)%10;
  1970   000EE0  0E00               	movlw	0
  1971   000EE2  6E41               	movwf	(___awdiv@divisor+1)^0,c
  1972   000EE4  0E64               	movlw	100
  1973   000EE6  6E40               	movwf	___awdiv@divisor^0,c
  1974   000EE8  C01B  F03E         	movff	_valor,___awdiv@dividend
  1975   000EEC  C01C  F03F         	movff	_valor+1,___awdiv@dividend+1
  1976   000EF0  ECAC  F007         	call	___awdiv	;wreg free
  1977   000EF4  C03E  F046         	movff	?___awdiv,___awmod@dividend
  1978   000EF8  C03F  F047         	movff	?___awdiv+1,___awmod@dividend+1
  1979   000EFC  0E00               	movlw	0
  1980   000EFE  6E49               	movwf	(___awmod@divisor+1)^0,c
  1981   000F00  0E0A               	movlw	10
  1982   000F02  6E48               	movwf	___awmod@divisor^0,c
  1983   000F04  EC0E  F008         	call	___awmod	;wreg free
  1984   000F08  C046  F04C         	movff	?___awmod,countTime@dig
  1985   000F0C  C047  F04D         	movff	?___awmod+1,countTime@dig+1
  1986   000F10                     
  1987                           ;main.c: 70: ssdDigit(dig, 1);
  1988   000F10  0E01               	movlw	1
  1989   000F12  6E3E               	movwf	ssdDigit@pos^0,c
  1990   000F14  504C               	movf	countTime@dig^0,w,c
  1991   000F16  EC4B  F00A         	call	_ssdDigit
  1992   000F1A                     
  1993                           ;main.c: 72: dig = (valor/1000)%10;
  1994   000F1A  0E03               	movlw	3
  1995   000F1C  6E41               	movwf	(___awdiv@divisor+1)^0,c
  1996   000F1E  0EE8               	movlw	232
  1997   000F20  6E40               	movwf	___awdiv@divisor^0,c
  1998   000F22  C01B  F03E         	movff	_valor,___awdiv@dividend
  1999   000F26  C01C  F03F         	movff	_valor+1,___awdiv@dividend+1
  2000   000F2A  ECAC  F007         	call	___awdiv	;wreg free
  2001   000F2E  C03E  F046         	movff	?___awdiv,___awmod@dividend
  2002   000F32  C03F  F047         	movff	?___awdiv+1,___awmod@dividend+1
  2003   000F36  0E00               	movlw	0
  2004   000F38  6E49               	movwf	(___awmod@divisor+1)^0,c
  2005   000F3A  0E0A               	movlw	10
  2006   000F3C  6E48               	movwf	___awmod@divisor^0,c
  2007   000F3E  EC0E  F008         	call	___awmod	;wreg free
  2008   000F42  C046  F04C         	movff	?___awmod,countTime@dig
  2009   000F46  C047  F04D         	movff	?___awmod+1,countTime@dig+1
  2010   000F4A                     
  2011                           ;main.c: 73: ssdDigit(dig, 0);
  2012   000F4A  0E00               	movlw	0
  2013   000F4C  6E3E               	movwf	ssdDigit@pos^0,c
  2014   000F4E  504C               	movf	countTime@dig^0,w,c
  2015   000F50  EC4B  F00A         	call	_ssdDigit
  2016   000F54                     
  2017                           ;main.c: 74: return 2;
  2018   000F54  0E02               	movlw	2
  2019   000F56  0012               	return		;funcret
  2020   000F58                     __end_of_countTime:
  2021                           	callstack 0
  2022                           
  2023 ;; *************** function _initPORTAD *****************
  2024 ;; Defined at:
  2025 ;;		line 31 in file "main.c"
  2026 ;; Parameters:    Size  Location     Type
  2027 ;;		None
  2028 ;; Auto vars:     Size  Location     Type
  2029 ;;		None
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  1    wreg      unsigned char 
  2032 ;; Registers used:
  2033 ;;		wreg, status,2
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2039 ;;      Params:         0       0       0       0       0       0       0
  2040 ;;      Locals:         0       0       0       0       0       0       0
  2041 ;;      Temps:          0       0       0       0       0       0       0
  2042 ;;      Totals:         0       0       0       0       0       0       0
  2043 ;;Total ram usage:        0 bytes
  2044 ;; Hardware stack levels used: 1
  2045 ;; Hardware stack levels required when called: 3
  2046 ;; This function calls:
  2047 ;;		Nothing
  2048 ;; This function is called by:
  2049 ;;		_kernelLoop
  2050 ;; This function uses a non-reentrant model
  2051 ;;
  2052                           
  2053                           	psect	text11
  2054   001648                     __ptext11:
  2055                           	callstack 0
  2056   001648                     _initPORTAD:
  2057                           	callstack 26
  2058   001648                     
  2059                           ;main.c: 33: TRISD = 0x00;
  2060   001648  0E00               	movlw	0
  2061   00164A  6E95               	movwf	149,c	;volatile
  2062   00164C                     
  2063                           ;main.c: 34: return 0;
  2064   00164C  0E00               	movlw	0
  2065   00164E  0012               	return		;funcret
  2066   001650                     __end_of_initPORTAD:
  2067                           	callstack 0
  2068                           
  2069 ;; *************** function _updateSSD *****************
  2070 ;; Defined at:
  2071 ;;		line 49 in file "main.c"
  2072 ;; Parameters:    Size  Location     Type
  2073 ;;		None
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;		None
  2076 ;; Return value:  Size  Location     Type
  2077 ;;                  1    wreg      unsigned char 
  2078 ;; Registers used:
  2079 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2085 ;;      Params:         0       0       0       0       0       0       0
  2086 ;;      Locals:         0       0       0       0       0       0       0
  2087 ;;      Temps:          0       0       0       0       0       0       0
  2088 ;;      Totals:         0       0       0       0       0       0       0
  2089 ;;Total ram usage:        0 bytes
  2090 ;; Hardware stack levels used: 1
  2091 ;; Hardware stack levels required when called: 5
  2092 ;; This function calls:
  2093 ;;		_ssdUpdate
  2094 ;; This function is called by:
  2095 ;;		_kernelLoop
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           
  2099                           	psect	text12
  2100   001650                     __ptext12:
  2101                           	callstack 0
  2102   001650                     _updateSSD:
  2103                           	callstack 24
  2104   001650                     
  2105                           ;main.c: 51: ssdUpdate();
  2106   001650  ECA0  F006         	call	_ssdUpdate	;wreg free
  2107   001654                     
  2108                           ;main.c: 52: return 2;
  2109   001654  0E02               	movlw	2
  2110   001656  0012               	return		;funcret
  2111   001658                     __end_of_updateSSD:
  2112                           	callstack 0
  2113                           
  2114 ;; *************** function _ssdUpdate *****************
  2115 ;; Defined at:
  2116 ;;		line 54 in file "ssd.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;		None
  2119 ;; Auto vars:     Size  Location     Type
  2120 ;;		None
  2121 ;; Return value:  Size  Location     Type
  2122 ;;                  1    wreg      void 
  2123 ;; Registers used:
  2124 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2125 ;; Tracked objects:
  2126 ;;		On entry : 0/0
  2127 ;;		On exit  : 0/0
  2128 ;;		Unchanged: 0/0
  2129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2130 ;;      Params:         0       0       0       0       0       0       0
  2131 ;;      Locals:         0       0       0       0       0       0       0
  2132 ;;      Temps:          0       0       0       0       0       0       0
  2133 ;;      Totals:         0       0       0       0       0       0       0
  2134 ;;Total ram usage:        0 bytes
  2135 ;; Hardware stack levels used: 1
  2136 ;; Hardware stack levels required when called: 4
  2137 ;; This function calls:
  2138 ;;		_digitalWrite
  2139 ;; This function is called by:
  2140 ;;		_updateSSD
  2141 ;; This function uses a non-reentrant model
  2142 ;;
  2143                           
  2144                           	psect	text13
  2145   000D40                     __ptext13:
  2146                           	callstack 0
  2147   000D40                     _ssdUpdate:
  2148                           	callstack 24
  2149   000D40                     
  2150                           ;ssd.c: 58: TRISD= 0x00;
  2151   000D40  0E00               	movlw	0
  2152   000D42  6E95               	movwf	149,c	;volatile
  2153   000D44                     
  2154                           ;ssd.c: 60: digitalWrite(PIN_A2,0);
  2155   000D44  0E00               	movlw	0
  2156   000D46  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  2157   000D48  0E02               	movlw	2
  2158   000D4A  6E3E               	movwf	digitalWrite@pin^0,c
  2159   000D4C  0E00               	movlw	0
  2160   000D4E  6E41               	movwf	(digitalWrite@value+1)^0,c
  2161   000D50  0E00               	movlw	0
  2162   000D52  6E40               	movwf	digitalWrite@value^0,c
  2163   000D54  EC79  F005         	call	_digitalWrite	;wreg free
  2164   000D58                     
  2165                           ;ssd.c: 61: digitalWrite(PIN_A3,0);
  2166   000D58  0E00               	movlw	0
  2167   000D5A  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  2168   000D5C  0E03               	movlw	3
  2169   000D5E  6E3E               	movwf	digitalWrite@pin^0,c
  2170   000D60  0E00               	movlw	0
  2171   000D62  6E41               	movwf	(digitalWrite@value+1)^0,c
  2172   000D64  0E00               	movlw	0
  2173   000D66  6E40               	movwf	digitalWrite@value^0,c
  2174   000D68  EC79  F005         	call	_digitalWrite	;wreg free
  2175   000D6C                     
  2176                           ;ssd.c: 62: digitalWrite(PIN_A4,0);
  2177   000D6C  0E00               	movlw	0
  2178   000D6E  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  2179   000D70  0E04               	movlw	4
  2180   000D72  6E3E               	movwf	digitalWrite@pin^0,c
  2181   000D74  0E00               	movlw	0
  2182   000D76  6E41               	movwf	(digitalWrite@value+1)^0,c
  2183   000D78  0E00               	movlw	0
  2184   000D7A  6E40               	movwf	digitalWrite@value^0,c
  2185   000D7C  EC79  F005         	call	_digitalWrite	;wreg free
  2186   000D80                     
  2187                           ;ssd.c: 63: digitalWrite(PIN_A5,0);
  2188   000D80  0E00               	movlw	0
  2189   000D82  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  2190   000D84  0E05               	movlw	5
  2191   000D86  6E3E               	movwf	digitalWrite@pin^0,c
  2192   000D88  0E00               	movlw	0
  2193   000D8A  6E41               	movwf	(digitalWrite@value+1)^0,c
  2194   000D8C  0E00               	movlw	0
  2195   000D8E  6E40               	movwf	digitalWrite@value^0,c
  2196   000D90  EC79  F005         	call	_digitalWrite	;wreg free
  2197                           
  2198                           ;ssd.c: 66: PORTD = 0x00;
  2199   000D94  0E00               	movlw	0
  2200   000D96  6E83               	movwf	131,c	;volatile
  2201                           
  2202                           ;ssd.c: 69: switch (display)
  2203   000D98  EF2A  F007         	goto	l2791
  2204   000D9C                     l2763:
  2205                           
  2206                           ;ssd.c: 72: PORTD = valor[v0];
  2207   000D9C  0E01               	movlw	low _valor@ssd$F540
  2208   000D9E  2420               	addwf	_v0^0,w,c
  2209   000DA0  6EF6               	movwf	tblptrl,c
  2210   000DA2  6AF7               	clrf	tblptrh,c
  2211   000DA4  0E06               	movlw	high _valor@ssd$F540
  2212   000DA6  22F7               	addwfc	tblptrh,f,c
  2213   000DA8                     	if	0	;There are less than 3 active tblptr bytes
  2214   000DA8                     	endif
  2215   000DA8  0008               	tblrd		*
  2216   000DAA  CFF5 FF83          	movff	tablat,3971	;volatile
  2217   000DAE                     
  2218                           ;ssd.c: 73: digitalWrite(PIN_A2,1);
  2219   000DAE  0E00               	movlw	0
  2220   000DB0  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  2221   000DB2  0E02               	movlw	2
  2222   000DB4  6E3E               	movwf	digitalWrite@pin^0,c
  2223   000DB6  0E00               	movlw	0
  2224   000DB8  6E41               	movwf	(digitalWrite@value+1)^0,c
  2225   000DBA  0E01               	movlw	1
  2226   000DBC  6E40               	movwf	digitalWrite@value^0,c
  2227   000DBE  EC79  F005         	call	_digitalWrite	;wreg free
  2228   000DC2                     
  2229                           ;ssd.c: 74: display = 1;
  2230   000DC2  0E01               	movlw	1
  2231   000DC4  6E21               	movwf	_display^0,c
  2232                           
  2233                           ;ssd.c: 75: break;
  2234   000DC6  EF3D  F007         	goto	l477
  2235   000DCA                     l2769:
  2236                           
  2237                           ;ssd.c: 78: PORTD = valor[v1];
  2238   000DCA  0E01               	movlw	low _valor@ssd$F540
  2239   000DCC  241F               	addwf	_v1^0,w,c
  2240   000DCE  6EF6               	movwf	tblptrl,c
  2241   000DD0  6AF7               	clrf	tblptrh,c
  2242   000DD2  0E06               	movlw	high _valor@ssd$F540
  2243   000DD4  22F7               	addwfc	tblptrh,f,c
  2244   000DD6                     	if	0	;There are less than 3 active tblptr bytes
  2245   000DD6                     	endif
  2246   000DD6  0008               	tblrd		*
  2247   000DD8  CFF5 FF83          	movff	tablat,3971	;volatile
  2248   000DDC                     
  2249                           ;ssd.c: 79: digitalWrite(PIN_A3,1);
  2250   000DDC  0E00               	movlw	0
  2251   000DDE  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  2252   000DE0  0E03               	movlw	3
  2253   000DE2  6E3E               	movwf	digitalWrite@pin^0,c
  2254   000DE4  0E00               	movlw	0
  2255   000DE6  6E41               	movwf	(digitalWrite@value+1)^0,c
  2256   000DE8  0E01               	movlw	1
  2257   000DEA  6E40               	movwf	digitalWrite@value^0,c
  2258   000DEC  EC79  F005         	call	_digitalWrite	;wreg free
  2259   000DF0                     
  2260                           ;ssd.c: 80: display = 2;
  2261   000DF0  0E02               	movlw	2
  2262   000DF2  6E21               	movwf	_display^0,c
  2263                           
  2264                           ;ssd.c: 81: break;
  2265   000DF4  EF3D  F007         	goto	l477
  2266   000DF8                     l2775:
  2267                           
  2268                           ;ssd.c: 84: PORTD = valor[v2];
  2269   000DF8  0E01               	movlw	low _valor@ssd$F540
  2270   000DFA  241E               	addwf	_v2^0,w,c
  2271   000DFC  6EF6               	movwf	tblptrl,c
  2272   000DFE  6AF7               	clrf	tblptrh,c
  2273   000E00  0E06               	movlw	high _valor@ssd$F540
  2274   000E02  22F7               	addwfc	tblptrh,f,c
  2275   000E04                     	if	0	;There are less than 3 active tblptr bytes
  2276   000E04                     	endif
  2277   000E04  0008               	tblrd		*
  2278   000E06  CFF5 FF83          	movff	tablat,3971	;volatile
  2279   000E0A                     
  2280                           ;ssd.c: 85: digitalWrite(PIN_A4,1);
  2281   000E0A  0E00               	movlw	0
  2282   000E0C  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  2283   000E0E  0E04               	movlw	4
  2284   000E10  6E3E               	movwf	digitalWrite@pin^0,c
  2285   000E12  0E00               	movlw	0
  2286   000E14  6E41               	movwf	(digitalWrite@value+1)^0,c
  2287   000E16  0E01               	movlw	1
  2288   000E18  6E40               	movwf	digitalWrite@value^0,c
  2289   000E1A  EC79  F005         	call	_digitalWrite	;wreg free
  2290   000E1E                     
  2291                           ;ssd.c: 86: display = 3;
  2292   000E1E  0E03               	movlw	3
  2293   000E20  6E21               	movwf	_display^0,c
  2294                           
  2295                           ;ssd.c: 87: break;
  2296   000E22  EF3D  F007         	goto	l477
  2297   000E26                     l2781:
  2298                           
  2299                           ;ssd.c: 90: PORTD = valor[v3];
  2300   000E26  0E01               	movlw	low _valor@ssd$F540
  2301   000E28  241D               	addwf	_v3^0,w,c
  2302   000E2A  6EF6               	movwf	tblptrl,c
  2303   000E2C  6AF7               	clrf	tblptrh,c
  2304   000E2E  0E06               	movlw	high _valor@ssd$F540
  2305   000E30  22F7               	addwfc	tblptrh,f,c
  2306   000E32                     	if	0	;There are less than 3 active tblptr bytes
  2307   000E32                     	endif
  2308   000E32  0008               	tblrd		*
  2309   000E34  CFF5 FF83          	movff	tablat,3971	;volatile
  2310   000E38                     
  2311                           ;ssd.c: 91: digitalWrite(PIN_A5,1);
  2312   000E38  0E00               	movlw	0
  2313   000E3A  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  2314   000E3C  0E05               	movlw	5
  2315   000E3E  6E3E               	movwf	digitalWrite@pin^0,c
  2316   000E40  0E00               	movlw	0
  2317   000E42  6E41               	movwf	(digitalWrite@value+1)^0,c
  2318   000E44  0E01               	movlw	1
  2319   000E46  6E40               	movwf	digitalWrite@value^0,c
  2320   000E48  EC79  F005         	call	_digitalWrite	;wreg free
  2321   000E4C                     l2785:
  2322                           
  2323                           ;ssd.c: 92: display = 0;
  2324   000E4C  0E00               	movlw	0
  2325   000E4E  6E21               	movwf	_display^0,c
  2326                           
  2327                           ;ssd.c: 93: break;
  2328   000E50  EF3D  F007         	goto	l477
  2329   000E54                     l2791:
  2330   000E54  5021               	movf	_display^0,w,c
  2331                           
  2332                           ; Switch size 1, requested type "simple"
  2333                           ; Number of cases is 4, Range of values is 0 to 3
  2334                           ; switch strategies available:
  2335                           ; Name         Instructions Cycles
  2336                           ; simple_byte           13     7 (average)
  2337                           ;	Chosen strategy is simple_byte
  2338   000E56  0A00               	xorlw	0	; case 0
  2339   000E58  B4D8               	btfsc	status,2,c
  2340   000E5A  EFCE  F006         	goto	l2763
  2341   000E5E  0A01               	xorlw	1	; case 1
  2342   000E60  B4D8               	btfsc	status,2,c
  2343   000E62  EFE5  F006         	goto	l2769
  2344   000E66  0A03               	xorlw	3	; case 2
  2345   000E68  B4D8               	btfsc	status,2,c
  2346   000E6A  EFFC  F006         	goto	l2775
  2347   000E6E  0A01               	xorlw	1	; case 3
  2348   000E70  B4D8               	btfsc	status,2,c
  2349   000E72  EF13  F007         	goto	l2781
  2350   000E76  EF26  F007         	goto	l2785
  2351   000E7A                     l477:
  2352   000E7A  0012               	return		;funcret
  2353   000E7C                     __end_of_ssdUpdate:
  2354                           	callstack 0
  2355                           
  2356 ;; *************** function _digitalWrite *****************
  2357 ;; Defined at:
  2358 ;;		line 14 in file "io.c"
  2359 ;; Parameters:    Size  Location     Type
  2360 ;;  pin             2   15[COMRAM] int 
  2361 ;;  value           2   17[COMRAM] int 
  2362 ;; Auto vars:     Size  Location     Type
  2363 ;;		None
  2364 ;; Return value:  Size  Location     Type
  2365 ;;                  1    wreg      void 
  2366 ;; Registers used:
  2367 ;;		wreg, status,2, status,0
  2368 ;; Tracked objects:
  2369 ;;		On entry : 0/0
  2370 ;;		On exit  : 0/0
  2371 ;;		Unchanged: 0/0
  2372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2373 ;;      Params:         4       0       0       0       0       0       0
  2374 ;;      Locals:         0       0       0       0       0       0       0
  2375 ;;      Temps:          2       0       0       0       0       0       0
  2376 ;;      Totals:         6       0       0       0       0       0       0
  2377 ;;Total ram usage:        6 bytes
  2378 ;; Hardware stack levels used: 1
  2379 ;; Hardware stack levels required when called: 3
  2380 ;; This function calls:
  2381 ;;		Nothing
  2382 ;; This function is called by:
  2383 ;;		_lcdCommand
  2384 ;;		_lcdData
  2385 ;;		_ssdUpdate
  2386 ;;		_clear_SCL
  2387 ;;		_clear_SDA
  2388 ;; This function uses a non-reentrant model
  2389 ;;
  2390                           
  2391                           	psect	text14
  2392   000AF2                     __ptext14:
  2393                           	callstack 0
  2394   000AF2                     _digitalWrite:
  2395                           	callstack 25
  2396   000AF2                     
  2397                           ;io.c: 16: if(pin <8){
  2398   000AF2  BE3F               	btfsc	(digitalWrite@pin+1)^0,7,c
  2399   000AF4  EF87  F005         	goto	u2290
  2400   000AF8  503F               	movf	(digitalWrite@pin+1)^0,w,c
  2401   000AFA  E107               	bnz	u2291
  2402   000AFC  0E08               	movlw	8
  2403   000AFE  5C3E               	subwf	digitalWrite@pin^0,w,c
  2404   000B00  B0D8               	btfsc	status,0,c
  2405   000B02  EF85  F005         	goto	u2291
  2406   000B06  EF87  F005         	goto	u2290
  2407   000B0A                     u2291:
  2408   000B0A  EFB1  F005         	goto	l2711
  2409   000B0E                     u2290:
  2410   000B0E                     
  2411                           ;io.c: 17: if (value){ ((PORTA) |= (1<<(pin)));}
  2412   000B0E  5040               	movf	digitalWrite@value^0,w,c
  2413   000B10  1041               	iorwf	(digitalWrite@value+1)^0,w,c
  2414   000B12  B4D8               	btfsc	status,2,c
  2415   000B14  EF8E  F005         	goto	u2301
  2416   000B18  EF90  F005         	goto	u2300
  2417   000B1C                     u2301:
  2418   000B1C  EFA0  F005         	goto	l2709
  2419   000B20                     u2300:
  2420   000B20  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2421   000B24  0E01               	movlw	1
  2422   000B26  6E43               	movwf	(??_digitalWrite+1)^0,c
  2423   000B28  2A42               	incf	??_digitalWrite^0,f,c
  2424   000B2A  EF99  F005         	goto	u2314
  2425   000B2E                     u2315:
  2426   000B2E  90D8               	bcf	status,0,c
  2427   000B30  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2428   000B32                     u2314:
  2429   000B32  2E42               	decfsz	??_digitalWrite^0,f,c
  2430   000B34  EF97  F005         	goto	u2315
  2431   000B38  5043               	movf	(??_digitalWrite+1)^0,w,c
  2432   000B3A  1280               	iorwf	128,f,c	;volatile
  2433   000B3C  EF9F  F006         	goto	l217
  2434   000B40                     l2709:
  2435                           
  2436                           ;io.c: 18: else{ ((PORTA) &= ~(1<<(pin)));}
  2437   000B40  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2438   000B44  0E01               	movlw	1
  2439   000B46  6E43               	movwf	(??_digitalWrite+1)^0,c
  2440   000B48  2A42               	incf	??_digitalWrite^0,f,c
  2441   000B4A  EFA9  F005         	goto	u2324
  2442   000B4E                     u2325:
  2443   000B4E  90D8               	bcf	status,0,c
  2444   000B50  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2445   000B52                     u2324:
  2446   000B52  2E42               	decfsz	??_digitalWrite^0,f,c
  2447   000B54  EFA7  F005         	goto	u2325
  2448   000B58  5043               	movf	(??_digitalWrite+1)^0,w,c
  2449   000B5A  0AFF               	xorlw	255
  2450   000B5C  1680               	andwf	128,f,c	;volatile
  2451   000B5E  EF9F  F006         	goto	l217
  2452   000B62                     l2711:
  2453   000B62  BE3F               	btfsc	(digitalWrite@pin+1)^0,7,c
  2454   000B64  EFBF  F005         	goto	u2330
  2455   000B68  503F               	movf	(digitalWrite@pin+1)^0,w,c
  2456   000B6A  E107               	bnz	u2331
  2457   000B6C  0E10               	movlw	16
  2458   000B6E  5C3E               	subwf	digitalWrite@pin^0,w,c
  2459   000B70  B0D8               	btfsc	status,0,c
  2460   000B72  EFBD  F005         	goto	u2331
  2461   000B76  EFBF  F005         	goto	u2330
  2462   000B7A                     u2331:
  2463   000B7A  EFED  F005         	goto	l2719
  2464   000B7E                     u2330:
  2465   000B7E                     
  2466                           ;io.c: 20: pin -=8;
  2467   000B7E  0EF8               	movlw	248
  2468   000B80  263E               	addwf	digitalWrite@pin^0,f,c
  2469   000B82  0EFF               	movlw	255
  2470   000B84  223F               	addwfc	(digitalWrite@pin+1)^0,f,c
  2471                           
  2472                           ;io.c: 21: if (value){ ((PORTB) |= (1<<(pin)));}
  2473   000B86  5040               	movf	digitalWrite@value^0,w,c
  2474   000B88  1041               	iorwf	(digitalWrite@value+1)^0,w,c
  2475   000B8A  B4D8               	btfsc	status,2,c
  2476   000B8C  EFCA  F005         	goto	u2341
  2477   000B90  EFCC  F005         	goto	u2340
  2478   000B94                     u2341:
  2479   000B94  EFDC  F005         	goto	l2717
  2480   000B98                     u2340:
  2481   000B98  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2482   000B9C  0E01               	movlw	1
  2483   000B9E  6E43               	movwf	(??_digitalWrite+1)^0,c
  2484   000BA0  2A42               	incf	??_digitalWrite^0,f,c
  2485   000BA2  EFD5  F005         	goto	u2354
  2486   000BA6                     u2355:
  2487   000BA6  90D8               	bcf	status,0,c
  2488   000BA8  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2489   000BAA                     u2354:
  2490   000BAA  2E42               	decfsz	??_digitalWrite^0,f,c
  2491   000BAC  EFD3  F005         	goto	u2355
  2492   000BB0  5043               	movf	(??_digitalWrite+1)^0,w,c
  2493   000BB2  1281               	iorwf	129,f,c	;volatile
  2494   000BB4  EF9F  F006         	goto	l217
  2495   000BB8                     l2717:
  2496                           
  2497                           ;io.c: 22: else{ ((PORTB) &= ~(1<<(pin)));}
  2498   000BB8  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2499   000BBC  0E01               	movlw	1
  2500   000BBE  6E43               	movwf	(??_digitalWrite+1)^0,c
  2501   000BC0  2A42               	incf	??_digitalWrite^0,f,c
  2502   000BC2  EFE5  F005         	goto	u2364
  2503   000BC6                     u2365:
  2504   000BC6  90D8               	bcf	status,0,c
  2505   000BC8  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2506   000BCA                     u2364:
  2507   000BCA  2E42               	decfsz	??_digitalWrite^0,f,c
  2508   000BCC  EFE3  F005         	goto	u2365
  2509   000BD0  5043               	movf	(??_digitalWrite+1)^0,w,c
  2510   000BD2  0AFF               	xorlw	255
  2511   000BD4  1681               	andwf	129,f,c	;volatile
  2512   000BD6  EF9F  F006         	goto	l217
  2513   000BDA                     l2719:
  2514   000BDA  BE3F               	btfsc	(digitalWrite@pin+1)^0,7,c
  2515   000BDC  EFFB  F005         	goto	u2370
  2516   000BE0  503F               	movf	(digitalWrite@pin+1)^0,w,c
  2517   000BE2  E107               	bnz	u2371
  2518   000BE4  0E18               	movlw	24
  2519   000BE6  5C3E               	subwf	digitalWrite@pin^0,w,c
  2520   000BE8  B0D8               	btfsc	status,0,c
  2521   000BEA  EFF9  F005         	goto	u2371
  2522   000BEE  EFFB  F005         	goto	u2370
  2523   000BF2                     u2371:
  2524   000BF2  EF29  F006         	goto	l2727
  2525   000BF6                     u2370:
  2526   000BF6                     
  2527                           ;io.c: 24: pin -=16;
  2528   000BF6  0EF0               	movlw	240
  2529   000BF8  263E               	addwf	digitalWrite@pin^0,f,c
  2530   000BFA  0EFF               	movlw	255
  2531   000BFC  223F               	addwfc	(digitalWrite@pin+1)^0,f,c
  2532                           
  2533                           ;io.c: 25: if (value){ ((PORTC) |= (1<<(pin)));}
  2534   000BFE  5040               	movf	digitalWrite@value^0,w,c
  2535   000C00  1041               	iorwf	(digitalWrite@value+1)^0,w,c
  2536   000C02  B4D8               	btfsc	status,2,c
  2537   000C04  EF06  F006         	goto	u2381
  2538   000C08  EF08  F006         	goto	u2380
  2539   000C0C                     u2381:
  2540   000C0C  EF18  F006         	goto	l2725
  2541   000C10                     u2380:
  2542   000C10  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2543   000C14  0E01               	movlw	1
  2544   000C16  6E43               	movwf	(??_digitalWrite+1)^0,c
  2545   000C18  2A42               	incf	??_digitalWrite^0,f,c
  2546   000C1A  EF11  F006         	goto	u2394
  2547   000C1E                     u2395:
  2548   000C1E  90D8               	bcf	status,0,c
  2549   000C20  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2550   000C22                     u2394:
  2551   000C22  2E42               	decfsz	??_digitalWrite^0,f,c
  2552   000C24  EF0F  F006         	goto	u2395
  2553   000C28  5043               	movf	(??_digitalWrite+1)^0,w,c
  2554   000C2A  1282               	iorwf	130,f,c	;volatile
  2555   000C2C  EF9F  F006         	goto	l217
  2556   000C30                     l2725:
  2557                           
  2558                           ;io.c: 26: else{ ((PORTC) &= ~(1<<(pin)));}
  2559   000C30  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2560   000C34  0E01               	movlw	1
  2561   000C36  6E43               	movwf	(??_digitalWrite+1)^0,c
  2562   000C38  2A42               	incf	??_digitalWrite^0,f,c
  2563   000C3A  EF21  F006         	goto	u2404
  2564   000C3E                     u2405:
  2565   000C3E  90D8               	bcf	status,0,c
  2566   000C40  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2567   000C42                     u2404:
  2568   000C42  2E42               	decfsz	??_digitalWrite^0,f,c
  2569   000C44  EF1F  F006         	goto	u2405
  2570   000C48  5043               	movf	(??_digitalWrite+1)^0,w,c
  2571   000C4A  0AFF               	xorlw	255
  2572   000C4C  1682               	andwf	130,f,c	;volatile
  2573   000C4E  EF9F  F006         	goto	l217
  2574   000C52                     l2727:
  2575   000C52  BE3F               	btfsc	(digitalWrite@pin+1)^0,7,c
  2576   000C54  EF37  F006         	goto	u2410
  2577   000C58  503F               	movf	(digitalWrite@pin+1)^0,w,c
  2578   000C5A  E107               	bnz	u2411
  2579   000C5C  0E20               	movlw	32
  2580   000C5E  5C3E               	subwf	digitalWrite@pin^0,w,c
  2581   000C60  B0D8               	btfsc	status,0,c
  2582   000C62  EF35  F006         	goto	u2411
  2583   000C66  EF37  F006         	goto	u2410
  2584   000C6A                     u2411:
  2585   000C6A  EF65  F006         	goto	l2735
  2586   000C6E                     u2410:
  2587   000C6E                     
  2588                           ;io.c: 28: pin -=24;
  2589   000C6E  0EE8               	movlw	232
  2590   000C70  263E               	addwf	digitalWrite@pin^0,f,c
  2591   000C72  0EFF               	movlw	255
  2592   000C74  223F               	addwfc	(digitalWrite@pin+1)^0,f,c
  2593                           
  2594                           ;io.c: 29: if (value){ ((PORTD) |= (1<<(pin)));}
  2595   000C76  5040               	movf	digitalWrite@value^0,w,c
  2596   000C78  1041               	iorwf	(digitalWrite@value+1)^0,w,c
  2597   000C7A  B4D8               	btfsc	status,2,c
  2598   000C7C  EF42  F006         	goto	u2421
  2599   000C80  EF44  F006         	goto	u2420
  2600   000C84                     u2421:
  2601   000C84  EF54  F006         	goto	l2733
  2602   000C88                     u2420:
  2603   000C88  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2604   000C8C  0E01               	movlw	1
  2605   000C8E  6E43               	movwf	(??_digitalWrite+1)^0,c
  2606   000C90  2A42               	incf	??_digitalWrite^0,f,c
  2607   000C92  EF4D  F006         	goto	u2434
  2608   000C96                     u2435:
  2609   000C96  90D8               	bcf	status,0,c
  2610   000C98  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2611   000C9A                     u2434:
  2612   000C9A  2E42               	decfsz	??_digitalWrite^0,f,c
  2613   000C9C  EF4B  F006         	goto	u2435
  2614   000CA0  5043               	movf	(??_digitalWrite+1)^0,w,c
  2615   000CA2  1283               	iorwf	131,f,c	;volatile
  2616   000CA4  EF9F  F006         	goto	l217
  2617   000CA8                     l2733:
  2618                           
  2619                           ;io.c: 30: else{ ((PORTD) &= ~(1<<(pin)));}
  2620   000CA8  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2621   000CAC  0E01               	movlw	1
  2622   000CAE  6E43               	movwf	(??_digitalWrite+1)^0,c
  2623   000CB0  2A42               	incf	??_digitalWrite^0,f,c
  2624   000CB2  EF5D  F006         	goto	u2444
  2625   000CB6                     u2445:
  2626   000CB6  90D8               	bcf	status,0,c
  2627   000CB8  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2628   000CBA                     u2444:
  2629   000CBA  2E42               	decfsz	??_digitalWrite^0,f,c
  2630   000CBC  EF5B  F006         	goto	u2445
  2631   000CC0  5043               	movf	(??_digitalWrite+1)^0,w,c
  2632   000CC2  0AFF               	xorlw	255
  2633   000CC4  1683               	andwf	131,f,c	;volatile
  2634   000CC6  EF9F  F006         	goto	l217
  2635   000CCA                     l2735:
  2636   000CCA  BE3F               	btfsc	(digitalWrite@pin+1)^0,7,c
  2637   000CCC  EF73  F006         	goto	u2450
  2638   000CD0  503F               	movf	(digitalWrite@pin+1)^0,w,c
  2639   000CD2  E107               	bnz	u2451
  2640   000CD4  0E28               	movlw	40
  2641   000CD6  5C3E               	subwf	digitalWrite@pin^0,w,c
  2642   000CD8  B0D8               	btfsc	status,0,c
  2643   000CDA  EF71  F006         	goto	u2451
  2644   000CDE  EF73  F006         	goto	u2450
  2645   000CE2                     u2451:
  2646   000CE2  EF9F  F006         	goto	l217
  2647   000CE6                     u2450:
  2648   000CE6                     
  2649                           ;io.c: 32: pin -=32;
  2650   000CE6  0EE0               	movlw	224
  2651   000CE8  263E               	addwf	digitalWrite@pin^0,f,c
  2652   000CEA  0EFF               	movlw	255
  2653   000CEC  223F               	addwfc	(digitalWrite@pin+1)^0,f,c
  2654                           
  2655                           ;io.c: 33: if (value){ ((PORTE) |= (1<<(pin)));}
  2656   000CEE  5040               	movf	digitalWrite@value^0,w,c
  2657   000CF0  1041               	iorwf	(digitalWrite@value+1)^0,w,c
  2658   000CF2  B4D8               	btfsc	status,2,c
  2659   000CF4  EF7E  F006         	goto	u2461
  2660   000CF8  EF80  F006         	goto	u2460
  2661   000CFC                     u2461:
  2662   000CFC  EF90  F006         	goto	l2741
  2663   000D00                     u2460:
  2664   000D00  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2665   000D04  0E01               	movlw	1
  2666   000D06  6E43               	movwf	(??_digitalWrite+1)^0,c
  2667   000D08  2A42               	incf	??_digitalWrite^0,f,c
  2668   000D0A  EF89  F006         	goto	u2474
  2669   000D0E                     u2475:
  2670   000D0E  90D8               	bcf	status,0,c
  2671   000D10  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2672   000D12                     u2474:
  2673   000D12  2E42               	decfsz	??_digitalWrite^0,f,c
  2674   000D14  EF87  F006         	goto	u2475
  2675   000D18  5043               	movf	(??_digitalWrite+1)^0,w,c
  2676   000D1A  1284               	iorwf	132,f,c	;volatile
  2677   000D1C  EF9F  F006         	goto	l217
  2678   000D20                     l2741:
  2679                           
  2680                           ;io.c: 34: else{ ((PORTE) &= ~(1<<(pin)));}
  2681   000D20  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2682   000D24  0E01               	movlw	1
  2683   000D26  6E43               	movwf	(??_digitalWrite+1)^0,c
  2684   000D28  2A42               	incf	??_digitalWrite^0,f,c
  2685   000D2A  EF99  F006         	goto	u2484
  2686   000D2E                     u2485:
  2687   000D2E  90D8               	bcf	status,0,c
  2688   000D30  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2689   000D32                     u2484:
  2690   000D32  2E42               	decfsz	??_digitalWrite^0,f,c
  2691   000D34  EF97  F006         	goto	u2485
  2692   000D38  5043               	movf	(??_digitalWrite+1)^0,w,c
  2693   000D3A  0AFF               	xorlw	255
  2694   000D3C  1684               	andwf	132,f,c	;volatile
  2695   000D3E                     l217:
  2696   000D3E  0012               	return		;funcret
  2697   000D40                     __end_of_digitalWrite:
  2698                           	callstack 0
  2699                           
  2700 ;; *************** function _kernelAddProc *****************
  2701 ;; Defined at:
  2702 ;;		line 14 in file "kernel.c"
  2703 ;; Parameters:    Size  Location     Type
  2704 ;;  newProc         2   29[COMRAM] PTR struct .
  2705 ;;		 -> main@countTime_proc(8), main@SSDUpdate_proc(8), main@init_PD(8), 
  2706 ;; Auto vars:     Size  Location     Type
  2707 ;;		None
  2708 ;; Return value:  Size  Location     Type
  2709 ;;                  1    wreg      unsigned char 
  2710 ;; Registers used:
  2711 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2712 ;; Tracked objects:
  2713 ;;		On entry : 0/0
  2714 ;;		On exit  : 0/0
  2715 ;;		Unchanged: 0/0
  2716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2717 ;;      Params:         2       0       0       0       0       0       0
  2718 ;;      Locals:         0       0       0       0       0       0       0
  2719 ;;      Temps:          2       0       0       0       0       0       0
  2720 ;;      Totals:         4       0       0       0       0       0       0
  2721 ;;Total ram usage:        4 bytes
  2722 ;; Hardware stack levels used: 1
  2723 ;; Hardware stack levels required when called: 4
  2724 ;; This function calls:
  2725 ;;		___awmod
  2726 ;; This function is called by:
  2727 ;;		_main
  2728 ;;		_kernelLoop
  2729 ;; This function uses a non-reentrant model
  2730 ;;
  2731                           
  2732                           	psect	text15
  2733   00117C                     __ptext15:
  2734                           	callstack 0
  2735   00117C                     _kernelAddProc:
  2736                           	callstack 25
  2737   00117C                     
  2738                           ;kernel.c: 16: if (((end + 1) % 10) != start) {
  2739   00117C  5025               	movf	_start^0,w,c
  2740   00117E  6E4E               	movwf	??_kernelAddProc^0,c
  2741   001180  6A4F               	clrf	(??_kernelAddProc+1)^0,c
  2742   001182  0E01               	movlw	1
  2743   001184  2424               	addwf	_end^0,w,c
  2744   001186  6E46               	movwf	___awmod@dividend^0,c
  2745   001188  6A47               	clrf	(___awmod@dividend+1)^0,c
  2746   00118A  0E00               	movlw	0
  2747   00118C  2247               	addwfc	(___awmod@dividend+1)^0,f,c
  2748   00118E  0E00               	movlw	0
  2749   001190  6E49               	movwf	(___awmod@divisor+1)^0,c
  2750   001192  0E0A               	movlw	10
  2751   001194  6E48               	movwf	___awmod@divisor^0,c
  2752   001196  EC0E  F008         	call	___awmod	;wreg free
  2753   00119A  504E               	movf	??_kernelAddProc^0,w,c
  2754   00119C  1846               	xorwf	?___awmod^0,w,c
  2755   00119E  E109               	bnz	u2670
  2756   0011A0  504F               	movf	(??_kernelAddProc+1)^0,w,c
  2757   0011A2  1847               	xorwf	(?___awmod+1)^0,w,c
  2758   0011A4  B4D8               	btfsc	status,2,c
  2759   0011A6  EFD7  F008         	goto	u2671
  2760   0011AA  EFD9  F008         	goto	u2670
  2761   0011AE                     u2671:
  2762   0011AE  EF0F  F009         	goto	l84
  2763   0011B2                     u2670:
  2764   0011B2                     
  2765                           ;kernel.c: 17: pool[end] = newProc;
  2766   0011B2  5024               	movf	_end^0,w,c
  2767   0011B4  0D02               	mullw	2
  2768   0011B6  0E01               	movlw	low _pool
  2769   0011B8  24F3               	addwf	243,w,c
  2770   0011BA  6ED9               	movwf	fsr2l,c
  2771   0011BC  0E00               	movlw	high _pool
  2772   0011BE  20F4               	addwfc	prodh,w,c
  2773   0011C0  6EDA               	movwf	fsr2h,c
  2774   0011C2  C04C  FFDE         	movff	kernelAddProc@newProc,postinc2
  2775   0011C6  C04D  FFDD         	movff	kernelAddProc@newProc+1,postdec2
  2776   0011CA                     
  2777                           ;kernel.c: 18: pool[end]->start += newProc->period;
  2778   0011CA  EE20 F002          	lfsr	2,2
  2779   0011CE  504C               	movf	kernelAddProc@newProc^0,w,c
  2780   0011D0  26D9               	addwf	fsr2l,f,c
  2781   0011D2  504D               	movf	(kernelAddProc@newProc+1)^0,w,c
  2782   0011D4  22DA               	addwfc	fsr2h,f,c
  2783   0011D6  CFDE F04E          	movff	postinc2,??_kernelAddProc
  2784   0011DA  CFDD F04F          	movff	postdec2,??_kernelAddProc+1
  2785   0011DE  5024               	movf	_end^0,w,c
  2786   0011E0  0D02               	mullw	2
  2787   0011E2  0E01               	movlw	low _pool
  2788   0011E4  24F3               	addwf	243,w,c
  2789   0011E6  6ED9               	movwf	fsr2l,c
  2790   0011E8  0E00               	movlw	high _pool
  2791   0011EA  20F4               	addwfc	prodh,w,c
  2792   0011EC  6EDA               	movwf	fsr2h,c
  2793   0011EE  EE10 F004          	lfsr	1,4
  2794   0011F2  50DE               	movf	postinc2,w,c
  2795   0011F4  26E1               	addwf	fsr1l,f,c
  2796   0011F6  50DD               	movf	postdec2,w,c
  2797   0011F8  22E2               	addwfc	fsr1h,f,c
  2798   0011FA  504E               	movf	??_kernelAddProc^0,w,c
  2799   0011FC  26E6               	addwf	postinc1,f,c
  2800   0011FE  504F               	movf	(??_kernelAddProc+1)^0,w,c
  2801   001200  22E5               	addwfc	postdec1,f,c
  2802   001202                     
  2803                           ;kernel.c: 19: end = (end + 1) % 10;
  2804   001202  0E01               	movlw	1
  2805   001204  2424               	addwf	_end^0,w,c
  2806   001206  6E46               	movwf	___awmod@dividend^0,c
  2807   001208  6A47               	clrf	(___awmod@dividend+1)^0,c
  2808   00120A  0E00               	movlw	0
  2809   00120C  2247               	addwfc	(___awmod@dividend+1)^0,f,c
  2810   00120E  0E00               	movlw	0
  2811   001210  6E49               	movwf	(___awmod@divisor+1)^0,c
  2812   001212  0E0A               	movlw	10
  2813   001214  6E48               	movwf	___awmod@divisor^0,c
  2814   001216  EC0E  F008         	call	___awmod	;wreg free
  2815   00121A  5046               	movf	?___awmod^0,w,c
  2816   00121C  6E24               	movwf	_end^0,c
  2817   00121E                     l84:
  2818   00121E  0012               	return		;funcret
  2819   001220                     __end_of_kernelAddProc:
  2820                           	callstack 0
  2821                           
  2822 ;; *************** function _ssdDigit *****************
  2823 ;; Defined at:
  2824 ;;		line 38 in file "ssd.c"
  2825 ;; Parameters:    Size  Location     Type
  2826 ;;  val             1    wreg     unsigned char 
  2827 ;;  pos             1   15[COMRAM] unsigned char 
  2828 ;; Auto vars:     Size  Location     Type
  2829 ;;  val             1   16[COMRAM] unsigned char 
  2830 ;; Return value:  Size  Location     Type
  2831 ;;                  1    wreg      void 
  2832 ;; Registers used:
  2833 ;;		wreg, status,2, status,0
  2834 ;; Tracked objects:
  2835 ;;		On entry : 0/0
  2836 ;;		On exit  : 0/0
  2837 ;;		Unchanged: 0/0
  2838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2839 ;;      Params:         1       0       0       0       0       0       0
  2840 ;;      Locals:         1       0       0       0       0       0       0
  2841 ;;      Temps:          0       0       0       0       0       0       0
  2842 ;;      Totals:         2       0       0       0       0       0       0
  2843 ;;Total ram usage:        2 bytes
  2844 ;; Hardware stack levels used: 1
  2845 ;; Hardware stack levels required when called: 3
  2846 ;; This function calls:
  2847 ;;		Nothing
  2848 ;; This function is called by:
  2849 ;;		_countTime
  2850 ;; This function uses a non-reentrant model
  2851 ;;
  2852                           
  2853                           	psect	text16
  2854   001496                     __ptext16:
  2855                           	callstack 0
  2856   001496                     _ssdDigit:
  2857                           	callstack 25
  2858                           
  2859                           ;incstack = 0
  2860                           ;ssdDigit@val stored from wreg
  2861   001496  6E3F               	movwf	ssdDigit@val^0,c
  2862   001498                     
  2863                           ;ssd.c: 39: if (pos == 0) {
  2864   001498  503E               	movf	ssdDigit@pos^0,w,c
  2865   00149A  A4D8               	btfss	status,2,c
  2866   00149C  EF52  F00A         	goto	u2501
  2867   0014A0  EF54  F00A         	goto	u2500
  2868   0014A4                     u2501:
  2869   0014A4  EF56  F00A         	goto	l2797
  2870   0014A8                     u2500:
  2871   0014A8                     
  2872                           ;ssd.c: 40: v0 = val;
  2873   0014A8  C03F  F020         	movff	ssdDigit@val,_v0
  2874   0014AC                     l2797:
  2875                           
  2876                           ;ssd.c: 41: };ssd.c: 42: if (pos == 1) {
  2877   0014AC  043E               	decf	ssdDigit@pos^0,w,c
  2878   0014AE  A4D8               	btfss	status,2,c
  2879   0014B0  EF5C  F00A         	goto	u2511
  2880   0014B4  EF5E  F00A         	goto	u2510
  2881   0014B8                     u2511:
  2882   0014B8  EF60  F00A         	goto	l2801
  2883   0014BC                     u2510:
  2884   0014BC                     
  2885                           ;ssd.c: 43: v1 = val;
  2886   0014BC  C03F  F01F         	movff	ssdDigit@val,_v1
  2887   0014C0                     l2801:
  2888                           
  2889                           ;ssd.c: 44: };ssd.c: 45: if (pos == 2) {
  2890   0014C0  0E02               	movlw	2
  2891   0014C2  183E               	xorwf	ssdDigit@pos^0,w,c
  2892   0014C4  A4D8               	btfss	status,2,c
  2893   0014C6  EF67  F00A         	goto	u2521
  2894   0014CA  EF69  F00A         	goto	u2520
  2895   0014CE                     u2521:
  2896   0014CE  EF6B  F00A         	goto	l2805
  2897   0014D2                     u2520:
  2898   0014D2                     
  2899                           ;ssd.c: 46: v2 = val;
  2900   0014D2  C03F  F01E         	movff	ssdDigit@val,_v2
  2901   0014D6                     l2805:
  2902                           
  2903                           ;ssd.c: 47: };ssd.c: 48: if (pos == 3) {
  2904   0014D6  0E03               	movlw	3
  2905   0014D8  183E               	xorwf	ssdDigit@pos^0,w,c
  2906   0014DA  A4D8               	btfss	status,2,c
  2907   0014DC  EF72  F00A         	goto	u2531
  2908   0014E0  EF74  F00A         	goto	u2530
  2909   0014E4                     u2531:
  2910   0014E4  EF76  F00A         	goto	l467
  2911   0014E8                     u2530:
  2912   0014E8                     
  2913                           ;ssd.c: 49: v3 = val;
  2914   0014E8  C03F  F01D         	movff	ssdDigit@val,_v3
  2915   0014EC                     l467:
  2916   0014EC  0012               	return		;funcret
  2917   0014EE                     __end_of_ssdDigit:
  2918                           	callstack 0
  2919                           
  2920 ;; *************** function ___awmod *****************
  2921 ;; Defined at:
  2922 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  2923 ;; Parameters:    Size  Location     Type
  2924 ;;  dividend        2   23[COMRAM] int 
  2925 ;;  divisor         2   25[COMRAM] int 
  2926 ;; Auto vars:     Size  Location     Type
  2927 ;;  sign            1   28[COMRAM] unsigned char 
  2928 ;;  counter         1   27[COMRAM] unsigned char 
  2929 ;; Return value:  Size  Location     Type
  2930 ;;                  2   23[COMRAM] int 
  2931 ;; Registers used:
  2932 ;;		wreg, status,2, status,0
  2933 ;; Tracked objects:
  2934 ;;		On entry : 0/0
  2935 ;;		On exit  : 0/0
  2936 ;;		Unchanged: 0/0
  2937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2938 ;;      Params:         4       0       0       0       0       0       0
  2939 ;;      Locals:         2       0       0       0       0       0       0
  2940 ;;      Temps:          0       0       0       0       0       0       0
  2941 ;;      Totals:         6       0       0       0       0       0       0
  2942 ;;Total ram usage:        6 bytes
  2943 ;; Hardware stack levels used: 1
  2944 ;; Hardware stack levels required when called: 3
  2945 ;; This function calls:
  2946 ;;		Nothing
  2947 ;; This function is called by:
  2948 ;;		_countTime
  2949 ;;		_kernelAddProc
  2950 ;;		_kernelLoop
  2951 ;;		_dsdec2bcd
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           	psect	text17
  2956   00101C                     __ptext17:
  2957                           	callstack 0
  2958   00101C                     ___awmod:
  2959                           	callstack 25
  2960   00101C  0E00               	movlw	0
  2961   00101E  6E4B               	movwf	___awmod@sign^0,c
  2962   001020  BE47               	btfsc	(___awmod@dividend+1)^0,7,c
  2963   001022  EF17  F008         	goto	u2610
  2964   001026  EF15  F008         	goto	u2611
  2965   00102A                     u2611:
  2966   00102A  EF1D  F008         	goto	l2873
  2967   00102E                     u2610:
  2968   00102E  6C46               	negf	___awmod@dividend^0,c
  2969   001030  1E47               	comf	(___awmod@dividend+1)^0,f,c
  2970   001032  B0D8               	btfsc	status,0,c
  2971   001034  2A47               	incf	(___awmod@dividend+1)^0,f,c
  2972   001036  0E01               	movlw	1
  2973   001038  6E4B               	movwf	___awmod@sign^0,c
  2974   00103A                     l2873:
  2975   00103A  BE49               	btfsc	(___awmod@divisor+1)^0,7,c
  2976   00103C  EF24  F008         	goto	u2620
  2977   001040  EF22  F008         	goto	u2621
  2978   001044                     u2621:
  2979   001044  EF28  F008         	goto	l2877
  2980   001048                     u2620:
  2981   001048  6C48               	negf	___awmod@divisor^0,c
  2982   00104A  1E49               	comf	(___awmod@divisor+1)^0,f,c
  2983   00104C  B0D8               	btfsc	status,0,c
  2984   00104E  2A49               	incf	(___awmod@divisor+1)^0,f,c
  2985   001050                     l2877:
  2986   001050  5048               	movf	___awmod@divisor^0,w,c
  2987   001052  1049               	iorwf	(___awmod@divisor+1)^0,w,c
  2988   001054  B4D8               	btfsc	status,2,c
  2989   001056  EF2F  F008         	goto	u2631
  2990   00105A  EF31  F008         	goto	u2630
  2991   00105E                     u2631:
  2992   00105E  EF55  F008         	goto	l2893
  2993   001062                     u2630:
  2994   001062  0E01               	movlw	1
  2995   001064  6E4A               	movwf	___awmod@counter^0,c
  2996   001066  EF39  F008         	goto	l2883
  2997   00106A                     l2881:
  2998   00106A  90D8               	bcf	status,0,c
  2999   00106C  3648               	rlcf	___awmod@divisor^0,f,c
  3000   00106E  3649               	rlcf	(___awmod@divisor+1)^0,f,c
  3001   001070  2A4A               	incf	___awmod@counter^0,f,c
  3002   001072                     l2883:
  3003   001072  AE49               	btfss	(___awmod@divisor+1)^0,7,c
  3004   001074  EF3E  F008         	goto	u2641
  3005   001078  EF40  F008         	goto	u2640
  3006   00107C                     u2641:
  3007   00107C  EF35  F008         	goto	l2881
  3008   001080                     u2640:
  3009   001080                     l2885:
  3010   001080  5048               	movf	___awmod@divisor^0,w,c
  3011   001082  5C46               	subwf	___awmod@dividend^0,w,c
  3012   001084  5049               	movf	(___awmod@divisor+1)^0,w,c
  3013   001086  5847               	subwfb	(___awmod@dividend+1)^0,w,c
  3014   001088  A0D8               	btfss	status,0,c
  3015   00108A  EF49  F008         	goto	u2651
  3016   00108E  EF4B  F008         	goto	u2650
  3017   001092                     u2651:
  3018   001092  EF4F  F008         	goto	l2889
  3019   001096                     u2650:
  3020   001096  5048               	movf	___awmod@divisor^0,w,c
  3021   001098  5E46               	subwf	___awmod@dividend^0,f,c
  3022   00109A  5049               	movf	(___awmod@divisor+1)^0,w,c
  3023   00109C  5A47               	subwfb	(___awmod@dividend+1)^0,f,c
  3024   00109E                     l2889:
  3025   00109E  90D8               	bcf	status,0,c
  3026   0010A0  3249               	rrcf	(___awmod@divisor+1)^0,f,c
  3027   0010A2  3248               	rrcf	___awmod@divisor^0,f,c
  3028   0010A4  2E4A               	decfsz	___awmod@counter^0,f,c
  3029   0010A6  EF40  F008         	goto	l2885
  3030   0010AA                     l2893:
  3031   0010AA  504B               	movf	___awmod@sign^0,w,c
  3032   0010AC  B4D8               	btfsc	status,2,c
  3033   0010AE  EF5B  F008         	goto	u2661
  3034   0010B2  EF5D  F008         	goto	u2660
  3035   0010B6                     u2661:
  3036   0010B6  EF61  F008         	goto	l2897
  3037   0010BA                     u2660:
  3038   0010BA  6C46               	negf	___awmod@dividend^0,c
  3039   0010BC  1E47               	comf	(___awmod@dividend+1)^0,f,c
  3040   0010BE  B0D8               	btfsc	status,0,c
  3041   0010C0  2A47               	incf	(___awmod@dividend+1)^0,f,c
  3042   0010C2                     l2897:
  3043   0010C2  C046  F046         	movff	___awmod@dividend,?___awmod
  3044   0010C6  C047  F047         	movff	___awmod@dividend+1,?___awmod+1
  3045   0010CA  0012               	return		;funcret
  3046   0010CC                     __end_of___awmod:
  3047                           	callstack 0
  3048                           
  3049 ;; *************** function ___awdiv *****************
  3050 ;; Defined at:
  3051 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  3052 ;; Parameters:    Size  Location     Type
  3053 ;;  dividend        2   15[COMRAM] int 
  3054 ;;  divisor         2   17[COMRAM] int 
  3055 ;; Auto vars:     Size  Location     Type
  3056 ;;  quotient        2   21[COMRAM] int 
  3057 ;;  sign            1   20[COMRAM] unsigned char 
  3058 ;;  counter         1   19[COMRAM] unsigned char 
  3059 ;; Return value:  Size  Location     Type
  3060 ;;                  2   15[COMRAM] int 
  3061 ;; Registers used:
  3062 ;;		wreg, status,2, status,0
  3063 ;; Tracked objects:
  3064 ;;		On entry : 0/0
  3065 ;;		On exit  : 0/0
  3066 ;;		Unchanged: 0/0
  3067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3068 ;;      Params:         4       0       0       0       0       0       0
  3069 ;;      Locals:         4       0       0       0       0       0       0
  3070 ;;      Temps:          0       0       0       0       0       0       0
  3071 ;;      Totals:         8       0       0       0       0       0       0
  3072 ;;Total ram usage:        8 bytes
  3073 ;; Hardware stack levels used: 1
  3074 ;; Hardware stack levels required when called: 3
  3075 ;; This function calls:
  3076 ;;		Nothing
  3077 ;; This function is called by:
  3078 ;;		_countTime
  3079 ;;		_dsdec2bcd
  3080 ;;		_dsbcd2dec
  3081 ;; This function uses a non-reentrant model
  3082 ;;
  3083                           
  3084                           	psect	text18
  3085   000F58                     __ptext18:
  3086                           	callstack 0
  3087   000F58                     ___awdiv:
  3088                           	callstack 25
  3089   000F58  0E00               	movlw	0
  3090   000F5A  6E43               	movwf	___awdiv@sign^0,c
  3091   000F5C  BE41               	btfsc	(___awdiv@divisor+1)^0,7,c
  3092   000F5E  EFB5  F007         	goto	u2550
  3093   000F62  EFB3  F007         	goto	u2551
  3094   000F66                     u2551:
  3095   000F66  EFBB  F007         	goto	l2829
  3096   000F6A                     u2550:
  3097   000F6A  6C40               	negf	___awdiv@divisor^0,c
  3098   000F6C  1E41               	comf	(___awdiv@divisor+1)^0,f,c
  3099   000F6E  B0D8               	btfsc	status,0,c
  3100   000F70  2A41               	incf	(___awdiv@divisor+1)^0,f,c
  3101   000F72  0E01               	movlw	1
  3102   000F74  6E43               	movwf	___awdiv@sign^0,c
  3103   000F76                     l2829:
  3104   000F76  BE3F               	btfsc	(___awdiv@dividend+1)^0,7,c
  3105   000F78  EFC2  F007         	goto	u2560
  3106   000F7C  EFC0  F007         	goto	u2561
  3107   000F80                     u2561:
  3108   000F80  EFC8  F007         	goto	l2835
  3109   000F84                     u2560:
  3110   000F84  6C3E               	negf	___awdiv@dividend^0,c
  3111   000F86  1E3F               	comf	(___awdiv@dividend+1)^0,f,c
  3112   000F88  B0D8               	btfsc	status,0,c
  3113   000F8A  2A3F               	incf	(___awdiv@dividend+1)^0,f,c
  3114   000F8C  0E01               	movlw	1
  3115   000F8E  1A43               	xorwf	___awdiv@sign^0,f,c
  3116   000F90                     l2835:
  3117   000F90  0E00               	movlw	0
  3118   000F92  6E45               	movwf	(___awdiv@quotient+1)^0,c
  3119   000F94  0E00               	movlw	0
  3120   000F96  6E44               	movwf	___awdiv@quotient^0,c
  3121   000F98  5040               	movf	___awdiv@divisor^0,w,c
  3122   000F9A  1041               	iorwf	(___awdiv@divisor+1)^0,w,c
  3123   000F9C  B4D8               	btfsc	status,2,c
  3124   000F9E  EFD3  F007         	goto	u2571
  3125   000FA2  EFD5  F007         	goto	u2570
  3126   000FA6                     u2571:
  3127   000FA6  EFFD  F007         	goto	l2857
  3128   000FAA                     u2570:
  3129   000FAA  0E01               	movlw	1
  3130   000FAC  6E42               	movwf	___awdiv@counter^0,c
  3131   000FAE  EFDD  F007         	goto	l2843
  3132   000FB2                     l2841:
  3133   000FB2  90D8               	bcf	status,0,c
  3134   000FB4  3640               	rlcf	___awdiv@divisor^0,f,c
  3135   000FB6  3641               	rlcf	(___awdiv@divisor+1)^0,f,c
  3136   000FB8  2A42               	incf	___awdiv@counter^0,f,c
  3137   000FBA                     l2843:
  3138   000FBA  AE41               	btfss	(___awdiv@divisor+1)^0,7,c
  3139   000FBC  EFE2  F007         	goto	u2581
  3140   000FC0  EFE4  F007         	goto	u2580
  3141   000FC4                     u2581:
  3142   000FC4  EFD9  F007         	goto	l2841
  3143   000FC8                     u2580:
  3144   000FC8                     l2845:
  3145   000FC8  90D8               	bcf	status,0,c
  3146   000FCA  3644               	rlcf	___awdiv@quotient^0,f,c
  3147   000FCC  3645               	rlcf	(___awdiv@quotient+1)^0,f,c
  3148   000FCE  5040               	movf	___awdiv@divisor^0,w,c
  3149   000FD0  5C3E               	subwf	___awdiv@dividend^0,w,c
  3150   000FD2  5041               	movf	(___awdiv@divisor+1)^0,w,c
  3151   000FD4  583F               	subwfb	(___awdiv@dividend+1)^0,w,c
  3152   000FD6  A0D8               	btfss	status,0,c
  3153   000FD8  EFF0  F007         	goto	u2591
  3154   000FDC  EFF2  F007         	goto	u2590
  3155   000FE0                     u2591:
  3156   000FE0  EFF7  F007         	goto	l2853
  3157   000FE4                     u2590:
  3158   000FE4  5040               	movf	___awdiv@divisor^0,w,c
  3159   000FE6  5E3E               	subwf	___awdiv@dividend^0,f,c
  3160   000FE8  5041               	movf	(___awdiv@divisor+1)^0,w,c
  3161   000FEA  5A3F               	subwfb	(___awdiv@dividend+1)^0,f,c
  3162   000FEC  8044               	bsf	___awdiv@quotient^0,0,c
  3163   000FEE                     l2853:
  3164   000FEE  90D8               	bcf	status,0,c
  3165   000FF0  3241               	rrcf	(___awdiv@divisor+1)^0,f,c
  3166   000FF2  3240               	rrcf	___awdiv@divisor^0,f,c
  3167   000FF4  2E42               	decfsz	___awdiv@counter^0,f,c
  3168   000FF6  EFE4  F007         	goto	l2845
  3169   000FFA                     l2857:
  3170   000FFA  5043               	movf	___awdiv@sign^0,w,c
  3171   000FFC  B4D8               	btfsc	status,2,c
  3172   000FFE  EF03  F008         	goto	u2601
  3173   001002  EF05  F008         	goto	u2600
  3174   001006                     u2601:
  3175   001006  EF09  F008         	goto	l2861
  3176   00100A                     u2600:
  3177   00100A  6C44               	negf	___awdiv@quotient^0,c
  3178   00100C  1E45               	comf	(___awdiv@quotient+1)^0,f,c
  3179   00100E  B0D8               	btfsc	status,0,c
  3180   001010  2A45               	incf	(___awdiv@quotient+1)^0,f,c
  3181   001012                     l2861:
  3182   001012  C044  F03E         	movff	___awdiv@quotient,?___awdiv
  3183   001016  C045  F03F         	movff	___awdiv@quotient+1,?___awdiv+1
  3184   00101A  0012               	return		;funcret
  3185   00101C                     __end_of___awdiv:
  3186                           	callstack 0
  3187                           
  3188 ;; *************** function _kernelInit *****************
  3189 ;; Defined at:
  3190 ;;		line 8 in file "kernel.c"
  3191 ;; Parameters:    Size  Location     Type
  3192 ;;		None
  3193 ;; Auto vars:     Size  Location     Type
  3194 ;;		None
  3195 ;; Return value:  Size  Location     Type
  3196 ;;                  1    wreg      unsigned char 
  3197 ;; Registers used:
  3198 ;;		wreg, status,2
  3199 ;; Tracked objects:
  3200 ;;		On entry : 0/0
  3201 ;;		On exit  : 0/0
  3202 ;;		Unchanged: 0/0
  3203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3204 ;;      Params:         0       0       0       0       0       0       0
  3205 ;;      Locals:         0       0       0       0       0       0       0
  3206 ;;      Temps:          0       0       0       0       0       0       0
  3207 ;;      Totals:         0       0       0       0       0       0       0
  3208 ;;Total ram usage:        0 bytes
  3209 ;; Hardware stack levels used: 1
  3210 ;; Hardware stack levels required when called: 3
  3211 ;; This function calls:
  3212 ;;		Nothing
  3213 ;; This function is called by:
  3214 ;;		_main
  3215 ;; This function uses a non-reentrant model
  3216 ;;
  3217                           
  3218                           	psect	text19
  3219   00162E                     __ptext19:
  3220                           	callstack 0
  3221   00162E                     _kernelInit:
  3222                           	callstack 27
  3223   00162E                     
  3224                           ;kernel.c: 9: start = 0;
  3225   00162E  0E00               	movlw	0
  3226   001630  6E25               	movwf	_start^0,c
  3227                           
  3228                           ;kernel.c: 10: end = 0;
  3229   001632  0E00               	movlw	0
  3230   001634  6E24               	movwf	_end^0,c
  3231   001636  0012               	return		;funcret
  3232   001638                     __end_of_kernelInit:
  3233                           	callstack 0
  3234                           
  3235 ;; *************** function _ISR *****************
  3236 ;; Defined at:
  3237 ;;		line 11 in file "main.c"
  3238 ;; Parameters:    Size  Location     Type
  3239 ;;		None
  3240 ;; Auto vars:     Size  Location     Type
  3241 ;;		None
  3242 ;; Return value:  Size  Location     Type
  3243 ;;                  1    wreg      void 
  3244 ;; Registers used:
  3245 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3246 ;; Tracked objects:
  3247 ;;		On entry : 0/0
  3248 ;;		On exit  : 0/0
  3249 ;;		Unchanged: 0/0
  3250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3251 ;;      Params:         0       0       0       0       0       0       0
  3252 ;;      Locals:         0       0       0       0       0       0       0
  3253 ;;      Temps:          6       0       0       0       0       0       0
  3254 ;;      Totals:         6       0       0       0       0       0       0
  3255 ;;Total ram usage:        6 bytes
  3256 ;; Hardware stack levels used: 1
  3257 ;; Hardware stack levels required when called: 2
  3258 ;; This function calls:
  3259 ;;		_KernelClock
  3260 ;; This function is called by:
  3261 ;;		Interrupt level 2
  3262 ;; This function uses a non-reentrant model
  3263 ;;
  3264                           
  3265                           	psect	intcode
  3266   000008                     __pintcode:
  3267                           	callstack 0
  3268   000008                     _ISR:
  3269                           	callstack 24
  3270                           
  3271                           ;incstack = 0
  3272   000008  8261               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3273   00000A  EDCC  F00A         	call	int_func,f	;refresh shadow registers
  3274                           
  3275                           	psect	intcode_body
  3276   001598                     __pintcode_body:
  3277                           	callstack 24
  3278   001598                     int_func:
  3279                           	callstack 24
  3280   001598  0006               	pop		; remove dummy address from shadow register refresh
  3281   00159A  CFE1 F038          	movff	fsr1l,??_ISR
  3282   00159E  CFE2 F039          	movff	fsr1h,??_ISR+1
  3283   0015A2  CFD9 F03A          	movff	fsr2l,??_ISR+2
  3284   0015A6  CFDA F03B          	movff	fsr2h,??_ISR+3
  3285   0015AA  CFF3 F03C          	movff	prodl,??_ISR+4
  3286   0015AE  CFF4 F03D          	movff	prodh,??_ISR+5
  3287   0015B2                     
  3288                           ;main.c: 13: if (((INTCON) & (1<<(2)))) {
  3289   0015B2  A4F2               	btfss	242,2,c	;volatile
  3290   0015B4  EFDE  F00A         	goto	i2u318_41
  3291   0015B8  EFE0  F00A         	goto	i2u318_40
  3292   0015BC                     i2u318_41:
  3293   0015BC  EFE7  F00A         	goto	i2l40
  3294   0015C0                     i2u318_40:
  3295   0015C0                     
  3296                           ;main.c: 16: TMR0H = (63535 >> 8);
  3297   0015C0  0EF8               	movlw	248
  3298   0015C2  6ED7               	movwf	215,c	;volatile
  3299                           
  3300                           ;main.c: 17: TMR0L = (63535 & 0x00FF);
  3301   0015C4  0E2F               	movlw	47
  3302   0015C6  6ED6               	movwf	214,c	;volatile
  3303   0015C8                     
  3304                           ;main.c: 19: KernelClock();
  3305   0015C8  EC10  F009         	call	_KernelClock	;wreg free
  3306   0015CC                     
  3307                           ;main.c: 22: ((INTCON) &= ~(1<<(2)));
  3308   0015CC  94F2               	bcf	242,2,c	;volatile
  3309   0015CE                     i2l40:
  3310   0015CE  C03D  FFF4         	movff	??_ISR+5,prodh
  3311   0015D2  C03C  FFF3         	movff	??_ISR+4,prodl
  3312   0015D6  C03B  FFDA         	movff	??_ISR+3,fsr2h
  3313   0015DA  C03A  FFD9         	movff	??_ISR+2,fsr2l
  3314   0015DE  C039  FFE2         	movff	??_ISR+1,fsr1h
  3315   0015E2  C038  FFE1         	movff	??_ISR,fsr1l
  3316   0015E6  9261               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3317   0015E8  0011               	retfie		f
  3318   0015EA                     __end_of_ISR:
  3319                           	callstack 0
  3320                           
  3321 ;; *************** function _KernelClock *****************
  3322 ;; Defined at:
  3323 ;;		line 74 in file "kernel.c"
  3324 ;; Parameters:    Size  Location     Type
  3325 ;;		None
  3326 ;; Auto vars:     Size  Location     Type
  3327 ;;  proc            1    8[COMRAM] unsigned char 
  3328 ;; Return value:  Size  Location     Type
  3329 ;;                  1    wreg      void 
  3330 ;; Registers used:
  3331 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3332 ;; Tracked objects:
  3333 ;;		On entry : 0/0
  3334 ;;		On exit  : 0/0
  3335 ;;		Unchanged: 0/0
  3336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3337 ;;      Params:         0       0       0       0       0       0       0
  3338 ;;      Locals:         1       0       0       0       0       0       0
  3339 ;;      Temps:          2       0       0       0       0       0       0
  3340 ;;      Totals:         3       0       0       0       0       0       0
  3341 ;;Total ram usage:        3 bytes
  3342 ;; Hardware stack levels used: 1
  3343 ;; Hardware stack levels required when called: 1
  3344 ;; This function calls:
  3345 ;;		i2___awmod
  3346 ;; This function is called by:
  3347 ;;		_ISR
  3348 ;; This function uses a non-reentrant model
  3349 ;;
  3350                           
  3351                           	psect	text21
  3352   001220                     __ptext21:
  3353                           	callstack 0
  3354   001220                     _KernelClock:
  3355                           	callstack 24
  3356   001220                     
  3357                           ;kernel.c: 75: unsigned char proc;;kernel.c: 76: for (proc = start; proc != end; proc = 
      +                          (proc + 1) % 10) {
  3358   001220  C025  F037         	movff	_start,KernelClock@proc
  3359   001224  EF50  F009         	goto	i2l3063
  3360   001228                     i2l3057:
  3361                           
  3362                           ;kernel.c: 77: if ((pool[proc]->start)>(-30000)) {
  3363   001228  5037               	movf	KernelClock@proc^0,w,c
  3364   00122A  0D02               	mullw	2
  3365   00122C  0E01               	movlw	low _pool
  3366   00122E  24F3               	addwf	243,w,c
  3367   001230  6ED9               	movwf	fsr2l,c
  3368   001232  0E00               	movlw	high _pool
  3369   001234  20F4               	addwfc	prodh,w,c
  3370   001236  6EDA               	movwf	fsr2h,c
  3371   001238  EE10 F004          	lfsr	1,4
  3372   00123C  50DE               	movf	postinc2,w,c
  3373   00123E  26E1               	addwf	fsr1l,f,c
  3374   001240  50DD               	movf	postdec2,w,c
  3375   001242  22E2               	addwfc	fsr1h,f,c
  3376   001244  0E01               	movlw	1
  3377   001246  AEE3               	btfss	plusw1,7,c
  3378   001248  EF31  F009         	goto	i2u300_40
  3379   00124C  0ED1               	movlw	209
  3380   00124E  5CE6               	subwf	postinc1,w,c
  3381   001250  0E8A               	movlw	138
  3382   001252  58E6               	subwfb	postinc1,w,c
  3383   001254  A0D8               	btfss	status,0,c
  3384   001256  EF2F  F009         	goto	i2u300_41
  3385   00125A  EF31  F009         	goto	i2u300_40
  3386   00125E                     i2u300_41:
  3387   00125E  EF42  F009         	goto	i2l3061
  3388   001262                     i2u300_40:
  3389   001262                     
  3390                           ;kernel.c: 78: pool[proc]->start--;
  3391   001262  5037               	movf	KernelClock@proc^0,w,c
  3392   001264  0D02               	mullw	2
  3393   001266  0E01               	movlw	low _pool
  3394   001268  24F3               	addwf	243,w,c
  3395   00126A  6ED9               	movwf	fsr2l,c
  3396   00126C  0E00               	movlw	high _pool
  3397   00126E  20F4               	addwfc	prodh,w,c
  3398   001270  6EDA               	movwf	fsr2h,c
  3399   001272  EE10 F004          	lfsr	1,4
  3400   001276  50DE               	movf	postinc2,w,c
  3401   001278  26E1               	addwf	fsr1l,f,c
  3402   00127A  50DD               	movf	postdec2,w,c
  3403   00127C  22E2               	addwfc	fsr1h,f,c
  3404   00127E  06E6               	decf	postinc1,f,c
  3405   001280  0E00               	movlw	0
  3406   001282  5AE5               	subwfb	postdec1,f,c
  3407   001284                     i2l3061:
  3408   001284  0E01               	movlw	1
  3409   001286  2437               	addwf	KernelClock@proc^0,w,c
  3410   001288  6E2F               	movwf	i2___awmod@dividend^0,c
  3411   00128A  6A30               	clrf	(i2___awmod@dividend+1)^0,c
  3412   00128C  0E00               	movlw	0
  3413   00128E  2230               	addwfc	(i2___awmod@dividend+1)^0,f,c
  3414   001290  0E00               	movlw	0
  3415   001292  6E32               	movwf	(i2___awmod@divisor+1)^0,c
  3416   001294  0E0A               	movlw	10
  3417   001296  6E31               	movwf	i2___awmod@divisor^0,c
  3418   001298  EC66  F008         	call	i2___awmod	;wreg free
  3419   00129C  502F               	movf	?i2___awmod^0,w,c
  3420   00129E  6E37               	movwf	KernelClock@proc^0,c
  3421   0012A0                     i2l3063:
  3422   0012A0  5024               	movf	_end^0,w,c
  3423   0012A2  1837               	xorwf	KernelClock@proc^0,w,c
  3424   0012A4  A4D8               	btfss	status,2,c
  3425   0012A6  EF57  F009         	goto	i2u301_41
  3426   0012AA  EF59  F009         	goto	i2u301_40
  3427   0012AE                     i2u301_41:
  3428   0012AE  EF14  F009         	goto	i2l3057
  3429   0012B2                     i2u301_40:
  3430   0012B2  0012               	return		;funcret
  3431   0012B4                     __end_of_KernelClock:
  3432                           	callstack 0
  3433                           
  3434 ;; *************** function i2___awmod *****************
  3435 ;; Defined at:
  3436 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  3437 ;; Parameters:    Size  Location     Type
  3438 ;;  dividend        2    0[COMRAM] int 
  3439 ;;  divisor         2    2[COMRAM] int 
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;  sign            1    5[COMRAM] unsigned char 
  3442 ;;  counter         1    4[COMRAM] unsigned char 
  3443 ;; Return value:  Size  Location     Type
  3444 ;;                  2    0[COMRAM] int 
  3445 ;; Registers used:
  3446 ;;		wreg, status,2, status,0
  3447 ;; Tracked objects:
  3448 ;;		On entry : 0/0
  3449 ;;		On exit  : 0/0
  3450 ;;		Unchanged: 0/0
  3451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3452 ;;      Params:         4       0       0       0       0       0       0
  3453 ;;      Locals:         2       0       0       0       0       0       0
  3454 ;;      Temps:          0       0       0       0       0       0       0
  3455 ;;      Totals:         6       0       0       0       0       0       0
  3456 ;;Total ram usage:        6 bytes
  3457 ;; Hardware stack levels used: 1
  3458 ;; This function calls:
  3459 ;;		Nothing
  3460 ;; This function is called by:
  3461 ;;		_KernelClock
  3462 ;; This function uses a non-reentrant model
  3463 ;;
  3464                           
  3465                           	psect	text22
  3466   0010CC                     __ptext22:
  3467                           	callstack 0
  3468   0010CC                     i2___awmod:
  3469                           	callstack 24
  3470   0010CC  0E00               	movlw	0
  3471   0010CE  6E34               	movwf	i2___awmod@sign^0,c
  3472   0010D0  BE30               	btfsc	(i2___awmod@dividend+1)^0,7,c
  3473   0010D2  EF6F  F008         	goto	i2u294_40
  3474   0010D6  EF6D  F008         	goto	i2u294_41
  3475   0010DA                     i2u294_41:
  3476   0010DA  EF75  F008         	goto	i2l3027
  3477   0010DE                     i2u294_40:
  3478   0010DE  6C2F               	negf	i2___awmod@dividend^0,c
  3479   0010E0  1E30               	comf	(i2___awmod@dividend+1)^0,f,c
  3480   0010E2  B0D8               	btfsc	status,0,c
  3481   0010E4  2A30               	incf	(i2___awmod@dividend+1)^0,f,c
  3482   0010E6  0E01               	movlw	1
  3483   0010E8  6E34               	movwf	i2___awmod@sign^0,c
  3484   0010EA                     i2l3027:
  3485   0010EA  BE32               	btfsc	(i2___awmod@divisor+1)^0,7,c
  3486   0010EC  EF7C  F008         	goto	i2u295_40
  3487   0010F0  EF7A  F008         	goto	i2u295_41
  3488   0010F4                     i2u295_41:
  3489   0010F4  EF80  F008         	goto	i2l3031
  3490   0010F8                     i2u295_40:
  3491   0010F8  6C31               	negf	i2___awmod@divisor^0,c
  3492   0010FA  1E32               	comf	(i2___awmod@divisor+1)^0,f,c
  3493   0010FC  B0D8               	btfsc	status,0,c
  3494   0010FE  2A32               	incf	(i2___awmod@divisor+1)^0,f,c
  3495   001100                     i2l3031:
  3496   001100  5031               	movf	i2___awmod@divisor^0,w,c
  3497   001102  1032               	iorwf	(i2___awmod@divisor+1)^0,w,c
  3498   001104  B4D8               	btfsc	status,2,c
  3499   001106  EF87  F008         	goto	i2u296_41
  3500   00110A  EF89  F008         	goto	i2u296_40
  3501   00110E                     i2u296_41:
  3502   00110E  EFAD  F008         	goto	i2l3047
  3503   001112                     i2u296_40:
  3504   001112  0E01               	movlw	1
  3505   001114  6E33               	movwf	i2___awmod@counter^0,c
  3506   001116  EF91  F008         	goto	i2l3037
  3507   00111A                     i2l3035:
  3508   00111A  90D8               	bcf	status,0,c
  3509   00111C  3631               	rlcf	i2___awmod@divisor^0,f,c
  3510   00111E  3632               	rlcf	(i2___awmod@divisor+1)^0,f,c
  3511   001120  2A33               	incf	i2___awmod@counter^0,f,c
  3512   001122                     i2l3037:
  3513   001122  AE32               	btfss	(i2___awmod@divisor+1)^0,7,c
  3514   001124  EF96  F008         	goto	i2u297_41
  3515   001128  EF98  F008         	goto	i2u297_40
  3516   00112C                     i2u297_41:
  3517   00112C  EF8D  F008         	goto	i2l3035
  3518   001130                     i2u297_40:
  3519   001130                     i2l3039:
  3520   001130  5031               	movf	i2___awmod@divisor^0,w,c
  3521   001132  5C2F               	subwf	i2___awmod@dividend^0,w,c
  3522   001134  5032               	movf	(i2___awmod@divisor+1)^0,w,c
  3523   001136  5830               	subwfb	(i2___awmod@dividend+1)^0,w,c
  3524   001138  A0D8               	btfss	status,0,c
  3525   00113A  EFA1  F008         	goto	i2u298_41
  3526   00113E  EFA3  F008         	goto	i2u298_40
  3527   001142                     i2u298_41:
  3528   001142  EFA7  F008         	goto	i2l3043
  3529   001146                     i2u298_40:
  3530   001146  5031               	movf	i2___awmod@divisor^0,w,c
  3531   001148  5E2F               	subwf	i2___awmod@dividend^0,f,c
  3532   00114A  5032               	movf	(i2___awmod@divisor+1)^0,w,c
  3533   00114C  5A30               	subwfb	(i2___awmod@dividend+1)^0,f,c
  3534   00114E                     i2l3043:
  3535   00114E  90D8               	bcf	status,0,c
  3536   001150  3232               	rrcf	(i2___awmod@divisor+1)^0,f,c
  3537   001152  3231               	rrcf	i2___awmod@divisor^0,f,c
  3538   001154  2E33               	decfsz	i2___awmod@counter^0,f,c
  3539   001156  EF98  F008         	goto	i2l3039
  3540   00115A                     i2l3047:
  3541   00115A  5034               	movf	i2___awmod@sign^0,w,c
  3542   00115C  B4D8               	btfsc	status,2,c
  3543   00115E  EFB3  F008         	goto	i2u299_41
  3544   001162  EFB5  F008         	goto	i2u299_40
  3545   001166                     i2u299_41:
  3546   001166  EFB9  F008         	goto	i2l3051
  3547   00116A                     i2u299_40:
  3548   00116A  6C2F               	negf	i2___awmod@dividend^0,c
  3549   00116C  1E30               	comf	(i2___awmod@dividend+1)^0,f,c
  3550   00116E  B0D8               	btfsc	status,0,c
  3551   001170  2A30               	incf	(i2___awmod@dividend+1)^0,f,c
  3552   001172                     i2l3051:
  3553   001172  C02F  F02F         	movff	i2___awmod@dividend,?i2___awmod
  3554   001176  C030  F030         	movff	i2___awmod@dividend+1,?i2___awmod+1
  3555   00117A  0012               	return		;funcret
  3556   00117C                     __end_ofi2___awmod:
  3557                           	callstack 0
  3558                           
  3559                           	psect	text23
  3560   000000                     __ptext23:
  3561                           	callstack 0
  3562   000000                     
  3563                           	psect	rparam
  3564   000000                     
  3565                           	psect	temp
  3566   000061                     btemp:
  3567                           	callstack 0
  3568   000061                     	ds	1
  3569   000000                     int$flags	set	btemp
  3570   000000                     wtemp8	set	btemp+1
  3571   000000                     ttemp5	set	btemp+1
  3572   000000                     ttemp6	set	btemp+4
  3573   000000                     ttemp7	set	btemp+8
  3574                           
  3575                           	psect	idloc
  3576                           
  3577                           ;Config register IDLOC0 @ 0x200000
  3578                           ;	unspecified, using default values
  3579   200000                     	org	2097152
  3580   200000  FF                 	db	255
  3581                           
  3582                           ;Config register IDLOC1 @ 0x200001
  3583                           ;	unspecified, using default values
  3584   200001                     	org	2097153
  3585   200001  FF                 	db	255
  3586                           
  3587                           ;Config register IDLOC2 @ 0x200002
  3588                           ;	unspecified, using default values
  3589   200002                     	org	2097154
  3590   200002  FF                 	db	255
  3591                           
  3592                           ;Config register IDLOC3 @ 0x200003
  3593                           ;	unspecified, using default values
  3594   200003                     	org	2097155
  3595   200003  FF                 	db	255
  3596                           
  3597                           ;Config register IDLOC4 @ 0x200004
  3598                           ;	unspecified, using default values
  3599   200004                     	org	2097156
  3600   200004  FF                 	db	255
  3601                           
  3602                           ;Config register IDLOC5 @ 0x200005
  3603                           ;	unspecified, using default values
  3604   200005                     	org	2097157
  3605   200005  FF                 	db	255
  3606                           
  3607                           ;Config register IDLOC6 @ 0x200006
  3608                           ;	unspecified, using default values
  3609   200006                     	org	2097158
  3610   200006  FF                 	db	255
  3611                           
  3612                           ;Config register IDLOC7 @ 0x200007
  3613                           ;	unspecified, using default values
  3614   200007                     	org	2097159
  3615   200007  FF                 	db	255
  3616                           
  3617                           	psect	config
  3618                           
  3619                           ; Padding undefined space
  3620   300000                     	org	3145728
  3621   300000  FF                 	db	255
  3622                           
  3623                           ;Config register CONFIG1H @ 0x300001
  3624                           ;	Oscillator Selection bits
  3625                           ;	OSC = HS, HS oscillator
  3626                           ;	Fail-Safe Clock Monitor Enable bit
  3627                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3628                           ;	Internal/External Oscillator Switchover bit
  3629                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3630   300001                     	org	3145729
  3631   300001  02                 	db	2
  3632                           
  3633                           ;Config register CONFIG2L @ 0x300002
  3634                           ;	Power-up Timer Enable bit
  3635                           ;	PWRT = OFF, PWRT disabled
  3636                           ;	Brown-out Reset Enable bits
  3637                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3638                           ;	Brown Out Reset Voltage bits
  3639                           ;	BORV = 2, 
  3640   300002                     	org	3145730
  3641   300002  11                 	db	17
  3642                           
  3643                           ;Config register CONFIG2H @ 0x300003
  3644                           ;	Watchdog Timer Enable bit
  3645                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3646                           ;	Watchdog Timer Postscale Select bits
  3647                           ;	WDTPS = 1, 1:1
  3648   300003                     	org	3145731
  3649   300003  00                 	db	0
  3650                           
  3651                           ; Padding undefined space
  3652   300004                     	org	3145732
  3653   300004  FF                 	db	255
  3654                           
  3655                           ;Config register CONFIG3H @ 0x300005
  3656                           ;	CCP2 MUX bit
  3657                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3658                           ;	PORTB A/D Enable bit
  3659                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  3660                           ;	Low-Power Timer1 Oscillator Enable bit
  3661                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3662                           ;	MCLR Pin Enable bit
  3663                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3664   300005                     	org	3145733
  3665   300005  83                 	db	131
  3666                           
  3667                           ;Config register CONFIG4L @ 0x300006
  3668                           ;	Stack Full/Underflow Reset Enable bit
  3669                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  3670                           ;	Single-Supply ICSP Enable bit
  3671                           ;	LVP = OFF, Single-Supply ICSP disabled
  3672                           ;	Extended Instruction Set Enable bit
  3673                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3674                           ;	Background Debugger Enable bit
  3675                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  3676   300006                     	org	3145734
  3677   300006  80                 	db	128
  3678                           
  3679                           ; Padding undefined space
  3680   300007                     	org	3145735
  3681   300007  FF                 	db	255
  3682                           
  3683                           ;Config register CONFIG5L @ 0x300008
  3684                           ;	Code Protection bit
  3685                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  3686                           ;	Code Protection bit
  3687                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  3688                           ;	Code Protection bit
  3689                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  3690                           ;	Code Protection bit
  3691                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  3692   300008                     	org	3145736
  3693   300008  0F                 	db	15
  3694                           
  3695                           ;Config register CONFIG5H @ 0x300009
  3696                           ;	Boot Block Code Protection bit
  3697                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3698                           ;	Data EEPROM Code Protection bit
  3699                           ;	CPD = OFF, Data EEPROM not code-protected
  3700   300009                     	org	3145737
  3701   300009  C0                 	db	192
  3702                           
  3703                           ;Config register CONFIG6L @ 0x30000A
  3704                           ;	Write Protection bit
  3705                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  3706                           ;	Write Protection bit
  3707                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  3708                           ;	Write Protection bit
  3709                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  3710                           ;	Write Protection bit
  3711                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  3712   30000A                     	org	3145738
  3713   30000A  0F                 	db	15
  3714                           
  3715                           ;Config register CONFIG6H @ 0x30000B
  3716                           ;	Configuration Register Write Protection bit
  3717                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3718                           ;	Boot Block Write Protection bit
  3719                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  3720                           ;	Data EEPROM Write Protection bit
  3721                           ;	WRTD = OFF, Data EEPROM not write-protected
  3722   30000B                     	org	3145739
  3723   30000B  E0                 	db	224
  3724                           
  3725                           ;Config register CONFIG7L @ 0x30000C
  3726                           ;	Table Read Protection bit
  3727                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  3728                           ;	Table Read Protection bit
  3729                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  3730                           ;	Table Read Protection bit
  3731                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  3732                           ;	Table Read Protection bit
  3733                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3734   30000C                     	org	3145740
  3735   30000C  0F                 	db	15
  3736                           
  3737                           ;Config register CONFIG7H @ 0x30000D
  3738                           ;	Boot Block Table Read Protection bit
  3739                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3740   30000D                     	org	3145741
  3741   30000D  40                 	db	64
  3742                           tosu	equ	0xFFF
  3743                           tosh	equ	0xFFE
  3744                           tosl	equ	0xFFD
  3745                           stkptr	equ	0xFFC
  3746                           pclatu	equ	0xFFB
  3747                           pclath	equ	0xFFA
  3748                           pcl	equ	0xFF9
  3749                           tblptru	equ	0xFF8
  3750                           tblptrh	equ	0xFF7
  3751                           tblptrl	equ	0xFF6
  3752                           tablat	equ	0xFF5
  3753                           prodh	equ	0xFF4
  3754                           prodl	equ	0xFF3
  3755                           indf0	equ	0xFEF
  3756                           postinc0	equ	0xFEE
  3757                           postdec0	equ	0xFED
  3758                           preinc0	equ	0xFEC
  3759                           plusw0	equ	0xFEB
  3760                           fsr0h	equ	0xFEA
  3761                           fsr0l	equ	0xFE9
  3762                           wreg	equ	0xFE8
  3763                           indf1	equ	0xFE7
  3764                           postinc1	equ	0xFE6
  3765                           postdec1	equ	0xFE5
  3766                           preinc1	equ	0xFE4
  3767                           plusw1	equ	0xFE3
  3768                           fsr1h	equ	0xFE2
  3769                           fsr1l	equ	0xFE1
  3770                           bsr	equ	0xFE0
  3771                           indf2	equ	0xFDF
  3772                           postinc2	equ	0xFDE
  3773                           postdec2	equ	0xFDD
  3774                           preinc2	equ	0xFDC
  3775                           plusw2	equ	0xFDB
  3776                           fsr2h	equ	0xFDA
  3777                           fsr2l	equ	0xFD9
  3778                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    16
    Data        24
    BSS         46
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     42      96
    BANK0           128     24      40
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    my_funcs$0	PTR void  size(2) Largest target is 0

    S162$2$0	PTR void  size(2) Largest target is 0

    kernelLoop$1279	PTR struct . size(2) Largest target is 8
		 -> main@countTime_proc(BANK0[8]), main@SSDUpdate_proc(BANK0[8]), main@init_PD(BANK0[8]), 

    ?_getLedDriver.initFunc	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> initGenerico(), 

    ?_getLedDriver.funcoes	PTR PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 4
		 -> my_funcs(COMRAM[4]), 

    sp__getLedDriver.initFunc	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> initGenerico(), 

    sp__getLedDriver.funcoes	PTR PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 4
		 -> my_funcs(COMRAM[4]), 

    sp__getLedDriver	PTR struct . size(2) Largest target is 6
		 -> myself(COMRAM[5]), 

    my_funcs	PTR FTN(PTR void ,)unsigned char [2] size(2) Largest target is 1
		 -> inverte(), changePORTD(), 

    S162$initFunc	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> initGenerico(), 

    myself.initFunc	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> initGenerico(), 

    S162$funcoes	PTR PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 4
		 -> my_funcs(COMRAM[4]), 

    myself.funcoes	PTR PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 4
		 -> my_funcs(COMRAM[4]), 

    kernelLoop@tempProc	PTR struct . size(2) Largest target is 8
		 -> main@countTime_proc(BANK0[8]), main@SSDUpdate_proc(BANK0[8]), main@init_PD(BANK0[8]), 

    kernelAddProc@newProc.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), initPORTAD(), 

    pool.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), initPORTAD(), 

    kernelAddProc@newProc	PTR struct . size(2) Largest target is 8
		 -> main@countTime_proc(BANK0[8]), main@SSDUpdate_proc(BANK0[8]), main@init_PD(BANK0[8]), 

    pool	PTR struct .[10] size(2) Largest target is 8
		 -> main@countTime_proc(BANK0[8]), main@SSDUpdate_proc(BANK0[8]), main@init_PD(BANK0[8]), 

    F2417.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), initPORTAD(), 

    countTime_proc.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), initPORTAD(), 

    F2414.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), initPORTAD(), 

    SSDUpdate_proc.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), initPORTAD(), 

    F2411.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), initPORTAD(), 

    S44$function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), initPORTAD(), 

    init_PD.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), initPORTAD(), 


Critical Paths under _main in COMRAM

    _main->_kernelLoop
    _ssdInit->_pinMode
    _lcdInit->_lcdCommand
    _lcdCommand->_digitalWrite
    _Delay2ms->_Delay40us
    _lcdData->_digitalWrite
    _kernelLoop->_kernelAddProc
    _ssdUpdate->_digitalWrite
    _kernelAddProc->___awmod
    _countTime->___awmod
    ___awmod->___awdiv

Critical Paths under _ISR in COMRAM

    _ISR->_KernelClock
    _KernelClock->i2___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0   33493
                                              0 BANK0     24    24      0
                      _kernelAddProc
                         _kernelInit
                         _kernelLoop
                         _lcdCommand
                            _lcdData
                            _lcdInit
                            _ssdInit
                          _timerInit
 ---------------------------------------------------------------------------------
 (1) _timerInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    3140
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0    7119
                           _Delay2ms
                         _lcdCommand
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              6     2      4    3140
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           2     2      0    3843
                                             21 COMRAM     2     2      0
                           _Delay2ms
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _Delay2ms                                             1     1      0     136
                                             16 COMRAM     1     1      0
                          _Delay40us
 ---------------------------------------------------------------------------------
 (1) _lcdData                                              2     2      0    3645
                                             21 COMRAM     2     2      0
                          _Delay40us
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _Delay40us                                            1     1      0      68
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _kernelLoop                                           9     9      0   12933
                                             33 COMRAM     9     9      0
                            ___awmod
                          _countTime *
                         _initPORTAD *
                      _kernelAddProc
                          _updateSSD *
 ---------------------------------------------------------------------------------
 (2) _updateSSD                                            0     0      0    3512
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (3) _ssdUpdate                                            0     0      0    3512
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _digitalWrite                                         6     2      4    3512
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _kernelAddProc                                        4     2      2    2585
                                             29 COMRAM     4     2      2
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _initPORTAD                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _countTime                                            2     2      0    4252
                                             29 COMRAM     2     2      0
                            ___awdiv
                            ___awmod
                           _ssdDigit
 ---------------------------------------------------------------------------------
 (3) _ssdDigit                                             2     1      1     608
                                             15 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    2163
                                             23 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1345
                                             15 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _kernelInit                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  6     6      0     633
                                              9 COMRAM     6     6      0
                        _KernelClock
 ---------------------------------------------------------------------------------
 (6) _KernelClock                                          3     3      0     633
                                              6 COMRAM     3     3      0
                          i2___awmod
 ---------------------------------------------------------------------------------
 (7) i2___awmod                                            6     2      4     503
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _kernelAddProc
     ___awmod
       ___awdiv (ARG)
   _kernelInit
   _kernelLoop
     ___awmod
     _countTime *
       ___awdiv
       ___awmod
       _ssdDigit
     _initPORTAD *
     _kernelAddProc *
     _updateSSD *
       _ssdUpdate
         _digitalWrite
   _lcdCommand
     _Delay2ms
       _Delay40us
     _Delay40us
     _digitalWrite
   _lcdData
     _Delay40us
     _digitalWrite
   _lcdInit
     _Delay2ms
     _lcdCommand
     _pinMode
   _ssdInit
     _pinMode
   _timerInit

 _ISR (ROOT)
   _KernelClock
     i2___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     18      28       5       31.2%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     2A      60       1       76.2%
BITBIGSFRlh         1A      0       0      17        0.0%
BITBIGSFRllhll       D      0       0      27        0.0%
BITBIGSFRh           D      0       0      16        0.0%
BITBIGSFRllhhll      C      0       0      25        0.0%
BITBIGSFRllhhll      7      0       0      24        0.0%
BITBIGSFRllhhll      7      0       0      26        0.0%
BITBIGSFRllhhlh      5      0       0      20        0.0%
BITBIGSFRllhhll      4      0       0      23        0.0%
BITBIGSFRllhhlh      4      0       0      19        0.0%
BITBIGSFRllhhh       4      0       0      18        0.0%
BITBIGSFRllhhll      1      0       0      22        0.0%
BITBIGSFRllhhll      1      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      88      28        0.0%
DATA                 0      0      88       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Nov 13 19:53:54 2022

           fp__countTime 0000            fp__initPORTAD 0000                       l60 0F56  
                     l46 164E                       l55 1656                       l71 1342  
                     l80 1636                       l84 121E                       l87 0612  
           ___awdiv@sign 0043                       _v0 0020                       _v1 001F  
                     _v2 001E                       _v3 001D                      l300 161C  
                    l312 13C2                      l217 0D3E                      l305 1604  
                    l315 1596                      l251 0AF0                      l318 143A  
                    l503 1646                      l480 1542                      l467 14EC  
                    l477 0E7A                      l750 10CA                      l737 101A  
                    _PR2 000FCB                      _ISR 0008                      _end 0024  
           ___awmod@sign 004B                      prod 000FF3                      tosl 000FFD  
                    wreg 000FE8                     ?_ISR 002F                     l3001 0A98  
                   l3003 0AAA                     l3005 0ACE                     l3101 141C  
                   l3111 1546                     l3103 1422                     l3121 157A  
                   l3113 154A                     l3105 1428                     l3131 0630  
                   l3123 158E                     l3115 154E                     l3107 142E  
                   l3133 066A                     l3125 1592                     l3117 1562  
                   l3109 1434                     l3221 12F2                     l3151 07CA  
                   l3143 075C                     l3135 06A4                     l3127 0612  
                   l3119 1566                     l3071 153E                     l3231 131C  
                   l3223 12F6                     l3215 12B4                     l3073 162E  
                   l3153 07E2                     l3137 06FA                     l3145 0778  
                   l3129 0624                     l3081 13F0                     l3065 1640  
                   l3241 132C                     l3233 131E                     l3225 1302  
                   l3217 12EA                     l3155 081C                     l3147 078A  
                   l3139 0702                     l3091 1404                     l3083 13F4  
                   l3067 1644                     l3243 1332                     l3235 1320  
                   l3227 130E                     l3219 12EE                     l3157 0866  
                   l3149 07A2                     l3093 140A                     l3085 13F8  
                   l3077 13C4                     l3069 14EE                     l3245 1338  
                   l3237 1322                     l3229 131A                     l2711 0B62  
                   l2703 0AF2                     l3159 0882                     l3095 140E  
                   l3087 13FC                     l3079 13EC                     l3247 133E  
                   l3239 1326                     l2801 14C0                     l2721 0BF6  
                   l2713 0B7E                     l2705 0B0E                     l3097 1412  
                   l3089 1400                     l2803 14D2                     l2731 0C88  
                   l2723 0C10                     l2715 0B98                     l2707 0B20  
                   l3099 1418                     l2821 0F58                     l2805 14D6  
                   l2741 0D20                     l2733 0CA8                     l2725 0C30  
                   l2717 0BB8                     l2709 0B40                     l2901 1648  
                   l2831 0F84                     l2823 0F5C                     l2807 14E8  
                   l2735 0CCA                     l2727 0C52                     l2719 0BDA  
                   l2903 164C                     l2751 160C                     l2743 1606  
                   l2815 15EE                     l2841 0FB2                     l2833 0F8C  
                   l2825 0F6A                     l2737 0CE6                     l2729 0C6E  
                   l2761 0D80                     l2753 0D40                     l2921 0ED6  
                   l2913 0E7C                     l2817 15F2                     l2809 15EA  
                   l2851 0FEC                     l2843 0FBA                     l2835 0F90  
                   l2827 0F72                     l2739 0D00                     l2771 0DDC  
                   l2763 0D9C                     l2755 0D44                     l2907 1650  
                   l2931 0F54                     l2923 0EE0                     l2915 0E80  
                   l2819 15F4                     l2861 1012                     l2853 0FEE  
                   l2845 0FC8                     l2837 0F98                     l2829 0F76  
                   l2941 1202                     l2781 0E26                     l2773 0DF0  
                   l2765 0DAE                     l2757 0D58                     l2909 1654  
                   l2925 0F10                     l2917 0E9C                     l2749 160A  
                   l2855 0FF4                     l2847 0FCE                     l2839 0FAA  
                   l2871 1036                     l2935 117C                     l2783 0E38  
                   l2775 0DF8                     l2767 0DC2                     l2791 0E54  
                   l2759 0D6C                     l2927 0F1A                     l2919 0EA6  
                   l2951 1364                     l2849 0FE4                     l2857 0FFA  
                   l2881 106A                     l2873 103A                     l2865 101C  
                   l2793 1498                     l2937 11B2                     l2785 0E4C  
                   l2777 0E0A                     l2769 0DCA                     l2929 0F4A  
                   l2961 13A6                     l2953 1368                     l2945 1348  
                   l2859 100A                     l2891 10A4                     l2883 1072  
                   l2875 1048                     l2867 1020                     l2795 14A8  
                   l2939 11CA                     l2779 0E1E                     l2963 13B6  
                   l2955 137C                     l2947 134C                     l2971 08D2  
                   l2885 1080                     l2893 10AA                     l2877 1050  
                   l2869 102E                     l2797 14AC                     l2965 13BE  
                   l2957 1390                     l2949 1350                     l2981 0966  
                   l2973 08F2                     l2895 10BA                     l2887 1096  
                   l2879 1062                     l2799 14BC                     l2959 1394  
                   l2991 0A04                     l2983 098C                     l2975 0914  
                   l2967 08A4                     l2897 10C2                     l2889 109E  
                   l2993 0A20                     l2985 09A8                     l2977 0930  
                   l2969 08C0                     l2995 0A32                     l2987 09BA  
                   l2979 0942                     l2997 0A56                     l2989 09DE  
                   l2999 0A7C                     u2300 0B20                     u3100 0866  
                   u3020 0624                     u2301 0B1C                     u3101 0862  
                   u3021 0620                     u3030 066A                     u3031 0666  
                   u3040 06A4                     u3041 06A0                     u3201 12D0  
                   u2410 0C6E                     u2330 0B7E                     u2314 0B32  
                   u3050 06FA                     u2411 0C6A                     u2331 0B7A  
                   u2315 0B2E                     u3051 06F6                     u3211 12E2  
                   u2500 14A8                     u2420 0C88                     u2404 0C42  
                   u2340 0B98                     u2324 0B52                     u3060 0758  
                   u2501 14A4                     u2421 0C84                     u2405 0C3E  
                   u2341 0B94                     u2325 0B4E                     u3061 0754  
                   u2510 14BC                     u3070 078A                     u2511 14B8  
                   u3071 0786                     u2600 100A                     u2520 14D2  
                   u3080 081C                     u2601 1006                     u2521 14CE  
                   u3081 0818                     u2610 102E                     u2530 14E8  
                   u2450 0CE6                     u2434 0C9A                     u2370 0BF6  
                   u2354 0BAA                     u2290 0B0E                     u2611 102A  
                   u2531 14E4                     u2451 0CE2                     u2435 0C96  
                   u2371 0BF2                     u2355 0BA6                     u2291 0B0A  
                   u2620 1048                     u2460 0D00                     u2444 0CBA  
                   u2380 0C10                     u2364 0BCA                     u2540 1604  
                   u2700 08C0                     u2621 1044                     u2461 0CFC  
                   u2445 0CB6                     u2381 0C0C                     u2365 0BC6  
                   u2541 1600                     u2701 08BC                     u2550 0F6A  
                   u2630 1062                     u2710 08D2                     u2551 0F66  
                   u2631 105E                     u2711 08CE                     u3191 12BE  
                   u2560 0F84                     u2640 1080                     u2561 0F80  
                   u2641 107C                     u2570 0FAA                     u2650 1096  
                   u2474 0D12                     u2394 0C22                     u3098 0842  
                   u2490 161C                     u2571 0FA6                     u2651 1092  
                   u2475 0D0E                     u2395 0C1E                     u3099 0856  
                   u2491 1618                     u2580 0FC8                     u2660 10BA  
                   u2484 0D32                     u2820 0A20                     u2804 09D0  
                   u2740 0930                     u2724 08E4                     u2581 0FC4  
                   u2661 10B6                     u2485 0D2E                     u2821 0A1C  
                   u2805 09CC                     u2741 092C                     u2725 08E0  
                   u2590 0FE4                     u2670 11B2                     u2830 0A32  
                   u2814 09F4                     u2750 0942                     u2734 0904  
                   u2591 0FE0                     u2671 11AE                     u2831 0A2E  
                   u2815 09F0                     u2751 093E                     u2735 0900  
                   u2680 13A6                     u2681 13A2                     u2690 13B6  
                   u2691 13B2                     u2860 0A98                     u2844 0A48  
                   u2780 09A8                     u2764 0958                     u2861 0A94  
                   u2845 0A44                     u2781 09A4                     u2765 0954  
                   u2870 0AAA                     u2854 0A6C                     u2790 09BA  
                   u2774 097C                     u2871 0AA6                     u2855 0A68  
                   u2791 09B6                     u2775 0978                     u2884 0AC0  
                   u2885 0ABC                     u2894 0AE4                     u2895 0AE0  
                   i2l40 15CE                     _PIR1 000F9E              main@init_PD 0080  
                   _RCON 000FD0                     _main 12B4                     _pool 0001  
           fp__updateSSD 0000                     fsr0h 000FEA                     fsr1h 000FE2  
                   fsr2h 000FDA                     fsr0l 000FE9                     fsr1l 000FE1  
                   fsr2l 000FD9                     btemp 0061       kernelLoop@tempProc 0055  
                   prodh 000FF4                     prodl 000FF3                     start 000E  
          ??_KernelClock 0035             ___param_bank 000000                    ??_ISR 0038  
                  ?_main 002F          __end_of___awdiv 101C          __end_of___awmod 10CC  
                  _T0CON 000FD5          ___awdiv@divisor 0040                    _T2CON 000FCA  
                  i2l107 12B2                    i2l750 117A          ___awdiv@counter 0042  
                  _RCREG 000FAE                    _RCSTA 000FAB                    _TMR0H 000FD7  
                  _TMR0L 000FD6                    _SPBRG 000FAF                    _PORTA 000F80  
                  _PORTB 000F81                    _PORTC 000F82                    _PORTD 000F83  
                  _PORTE 000F84                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
                  _TXREG 000FAD                    _TXSTA 000FAC          __end_of_lcdData 1598  
        __end_of_lcdInit 143C          __end_of_pinMode 0AF2                    _valor 001B  
                  _start 0025                    pclath 000FFA                    tablat 000FF5  
        __end_of_ssdInit 1544                    plusw1 000FE3                    plusw2 000FDB  
                  ttemp5 0062                    ttemp6 0065                    ttemp7 0069  
                  status 000FD8                    wtemp8 0062         __end_of_Delay2ms 1606  
   __end_of_digitalWrite 0D40          __initialization 143C             __end_of_main 1346  
    __end_of_KernelClock 12B4                   ??_main 0059            __activetblptr 000002  
                 _ADCON0 000FC2                   _ADCON2 000FC0                   _ADRESH 000FC4  
                 _ADRESL 000FC3                   _CCPR1L 000FBE         ___awdiv@dividend 003E  
                 i2l3021 10D0                   i2l3031 1100                   i2l3023 10DE  
                 i2l3041 1146                   i2l3033 1112                   i2l3025 10E6  
                 i2l3051 1172                   i2l3043 114E                   i2l3035 111A  
                 i2l3027 10EA                   i2l3019 10CC                   i2l3211 15C8  
                 i2l3045 1154                   i2l3037 1122                   i2l3029 10F8  
                 i2l3061 1284                   i2l3213 15CC                   i2l3039 1130  
                 i2l3047 115A                   i2l3063 12A0                   i2l3055 1220  
                 i2l3207 15B2                   i2l3049 116A                   i2l3057 1228  
                 i2l3209 15C0                   i2l3059 1262                   _INTCON 000FF2  
                 _SPBRGH 000FB0              kernelLoop@p 0058                ??___awdiv 0042  
              ??___awmod 004A                   clear_0 1482         ___awdiv@quotient 0044  
        ___awmod@divisor 0048                ??_lcdData 0044                   isa$std 000001  
              ??_lcdInit 0046          ___awmod@counter 004A                   _myself 0026  
          _kernelAddProc 117C         __end_of_ssdDigit 14EE             __pdataCOMRAM 0059  
              ??_pinMode 0042        __end_ofi2___awmod 117C             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
              ??_ssdInit 0044           i2___awmod@sign 0034        __end_of_Delay40us 161E  
             __accesstop 0080  __end_of__initialization 1488            ___rparam_used 000001  
           countTime@dig 004C              _KernelClock 1220              pinMode@type 0040  
         __pcstackCOMRAM 002F             __pidataBANK0 161E           ?_kernelAddProc 004C  
              ?_Delay2ms 002F               _lcdCommand 1346                  _CCP1CON 000FBD  
                _BAUDCON 000FB8               ??_Delay2ms 003F             _digitalWrite 0AF2  
             _initPORTAD 1648                  __Hparam 0000                  __Lparam 0000  
              ?_ssdDigit 003E          kpDebounce@tempo 0023               _kernelInit 162E  
             _kernelLoop 0612                  ___awdiv 0F58                  ___awmod 101C  
        ??_kernelAddProc 004E             __psmallconst 0600              ssdDigit@val 003F  
            ssdDigit@pos 003E                  __pcinit 143C        __end_of_countTime 0F58  
                _lcdData 1544                  __ramtop 0600                  _lcdInit 13C4  
                __ptext0 12B4                  __ptext1 1640                  __ptext2 14EE  
                __ptext3 13C4                  __ptext4 08A4                  __ptext5 1346  
                __ptext6 15EA                  __ptext7 1544                  __ptext8 1606  
                __ptext9 0612                  _display 0021                  _pinMode 08A4  
       ___awmod@dividend 0046                  _inverte 000000                  _ssdInit 14EE  
              Delay2ms@i 003F                  _started 0022      kpDebounce@valorNovo 0017  
         __pintcode_body 1598     end_of_initialization 1488            __Lmediumconst 0000  
                int_func 1598        __end_of_timerInit 1648        __end_of_ssdUpdate 0E7C  
             ??_ssdDigit 003F        __end_of_updateSSD 1658                  postdec1 000FE5  
                postdec2 000FDD              ?_lcdCommand 002F                  postinc0 000FEE  
                postinc1 000FE6                  postinc2 000FDE           _valor@ssd$F540 0601  
         kernelLoop@next 0057                i2___awmod 10CC                _Delay40us 1606  
            ?_initPORTAD 002F             ?_KernelClock 002F              ?_kernelInit 002F  
            ?_kernelLoop 002F            __pidataCOMRAM 1638   __end_of_valor@ssd$F540 0611  
    start_initialization 143C              __end_of_ISR 15EA               ?i2___awmod 002F  
        KernelClock@proc 0037               ?_Delay40us 002F             _initGenerico 000000  
     main@SSDUpdate_proc 0088              __pdataBANK0 0098              _changePORTD 000000  
            __pbssCOMRAM 0001            __pcstackBANK0 0080     kernelAddProc@newProc 004C  
             pinMode@pin 003E                __pintcode 0008                 ?___awdiv 003E  
               ?___awmod 0046                 ?_lcdData 002F                 ?_lcdInit 002F  
          lcdCommand@cmd 0045              __smallconst 0600                 ?_pinMode 003E  
              _countTime 0E7C                 ?_ssdInit 002F              ??i2___awmod 0033  
            ??_Delay40us 003E       main@countTime_proc 0090                 i2u300_40 1262  
               i2u300_41 125E                 i2u301_40 12B2                 i2u301_41 12AE  
               i2u318_40 15C0                 i2u318_41 15BC                 i2u294_40 10DE  
               i2u294_41 10DA                 i2u295_40 10F8                 i2u295_41 10F4  
               i2u296_40 1112                 i2u296_41 110E                 i2u297_40 1130  
               i2u297_41 112C                 i2u298_40 1146                 i2u298_41 1142  
               i2u299_40 116A                 i2u299_41 1166             ??_lcdCommand 0044  
              main@F2411 0059                main@F2414 00A0                main@F2417 0098  
              _timerInit 1640                _ssdUpdate 0D40                _updateSSD 1650  
  __end_of_kernelAddProc 1220          lcdCommand@old_D 0044    kpDebounce@valorAntigo 0015  
             ?_countTime 002F                 _Delay2ms 15EA                copy_data0 1450  
              copy_data1 1470       i2___awmod@dividend 002F       __end_of_lcdCommand 13C4  
           lcdData@old_D 0045             lcdData@valor 0044             ??_initPORTAD 003E  
               __Hrparam 0000                 __Lrparam 0000             ??_kernelInit 003E  
           ??_kernelLoop 0050               ?_timerInit 002F               ?_ssdUpdate 002F  
             ?_updateSSD 002F       __end_of_initPORTAD 1650                 __ptext10 0E7C  
               __ptext11 1648                 __ptext12 1650                 __ptext21 1220  
               __ptext13 0D40                 __ptext22 10CC                 __ptext14 0AF2  
               __ptext23 0000                 __ptext15 117C                 __ptext16 1496  
               __ptext17 101C                 __ptext18 0F58                 __ptext19 162E  
     __end_of_kernelInit 1638       __end_of_kernelLoop 08A4               Delay40us@i 003E  
               _ssdDigit 1496                 _my_funcs 002B                 isa$xinst 000000  
               int$flags 0061        i2___awmod@divisor 0031        i2___awmod@counter 0033  
            ??_countTime 004C            ?_digitalWrite 003E                 intlevel2 0000  
      digitalWrite@value 0040              ??_timerInit 003E              ??_ssdUpdate 0044  
            ??_updateSSD 0044           ??_digitalWrite 0042          digitalWrite@pin 003E  
      _valor@keypad$F319 0019  
