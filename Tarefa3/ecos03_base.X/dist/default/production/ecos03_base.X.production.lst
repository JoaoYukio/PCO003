

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Nov 07 07:57:05 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    37                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    39   000000                     
    40                           ; Version 2.40
    41                           ; Generated 17/11/2021 GMT
    42                           ; 
    43                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F4520 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75   000000                     
    76 ;; Function _changePORTD is unused but had its address taken
    77   000000                     
    78 ;; Function _inverte is unused but had its address taken
    79   000000                     
    80 ;; Function _initGenerico is unused but had its address taken
    81   000000                     
    82                           	psect	idataCOMRAM
    83   001476                     __pidataCOMRAM:
    84                           	callstack 0
    85                           
    86                           ;initializer for main@F2405
    87   001476  86                 	db	low _initPORTAD
    88   001477  14                 	db	high _initPORTAD
    89   001478  0000               	dw	0
    90   00147A  0000               	dw	0
    91   00147C  000F               	dw	15
    92                           
    93                           	psect	idataBANK0
    94   00145C                     __pidataBANK0:
    95                           	callstack 0
    96                           
    97                           ;initializer for main@F2411
    98   00145C  54                 	db	low _countTime
    99   00145D  0E                 	db	high _countTime
   100   00145E  0064               	dw	100
   101   001460  0000               	dw	0
   102   001462  000A               	dw	10
   103                           
   104                           ;initializer for main@F2408
   105   001464  8E                 	db	low _updateSSD
   106   001465  14                 	db	high _updateSSD
   107   001466  0001               	dw	1
   108   001468  0000               	dw	0
   109   00146A  0005               	dw	5
   110                           
   111                           	psect	smallconst
   112   000600                     __psmallconst:
   113                           	callstack 0
   114   000600  00                 	db	0
   115   000601                     _valor@ssd$F527:
   116                           	callstack 0
   117   000601  3F                 	db	63
   118   000602  06                 	db	6
   119   000603  5B                 	db	91
   120   000604  4F                 	db	79
   121   000605  66                 	db	102
   122   000606  6D                 	db	109
   123   000607  7D                 	db	125
   124   000608  07                 	db	7
   125   000609  7F                 	db	127
   126   00060A  6F                 	db	111
   127   00060B  77                 	db	119
   128   00060C  7C                 	db	124
   129   00060D  39                 	db	57
   130   00060E  5E                 	db	94
   131   00060F  79                 	db	121
   132   000610  71                 	db	113
   133   000611                     __end_of_valor@ssd$F527:
   134                           	callstack 0
   135   000000                     _SPBRG	set	4015
   136   000000                     _SPBRGH	set	4016
   137   000000                     _BAUDCON	set	4024
   138   000000                     _TXSTA	set	4012
   139   000000                     _RCREG	set	4014
   140   000000                     _TRISC	set	3988
   141   000000                     _TRISB	set	3987
   142   000000                     _PORTC	set	3970
   143   000000                     _PORTB	set	3969
   144   000000                     _PORTA	set	3968
   145   000000                     _ADRESL	set	4035
   146   000000                     _ADRESH	set	4036
   147   000000                     _PORTD	set	3971
   148   000000                     _TMR0L	set	4054
   149   000000                     _TMR0H	set	4055
   150   000000                     _INTCON	set	4082
   151   000000                     _TRISA	set	3986
   152   000000                     _PORTE	set	3972
   153   000000                     _TRISD	set	3989
   154   000000                     _PIR1	set	3998
   155   000000                     _CCP1CON	set	4029
   156   000000                     _CCPR1L	set	4030
   157   000000                     _TRISE	set	3990
   158   000000                     _ADCON2	set	4032
   159   000000                     _ADCON0	set	4034
   160   000000                     _RCON	set	4048
   161   000000                     _T0CON	set	4053
   162   000000                     _T2CON	set	4042
   163   000000                     _PR2	set	4043
   164   000000                     _RCSTA	set	4011
   165   000000                     _TXREG	set	4013
   166   000611  00                 	db	0	; dummy byte at the end
   167   000000                     
   168                           ; #config settings
   169                           
   170                           	psect	cinit
   171   001302                     __pcinit:
   172                           	callstack 0
   173   001302                     start_initialization:
   174                           	callstack 0
   175   001302                     __initialization:
   176                           	callstack 0
   177                           
   178                           ; Initialize objects allocated to BANK0 (16 bytes)
   179                           ; load TBLPTR registers with __pidataBANK0
   180   001302  0E5C               	movlw	low __pidataBANK0
   181   001304  6EF6               	movwf	tblptrl,c
   182   001306  0E14               	movlw	high __pidataBANK0
   183   001308  6EF7               	movwf	tblptrh,c
   184   00130A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   185   00130C  6EF8               	movwf	tblptru,c
   186   00130E  EE00  F098         	lfsr	0,__pdataBANK0
   187   001312  EE10 F010          	lfsr	1,16
   188   001316                     copy_data0:
   189   001316  0009               	tblrd		*+
   190   001318  CFF5 FFEE          	movff	tablat,postinc0
   191   00131C  50E5               	movf	postdec1,w,c
   192   00131E  50E1               	movf	fsr1l,w,c
   193   001320  E1FA               	bnz	copy_data0
   194                           
   195                           ; Initialize objects allocated to COMRAM (8 bytes)
   196                           ; load TBLPTR registers with __pidataCOMRAM
   197   001322  0E76               	movlw	low __pidataCOMRAM
   198   001324  6EF6               	movwf	tblptrl,c
   199   001326  0E14               	movlw	high __pidataCOMRAM
   200   001328  6EF7               	movwf	tblptrh,c
   201   00132A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   202   00132C  6EF8               	movwf	tblptru,c
   203   00132E  EE00  F059         	lfsr	0,__pdataCOMRAM
   204   001332  EE10 F008          	lfsr	1,8
   205   001336                     copy_data1:
   206   001336  0009               	tblrd		*+
   207   001338  CFF5 FFEE          	movff	tablat,postinc0
   208   00133C  50E5               	movf	postdec1,w,c
   209   00133E  50E1               	movf	fsr1l,w,c
   210   001340  E1FA               	bnz	copy_data1
   211                           
   212                           ; Clear objects allocated to COMRAM (46 bytes)
   213   001342  EE00  F001         	lfsr	0,__pbssCOMRAM
   214   001346  0E2E               	movlw	46
   215   001348                     clear_0:
   216   001348  6AEE               	clrf	postinc0,c
   217   00134A  06E8               	decf	wreg,f,c
   218   00134C  E1FD               	bnz	clear_0
   219   00134E                     end_of_initialization:
   220                           	callstack 0
   221   00134E                     __end_of__initialization:
   222                           	callstack 0
   223   00134E  9061               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   224   001350  9261               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   225   001352  0E00               	movlw	low (__Lmediumconst shr (0+16))
   226   001354  6EF8               	movwf	tblptru,c
   227   001356  0100               	movlb	0
   228   001358  EF46  F009         	goto	_main	;jump to C main() function
   229                           
   230                           	psect	bssCOMRAM
   231   000001                     __pbssCOMRAM:
   232                           	callstack 0
   233   000001                     _pool:
   234                           	callstack 0
   235   000001                     	ds	20
   236   000015                     kpDebounce@valorAntigo:
   237                           	callstack 0
   238   000015                     	ds	2
   239   000017                     kpDebounce@valorNovo:
   240                           	callstack 0
   241   000017                     	ds	2
   242   000019                     _valor@keypad$F305:
   243                           	callstack 0
   244   000019                     	ds	2
   245   00001B                     _valor:
   246                           	callstack 0
   247   00001B                     	ds	2
   248   00001D                     _v3:
   249                           	callstack 0
   250   00001D                     	ds	1
   251   00001E                     _v2:
   252                           	callstack 0
   253   00001E                     	ds	1
   254   00001F                     _v1:
   255                           	callstack 0
   256   00001F                     	ds	1
   257   000020                     _v0:
   258                           	callstack 0
   259   000020                     	ds	1
   260   000021                     _display:
   261                           	callstack 0
   262   000021                     	ds	1
   263   000022                     _started:
   264                           	callstack 0
   265   000022                     	ds	1
   266   000023                     kpDebounce@tempo:
   267                           	callstack 0
   268   000023                     	ds	1
   269   000024                     _end:
   270                           	callstack 0
   271   000024                     	ds	1
   272   000025                     _start:
   273                           	callstack 0
   274   000025                     	ds	1
   275   000026                     _myself:
   276                           	callstack 0
   277   000026                     	ds	5
   278   00002B                     _my_funcs:
   279                           	callstack 0
   280   00002B                     	ds	4
   281                           
   282                           	psect	dataCOMRAM
   283   000059                     __pdataCOMRAM:
   284                           	callstack 0
   285   000059                     main@F2405:
   286                           	callstack 0
   287   000059                     	ds	8
   288                           
   289                           	psect	dataBANK0
   290   000098                     __pdataBANK0:
   291                           	callstack 0
   292   000098                     main@F2411:
   293                           	callstack 0
   294   000098                     	ds	8
   295   0000A0                     main@F2408:
   296                           	callstack 0
   297   0000A0                     	ds	8
   298                           
   299                           	psect	cstackBANK0
   300   000080                     __pcstackBANK0:
   301                           	callstack 0
   302   000080                     main@init_PD:
   303                           	callstack 0
   304                           
   305                           ; 8 bytes @ 0x0
   306   000080                     	ds	8
   307   000088                     main@SSDUpdate_proc:
   308                           	callstack 0
   309                           
   310                           ; 8 bytes @ 0x8
   311   000088                     	ds	8
   312   000090                     main@countTime_proc:
   313                           	callstack 0
   314                           
   315                           ; 8 bytes @ 0x10
   316   000090                     	ds	8
   317                           
   318                           	psect	cstackCOMRAM
   319   00002F                     __pcstackCOMRAM:
   320                           	callstack 0
   321   00002F                     ?i2___awmod:
   322                           	callstack 0
   323   00002F                     i2___awmod@dividend:
   324                           	callstack 0
   325                           
   326                           ; 2 bytes @ 0x0
   327   00002F                     	ds	2
   328   000031                     i2___awmod@divisor:
   329                           	callstack 0
   330                           
   331                           ; 2 bytes @ 0x2
   332   000031                     	ds	2
   333   000033                     i2___awmod@counter:
   334                           	callstack 0
   335                           
   336                           ; 1 bytes @ 0x4
   337   000033                     	ds	1
   338   000034                     i2___awmod@sign:
   339                           	callstack 0
   340                           
   341                           ; 1 bytes @ 0x5
   342   000034                     	ds	1
   343   000035                     
   344                           ; 1 bytes @ 0x6
   345   000035                     	ds	2
   346   000037                     KernelClock@proc:
   347                           	callstack 0
   348                           
   349                           ; 1 bytes @ 0x8
   350   000037                     	ds	1
   351   000038                     ??_ISR:
   352                           
   353                           ; 1 bytes @ 0x9
   354   000038                     	ds	6
   355   00003E                     ?___awdiv:
   356                           	callstack 0
   357   00003E                     ssdDigit@pos:
   358                           	callstack 0
   359   00003E                     digitalWrite@pin:
   360                           	callstack 0
   361   00003E                     pinMode@pin:
   362                           	callstack 0
   363   00003E                     ___awdiv@dividend:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0xF
   367   00003E                     	ds	1
   368   00003F                     ssdDigit@val:
   369                           	callstack 0
   370                           
   371                           ; 1 bytes @ 0x10
   372   00003F                     	ds	1
   373   000040                     digitalWrite@value:
   374                           	callstack 0
   375   000040                     pinMode@type:
   376                           	callstack 0
   377   000040                     ___awdiv@divisor:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0x11
   381   000040                     	ds	2
   382   000042                     ??_pinMode:
   383   000042                     ??_digitalWrite:
   384   000042                     ___awdiv@counter:
   385                           	callstack 0
   386                           
   387                           ; 1 bytes @ 0x13
   388   000042                     	ds	1
   389   000043                     ___awdiv@sign:
   390                           	callstack 0
   391                           
   392                           ; 1 bytes @ 0x14
   393   000043                     	ds	1
   394   000044                     ___awdiv@quotient:
   395                           	callstack 0
   396                           
   397                           ; 2 bytes @ 0x15
   398   000044                     	ds	2
   399   000046                     ?___awmod:
   400                           	callstack 0
   401   000046                     ___awmod@dividend:
   402                           	callstack 0
   403                           
   404                           ; 2 bytes @ 0x17
   405   000046                     	ds	2
   406   000048                     ___awmod@divisor:
   407                           	callstack 0
   408                           
   409                           ; 2 bytes @ 0x19
   410   000048                     	ds	2
   411   00004A                     ___awmod@counter:
   412                           	callstack 0
   413                           
   414                           ; 1 bytes @ 0x1B
   415   00004A                     	ds	1
   416   00004B                     ___awmod@sign:
   417                           	callstack 0
   418                           
   419                           ; 1 bytes @ 0x1C
   420   00004B                     	ds	1
   421   00004C                     countTime@dig:
   422                           	callstack 0
   423   00004C                     kernelAddProc@newProc:
   424                           	callstack 0
   425                           
   426                           ; 2 bytes @ 0x1D
   427   00004C                     	ds	2
   428   00004E                     ??_kernelAddProc:
   429                           
   430                           ; 1 bytes @ 0x1F
   431   00004E                     	ds	2
   432   000050                     ??_kernelLoop:
   433                           
   434                           ; 1 bytes @ 0x21
   435   000050                     	ds	5
   436   000055                     kernelLoop@tempProc:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x26
   440   000055                     	ds	2
   441   000057                     kernelLoop@next:
   442                           	callstack 0
   443                           
   444                           ; 1 bytes @ 0x28
   445   000057                     	ds	1
   446   000058                     kernelLoop@p:
   447                           	callstack 0
   448                           
   449                           ; 1 bytes @ 0x29
   450   000058                     	ds	1
   451   000059                     
   452                           ; 1 bytes @ 0x2A
   453 ;;
   454 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   455 ;;
   456 ;; *************** function _main *****************
   457 ;; Defined at:
   458 ;;		line 75 in file "main.c"
   459 ;; Parameters:    Size  Location     Type
   460 ;;		None
   461 ;; Auto vars:     Size  Location     Type
   462 ;;  countTime_pr    8   16[BANK0 ] struct .
   463 ;;  SSDUpdate_pr    8    8[BANK0 ] struct .
   464 ;;  init_PD         8    0[BANK0 ] struct .
   465 ;; Return value:  Size  Location     Type
   466 ;;                  1    wreg      void 
   467 ;; Registers used:
   468 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
   469 ;; Tracked objects:
   470 ;;		On entry : 0/0
   471 ;;		On exit  : 0/0
   472 ;;		Unchanged: 0/0
   473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   474 ;;      Params:         0       0       0       0       0       0       0
   475 ;;      Locals:         0      24       0       0       0       0       0
   476 ;;      Temps:          0       0       0       0       0       0       0
   477 ;;      Totals:         0      24       0       0       0       0       0
   478 ;;Total ram usage:       24 bytes
   479 ;; Hardware stack levels required when called: 7
   480 ;; This function calls:
   481 ;;		_kernelAddProc
   482 ;;		_kernelInit
   483 ;;		_kernelLoop
   484 ;;		_ssdInit
   485 ;;		_timerInit
   486 ;; This function is called by:
   487 ;;		Startup code after reset
   488 ;; This function uses a non-reentrant model
   489 ;;
   490                           
   491                           	psect	text0
   492   00128C                     __ptext0:
   493                           	callstack 0
   494   00128C                     _main:
   495                           	callstack 24
   496   00128C                     
   497                           ;main.c: 79: process init_PD = {initPORTAD, 0, 0, 15};
   498   00128C  EE20  F059         	lfsr	2,main@F2405
   499   001290  EE10  F080         	lfsr	1,main@init_PD
   500   001294  0E07               	movlw	7
   501   001296                     u3121:
   502   001296  CFDB FFE3          	movff	plusw2,plusw1
   503   00129A  06E8               	decf	wreg,f,c
   504   00129C  E2FC               	bc	u3121
   505                           
   506                           ;main.c: 86: process SSDUpdate_proc = {updateSSD, 1, 0, 5};
   507   00129E  EE20  F0A0         	lfsr	2,main@F2408
   508   0012A2  EE10  F088         	lfsr	1,main@SSDUpdate_proc
   509   0012A6  0E07               	movlw	7
   510   0012A8                     u3131:
   511   0012A8  CFDB FFE3          	movff	plusw2,plusw1
   512   0012AC  06E8               	decf	wreg,f,c
   513   0012AE  E2FC               	bc	u3131
   514                           
   515                           ;main.c: 87: process countTime_proc = {countTime, 100, 0, 10};
   516   0012B0  EE20  F098         	lfsr	2,main@F2411
   517   0012B4  EE10  F090         	lfsr	1,main@countTime_proc
   518   0012B8  0E07               	movlw	7
   519   0012BA                     u3141:
   520   0012BA  CFDB FFE3          	movff	plusw2,plusw1
   521   0012BE  06E8               	decf	wreg,f,c
   522   0012C0  E2FC               	bc	u3141
   523   0012C2                     
   524                           ;main.c: 89: timerInit();
   525   0012C2  EC3F  F00A         	call	_timerInit	;wreg free
   526   0012C6                     
   527                           ;main.c: 90: ssdInit();
   528   0012C6  ECDA  F009         	call	_ssdInit	;wreg free
   529   0012CA                     
   530                           ;main.c: 95: kernelInit();
   531   0012CA  EC36  F00A         	call	_kernelInit	;wreg free
   532   0012CE                     
   533                           ;main.c: 96: kernelAddProc(&init_PD);
   534   0012CE  0E80               	movlw	low main@init_PD
   535   0012D0  6E4C               	movwf	kernelAddProc@newProc^0,c
   536   0012D2  0E00               	movlw	high main@init_PD
   537   0012D4  6E4D               	movwf	(kernelAddProc@newProc+1)^0,c
   538   0012D6  ECAA  F008         	call	_kernelAddProc	;wreg free
   539   0012DA                     
   540                           ;main.c: 102: kernelAddProc(&SSDUpdate_proc);
   541   0012DA  0E88               	movlw	low main@SSDUpdate_proc
   542   0012DC  6E4C               	movwf	kernelAddProc@newProc^0,c
   543   0012DE  0E00               	movlw	high main@SSDUpdate_proc
   544   0012E0  6E4D               	movwf	(kernelAddProc@newProc+1)^0,c
   545   0012E2  ECAA  F008         	call	_kernelAddProc	;wreg free
   546   0012E6                     
   547                           ;main.c: 103: kernelAddProc(&countTime_proc);
   548   0012E6  0E90               	movlw	low main@countTime_proc
   549   0012E8  6E4C               	movwf	kernelAddProc@newProc^0,c
   550   0012EA  0E00               	movlw	high main@countTime_proc
   551   0012EC  6E4D               	movwf	(kernelAddProc@newProc+1)^0,c
   552   0012EE  ECAA  F008         	call	_kernelAddProc	;wreg free
   553   0012F2                     
   554                           ;main.c: 107: ((RCON) &= ~(1<<(7)));
   555   0012F2  9ED0               	bcf	208,7,c	;volatile
   556   0012F4                     
   557                           ;main.c: 108: ((INTCON) |= (1<<(5)));
   558   0012F4  8AF2               	bsf	242,5,c	;volatile
   559   0012F6                     
   560                           ;main.c: 109: ((INTCON) |= (1<<(7)));
   561   0012F6  8EF2               	bsf	242,7,c	;volatile
   562   0012F8                     
   563                           ;main.c: 110: ((INTCON) |= (1<<(6)));
   564   0012F8  8CF2               	bsf	242,6,c	;volatile
   565   0012FA                     
   566                           ;main.c: 113: kernelLoop();
   567   0012FA  EC09  F003         	call	_kernelLoop	;wreg free
   568   0012FE  EF07  F000         	goto	start
   569   001302                     __end_of_main:
   570                           	callstack 0
   571                           
   572 ;; *************** function _timerInit *****************
   573 ;; Defined at:
   574 ;;		line 51 in file "timer.c"
   575 ;; Parameters:    Size  Location     Type
   576 ;;		None
   577 ;; Auto vars:     Size  Location     Type
   578 ;;		None
   579 ;; Return value:  Size  Location     Type
   580 ;;                  1    wreg      void 
   581 ;; Registers used:
   582 ;;		wreg, status,2, status,0
   583 ;; Tracked objects:
   584 ;;		On entry : 0/0
   585 ;;		On exit  : 0/0
   586 ;;		Unchanged: 0/0
   587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   588 ;;      Params:         0       0       0       0       0       0       0
   589 ;;      Locals:         0       0       0       0       0       0       0
   590 ;;      Temps:          0       0       0       0       0       0       0
   591 ;;      Totals:         0       0       0       0       0       0       0
   592 ;;Total ram usage:        0 bytes
   593 ;; Hardware stack levels used: 1
   594 ;; Hardware stack levels required when called: 3
   595 ;; This function calls:
   596 ;;		Nothing
   597 ;; This function is called by:
   598 ;;		_main
   599 ;; This function uses a non-reentrant model
   600 ;;
   601                           
   602                           	psect	text1
   603   00147E                     __ptext1:
   604                           	callstack 0
   605   00147E                     _timerInit:
   606                           	callstack 27
   607   00147E                     
   608                           ;timer.c: 53: T0CON = 0b00001000;
   609   00147E  0E08               	movlw	8
   610   001480  6ED5               	movwf	213,c	;volatile
   611   001482                     
   612                           ;timer.c: 54: ((T0CON) |= (1<<(7)));
   613   001482  8ED5               	bsf	213,7,c	;volatile
   614   001484  0012               	return		;funcret
   615   001486                     __end_of_timerInit:
   616                           	callstack 0
   617                           
   618 ;; *************** function _ssdInit *****************
   619 ;; Defined at:
   620 ;;		line 101 in file "ssd.c"
   621 ;; Parameters:    Size  Location     Type
   622 ;;		None
   623 ;; Auto vars:     Size  Location     Type
   624 ;;		None
   625 ;; Return value:  Size  Location     Type
   626 ;;                  1    wreg      void 
   627 ;; Registers used:
   628 ;;		wreg, status,2, status,0, cstack
   629 ;; Tracked objects:
   630 ;;		On entry : 0/0
   631 ;;		On exit  : 0/0
   632 ;;		Unchanged: 0/0
   633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   634 ;;      Params:         0       0       0       0       0       0       0
   635 ;;      Locals:         0       0       0       0       0       0       0
   636 ;;      Temps:          0       0       0       0       0       0       0
   637 ;;      Totals:         0       0       0       0       0       0       0
   638 ;;Total ram usage:        0 bytes
   639 ;; Hardware stack levels used: 1
   640 ;; Hardware stack levels required when called: 4
   641 ;; This function calls:
   642 ;;		_pinMode
   643 ;; This function is called by:
   644 ;;		_main
   645 ;; This function uses a non-reentrant model
   646 ;;
   647                           
   648                           	psect	text2
   649   0013B4                     __ptext2:
   650                           	callstack 0
   651   0013B4                     _ssdInit:
   652                           	callstack 26
   653   0013B4                     
   654                           ;ssd.c: 103: pinMode(PIN_A2, 0);
   655   0013B4  0E00               	movlw	0
   656   0013B6  6E3F               	movwf	(pinMode@pin+1)^0,c
   657   0013B8  0E02               	movlw	2
   658   0013BA  6E3E               	movwf	pinMode@pin^0,c
   659   0013BC  0E00               	movlw	0
   660   0013BE  6E41               	movwf	(pinMode@type+1)^0,c
   661   0013C0  0E00               	movlw	0
   662   0013C2  6E40               	movwf	pinMode@type^0,c
   663   0013C4  EC3E  F004         	call	_pinMode	;wreg free
   664                           
   665                           ;ssd.c: 104: pinMode(PIN_A3, 0);
   666   0013C8  0E00               	movlw	0
   667   0013CA  6E3F               	movwf	(pinMode@pin+1)^0,c
   668   0013CC  0E03               	movlw	3
   669   0013CE  6E3E               	movwf	pinMode@pin^0,c
   670   0013D0  0E00               	movlw	0
   671   0013D2  6E41               	movwf	(pinMode@type+1)^0,c
   672   0013D4  0E00               	movlw	0
   673   0013D6  6E40               	movwf	pinMode@type^0,c
   674   0013D8  EC3E  F004         	call	_pinMode	;wreg free
   675                           
   676                           ;ssd.c: 105: pinMode(PIN_A4, 0);
   677   0013DC  0E00               	movlw	0
   678   0013DE  6E3F               	movwf	(pinMode@pin+1)^0,c
   679   0013E0  0E04               	movlw	4
   680   0013E2  6E3E               	movwf	pinMode@pin^0,c
   681   0013E4  0E00               	movlw	0
   682   0013E6  6E41               	movwf	(pinMode@type+1)^0,c
   683   0013E8  0E00               	movlw	0
   684   0013EA  6E40               	movwf	pinMode@type^0,c
   685   0013EC  EC3E  F004         	call	_pinMode	;wreg free
   686                           
   687                           ;ssd.c: 106: pinMode(PIN_A5, 0);
   688   0013F0  0E00               	movlw	0
   689   0013F2  6E3F               	movwf	(pinMode@pin+1)^0,c
   690   0013F4  0E05               	movlw	5
   691   0013F6  6E3E               	movwf	pinMode@pin^0,c
   692   0013F8  0E00               	movlw	0
   693   0013FA  6E41               	movwf	(pinMode@type+1)^0,c
   694   0013FC  0E00               	movlw	0
   695   0013FE  6E40               	movwf	pinMode@type^0,c
   696   001400  EC3E  F004         	call	_pinMode	;wreg free
   697   001404                     
   698                           ;ssd.c: 109: TRISD = 0x00;
   699   001404  0E00               	movlw	0
   700   001406  6E95               	movwf	149,c	;volatile
   701   001408  0012               	return		;funcret
   702   00140A                     __end_of_ssdInit:
   703                           	callstack 0
   704                           
   705 ;; *************** function _pinMode *****************
   706 ;; Defined at:
   707 ;;		line 54 in file "io.c"
   708 ;; Parameters:    Size  Location     Type
   709 ;;  pin             2   15[COMRAM] int 
   710 ;;  type            2   17[COMRAM] int 
   711 ;; Auto vars:     Size  Location     Type
   712 ;;		None
   713 ;; Return value:  Size  Location     Type
   714 ;;                  1    wreg      void 
   715 ;; Registers used:
   716 ;;		wreg, status,2, status,0
   717 ;; Tracked objects:
   718 ;;		On entry : 0/0
   719 ;;		On exit  : 0/0
   720 ;;		Unchanged: 0/0
   721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   722 ;;      Params:         4       0       0       0       0       0       0
   723 ;;      Locals:         0       0       0       0       0       0       0
   724 ;;      Temps:          2       0       0       0       0       0       0
   725 ;;      Totals:         6       0       0       0       0       0       0
   726 ;;Total ram usage:        6 bytes
   727 ;; Hardware stack levels used: 1
   728 ;; Hardware stack levels required when called: 3
   729 ;; This function calls:
   730 ;;		Nothing
   731 ;; This function is called by:
   732 ;;		_ssdInit
   733 ;;		_adcInit
   734 ;;		_lcdInit
   735 ;;		_i2cInit
   736 ;;		_read_SCL
   737 ;;		_read_SDA
   738 ;;		_clear_SCL
   739 ;;		_clear_SDA
   740 ;; This function uses a non-reentrant model
   741 ;;
   742                           
   743                           	psect	text3
   744   00087C                     __ptext3:
   745                           	callstack 0
   746   00087C                     _pinMode:
   747                           	callstack 26
   748   00087C                     
   749                           ;io.c: 56: if(pin <8){
   750   00087C  BE3F               	btfsc	(pinMode@pin+1)^0,7,c
   751   00087E  EF4C  F004         	goto	u2620
   752   000882  503F               	movf	(pinMode@pin+1)^0,w,c
   753   000884  E107               	bnz	u2621
   754   000886  0E08               	movlw	8
   755   000888  5C3E               	subwf	pinMode@pin^0,w,c
   756   00088A  B0D8               	btfsc	status,0,c
   757   00088C  EF4A  F004         	goto	u2621
   758   000890  EF4C  F004         	goto	u2620
   759   000894                     u2621:
   760   000894  EF76  F004         	goto	l2878
   761   000898                     u2620:
   762   000898                     
   763                           ;io.c: 57: if (type){ ((TRISA) |= (1<<(pin)));}
   764   000898  5040               	movf	pinMode@type^0,w,c
   765   00089A  1041               	iorwf	(pinMode@type+1)^0,w,c
   766   00089C  B4D8               	btfsc	status,2,c
   767   00089E  EF53  F004         	goto	u2631
   768   0008A2  EF55  F004         	goto	u2630
   769   0008A6                     u2631:
   770   0008A6  EF65  F004         	goto	l2876
   771   0008AA                     u2630:
   772   0008AA  C03E  F042         	movff	pinMode@pin,??_pinMode
   773   0008AE  0E01               	movlw	1
   774   0008B0  6E43               	movwf	(??_pinMode+1)^0,c
   775   0008B2  2A42               	incf	??_pinMode^0,f,c
   776   0008B4  EF5E  F004         	goto	u2644
   777   0008B8                     u2645:
   778   0008B8  90D8               	bcf	status,0,c
   779   0008BA  3643               	rlcf	(??_pinMode+1)^0,f,c
   780   0008BC                     u2644:
   781   0008BC  2E42               	decfsz	??_pinMode^0,f,c
   782   0008BE  EF5C  F004         	goto	u2645
   783   0008C2  5043               	movf	(??_pinMode+1)^0,w,c
   784   0008C4  1292               	iorwf	146,f,c	;volatile
   785   0008C6  EF64  F005         	goto	l244
   786   0008CA                     l2876:
   787                           
   788                           ;io.c: 58: else{ ((TRISA) &= ~(1<<(pin)));}
   789   0008CA  C03E  F042         	movff	pinMode@pin,??_pinMode
   790   0008CE  0E01               	movlw	1
   791   0008D0  6E43               	movwf	(??_pinMode+1)^0,c
   792   0008D2  2A42               	incf	??_pinMode^0,f,c
   793   0008D4  EF6E  F004         	goto	u2654
   794   0008D8                     u2655:
   795   0008D8  90D8               	bcf	status,0,c
   796   0008DA  3643               	rlcf	(??_pinMode+1)^0,f,c
   797   0008DC                     u2654:
   798   0008DC  2E42               	decfsz	??_pinMode^0,f,c
   799   0008DE  EF6C  F004         	goto	u2655
   800   0008E2  5043               	movf	(??_pinMode+1)^0,w,c
   801   0008E4  0AFF               	xorlw	255
   802   0008E6  1692               	andwf	146,f,c	;volatile
   803   0008E8  EF64  F005         	goto	l244
   804   0008EC                     l2878:
   805   0008EC  BE3F               	btfsc	(pinMode@pin+1)^0,7,c
   806   0008EE  EF84  F004         	goto	u2660
   807   0008F2  503F               	movf	(pinMode@pin+1)^0,w,c
   808   0008F4  E107               	bnz	u2661
   809   0008F6  0E10               	movlw	16
   810   0008F8  5C3E               	subwf	pinMode@pin^0,w,c
   811   0008FA  B0D8               	btfsc	status,0,c
   812   0008FC  EF82  F004         	goto	u2661
   813   000900  EF84  F004         	goto	u2660
   814   000904                     u2661:
   815   000904  EFB2  F004         	goto	l2886
   816   000908                     u2660:
   817   000908                     
   818                           ;io.c: 60: if (type){ ((TRISB) |= (1<<(pin-8)));}
   819   000908  5040               	movf	pinMode@type^0,w,c
   820   00090A  1041               	iorwf	(pinMode@type+1)^0,w,c
   821   00090C  B4D8               	btfsc	status,2,c
   822   00090E  EF8B  F004         	goto	u2671
   823   000912  EF8D  F004         	goto	u2670
   824   000916                     u2671:
   825   000916  EF9F  F004         	goto	l2884
   826   00091A                     u2670:
   827   00091A  C03E  F042         	movff	pinMode@pin,??_pinMode
   828   00091E  0EF8               	movlw	-8
   829   000920  2642               	addwf	??_pinMode^0,f,c
   830   000922  0E01               	movlw	1
   831   000924  6E43               	movwf	(??_pinMode+1)^0,c
   832   000926  2A42               	incf	??_pinMode^0,f,c
   833   000928  EF98  F004         	goto	u2684
   834   00092C                     u2685:
   835   00092C  90D8               	bcf	status,0,c
   836   00092E  3643               	rlcf	(??_pinMode+1)^0,f,c
   837   000930                     u2684:
   838   000930  2E42               	decfsz	??_pinMode^0,f,c
   839   000932  EF96  F004         	goto	u2685
   840   000936  5043               	movf	(??_pinMode+1)^0,w,c
   841   000938  1293               	iorwf	147,f,c	;volatile
   842   00093A  EF64  F005         	goto	l244
   843   00093E                     l2884:
   844                           
   845                           ;io.c: 61: else{ ((TRISB) &= ~(1<<(pin-8)));}
   846   00093E  C03E  F042         	movff	pinMode@pin,??_pinMode
   847   000942  0EF8               	movlw	-8
   848   000944  2642               	addwf	??_pinMode^0,f,c
   849   000946  0E01               	movlw	1
   850   000948  6E43               	movwf	(??_pinMode+1)^0,c
   851   00094A  2A42               	incf	??_pinMode^0,f,c
   852   00094C  EFAA  F004         	goto	u2694
   853   000950                     u2695:
   854   000950  90D8               	bcf	status,0,c
   855   000952  3643               	rlcf	(??_pinMode+1)^0,f,c
   856   000954                     u2694:
   857   000954  2E42               	decfsz	??_pinMode^0,f,c
   858   000956  EFA8  F004         	goto	u2695
   859   00095A  5043               	movf	(??_pinMode+1)^0,w,c
   860   00095C  0AFF               	xorlw	255
   861   00095E  1693               	andwf	147,f,c	;volatile
   862   000960  EF64  F005         	goto	l244
   863   000964                     l2886:
   864   000964  BE3F               	btfsc	(pinMode@pin+1)^0,7,c
   865   000966  EFC0  F004         	goto	u2700
   866   00096A  503F               	movf	(pinMode@pin+1)^0,w,c
   867   00096C  E107               	bnz	u2701
   868   00096E  0E18               	movlw	24
   869   000970  5C3E               	subwf	pinMode@pin^0,w,c
   870   000972  B0D8               	btfsc	status,0,c
   871   000974  EFBE  F004         	goto	u2701
   872   000978  EFC0  F004         	goto	u2700
   873   00097C                     u2701:
   874   00097C  EFEE  F004         	goto	l2894
   875   000980                     u2700:
   876   000980                     
   877                           ;io.c: 63: if (type){ ((TRISC) |= (1<<(pin-16)));}
   878   000980  5040               	movf	pinMode@type^0,w,c
   879   000982  1041               	iorwf	(pinMode@type+1)^0,w,c
   880   000984  B4D8               	btfsc	status,2,c
   881   000986  EFC7  F004         	goto	u2711
   882   00098A  EFC9  F004         	goto	u2710
   883   00098E                     u2711:
   884   00098E  EFDB  F004         	goto	l2892
   885   000992                     u2710:
   886   000992  C03E  F042         	movff	pinMode@pin,??_pinMode
   887   000996  0EF0               	movlw	-16
   888   000998  2642               	addwf	??_pinMode^0,f,c
   889   00099A  0E01               	movlw	1
   890   00099C  6E43               	movwf	(??_pinMode+1)^0,c
   891   00099E  2A42               	incf	??_pinMode^0,f,c
   892   0009A0  EFD4  F004         	goto	u2724
   893   0009A4                     u2725:
   894   0009A4  90D8               	bcf	status,0,c
   895   0009A6  3643               	rlcf	(??_pinMode+1)^0,f,c
   896   0009A8                     u2724:
   897   0009A8  2E42               	decfsz	??_pinMode^0,f,c
   898   0009AA  EFD2  F004         	goto	u2725
   899   0009AE  5043               	movf	(??_pinMode+1)^0,w,c
   900   0009B0  1294               	iorwf	148,f,c	;volatile
   901   0009B2  EF64  F005         	goto	l244
   902   0009B6                     l2892:
   903                           
   904                           ;io.c: 64: else{ ((TRISC) &= ~(1<<(pin-16)));}
   905   0009B6  C03E  F042         	movff	pinMode@pin,??_pinMode
   906   0009BA  0EF0               	movlw	-16
   907   0009BC  2642               	addwf	??_pinMode^0,f,c
   908   0009BE  0E01               	movlw	1
   909   0009C0  6E43               	movwf	(??_pinMode+1)^0,c
   910   0009C2  2A42               	incf	??_pinMode^0,f,c
   911   0009C4  EFE6  F004         	goto	u2734
   912   0009C8                     u2735:
   913   0009C8  90D8               	bcf	status,0,c
   914   0009CA  3643               	rlcf	(??_pinMode+1)^0,f,c
   915   0009CC                     u2734:
   916   0009CC  2E42               	decfsz	??_pinMode^0,f,c
   917   0009CE  EFE4  F004         	goto	u2735
   918   0009D2  5043               	movf	(??_pinMode+1)^0,w,c
   919   0009D4  0AFF               	xorlw	255
   920   0009D6  1694               	andwf	148,f,c	;volatile
   921   0009D8  EF64  F005         	goto	l244
   922   0009DC                     l2894:
   923   0009DC  BE3F               	btfsc	(pinMode@pin+1)^0,7,c
   924   0009DE  EFFC  F004         	goto	u2740
   925   0009E2  503F               	movf	(pinMode@pin+1)^0,w,c
   926   0009E4  E107               	bnz	u2741
   927   0009E6  0E20               	movlw	32
   928   0009E8  5C3E               	subwf	pinMode@pin^0,w,c
   929   0009EA  B0D8               	btfsc	status,0,c
   930   0009EC  EFFA  F004         	goto	u2741
   931   0009F0  EFFC  F004         	goto	u2740
   932   0009F4                     u2741:
   933   0009F4  EF2A  F005         	goto	l2902
   934   0009F8                     u2740:
   935   0009F8                     
   936                           ;io.c: 66: if (type){ ((TRISD) |= (1<<(pin-24)));}
   937   0009F8  5040               	movf	pinMode@type^0,w,c
   938   0009FA  1041               	iorwf	(pinMode@type+1)^0,w,c
   939   0009FC  B4D8               	btfsc	status,2,c
   940   0009FE  EF03  F005         	goto	u2751
   941   000A02  EF05  F005         	goto	u2750
   942   000A06                     u2751:
   943   000A06  EF17  F005         	goto	l2900
   944   000A0A                     u2750:
   945   000A0A  C03E  F042         	movff	pinMode@pin,??_pinMode
   946   000A0E  0EE8               	movlw	-24
   947   000A10  2642               	addwf	??_pinMode^0,f,c
   948   000A12  0E01               	movlw	1
   949   000A14  6E43               	movwf	(??_pinMode+1)^0,c
   950   000A16  2A42               	incf	??_pinMode^0,f,c
   951   000A18  EF10  F005         	goto	u2764
   952   000A1C                     u2765:
   953   000A1C  90D8               	bcf	status,0,c
   954   000A1E  3643               	rlcf	(??_pinMode+1)^0,f,c
   955   000A20                     u2764:
   956   000A20  2E42               	decfsz	??_pinMode^0,f,c
   957   000A22  EF0E  F005         	goto	u2765
   958   000A26  5043               	movf	(??_pinMode+1)^0,w,c
   959   000A28  1295               	iorwf	149,f,c	;volatile
   960   000A2A  EF64  F005         	goto	l244
   961   000A2E                     l2900:
   962                           
   963                           ;io.c: 67: else{ ((TRISD) &= ~(1<<(pin-24)));}
   964   000A2E  C03E  F042         	movff	pinMode@pin,??_pinMode
   965   000A32  0EE8               	movlw	-24
   966   000A34  2642               	addwf	??_pinMode^0,f,c
   967   000A36  0E01               	movlw	1
   968   000A38  6E43               	movwf	(??_pinMode+1)^0,c
   969   000A3A  2A42               	incf	??_pinMode^0,f,c
   970   000A3C  EF22  F005         	goto	u2774
   971   000A40                     u2775:
   972   000A40  90D8               	bcf	status,0,c
   973   000A42  3643               	rlcf	(??_pinMode+1)^0,f,c
   974   000A44                     u2774:
   975   000A44  2E42               	decfsz	??_pinMode^0,f,c
   976   000A46  EF20  F005         	goto	u2775
   977   000A4A  5043               	movf	(??_pinMode+1)^0,w,c
   978   000A4C  0AFF               	xorlw	255
   979   000A4E  1695               	andwf	149,f,c	;volatile
   980   000A50  EF64  F005         	goto	l244
   981   000A54                     l2902:
   982   000A54  BE3F               	btfsc	(pinMode@pin+1)^0,7,c
   983   000A56  EF38  F005         	goto	u2780
   984   000A5A  503F               	movf	(pinMode@pin+1)^0,w,c
   985   000A5C  E107               	bnz	u2781
   986   000A5E  0E28               	movlw	40
   987   000A60  5C3E               	subwf	pinMode@pin^0,w,c
   988   000A62  B0D8               	btfsc	status,0,c
   989   000A64  EF36  F005         	goto	u2781
   990   000A68  EF38  F005         	goto	u2780
   991   000A6C                     u2781:
   992   000A6C  EF64  F005         	goto	l244
   993   000A70                     u2780:
   994   000A70                     
   995                           ;io.c: 69: if (type){ ((TRISE) |= (1<<(pin-32)));}
   996   000A70  5040               	movf	pinMode@type^0,w,c
   997   000A72  1041               	iorwf	(pinMode@type+1)^0,w,c
   998   000A74  B4D8               	btfsc	status,2,c
   999   000A76  EF3F  F005         	goto	u2791
  1000   000A7A  EF41  F005         	goto	u2790
  1001   000A7E                     u2791:
  1002   000A7E  EF53  F005         	goto	l2908
  1003   000A82                     u2790:
  1004   000A82  C03E  F042         	movff	pinMode@pin,??_pinMode
  1005   000A86  0EE0               	movlw	-32
  1006   000A88  2642               	addwf	??_pinMode^0,f,c
  1007   000A8A  0E01               	movlw	1
  1008   000A8C  6E43               	movwf	(??_pinMode+1)^0,c
  1009   000A8E  2A42               	incf	??_pinMode^0,f,c
  1010   000A90  EF4C  F005         	goto	u2804
  1011   000A94                     u2805:
  1012   000A94  90D8               	bcf	status,0,c
  1013   000A96  3643               	rlcf	(??_pinMode+1)^0,f,c
  1014   000A98                     u2804:
  1015   000A98  2E42               	decfsz	??_pinMode^0,f,c
  1016   000A9A  EF4A  F005         	goto	u2805
  1017   000A9E  5043               	movf	(??_pinMode+1)^0,w,c
  1018   000AA0  1296               	iorwf	150,f,c	;volatile
  1019   000AA2  EF64  F005         	goto	l244
  1020   000AA6                     l2908:
  1021                           
  1022                           ;io.c: 70: else{ ((TRISE) &= ~(1<<(pin-32)));}
  1023   000AA6  C03E  F042         	movff	pinMode@pin,??_pinMode
  1024   000AAA  0EE0               	movlw	-32
  1025   000AAC  2642               	addwf	??_pinMode^0,f,c
  1026   000AAE  0E01               	movlw	1
  1027   000AB0  6E43               	movwf	(??_pinMode+1)^0,c
  1028   000AB2  2A42               	incf	??_pinMode^0,f,c
  1029   000AB4  EF5E  F005         	goto	u2814
  1030   000AB8                     u2815:
  1031   000AB8  90D8               	bcf	status,0,c
  1032   000ABA  3643               	rlcf	(??_pinMode+1)^0,f,c
  1033   000ABC                     u2814:
  1034   000ABC  2E42               	decfsz	??_pinMode^0,f,c
  1035   000ABE  EF5C  F005         	goto	u2815
  1036   000AC2  5043               	movf	(??_pinMode+1)^0,w,c
  1037   000AC4  0AFF               	xorlw	255
  1038   000AC6  1696               	andwf	150,f,c	;volatile
  1039   000AC8                     l244:
  1040   000AC8  0012               	return		;funcret
  1041   000ACA                     __end_of_pinMode:
  1042                           	callstack 0
  1043                           
  1044 ;; *************** function _kernelLoop *****************
  1045 ;; Defined at:
  1046 ;;		line 25 in file "kernel.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;		None
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;  tempProc        2   38[COMRAM] PTR struct .
  1051 ;;		 -> main@countTime_proc(8), main@SSDUpdate_proc(8), main@init_PD(8), 
  1052 ;;  p               1   41[COMRAM] unsigned char 
  1053 ;;  next            1   40[COMRAM] unsigned char 
  1054 ;; Return value:  Size  Location     Type
  1055 ;;                  1    wreg      void 
  1056 ;; Registers used:
  1057 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  1058 ;; Tracked objects:
  1059 ;;		On entry : 0/0
  1060 ;;		On exit  : 0/0
  1061 ;;		Unchanged: 0/0
  1062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1063 ;;      Params:         0       0       0       0       0       0       0
  1064 ;;      Locals:         4       0       0       0       0       0       0
  1065 ;;      Temps:          5       0       0       0       0       0       0
  1066 ;;      Totals:         9       0       0       0       0       0       0
  1067 ;;Total ram usage:        9 bytes
  1068 ;; Hardware stack levels used: 1
  1069 ;; Hardware stack levels required when called: 6
  1070 ;; This function calls:
  1071 ;;		___awmod
  1072 ;;		_countTime
  1073 ;;		_initPORTAD
  1074 ;;		_kernelAddProc
  1075 ;;		_updateSSD
  1076 ;; This function is called by:
  1077 ;;		_main
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           
  1081                           	psect	text4
  1082   000612                     __ptext4:
  1083                           	callstack 0
  1084   000612                     _kernelLoop:
  1085                           	callstack 24
  1086   000612                     l81:
  1087   000612                     
  1088                           ;kernel.c: 30: if (start != end) {
  1089   000612  5024               	movf	_end^0,w,c
  1090   000614  1825               	xorwf	_start^0,w,c
  1091   000616  B4D8               	btfsc	status,2,c
  1092   000618  EF10  F003         	goto	u2941
  1093   00061C  EF12  F003         	goto	u2940
  1094   000620                     u2941:
  1095   000620  EF09  F003         	goto	l81
  1096   000624                     u2940:
  1097   000624                     
  1098                           ;kernel.c: 33: next = start;
  1099   000624  C025  F057         	movff	_start,kernelLoop@next
  1100                           
  1101                           ;kernel.c: 39: for (p = start; p != end; p = (p + 1) % 10) {
  1102   000628  C025  F058         	movff	_start,kernelLoop@p
  1103   00062C  EFA8  F003         	goto	l2996
  1104   000630                     l2984:
  1105                           
  1106                           ;kernel.c: 50: if((pool[p]->start == pool[next]->start) && (pool[p]->prio > pool[next]->
      +                          prio))next = p;
  1107   000630  5057               	movf	kernelLoop@next^0,w,c
  1108   000632  0D02               	mullw	2
  1109   000634  0E01               	movlw	low _pool
  1110   000636  24F3               	addwf	243,w,c
  1111   000638  6ED9               	movwf	fsr2l,c
  1112   00063A  0E00               	movlw	high _pool
  1113   00063C  20F4               	addwfc	prodh,w,c
  1114   00063E  6EDA               	movwf	fsr2h,c
  1115   000640  EE10 F004          	lfsr	1,4
  1116   000644  50DE               	movf	postinc2,w,c
  1117   000646  26E1               	addwf	fsr1l,f,c
  1118   000648  50DD               	movf	postdec2,w,c
  1119   00064A  22E2               	addwfc	fsr1h,f,c
  1120   00064C  5058               	movf	kernelLoop@p^0,w,c
  1121   00064E  0D02               	mullw	2
  1122   000650  0E01               	movlw	low _pool
  1123   000652  24F3               	addwf	243,w,c
  1124   000654  6ED9               	movwf	fsr2l,c
  1125   000656  0E00               	movlw	high _pool
  1126   000658  20F4               	addwfc	prodh,w,c
  1127   00065A  6EDA               	movwf	fsr2h,c
  1128   00065C  EE00 F004          	lfsr	0,4
  1129   000660  50DE               	movf	postinc2,w,c
  1130   000662  26E9               	addwf	fsr0l,f,c
  1131   000664  50DD               	movf	postdec2,w,c
  1132   000666  22EA               	addwfc	fsr0h,f,c
  1133   000668  50E6               	movf	postinc1,w,c
  1134   00066A  18EE               	xorwf	postinc0,w,c
  1135   00066C  E107               	bnz	u2951
  1136   00066E  50E6               	movf	postinc1,w,c
  1137   000670  18EE               	xorwf	postinc0,w,c
  1138   000672  A4D8               	btfss	status,2,c
  1139   000674  EF3E  F003         	goto	u2951
  1140   000678  EF40  F003         	goto	u2950
  1141   00067C                     u2951:
  1142   00067C  EF6D  F003         	goto	l2990
  1143   000680                     u2950:
  1144   000680  5058               	movf	kernelLoop@p^0,w,c
  1145   000682  0D02               	mullw	2
  1146   000684  0E01               	movlw	low _pool
  1147   000686  24F3               	addwf	243,w,c
  1148   000688  6ED9               	movwf	fsr2l,c
  1149   00068A  0E00               	movlw	high _pool
  1150   00068C  20F4               	addwfc	prodh,w,c
  1151   00068E  6EDA               	movwf	fsr2h,c
  1152   000690  EE10 F006          	lfsr	1,6
  1153   000694  50DE               	movf	postinc2,w,c
  1154   000696  26E1               	addwf	fsr1l,f,c
  1155   000698  50DD               	movf	postdec2,w,c
  1156   00069A  22E2               	addwfc	fsr1h,f,c
  1157   00069C  5057               	movf	kernelLoop@next^0,w,c
  1158   00069E  0D02               	mullw	2
  1159   0006A0  0E01               	movlw	low _pool
  1160   0006A2  24F3               	addwf	243,w,c
  1161   0006A4  6ED9               	movwf	fsr2l,c
  1162   0006A6  0E00               	movlw	high _pool
  1163   0006A8  20F4               	addwfc	prodh,w,c
  1164   0006AA  6EDA               	movwf	fsr2h,c
  1165   0006AC  EE00 F006          	lfsr	0,6
  1166   0006B0  50DE               	movf	postinc2,w,c
  1167   0006B2  26E9               	addwf	fsr0l,f,c
  1168   0006B4  50DD               	movf	postdec2,w,c
  1169   0006B6  22EA               	addwfc	fsr0h,f,c
  1170   0006B8  50E6               	movf	postinc1,w,c
  1171   0006BA  5CEE               	subwf	postinc0,w,c
  1172   0006BC  50EE               	movf	postinc0,w,c
  1173   0006BE  0A80               	xorlw	128
  1174   0006C0  6E54               	movwf	(??_kernelLoop+4)^0,c
  1175   0006C2  50E6               	movf	postinc1,w,c
  1176   0006C4  0A80               	xorlw	128
  1177   0006C6  5854               	subwfb	(??_kernelLoop+4)^0,w,c
  1178   0006C8  B0D8               	btfsc	status,0,c
  1179   0006CA  EF69  F003         	goto	u2961
  1180   0006CE  EF6B  F003         	goto	u2960
  1181   0006D2                     u2961:
  1182   0006D2  EF6D  F003         	goto	l2990
  1183   0006D6                     u2960:
  1184   0006D6  C058  F057         	movff	kernelLoop@p,kernelLoop@next
  1185   0006DA                     l2990:
  1186                           
  1187                           ;kernel.c: 51: if(pool[p]->start < pool[next]->start)next = p;
  1188   0006DA  5057               	movf	kernelLoop@next^0,w,c
  1189   0006DC  0D02               	mullw	2
  1190   0006DE  0E01               	movlw	low _pool
  1191   0006E0  24F3               	addwf	243,w,c
  1192   0006E2  6ED9               	movwf	fsr2l,c
  1193   0006E4  0E00               	movlw	high _pool
  1194   0006E6  20F4               	addwfc	prodh,w,c
  1195   0006E8  6EDA               	movwf	fsr2h,c
  1196   0006EA  EE10 F004          	lfsr	1,4
  1197   0006EE  50DE               	movf	postinc2,w,c
  1198   0006F0  26E1               	addwf	fsr1l,f,c
  1199   0006F2  50DD               	movf	postdec2,w,c
  1200   0006F4  22E2               	addwfc	fsr1h,f,c
  1201   0006F6  5058               	movf	kernelLoop@p^0,w,c
  1202   0006F8  0D02               	mullw	2
  1203   0006FA  0E01               	movlw	low _pool
  1204   0006FC  24F3               	addwf	243,w,c
  1205   0006FE  6ED9               	movwf	fsr2l,c
  1206   000700  0E00               	movlw	high _pool
  1207   000702  20F4               	addwfc	prodh,w,c
  1208   000704  6EDA               	movwf	fsr2h,c
  1209   000706  EE00 F004          	lfsr	0,4
  1210   00070A  50DE               	movf	postinc2,w,c
  1211   00070C  26E9               	addwf	fsr0l,f,c
  1212   00070E  50DD               	movf	postdec2,w,c
  1213   000710  22EA               	addwfc	fsr0h,f,c
  1214   000712  50E6               	movf	postinc1,w,c
  1215   000714  5CEE               	subwf	postinc0,w,c
  1216   000716  50EE               	movf	postinc0,w,c
  1217   000718  0A80               	xorlw	128
  1218   00071A  6E54               	movwf	(??_kernelLoop+4)^0,c
  1219   00071C  50E6               	movf	postinc1,w,c
  1220   00071E  0A80               	xorlw	128
  1221   000720  5854               	subwfb	(??_kernelLoop+4)^0,w,c
  1222   000722  B0D8               	btfsc	status,0,c
  1223   000724  EF96  F003         	goto	u2971
  1224   000728  EF98  F003         	goto	u2970
  1225   00072C                     u2971:
  1226   00072C  EF9A  F003         	goto	l2994
  1227   000730                     u2970:
  1228   000730  C058  F057         	movff	kernelLoop@p,kernelLoop@next
  1229   000734                     l2994:
  1230   000734  0E01               	movlw	1
  1231   000736  2458               	addwf	kernelLoop@p^0,w,c
  1232   000738  6E46               	movwf	___awmod@dividend^0,c
  1233   00073A  6A47               	clrf	(___awmod@dividend+1)^0,c
  1234   00073C  0E00               	movlw	0
  1235   00073E  2247               	addwfc	(___awmod@dividend+1)^0,f,c
  1236   000740  0E00               	movlw	0
  1237   000742  6E49               	movwf	(___awmod@divisor+1)^0,c
  1238   000744  0E0A               	movlw	10
  1239   000746  6E48               	movwf	___awmod@divisor^0,c
  1240   000748  ECFA  F007         	call	___awmod	;wreg free
  1241   00074C  5046               	movf	?___awmod^0,w,c
  1242   00074E  6E58               	movwf	kernelLoop@p^0,c
  1243   000750                     l2996:
  1244   000750  5024               	movf	_end^0,w,c
  1245   000752  1858               	xorwf	kernelLoop@p^0,w,c
  1246   000754  A4D8               	btfss	status,2,c
  1247   000756  EFAF  F003         	goto	u2981
  1248   00075A  EFB1  F003         	goto	u2980
  1249   00075E                     u2981:
  1250   00075E  EF18  F003         	goto	l2984
  1251   000762                     u2980:
  1252   000762                     
  1253                           ;kernel.c: 52: };kernel.c: 55: tempProc = pool[next];
  1254   000762  5057               	movf	kernelLoop@next^0,w,c
  1255   000764  0D02               	mullw	2
  1256   000766  0E01               	movlw	low _pool
  1257   000768  24F3               	addwf	243,w,c
  1258   00076A  6ED9               	movwf	fsr2l,c
  1259   00076C  0E00               	movlw	high _pool
  1260   00076E  20F4               	addwfc	prodh,w,c
  1261   000770  6EDA               	movwf	fsr2h,c
  1262   000772  CFDE F055          	movff	postinc2,kernelLoop@tempProc
  1263   000776  CFDD F056          	movff	postdec2,kernelLoop@tempProc+1
  1264   00077A                     
  1265                           ;kernel.c: 56: pool[next] = pool[start];
  1266   00077A  5025               	movf	_start^0,w,c
  1267   00077C  0D02               	mullw	2
  1268   00077E  0E01               	movlw	low _pool
  1269   000780  24F3               	addwf	243,w,c
  1270   000782  6ED9               	movwf	fsr2l,c
  1271   000784  0E00               	movlw	high _pool
  1272   000786  20F4               	addwfc	prodh,w,c
  1273   000788  6EDA               	movwf	fsr2h,c
  1274   00078A  5057               	movf	kernelLoop@next^0,w,c
  1275   00078C  0D02               	mullw	2
  1276   00078E  0E01               	movlw	low _pool
  1277   000790  24F3               	addwf	243,w,c
  1278   000792  6EE1               	movwf	fsr1l,c
  1279   000794  0E00               	movlw	high _pool
  1280   000796  20F4               	addwfc	prodh,w,c
  1281   000798  6EE2               	movwf	fsr1h,c
  1282   00079A  CFDE FFE6          	movff	postinc2,postinc1
  1283   00079E  CFDD FFE5          	movff	postdec2,postdec1
  1284   0007A2                     
  1285                           ;kernel.c: 57: pool[start] = tempProc;
  1286   0007A2  5025               	movf	_start^0,w,c
  1287   0007A4  0D02               	mullw	2
  1288   0007A6  0E01               	movlw	low _pool
  1289   0007A8  24F3               	addwf	243,w,c
  1290   0007AA  6ED9               	movwf	fsr2l,c
  1291   0007AC  0E00               	movlw	high _pool
  1292   0007AE  20F4               	addwfc	prodh,w,c
  1293   0007B0  6EDA               	movwf	fsr2h,c
  1294   0007B2  C055  FFDE         	movff	kernelLoop@tempProc,postinc2
  1295   0007B6  C056  FFDD         	movff	kernelLoop@tempProc+1,postdec2
  1296   0007BA                     l3004:
  1297   0007BA  5025               	movf	_start^0,w,c
  1298   0007BC  0D02               	mullw	2
  1299   0007BE  0E01               	movlw	low _pool
  1300   0007C0  24F3               	addwf	243,w,c
  1301   0007C2  6ED9               	movwf	fsr2l,c
  1302   0007C4  0E00               	movlw	high _pool
  1303   0007C6  20F4               	addwfc	prodh,w,c
  1304   0007C8  6EDA               	movwf	fsr2h,c
  1305   0007CA  EE10 F004          	lfsr	1,4
  1306   0007CE  50DE               	movf	postinc2,w,c
  1307   0007D0  26E1               	addwf	fsr1l,f,c
  1308   0007D2  50DD               	movf	postdec2,w,c
  1309   0007D4  22E2               	addwfc	fsr1h,f,c
  1310   0007D6  0E01               	movlw	1
  1311   0007D8  BEE3               	btfsc	plusw1,7,c
  1312   0007DA  EFFA  F003         	goto	u2990
  1313   0007DE  0E01               	movlw	1
  1314   0007E0  50E3               	movf	plusw1,w,c
  1315   0007E2  E106               	bnz	u2991
  1316   0007E4  04E6               	decf	postinc1,w,c
  1317   0007E6  B0D8               	btfsc	status,0,c
  1318   0007E8  EFF8  F003         	goto	u2991
  1319   0007EC  EFFA  F003         	goto	u2990
  1320   0007F0                     u2991:
  1321   0007F0  EFDD  F003         	goto	l3004
  1322   0007F4                     u2990:
  1323   0007F4                     
  1324                           ;kernel.c: 62: };kernel.c: 63: if (pool[start]->function() == 2) {
  1325   0007F4  5025               	movf	_start^0,w,c
  1326   0007F6  0D02               	mullw	2
  1327   0007F8  0E01               	movlw	low _pool
  1328   0007FA  24F3               	addwf	243,w,c
  1329   0007FC  6ED9               	movwf	fsr2l,c
  1330   0007FE  0E00               	movlw	high _pool
  1331   000800  20F4               	addwfc	prodh,w,c
  1332   000802  6EDA               	movwf	fsr2h,c
  1333   000804  CFDE F050          	movff	postinc2,??_kernelLoop
  1334   000808  CFDD F051          	movff	postdec2,??_kernelLoop+1
  1335   00080C  C050  FFD9         	movff	??_kernelLoop,fsr2l
  1336   000810  C051  FFDA         	movff	??_kernelLoop+1,fsr2h
  1337   000814  D802               	call	u3008
  1338   000816  EF17  F004         	goto	u3009
  1339   00081A                     u3008:
  1340   00081A  0005               	push	
  1341   00081C  6EFA               	movwf	pclath,c
  1342   00081E  50DE               	movf	postinc2,w,c
  1343   000820  6EFD               	movwf	tosl,c
  1344   000822  50DE               	movf	postinc2,w,c
  1345   000824  6EFE               	movwf	tosh,c
  1346   000826  50F8               	movf	tblptru,w,c
  1347   000828  6EFF               	movwf	tosu,c
  1348   00082A  50FA               	movf	pclath,w,c
  1349   00082C  0012               	return		;indir
  1350   00082E                     u3009:
  1351   00082E  0A02               	xorlw	2
  1352   000830  A4D8               	btfss	status,2,c
  1353   000832  EF1D  F004         	goto	u3011
  1354   000836  EF1F  F004         	goto	u3010
  1355   00083A                     u3011:
  1356   00083A  EF2D  F004         	goto	l3010
  1357   00083E                     u3010:
  1358   00083E                     
  1359                           ;kernel.c: 64: kernelAddProc(pool[start]);
  1360   00083E  5025               	movf	_start^0,w,c
  1361   000840  0D02               	mullw	2
  1362   000842  0E01               	movlw	low _pool
  1363   000844  24F3               	addwf	243,w,c
  1364   000846  6ED9               	movwf	fsr2l,c
  1365   000848  0E00               	movlw	high _pool
  1366   00084A  20F4               	addwfc	prodh,w,c
  1367   00084C  6EDA               	movwf	fsr2h,c
  1368   00084E  CFDE F04C          	movff	postinc2,kernelAddProc@newProc
  1369   000852  CFDD F04D          	movff	postdec2,kernelAddProc@newProc+1
  1370   000856  ECAA  F008         	call	_kernelAddProc	;wreg free
  1371   00085A                     l3010:
  1372                           
  1373                           ;kernel.c: 65: };kernel.c: 66: start = (start + 1) % 10;
  1374   00085A  0E01               	movlw	1
  1375   00085C  2425               	addwf	_start^0,w,c
  1376   00085E  6E46               	movwf	___awmod@dividend^0,c
  1377   000860  6A47               	clrf	(___awmod@dividend+1)^0,c
  1378   000862  0E00               	movlw	0
  1379   000864  2247               	addwfc	(___awmod@dividend+1)^0,f,c
  1380   000866  0E00               	movlw	0
  1381   000868  6E49               	movwf	(___awmod@divisor+1)^0,c
  1382   00086A  0E0A               	movlw	10
  1383   00086C  6E48               	movwf	___awmod@divisor^0,c
  1384   00086E  ECFA  F007         	call	___awmod	;wreg free
  1385   000872  5046               	movf	?___awmod^0,w,c
  1386   000874  6E25               	movwf	_start^0,c
  1387   000876  EF09  F003         	goto	l81
  1388   00087A  0012               	return		;funcret
  1389   00087C                     __end_of_kernelLoop:
  1390                           	callstack 0
  1391                           
  1392 ;; *************** function _countTime *****************
  1393 ;; Defined at:
  1394 ;;		line 54 in file "main.c"
  1395 ;; Parameters:    Size  Location     Type
  1396 ;;		None
  1397 ;; Auto vars:     Size  Location     Type
  1398 ;;  dig             2   29[COMRAM] int 
  1399 ;; Return value:  Size  Location     Type
  1400 ;;                  1    wreg      unsigned char 
  1401 ;; Registers used:
  1402 ;;		wreg, status,2, status,0, cstack
  1403 ;; Tracked objects:
  1404 ;;		On entry : 0/0
  1405 ;;		On exit  : 0/0
  1406 ;;		Unchanged: 0/0
  1407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1408 ;;      Params:         0       0       0       0       0       0       0
  1409 ;;      Locals:         2       0       0       0       0       0       0
  1410 ;;      Temps:          0       0       0       0       0       0       0
  1411 ;;      Totals:         2       0       0       0       0       0       0
  1412 ;;Total ram usage:        2 bytes
  1413 ;; Hardware stack levels used: 1
  1414 ;; Hardware stack levels required when called: 4
  1415 ;; This function calls:
  1416 ;;		___awdiv
  1417 ;;		___awmod
  1418 ;;		_ssdDigit
  1419 ;; This function is called by:
  1420 ;;		_kernelLoop
  1421 ;; This function uses a non-reentrant model
  1422 ;;
  1423                           
  1424                           	psect	text5
  1425   000E54                     __ptext5:
  1426                           	callstack 0
  1427   000E54                     _countTime:
  1428                           	callstack 25
  1429   000E54                     
  1430                           ;main.c: 56: valor++;
  1431   000E54  4A1B               	infsnz	_valor^0,f,c
  1432   000E56  2A1C               	incf	(_valor+1)^0,f,c
  1433   000E58                     
  1434                           ;main.c: 57: int dig;;main.c: 61: dig = (valor)%10;
  1435   000E58  C01B  F046         	movff	_valor,___awmod@dividend
  1436   000E5C  C01C  F047         	movff	_valor+1,___awmod@dividend+1
  1437   000E60  0E00               	movlw	0
  1438   000E62  6E49               	movwf	(___awmod@divisor+1)^0,c
  1439   000E64  0E0A               	movlw	10
  1440   000E66  6E48               	movwf	___awmod@divisor^0,c
  1441   000E68  ECFA  F007         	call	___awmod	;wreg free
  1442   000E6C  C046  F04C         	movff	?___awmod,countTime@dig
  1443   000E70  C047  F04D         	movff	?___awmod+1,countTime@dig+1
  1444   000E74                     
  1445                           ;main.c: 62: ssdDigit(dig, 3);
  1446   000E74  0E03               	movlw	3
  1447   000E76  6E3E               	movwf	ssdDigit@pos^0,c
  1448   000E78  504C               	movf	countTime@dig^0,w,c
  1449   000E7A  ECAE  F009         	call	_ssdDigit
  1450   000E7E                     
  1451                           ;main.c: 64: dig = (valor/10)%10;
  1452   000E7E  0E00               	movlw	0
  1453   000E80  6E41               	movwf	(___awdiv@divisor+1)^0,c
  1454   000E82  0E0A               	movlw	10
  1455   000E84  6E40               	movwf	___awdiv@divisor^0,c
  1456   000E86  C01B  F03E         	movff	_valor,___awdiv@dividend
  1457   000E8A  C01C  F03F         	movff	_valor+1,___awdiv@dividend+1
  1458   000E8E  EC98  F007         	call	___awdiv	;wreg free
  1459   000E92  C03E  F046         	movff	?___awdiv,___awmod@dividend
  1460   000E96  C03F  F047         	movff	?___awdiv+1,___awmod@dividend+1
  1461   000E9A  0E00               	movlw	0
  1462   000E9C  6E49               	movwf	(___awmod@divisor+1)^0,c
  1463   000E9E  0E0A               	movlw	10
  1464   000EA0  6E48               	movwf	___awmod@divisor^0,c
  1465   000EA2  ECFA  F007         	call	___awmod	;wreg free
  1466   000EA6  C046  F04C         	movff	?___awmod,countTime@dig
  1467   000EAA  C047  F04D         	movff	?___awmod+1,countTime@dig+1
  1468   000EAE                     
  1469                           ;main.c: 65: ssdDigit(dig, 2);
  1470   000EAE  0E02               	movlw	2
  1471   000EB0  6E3E               	movwf	ssdDigit@pos^0,c
  1472   000EB2  504C               	movf	countTime@dig^0,w,c
  1473   000EB4  ECAE  F009         	call	_ssdDigit
  1474   000EB8                     
  1475                           ;main.c: 67: dig = (valor/100)%10;
  1476   000EB8  0E00               	movlw	0
  1477   000EBA  6E41               	movwf	(___awdiv@divisor+1)^0,c
  1478   000EBC  0E64               	movlw	100
  1479   000EBE  6E40               	movwf	___awdiv@divisor^0,c
  1480   000EC0  C01B  F03E         	movff	_valor,___awdiv@dividend
  1481   000EC4  C01C  F03F         	movff	_valor+1,___awdiv@dividend+1
  1482   000EC8  EC98  F007         	call	___awdiv	;wreg free
  1483   000ECC  C03E  F046         	movff	?___awdiv,___awmod@dividend
  1484   000ED0  C03F  F047         	movff	?___awdiv+1,___awmod@dividend+1
  1485   000ED4  0E00               	movlw	0
  1486   000ED6  6E49               	movwf	(___awmod@divisor+1)^0,c
  1487   000ED8  0E0A               	movlw	10
  1488   000EDA  6E48               	movwf	___awmod@divisor^0,c
  1489   000EDC  ECFA  F007         	call	___awmod	;wreg free
  1490   000EE0  C046  F04C         	movff	?___awmod,countTime@dig
  1491   000EE4  C047  F04D         	movff	?___awmod+1,countTime@dig+1
  1492   000EE8                     
  1493                           ;main.c: 68: ssdDigit(dig, 1);
  1494   000EE8  0E01               	movlw	1
  1495   000EEA  6E3E               	movwf	ssdDigit@pos^0,c
  1496   000EEC  504C               	movf	countTime@dig^0,w,c
  1497   000EEE  ECAE  F009         	call	_ssdDigit
  1498   000EF2                     
  1499                           ;main.c: 70: dig = (valor/1000)%10;
  1500   000EF2  0E03               	movlw	3
  1501   000EF4  6E41               	movwf	(___awdiv@divisor+1)^0,c
  1502   000EF6  0EE8               	movlw	232
  1503   000EF8  6E40               	movwf	___awdiv@divisor^0,c
  1504   000EFA  C01B  F03E         	movff	_valor,___awdiv@dividend
  1505   000EFE  C01C  F03F         	movff	_valor+1,___awdiv@dividend+1
  1506   000F02  EC98  F007         	call	___awdiv	;wreg free
  1507   000F06  C03E  F046         	movff	?___awdiv,___awmod@dividend
  1508   000F0A  C03F  F047         	movff	?___awdiv+1,___awmod@dividend+1
  1509   000F0E  0E00               	movlw	0
  1510   000F10  6E49               	movwf	(___awmod@divisor+1)^0,c
  1511   000F12  0E0A               	movlw	10
  1512   000F14  6E48               	movwf	___awmod@divisor^0,c
  1513   000F16  ECFA  F007         	call	___awmod	;wreg free
  1514   000F1A  C046  F04C         	movff	?___awmod,countTime@dig
  1515   000F1E  C047  F04D         	movff	?___awmod+1,countTime@dig+1
  1516   000F22                     
  1517                           ;main.c: 71: ssdDigit(dig, 0);
  1518   000F22  0E00               	movlw	0
  1519   000F24  6E3E               	movwf	ssdDigit@pos^0,c
  1520   000F26  504C               	movf	countTime@dig^0,w,c
  1521   000F28  ECAE  F009         	call	_ssdDigit
  1522   000F2C                     
  1523                           ;main.c: 72: return 2;
  1524   000F2C  0E02               	movlw	2
  1525   000F2E  0012               	return		;funcret
  1526   000F30                     __end_of_countTime:
  1527                           	callstack 0
  1528                           
  1529 ;; *************** function _initPORTAD *****************
  1530 ;; Defined at:
  1531 ;;		line 29 in file "main.c"
  1532 ;; Parameters:    Size  Location     Type
  1533 ;;		None
  1534 ;; Auto vars:     Size  Location     Type
  1535 ;;		None
  1536 ;; Return value:  Size  Location     Type
  1537 ;;                  1    wreg      unsigned char 
  1538 ;; Registers used:
  1539 ;;		wreg, status,2
  1540 ;; Tracked objects:
  1541 ;;		On entry : 0/0
  1542 ;;		On exit  : 0/0
  1543 ;;		Unchanged: 0/0
  1544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1545 ;;      Params:         0       0       0       0       0       0       0
  1546 ;;      Locals:         0       0       0       0       0       0       0
  1547 ;;      Temps:          0       0       0       0       0       0       0
  1548 ;;      Totals:         0       0       0       0       0       0       0
  1549 ;;Total ram usage:        0 bytes
  1550 ;; Hardware stack levels used: 1
  1551 ;; Hardware stack levels required when called: 3
  1552 ;; This function calls:
  1553 ;;		Nothing
  1554 ;; This function is called by:
  1555 ;;		_kernelLoop
  1556 ;; This function uses a non-reentrant model
  1557 ;;
  1558                           
  1559                           	psect	text6
  1560   001486                     __ptext6:
  1561                           	callstack 0
  1562   001486                     _initPORTAD:
  1563                           	callstack 26
  1564   001486                     
  1565                           ;main.c: 31: TRISD = 0x00;
  1566   001486  0E00               	movlw	0
  1567   001488  6E95               	movwf	149,c	;volatile
  1568   00148A                     
  1569                           ;main.c: 32: return 0;
  1570   00148A  0E00               	movlw	0
  1571   00148C  0012               	return		;funcret
  1572   00148E                     __end_of_initPORTAD:
  1573                           	callstack 0
  1574                           
  1575 ;; *************** function _updateSSD *****************
  1576 ;; Defined at:
  1577 ;;		line 47 in file "main.c"
  1578 ;; Parameters:    Size  Location     Type
  1579 ;;		None
  1580 ;; Auto vars:     Size  Location     Type
  1581 ;;		None
  1582 ;; Return value:  Size  Location     Type
  1583 ;;                  1    wreg      unsigned char 
  1584 ;; Registers used:
  1585 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1586 ;; Tracked objects:
  1587 ;;		On entry : 0/0
  1588 ;;		On exit  : 0/0
  1589 ;;		Unchanged: 0/0
  1590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1591 ;;      Params:         0       0       0       0       0       0       0
  1592 ;;      Locals:         0       0       0       0       0       0       0
  1593 ;;      Temps:          0       0       0       0       0       0       0
  1594 ;;      Totals:         0       0       0       0       0       0       0
  1595 ;;Total ram usage:        0 bytes
  1596 ;; Hardware stack levels used: 1
  1597 ;; Hardware stack levels required when called: 5
  1598 ;; This function calls:
  1599 ;;		_ssdUpdate
  1600 ;; This function is called by:
  1601 ;;		_kernelLoop
  1602 ;; This function uses a non-reentrant model
  1603 ;;
  1604                           
  1605                           	psect	text7
  1606   00148E                     __ptext7:
  1607                           	callstack 0
  1608   00148E                     _updateSSD:
  1609                           	callstack 24
  1610   00148E                     
  1611                           ;main.c: 49: ssdUpdate();
  1612   00148E  EC8C  F006         	call	_ssdUpdate	;wreg free
  1613   001492                     
  1614                           ;main.c: 50: return 2;
  1615   001492  0E02               	movlw	2
  1616   001494  0012               	return		;funcret
  1617   001496                     __end_of_updateSSD:
  1618                           	callstack 0
  1619                           
  1620 ;; *************** function _ssdUpdate *****************
  1621 ;; Defined at:
  1622 ;;		line 54 in file "ssd.c"
  1623 ;; Parameters:    Size  Location     Type
  1624 ;;		None
  1625 ;; Auto vars:     Size  Location     Type
  1626 ;;		None
  1627 ;; Return value:  Size  Location     Type
  1628 ;;                  1    wreg      void 
  1629 ;; Registers used:
  1630 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1631 ;; Tracked objects:
  1632 ;;		On entry : 0/0
  1633 ;;		On exit  : 0/0
  1634 ;;		Unchanged: 0/0
  1635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1636 ;;      Params:         0       0       0       0       0       0       0
  1637 ;;      Locals:         0       0       0       0       0       0       0
  1638 ;;      Temps:          0       0       0       0       0       0       0
  1639 ;;      Totals:         0       0       0       0       0       0       0
  1640 ;;Total ram usage:        0 bytes
  1641 ;; Hardware stack levels used: 1
  1642 ;; Hardware stack levels required when called: 4
  1643 ;; This function calls:
  1644 ;;		_digitalWrite
  1645 ;; This function is called by:
  1646 ;;		_updateSSD
  1647 ;; This function uses a non-reentrant model
  1648 ;;
  1649                           
  1650                           	psect	text8
  1651   000D18                     __ptext8:
  1652                           	callstack 0
  1653   000D18                     _ssdUpdate:
  1654                           	callstack 24
  1655   000D18                     
  1656                           ;ssd.c: 58: TRISD= 0x00;
  1657   000D18  0E00               	movlw	0
  1658   000D1A  6E95               	movwf	149,c	;volatile
  1659   000D1C                     
  1660                           ;ssd.c: 60: digitalWrite(PIN_A2,0);
  1661   000D1C  0E00               	movlw	0
  1662   000D1E  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  1663   000D20  0E02               	movlw	2
  1664   000D22  6E3E               	movwf	digitalWrite@pin^0,c
  1665   000D24  0E00               	movlw	0
  1666   000D26  6E41               	movwf	(digitalWrite@value+1)^0,c
  1667   000D28  0E00               	movlw	0
  1668   000D2A  6E40               	movwf	digitalWrite@value^0,c
  1669   000D2C  EC65  F005         	call	_digitalWrite	;wreg free
  1670   000D30                     
  1671                           ;ssd.c: 61: digitalWrite(PIN_A3,0);
  1672   000D30  0E00               	movlw	0
  1673   000D32  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  1674   000D34  0E03               	movlw	3
  1675   000D36  6E3E               	movwf	digitalWrite@pin^0,c
  1676   000D38  0E00               	movlw	0
  1677   000D3A  6E41               	movwf	(digitalWrite@value+1)^0,c
  1678   000D3C  0E00               	movlw	0
  1679   000D3E  6E40               	movwf	digitalWrite@value^0,c
  1680   000D40  EC65  F005         	call	_digitalWrite	;wreg free
  1681   000D44                     
  1682                           ;ssd.c: 62: digitalWrite(PIN_A4,0);
  1683   000D44  0E00               	movlw	0
  1684   000D46  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  1685   000D48  0E04               	movlw	4
  1686   000D4A  6E3E               	movwf	digitalWrite@pin^0,c
  1687   000D4C  0E00               	movlw	0
  1688   000D4E  6E41               	movwf	(digitalWrite@value+1)^0,c
  1689   000D50  0E00               	movlw	0
  1690   000D52  6E40               	movwf	digitalWrite@value^0,c
  1691   000D54  EC65  F005         	call	_digitalWrite	;wreg free
  1692   000D58                     
  1693                           ;ssd.c: 63: digitalWrite(PIN_A5,0);
  1694   000D58  0E00               	movlw	0
  1695   000D5A  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  1696   000D5C  0E05               	movlw	5
  1697   000D5E  6E3E               	movwf	digitalWrite@pin^0,c
  1698   000D60  0E00               	movlw	0
  1699   000D62  6E41               	movwf	(digitalWrite@value+1)^0,c
  1700   000D64  0E00               	movlw	0
  1701   000D66  6E40               	movwf	digitalWrite@value^0,c
  1702   000D68  EC65  F005         	call	_digitalWrite	;wreg free
  1703                           
  1704                           ;ssd.c: 66: PORTD = 0x00;
  1705   000D6C  0E00               	movlw	0
  1706   000D6E  6E83               	movwf	131,c	;volatile
  1707                           
  1708                           ;ssd.c: 69: switch (display)
  1709   000D70  EF16  F007         	goto	l2728
  1710   000D74                     l2700:
  1711                           
  1712                           ;ssd.c: 72: PORTD = valor[v0];
  1713   000D74  0E01               	movlw	low _valor@ssd$F527
  1714   000D76  2420               	addwf	_v0^0,w,c
  1715   000D78  6EF6               	movwf	tblptrl,c
  1716   000D7A  6AF7               	clrf	tblptrh,c
  1717   000D7C  0E06               	movlw	high _valor@ssd$F527
  1718   000D7E  22F7               	addwfc	tblptrh,f,c
  1719   000D80                     	if	0	;There are less than 3 active tblptr bytes
  1720   000D80                     	endif
  1721   000D80  0008               	tblrd		*
  1722   000D82  CFF5 FF83          	movff	tablat,3971	;volatile
  1723   000D86                     
  1724                           ;ssd.c: 73: digitalWrite(PIN_A2,1);
  1725   000D86  0E00               	movlw	0
  1726   000D88  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  1727   000D8A  0E02               	movlw	2
  1728   000D8C  6E3E               	movwf	digitalWrite@pin^0,c
  1729   000D8E  0E00               	movlw	0
  1730   000D90  6E41               	movwf	(digitalWrite@value+1)^0,c
  1731   000D92  0E01               	movlw	1
  1732   000D94  6E40               	movwf	digitalWrite@value^0,c
  1733   000D96  EC65  F005         	call	_digitalWrite	;wreg free
  1734   000D9A                     
  1735                           ;ssd.c: 74: display = 1;
  1736   000D9A  0E01               	movlw	1
  1737   000D9C  6E21               	movwf	_display^0,c
  1738                           
  1739                           ;ssd.c: 75: break;
  1740   000D9E  EF29  F007         	goto	l470
  1741   000DA2                     l2706:
  1742                           
  1743                           ;ssd.c: 78: PORTD = valor[v1];
  1744   000DA2  0E01               	movlw	low _valor@ssd$F527
  1745   000DA4  241F               	addwf	_v1^0,w,c
  1746   000DA6  6EF6               	movwf	tblptrl,c
  1747   000DA8  6AF7               	clrf	tblptrh,c
  1748   000DAA  0E06               	movlw	high _valor@ssd$F527
  1749   000DAC  22F7               	addwfc	tblptrh,f,c
  1750   000DAE                     	if	0	;There are less than 3 active tblptr bytes
  1751   000DAE                     	endif
  1752   000DAE  0008               	tblrd		*
  1753   000DB0  CFF5 FF83          	movff	tablat,3971	;volatile
  1754   000DB4                     
  1755                           ;ssd.c: 79: digitalWrite(PIN_A3,1);
  1756   000DB4  0E00               	movlw	0
  1757   000DB6  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  1758   000DB8  0E03               	movlw	3
  1759   000DBA  6E3E               	movwf	digitalWrite@pin^0,c
  1760   000DBC  0E00               	movlw	0
  1761   000DBE  6E41               	movwf	(digitalWrite@value+1)^0,c
  1762   000DC0  0E01               	movlw	1
  1763   000DC2  6E40               	movwf	digitalWrite@value^0,c
  1764   000DC4  EC65  F005         	call	_digitalWrite	;wreg free
  1765   000DC8                     
  1766                           ;ssd.c: 80: display = 2;
  1767   000DC8  0E02               	movlw	2
  1768   000DCA  6E21               	movwf	_display^0,c
  1769                           
  1770                           ;ssd.c: 81: break;
  1771   000DCC  EF29  F007         	goto	l470
  1772   000DD0                     l2712:
  1773                           
  1774                           ;ssd.c: 84: PORTD = valor[v2];
  1775   000DD0  0E01               	movlw	low _valor@ssd$F527
  1776   000DD2  241E               	addwf	_v2^0,w,c
  1777   000DD4  6EF6               	movwf	tblptrl,c
  1778   000DD6  6AF7               	clrf	tblptrh,c
  1779   000DD8  0E06               	movlw	high _valor@ssd$F527
  1780   000DDA  22F7               	addwfc	tblptrh,f,c
  1781   000DDC                     	if	0	;There are less than 3 active tblptr bytes
  1782   000DDC                     	endif
  1783   000DDC  0008               	tblrd		*
  1784   000DDE  CFF5 FF83          	movff	tablat,3971	;volatile
  1785   000DE2                     
  1786                           ;ssd.c: 85: digitalWrite(PIN_A4,1);
  1787   000DE2  0E00               	movlw	0
  1788   000DE4  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  1789   000DE6  0E04               	movlw	4
  1790   000DE8  6E3E               	movwf	digitalWrite@pin^0,c
  1791   000DEA  0E00               	movlw	0
  1792   000DEC  6E41               	movwf	(digitalWrite@value+1)^0,c
  1793   000DEE  0E01               	movlw	1
  1794   000DF0  6E40               	movwf	digitalWrite@value^0,c
  1795   000DF2  EC65  F005         	call	_digitalWrite	;wreg free
  1796   000DF6                     
  1797                           ;ssd.c: 86: display = 3;
  1798   000DF6  0E03               	movlw	3
  1799   000DF8  6E21               	movwf	_display^0,c
  1800                           
  1801                           ;ssd.c: 87: break;
  1802   000DFA  EF29  F007         	goto	l470
  1803   000DFE                     l2718:
  1804                           
  1805                           ;ssd.c: 90: PORTD = valor[v3];
  1806   000DFE  0E01               	movlw	low _valor@ssd$F527
  1807   000E00  241D               	addwf	_v3^0,w,c
  1808   000E02  6EF6               	movwf	tblptrl,c
  1809   000E04  6AF7               	clrf	tblptrh,c
  1810   000E06  0E06               	movlw	high _valor@ssd$F527
  1811   000E08  22F7               	addwfc	tblptrh,f,c
  1812   000E0A                     	if	0	;There are less than 3 active tblptr bytes
  1813   000E0A                     	endif
  1814   000E0A  0008               	tblrd		*
  1815   000E0C  CFF5 FF83          	movff	tablat,3971	;volatile
  1816   000E10                     
  1817                           ;ssd.c: 91: digitalWrite(PIN_A5,1);
  1818   000E10  0E00               	movlw	0
  1819   000E12  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  1820   000E14  0E05               	movlw	5
  1821   000E16  6E3E               	movwf	digitalWrite@pin^0,c
  1822   000E18  0E00               	movlw	0
  1823   000E1A  6E41               	movwf	(digitalWrite@value+1)^0,c
  1824   000E1C  0E01               	movlw	1
  1825   000E1E  6E40               	movwf	digitalWrite@value^0,c
  1826   000E20  EC65  F005         	call	_digitalWrite	;wreg free
  1827   000E24                     l2722:
  1828                           
  1829                           ;ssd.c: 92: display = 0;
  1830   000E24  0E00               	movlw	0
  1831   000E26  6E21               	movwf	_display^0,c
  1832                           
  1833                           ;ssd.c: 93: break;
  1834   000E28  EF29  F007         	goto	l470
  1835   000E2C                     l2728:
  1836   000E2C  5021               	movf	_display^0,w,c
  1837                           
  1838                           ; Switch size 1, requested type "simple"
  1839                           ; Number of cases is 4, Range of values is 0 to 3
  1840                           ; switch strategies available:
  1841                           ; Name         Instructions Cycles
  1842                           ; simple_byte           13     7 (average)
  1843                           ;	Chosen strategy is simple_byte
  1844   000E2E  0A00               	xorlw	0	; case 0
  1845   000E30  B4D8               	btfsc	status,2,c
  1846   000E32  EFBA  F006         	goto	l2700
  1847   000E36  0A01               	xorlw	1	; case 1
  1848   000E38  B4D8               	btfsc	status,2,c
  1849   000E3A  EFD1  F006         	goto	l2706
  1850   000E3E  0A03               	xorlw	3	; case 2
  1851   000E40  B4D8               	btfsc	status,2,c
  1852   000E42  EFE8  F006         	goto	l2712
  1853   000E46  0A01               	xorlw	1	; case 3
  1854   000E48  B4D8               	btfsc	status,2,c
  1855   000E4A  EFFF  F006         	goto	l2718
  1856   000E4E  EF12  F007         	goto	l2722
  1857   000E52                     l470:
  1858   000E52  0012               	return		;funcret
  1859   000E54                     __end_of_ssdUpdate:
  1860                           	callstack 0
  1861                           
  1862 ;; *************** function _digitalWrite *****************
  1863 ;; Defined at:
  1864 ;;		line 14 in file "io.c"
  1865 ;; Parameters:    Size  Location     Type
  1866 ;;  pin             2   15[COMRAM] int 
  1867 ;;  value           2   17[COMRAM] int 
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;		None
  1870 ;; Return value:  Size  Location     Type
  1871 ;;                  1    wreg      void 
  1872 ;; Registers used:
  1873 ;;		wreg, status,2, status,0
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1879 ;;      Params:         4       0       0       0       0       0       0
  1880 ;;      Locals:         0       0       0       0       0       0       0
  1881 ;;      Temps:          2       0       0       0       0       0       0
  1882 ;;      Totals:         6       0       0       0       0       0       0
  1883 ;;Total ram usage:        6 bytes
  1884 ;; Hardware stack levels used: 1
  1885 ;; Hardware stack levels required when called: 3
  1886 ;; This function calls:
  1887 ;;		Nothing
  1888 ;; This function is called by:
  1889 ;;		_ssdUpdate
  1890 ;;		_lcdCommand
  1891 ;;		_lcdData
  1892 ;;		_clear_SCL
  1893 ;;		_clear_SDA
  1894 ;; This function uses a non-reentrant model
  1895 ;;
  1896                           
  1897                           	psect	text9
  1898   000ACA                     __ptext9:
  1899                           	callstack 0
  1900   000ACA                     _digitalWrite:
  1901                           	callstack 24
  1902   000ACA                     
  1903                           ;io.c: 16: if(pin <8){
  1904   000ACA  BE3F               	btfsc	(digitalWrite@pin+1)^0,7,c
  1905   000ACC  EF73  F005         	goto	u2250
  1906   000AD0  503F               	movf	(digitalWrite@pin+1)^0,w,c
  1907   000AD2  E107               	bnz	u2251
  1908   000AD4  0E08               	movlw	8
  1909   000AD6  5C3E               	subwf	digitalWrite@pin^0,w,c
  1910   000AD8  B0D8               	btfsc	status,0,c
  1911   000ADA  EF71  F005         	goto	u2251
  1912   000ADE  EF73  F005         	goto	u2250
  1913   000AE2                     u2251:
  1914   000AE2  EF9D  F005         	goto	l2658
  1915   000AE6                     u2250:
  1916   000AE6                     
  1917                           ;io.c: 17: if (value){ ((PORTA) |= (1<<(pin)));}
  1918   000AE6  5040               	movf	digitalWrite@value^0,w,c
  1919   000AE8  1041               	iorwf	(digitalWrite@value+1)^0,w,c
  1920   000AEA  B4D8               	btfsc	status,2,c
  1921   000AEC  EF7A  F005         	goto	u2261
  1922   000AF0  EF7C  F005         	goto	u2260
  1923   000AF4                     u2261:
  1924   000AF4  EF8C  F005         	goto	l2656
  1925   000AF8                     u2260:
  1926   000AF8  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  1927   000AFC  0E01               	movlw	1
  1928   000AFE  6E43               	movwf	(??_digitalWrite+1)^0,c
  1929   000B00  2A42               	incf	??_digitalWrite^0,f,c
  1930   000B02  EF85  F005         	goto	u2274
  1931   000B06                     u2275:
  1932   000B06  90D8               	bcf	status,0,c
  1933   000B08  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  1934   000B0A                     u2274:
  1935   000B0A  2E42               	decfsz	??_digitalWrite^0,f,c
  1936   000B0C  EF83  F005         	goto	u2275
  1937   000B10  5043               	movf	(??_digitalWrite+1)^0,w,c
  1938   000B12  1280               	iorwf	128,f,c	;volatile
  1939   000B14  EF8B  F006         	goto	l210
  1940   000B18                     l2656:
  1941                           
  1942                           ;io.c: 18: else{ ((PORTA) &= ~(1<<(pin)));}
  1943   000B18  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  1944   000B1C  0E01               	movlw	1
  1945   000B1E  6E43               	movwf	(??_digitalWrite+1)^0,c
  1946   000B20  2A42               	incf	??_digitalWrite^0,f,c
  1947   000B22  EF95  F005         	goto	u2284
  1948   000B26                     u2285:
  1949   000B26  90D8               	bcf	status,0,c
  1950   000B28  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  1951   000B2A                     u2284:
  1952   000B2A  2E42               	decfsz	??_digitalWrite^0,f,c
  1953   000B2C  EF93  F005         	goto	u2285
  1954   000B30  5043               	movf	(??_digitalWrite+1)^0,w,c
  1955   000B32  0AFF               	xorlw	255
  1956   000B34  1680               	andwf	128,f,c	;volatile
  1957   000B36  EF8B  F006         	goto	l210
  1958   000B3A                     l2658:
  1959   000B3A  BE3F               	btfsc	(digitalWrite@pin+1)^0,7,c
  1960   000B3C  EFAB  F005         	goto	u2290
  1961   000B40  503F               	movf	(digitalWrite@pin+1)^0,w,c
  1962   000B42  E107               	bnz	u2291
  1963   000B44  0E10               	movlw	16
  1964   000B46  5C3E               	subwf	digitalWrite@pin^0,w,c
  1965   000B48  B0D8               	btfsc	status,0,c
  1966   000B4A  EFA9  F005         	goto	u2291
  1967   000B4E  EFAB  F005         	goto	u2290
  1968   000B52                     u2291:
  1969   000B52  EFD9  F005         	goto	l2666
  1970   000B56                     u2290:
  1971   000B56                     
  1972                           ;io.c: 20: pin -=8;
  1973   000B56  0EF8               	movlw	248
  1974   000B58  263E               	addwf	digitalWrite@pin^0,f,c
  1975   000B5A  0EFF               	movlw	255
  1976   000B5C  223F               	addwfc	(digitalWrite@pin+1)^0,f,c
  1977                           
  1978                           ;io.c: 21: if (value){ ((PORTB) |= (1<<(pin)));}
  1979   000B5E  5040               	movf	digitalWrite@value^0,w,c
  1980   000B60  1041               	iorwf	(digitalWrite@value+1)^0,w,c
  1981   000B62  B4D8               	btfsc	status,2,c
  1982   000B64  EFB6  F005         	goto	u2301
  1983   000B68  EFB8  F005         	goto	u2300
  1984   000B6C                     u2301:
  1985   000B6C  EFC8  F005         	goto	l2664
  1986   000B70                     u2300:
  1987   000B70  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  1988   000B74  0E01               	movlw	1
  1989   000B76  6E43               	movwf	(??_digitalWrite+1)^0,c
  1990   000B78  2A42               	incf	??_digitalWrite^0,f,c
  1991   000B7A  EFC1  F005         	goto	u2314
  1992   000B7E                     u2315:
  1993   000B7E  90D8               	bcf	status,0,c
  1994   000B80  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  1995   000B82                     u2314:
  1996   000B82  2E42               	decfsz	??_digitalWrite^0,f,c
  1997   000B84  EFBF  F005         	goto	u2315
  1998   000B88  5043               	movf	(??_digitalWrite+1)^0,w,c
  1999   000B8A  1281               	iorwf	129,f,c	;volatile
  2000   000B8C  EF8B  F006         	goto	l210
  2001   000B90                     l2664:
  2002                           
  2003                           ;io.c: 22: else{ ((PORTB) &= ~(1<<(pin)));}
  2004   000B90  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2005   000B94  0E01               	movlw	1
  2006   000B96  6E43               	movwf	(??_digitalWrite+1)^0,c
  2007   000B98  2A42               	incf	??_digitalWrite^0,f,c
  2008   000B9A  EFD1  F005         	goto	u2324
  2009   000B9E                     u2325:
  2010   000B9E  90D8               	bcf	status,0,c
  2011   000BA0  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2012   000BA2                     u2324:
  2013   000BA2  2E42               	decfsz	??_digitalWrite^0,f,c
  2014   000BA4  EFCF  F005         	goto	u2325
  2015   000BA8  5043               	movf	(??_digitalWrite+1)^0,w,c
  2016   000BAA  0AFF               	xorlw	255
  2017   000BAC  1681               	andwf	129,f,c	;volatile
  2018   000BAE  EF8B  F006         	goto	l210
  2019   000BB2                     l2666:
  2020   000BB2  BE3F               	btfsc	(digitalWrite@pin+1)^0,7,c
  2021   000BB4  EFE7  F005         	goto	u2330
  2022   000BB8  503F               	movf	(digitalWrite@pin+1)^0,w,c
  2023   000BBA  E107               	bnz	u2331
  2024   000BBC  0E18               	movlw	24
  2025   000BBE  5C3E               	subwf	digitalWrite@pin^0,w,c
  2026   000BC0  B0D8               	btfsc	status,0,c
  2027   000BC2  EFE5  F005         	goto	u2331
  2028   000BC6  EFE7  F005         	goto	u2330
  2029   000BCA                     u2331:
  2030   000BCA  EF15  F006         	goto	l2674
  2031   000BCE                     u2330:
  2032   000BCE                     
  2033                           ;io.c: 24: pin -=16;
  2034   000BCE  0EF0               	movlw	240
  2035   000BD0  263E               	addwf	digitalWrite@pin^0,f,c
  2036   000BD2  0EFF               	movlw	255
  2037   000BD4  223F               	addwfc	(digitalWrite@pin+1)^0,f,c
  2038                           
  2039                           ;io.c: 25: if (value){ ((PORTC) |= (1<<(pin)));}
  2040   000BD6  5040               	movf	digitalWrite@value^0,w,c
  2041   000BD8  1041               	iorwf	(digitalWrite@value+1)^0,w,c
  2042   000BDA  B4D8               	btfsc	status,2,c
  2043   000BDC  EFF2  F005         	goto	u2341
  2044   000BE0  EFF4  F005         	goto	u2340
  2045   000BE4                     u2341:
  2046   000BE4  EF04  F006         	goto	l2672
  2047   000BE8                     u2340:
  2048   000BE8  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2049   000BEC  0E01               	movlw	1
  2050   000BEE  6E43               	movwf	(??_digitalWrite+1)^0,c
  2051   000BF0  2A42               	incf	??_digitalWrite^0,f,c
  2052   000BF2  EFFD  F005         	goto	u2354
  2053   000BF6                     u2355:
  2054   000BF6  90D8               	bcf	status,0,c
  2055   000BF8  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2056   000BFA                     u2354:
  2057   000BFA  2E42               	decfsz	??_digitalWrite^0,f,c
  2058   000BFC  EFFB  F005         	goto	u2355
  2059   000C00  5043               	movf	(??_digitalWrite+1)^0,w,c
  2060   000C02  1282               	iorwf	130,f,c	;volatile
  2061   000C04  EF8B  F006         	goto	l210
  2062   000C08                     l2672:
  2063                           
  2064                           ;io.c: 26: else{ ((PORTC) &= ~(1<<(pin)));}
  2065   000C08  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2066   000C0C  0E01               	movlw	1
  2067   000C0E  6E43               	movwf	(??_digitalWrite+1)^0,c
  2068   000C10  2A42               	incf	??_digitalWrite^0,f,c
  2069   000C12  EF0D  F006         	goto	u2364
  2070   000C16                     u2365:
  2071   000C16  90D8               	bcf	status,0,c
  2072   000C18  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2073   000C1A                     u2364:
  2074   000C1A  2E42               	decfsz	??_digitalWrite^0,f,c
  2075   000C1C  EF0B  F006         	goto	u2365
  2076   000C20  5043               	movf	(??_digitalWrite+1)^0,w,c
  2077   000C22  0AFF               	xorlw	255
  2078   000C24  1682               	andwf	130,f,c	;volatile
  2079   000C26  EF8B  F006         	goto	l210
  2080   000C2A                     l2674:
  2081   000C2A  BE3F               	btfsc	(digitalWrite@pin+1)^0,7,c
  2082   000C2C  EF23  F006         	goto	u2370
  2083   000C30  503F               	movf	(digitalWrite@pin+1)^0,w,c
  2084   000C32  E107               	bnz	u2371
  2085   000C34  0E20               	movlw	32
  2086   000C36  5C3E               	subwf	digitalWrite@pin^0,w,c
  2087   000C38  B0D8               	btfsc	status,0,c
  2088   000C3A  EF21  F006         	goto	u2371
  2089   000C3E  EF23  F006         	goto	u2370
  2090   000C42                     u2371:
  2091   000C42  EF51  F006         	goto	l2682
  2092   000C46                     u2370:
  2093   000C46                     
  2094                           ;io.c: 28: pin -=24;
  2095   000C46  0EE8               	movlw	232
  2096   000C48  263E               	addwf	digitalWrite@pin^0,f,c
  2097   000C4A  0EFF               	movlw	255
  2098   000C4C  223F               	addwfc	(digitalWrite@pin+1)^0,f,c
  2099                           
  2100                           ;io.c: 29: if (value){ ((PORTD) |= (1<<(pin)));}
  2101   000C4E  5040               	movf	digitalWrite@value^0,w,c
  2102   000C50  1041               	iorwf	(digitalWrite@value+1)^0,w,c
  2103   000C52  B4D8               	btfsc	status,2,c
  2104   000C54  EF2E  F006         	goto	u2381
  2105   000C58  EF30  F006         	goto	u2380
  2106   000C5C                     u2381:
  2107   000C5C  EF40  F006         	goto	l2680
  2108   000C60                     u2380:
  2109   000C60  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2110   000C64  0E01               	movlw	1
  2111   000C66  6E43               	movwf	(??_digitalWrite+1)^0,c
  2112   000C68  2A42               	incf	??_digitalWrite^0,f,c
  2113   000C6A  EF39  F006         	goto	u2394
  2114   000C6E                     u2395:
  2115   000C6E  90D8               	bcf	status,0,c
  2116   000C70  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2117   000C72                     u2394:
  2118   000C72  2E42               	decfsz	??_digitalWrite^0,f,c
  2119   000C74  EF37  F006         	goto	u2395
  2120   000C78  5043               	movf	(??_digitalWrite+1)^0,w,c
  2121   000C7A  1283               	iorwf	131,f,c	;volatile
  2122   000C7C  EF8B  F006         	goto	l210
  2123   000C80                     l2680:
  2124                           
  2125                           ;io.c: 30: else{ ((PORTD) &= ~(1<<(pin)));}
  2126   000C80  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2127   000C84  0E01               	movlw	1
  2128   000C86  6E43               	movwf	(??_digitalWrite+1)^0,c
  2129   000C88  2A42               	incf	??_digitalWrite^0,f,c
  2130   000C8A  EF49  F006         	goto	u2404
  2131   000C8E                     u2405:
  2132   000C8E  90D8               	bcf	status,0,c
  2133   000C90  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2134   000C92                     u2404:
  2135   000C92  2E42               	decfsz	??_digitalWrite^0,f,c
  2136   000C94  EF47  F006         	goto	u2405
  2137   000C98  5043               	movf	(??_digitalWrite+1)^0,w,c
  2138   000C9A  0AFF               	xorlw	255
  2139   000C9C  1683               	andwf	131,f,c	;volatile
  2140   000C9E  EF8B  F006         	goto	l210
  2141   000CA2                     l2682:
  2142   000CA2  BE3F               	btfsc	(digitalWrite@pin+1)^0,7,c
  2143   000CA4  EF5F  F006         	goto	u2410
  2144   000CA8  503F               	movf	(digitalWrite@pin+1)^0,w,c
  2145   000CAA  E107               	bnz	u2411
  2146   000CAC  0E28               	movlw	40
  2147   000CAE  5C3E               	subwf	digitalWrite@pin^0,w,c
  2148   000CB0  B0D8               	btfsc	status,0,c
  2149   000CB2  EF5D  F006         	goto	u2411
  2150   000CB6  EF5F  F006         	goto	u2410
  2151   000CBA                     u2411:
  2152   000CBA  EF8B  F006         	goto	l210
  2153   000CBE                     u2410:
  2154   000CBE                     
  2155                           ;io.c: 32: pin -=32;
  2156   000CBE  0EE0               	movlw	224
  2157   000CC0  263E               	addwf	digitalWrite@pin^0,f,c
  2158   000CC2  0EFF               	movlw	255
  2159   000CC4  223F               	addwfc	(digitalWrite@pin+1)^0,f,c
  2160                           
  2161                           ;io.c: 33: if (value){ ((PORTE) |= (1<<(pin)));}
  2162   000CC6  5040               	movf	digitalWrite@value^0,w,c
  2163   000CC8  1041               	iorwf	(digitalWrite@value+1)^0,w,c
  2164   000CCA  B4D8               	btfsc	status,2,c
  2165   000CCC  EF6A  F006         	goto	u2421
  2166   000CD0  EF6C  F006         	goto	u2420
  2167   000CD4                     u2421:
  2168   000CD4  EF7C  F006         	goto	l2688
  2169   000CD8                     u2420:
  2170   000CD8  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2171   000CDC  0E01               	movlw	1
  2172   000CDE  6E43               	movwf	(??_digitalWrite+1)^0,c
  2173   000CE0  2A42               	incf	??_digitalWrite^0,f,c
  2174   000CE2  EF75  F006         	goto	u2434
  2175   000CE6                     u2435:
  2176   000CE6  90D8               	bcf	status,0,c
  2177   000CE8  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2178   000CEA                     u2434:
  2179   000CEA  2E42               	decfsz	??_digitalWrite^0,f,c
  2180   000CEC  EF73  F006         	goto	u2435
  2181   000CF0  5043               	movf	(??_digitalWrite+1)^0,w,c
  2182   000CF2  1284               	iorwf	132,f,c	;volatile
  2183   000CF4  EF8B  F006         	goto	l210
  2184   000CF8                     l2688:
  2185                           
  2186                           ;io.c: 34: else{ ((PORTE) &= ~(1<<(pin)));}
  2187   000CF8  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2188   000CFC  0E01               	movlw	1
  2189   000CFE  6E43               	movwf	(??_digitalWrite+1)^0,c
  2190   000D00  2A42               	incf	??_digitalWrite^0,f,c
  2191   000D02  EF85  F006         	goto	u2444
  2192   000D06                     u2445:
  2193   000D06  90D8               	bcf	status,0,c
  2194   000D08  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2195   000D0A                     u2444:
  2196   000D0A  2E42               	decfsz	??_digitalWrite^0,f,c
  2197   000D0C  EF83  F006         	goto	u2445
  2198   000D10  5043               	movf	(??_digitalWrite+1)^0,w,c
  2199   000D12  0AFF               	xorlw	255
  2200   000D14  1684               	andwf	132,f,c	;volatile
  2201   000D16                     l210:
  2202   000D16  0012               	return		;funcret
  2203   000D18                     __end_of_digitalWrite:
  2204                           	callstack 0
  2205                           
  2206 ;; *************** function _kernelAddProc *****************
  2207 ;; Defined at:
  2208 ;;		line 14 in file "kernel.c"
  2209 ;; Parameters:    Size  Location     Type
  2210 ;;  newProc         2   29[COMRAM] PTR struct .
  2211 ;;		 -> main@countTime_proc(8), main@SSDUpdate_proc(8), main@init_PD(8), 
  2212 ;; Auto vars:     Size  Location     Type
  2213 ;;		None
  2214 ;; Return value:  Size  Location     Type
  2215 ;;                  1    wreg      unsigned char 
  2216 ;; Registers used:
  2217 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2218 ;; Tracked objects:
  2219 ;;		On entry : 0/0
  2220 ;;		On exit  : 0/0
  2221 ;;		Unchanged: 0/0
  2222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2223 ;;      Params:         2       0       0       0       0       0       0
  2224 ;;      Locals:         0       0       0       0       0       0       0
  2225 ;;      Temps:          2       0       0       0       0       0       0
  2226 ;;      Totals:         4       0       0       0       0       0       0
  2227 ;;Total ram usage:        4 bytes
  2228 ;; Hardware stack levels used: 1
  2229 ;; Hardware stack levels required when called: 4
  2230 ;; This function calls:
  2231 ;;		___awmod
  2232 ;; This function is called by:
  2233 ;;		_main
  2234 ;;		_kernelLoop
  2235 ;; This function uses a non-reentrant model
  2236 ;;
  2237                           
  2238                           	psect	text10
  2239   001154                     __ptext10:
  2240                           	callstack 0
  2241   001154                     _kernelAddProc:
  2242                           	callstack 25
  2243   001154                     
  2244                           ;kernel.c: 16: if (((end + 1) % 10) != start) {
  2245   001154  5025               	movf	_start^0,w,c
  2246   001156  6E4E               	movwf	??_kernelAddProc^0,c
  2247   001158  6A4F               	clrf	(??_kernelAddProc+1)^0,c
  2248   00115A  0E01               	movlw	1
  2249   00115C  2424               	addwf	_end^0,w,c
  2250   00115E  6E46               	movwf	___awmod@dividend^0,c
  2251   001160  6A47               	clrf	(___awmod@dividend+1)^0,c
  2252   001162  0E00               	movlw	0
  2253   001164  2247               	addwfc	(___awmod@dividend+1)^0,f,c
  2254   001166  0E00               	movlw	0
  2255   001168  6E49               	movwf	(___awmod@divisor+1)^0,c
  2256   00116A  0E0A               	movlw	10
  2257   00116C  6E48               	movwf	___awmod@divisor^0,c
  2258   00116E  ECFA  F007         	call	___awmod	;wreg free
  2259   001172  504E               	movf	??_kernelAddProc^0,w,c
  2260   001174  1846               	xorwf	?___awmod^0,w,c
  2261   001176  E109               	bnz	u2610
  2262   001178  504F               	movf	(??_kernelAddProc+1)^0,w,c
  2263   00117A  1847               	xorwf	(?___awmod+1)^0,w,c
  2264   00117C  B4D8               	btfsc	status,2,c
  2265   00117E  EFC3  F008         	goto	u2611
  2266   001182  EFC5  F008         	goto	u2610
  2267   001186                     u2611:
  2268   001186  EFFB  F008         	goto	l78
  2269   00118A                     u2610:
  2270   00118A                     
  2271                           ;kernel.c: 17: pool[end] = newProc;
  2272   00118A  5024               	movf	_end^0,w,c
  2273   00118C  0D02               	mullw	2
  2274   00118E  0E01               	movlw	low _pool
  2275   001190  24F3               	addwf	243,w,c
  2276   001192  6ED9               	movwf	fsr2l,c
  2277   001194  0E00               	movlw	high _pool
  2278   001196  20F4               	addwfc	prodh,w,c
  2279   001198  6EDA               	movwf	fsr2h,c
  2280   00119A  C04C  FFDE         	movff	kernelAddProc@newProc,postinc2
  2281   00119E  C04D  FFDD         	movff	kernelAddProc@newProc+1,postdec2
  2282   0011A2                     
  2283                           ;kernel.c: 18: pool[end]->start += newProc->period;
  2284   0011A2  EE20 F002          	lfsr	2,2
  2285   0011A6  504C               	movf	kernelAddProc@newProc^0,w,c
  2286   0011A8  26D9               	addwf	fsr2l,f,c
  2287   0011AA  504D               	movf	(kernelAddProc@newProc+1)^0,w,c
  2288   0011AC  22DA               	addwfc	fsr2h,f,c
  2289   0011AE  CFDE F04E          	movff	postinc2,??_kernelAddProc
  2290   0011B2  CFDD F04F          	movff	postdec2,??_kernelAddProc+1
  2291   0011B6  5024               	movf	_end^0,w,c
  2292   0011B8  0D02               	mullw	2
  2293   0011BA  0E01               	movlw	low _pool
  2294   0011BC  24F3               	addwf	243,w,c
  2295   0011BE  6ED9               	movwf	fsr2l,c
  2296   0011C0  0E00               	movlw	high _pool
  2297   0011C2  20F4               	addwfc	prodh,w,c
  2298   0011C4  6EDA               	movwf	fsr2h,c
  2299   0011C6  EE10 F004          	lfsr	1,4
  2300   0011CA  50DE               	movf	postinc2,w,c
  2301   0011CC  26E1               	addwf	fsr1l,f,c
  2302   0011CE  50DD               	movf	postdec2,w,c
  2303   0011D0  22E2               	addwfc	fsr1h,f,c
  2304   0011D2  504E               	movf	??_kernelAddProc^0,w,c
  2305   0011D4  26E6               	addwf	postinc1,f,c
  2306   0011D6  504F               	movf	(??_kernelAddProc+1)^0,w,c
  2307   0011D8  22E5               	addwfc	postdec1,f,c
  2308   0011DA                     
  2309                           ;kernel.c: 19: end = (end + 1) % 10;
  2310   0011DA  0E01               	movlw	1
  2311   0011DC  2424               	addwf	_end^0,w,c
  2312   0011DE  6E46               	movwf	___awmod@dividend^0,c
  2313   0011E0  6A47               	clrf	(___awmod@dividend+1)^0,c
  2314   0011E2  0E00               	movlw	0
  2315   0011E4  2247               	addwfc	(___awmod@dividend+1)^0,f,c
  2316   0011E6  0E00               	movlw	0
  2317   0011E8  6E49               	movwf	(___awmod@divisor+1)^0,c
  2318   0011EA  0E0A               	movlw	10
  2319   0011EC  6E48               	movwf	___awmod@divisor^0,c
  2320   0011EE  ECFA  F007         	call	___awmod	;wreg free
  2321   0011F2  5046               	movf	?___awmod^0,w,c
  2322   0011F4  6E24               	movwf	_end^0,c
  2323   0011F6                     l78:
  2324   0011F6  0012               	return		;funcret
  2325   0011F8                     __end_of_kernelAddProc:
  2326                           	callstack 0
  2327                           
  2328 ;; *************** function _ssdDigit *****************
  2329 ;; Defined at:
  2330 ;;		line 38 in file "ssd.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;  val             1    wreg     unsigned char 
  2333 ;;  pos             1   15[COMRAM] unsigned char 
  2334 ;; Auto vars:     Size  Location     Type
  2335 ;;  val             1   16[COMRAM] unsigned char 
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  1    wreg      void 
  2338 ;; Registers used:
  2339 ;;		wreg, status,2, status,0
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2345 ;;      Params:         1       0       0       0       0       0       0
  2346 ;;      Locals:         1       0       0       0       0       0       0
  2347 ;;      Temps:          0       0       0       0       0       0       0
  2348 ;;      Totals:         2       0       0       0       0       0       0
  2349 ;;Total ram usage:        2 bytes
  2350 ;; Hardware stack levels used: 1
  2351 ;; Hardware stack levels required when called: 3
  2352 ;; This function calls:
  2353 ;;		Nothing
  2354 ;; This function is called by:
  2355 ;;		_countTime
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359                           	psect	text11
  2360   00135C                     __ptext11:
  2361                           	callstack 0
  2362   00135C                     _ssdDigit:
  2363                           	callstack 25
  2364                           
  2365                           ;incstack = 0
  2366                           ;ssdDigit@val stored from wreg
  2367   00135C  6E3F               	movwf	ssdDigit@val^0,c
  2368   00135E                     
  2369                           ;ssd.c: 39: if (pos == 0) {
  2370   00135E  503E               	movf	ssdDigit@pos^0,w,c
  2371   001360  A4D8               	btfss	status,2,c
  2372   001362  EFB5  F009         	goto	u2451
  2373   001366  EFB7  F009         	goto	u2450
  2374   00136A                     u2451:
  2375   00136A  EFB9  F009         	goto	l2734
  2376   00136E                     u2450:
  2377   00136E                     
  2378                           ;ssd.c: 40: v0 = val;
  2379   00136E  C03F  F020         	movff	ssdDigit@val,_v0
  2380   001372                     l2734:
  2381                           
  2382                           ;ssd.c: 41: };ssd.c: 42: if (pos == 1) {
  2383   001372  043E               	decf	ssdDigit@pos^0,w,c
  2384   001374  A4D8               	btfss	status,2,c
  2385   001376  EFBF  F009         	goto	u2461
  2386   00137A  EFC1  F009         	goto	u2460
  2387   00137E                     u2461:
  2388   00137E  EFC3  F009         	goto	l2738
  2389   001382                     u2460:
  2390   001382                     
  2391                           ;ssd.c: 43: v1 = val;
  2392   001382  C03F  F01F         	movff	ssdDigit@val,_v1
  2393   001386                     l2738:
  2394                           
  2395                           ;ssd.c: 44: };ssd.c: 45: if (pos == 2) {
  2396   001386  0E02               	movlw	2
  2397   001388  183E               	xorwf	ssdDigit@pos^0,w,c
  2398   00138A  A4D8               	btfss	status,2,c
  2399   00138C  EFCA  F009         	goto	u2471
  2400   001390  EFCC  F009         	goto	u2470
  2401   001394                     u2471:
  2402   001394  EFCE  F009         	goto	l2742
  2403   001398                     u2470:
  2404   001398                     
  2405                           ;ssd.c: 46: v2 = val;
  2406   001398  C03F  F01E         	movff	ssdDigit@val,_v2
  2407   00139C                     l2742:
  2408                           
  2409                           ;ssd.c: 47: };ssd.c: 48: if (pos == 3) {
  2410   00139C  0E03               	movlw	3
  2411   00139E  183E               	xorwf	ssdDigit@pos^0,w,c
  2412   0013A0  A4D8               	btfss	status,2,c
  2413   0013A2  EFD5  F009         	goto	u2481
  2414   0013A6  EFD7  F009         	goto	u2480
  2415   0013AA                     u2481:
  2416   0013AA  EFD9  F009         	goto	l460
  2417   0013AE                     u2480:
  2418   0013AE                     
  2419                           ;ssd.c: 49: v3 = val;
  2420   0013AE  C03F  F01D         	movff	ssdDigit@val,_v3
  2421   0013B2                     l460:
  2422   0013B2  0012               	return		;funcret
  2423   0013B4                     __end_of_ssdDigit:
  2424                           	callstack 0
  2425                           
  2426 ;; *************** function ___awmod *****************
  2427 ;; Defined at:
  2428 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;  dividend        2   23[COMRAM] int 
  2431 ;;  divisor         2   25[COMRAM] int 
  2432 ;; Auto vars:     Size  Location     Type
  2433 ;;  sign            1   28[COMRAM] unsigned char 
  2434 ;;  counter         1   27[COMRAM] unsigned char 
  2435 ;; Return value:  Size  Location     Type
  2436 ;;                  2   23[COMRAM] int 
  2437 ;; Registers used:
  2438 ;;		wreg, status,2, status,0
  2439 ;; Tracked objects:
  2440 ;;		On entry : 0/0
  2441 ;;		On exit  : 0/0
  2442 ;;		Unchanged: 0/0
  2443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2444 ;;      Params:         4       0       0       0       0       0       0
  2445 ;;      Locals:         2       0       0       0       0       0       0
  2446 ;;      Temps:          0       0       0       0       0       0       0
  2447 ;;      Totals:         6       0       0       0       0       0       0
  2448 ;;Total ram usage:        6 bytes
  2449 ;; Hardware stack levels used: 1
  2450 ;; Hardware stack levels required when called: 3
  2451 ;; This function calls:
  2452 ;;		Nothing
  2453 ;; This function is called by:
  2454 ;;		_countTime
  2455 ;;		_kernelAddProc
  2456 ;;		_kernelLoop
  2457 ;;		_dsdec2bcd
  2458 ;; This function uses a non-reentrant model
  2459 ;;
  2460                           
  2461                           	psect	text12
  2462   000FF4                     __ptext12:
  2463                           	callstack 0
  2464   000FF4                     ___awmod:
  2465                           	callstack 25
  2466   000FF4  0E00               	movlw	0
  2467   000FF6  6E4B               	movwf	___awmod@sign^0,c
  2468   000FF8  BE47               	btfsc	(___awmod@dividend+1)^0,7,c
  2469   000FFA  EF03  F008         	goto	u2550
  2470   000FFE  EF01  F008         	goto	u2551
  2471   001002                     u2551:
  2472   001002  EF09  F008         	goto	l2798
  2473   001006                     u2550:
  2474   001006  6C46               	negf	___awmod@dividend^0,c
  2475   001008  1E47               	comf	(___awmod@dividend+1)^0,f,c
  2476   00100A  B0D8               	btfsc	status,0,c
  2477   00100C  2A47               	incf	(___awmod@dividend+1)^0,f,c
  2478   00100E  0E01               	movlw	1
  2479   001010  6E4B               	movwf	___awmod@sign^0,c
  2480   001012                     l2798:
  2481   001012  BE49               	btfsc	(___awmod@divisor+1)^0,7,c
  2482   001014  EF10  F008         	goto	u2560
  2483   001018  EF0E  F008         	goto	u2561
  2484   00101C                     u2561:
  2485   00101C  EF14  F008         	goto	l2802
  2486   001020                     u2560:
  2487   001020  6C48               	negf	___awmod@divisor^0,c
  2488   001022  1E49               	comf	(___awmod@divisor+1)^0,f,c
  2489   001024  B0D8               	btfsc	status,0,c
  2490   001026  2A49               	incf	(___awmod@divisor+1)^0,f,c
  2491   001028                     l2802:
  2492   001028  5048               	movf	___awmod@divisor^0,w,c
  2493   00102A  1049               	iorwf	(___awmod@divisor+1)^0,w,c
  2494   00102C  B4D8               	btfsc	status,2,c
  2495   00102E  EF1B  F008         	goto	u2571
  2496   001032  EF1D  F008         	goto	u2570
  2497   001036                     u2571:
  2498   001036  EF41  F008         	goto	l2818
  2499   00103A                     u2570:
  2500   00103A  0E01               	movlw	1
  2501   00103C  6E4A               	movwf	___awmod@counter^0,c
  2502   00103E  EF25  F008         	goto	l2808
  2503   001042                     l2806:
  2504   001042  90D8               	bcf	status,0,c
  2505   001044  3648               	rlcf	___awmod@divisor^0,f,c
  2506   001046  3649               	rlcf	(___awmod@divisor+1)^0,f,c
  2507   001048  2A4A               	incf	___awmod@counter^0,f,c
  2508   00104A                     l2808:
  2509   00104A  AE49               	btfss	(___awmod@divisor+1)^0,7,c
  2510   00104C  EF2A  F008         	goto	u2581
  2511   001050  EF2C  F008         	goto	u2580
  2512   001054                     u2581:
  2513   001054  EF21  F008         	goto	l2806
  2514   001058                     u2580:
  2515   001058                     l2810:
  2516   001058  5048               	movf	___awmod@divisor^0,w,c
  2517   00105A  5C46               	subwf	___awmod@dividend^0,w,c
  2518   00105C  5049               	movf	(___awmod@divisor+1)^0,w,c
  2519   00105E  5847               	subwfb	(___awmod@dividend+1)^0,w,c
  2520   001060  A0D8               	btfss	status,0,c
  2521   001062  EF35  F008         	goto	u2591
  2522   001066  EF37  F008         	goto	u2590
  2523   00106A                     u2591:
  2524   00106A  EF3B  F008         	goto	l2814
  2525   00106E                     u2590:
  2526   00106E  5048               	movf	___awmod@divisor^0,w,c
  2527   001070  5E46               	subwf	___awmod@dividend^0,f,c
  2528   001072  5049               	movf	(___awmod@divisor+1)^0,w,c
  2529   001074  5A47               	subwfb	(___awmod@dividend+1)^0,f,c
  2530   001076                     l2814:
  2531   001076  90D8               	bcf	status,0,c
  2532   001078  3249               	rrcf	(___awmod@divisor+1)^0,f,c
  2533   00107A  3248               	rrcf	___awmod@divisor^0,f,c
  2534   00107C  2E4A               	decfsz	___awmod@counter^0,f,c
  2535   00107E  EF2C  F008         	goto	l2810
  2536   001082                     l2818:
  2537   001082  504B               	movf	___awmod@sign^0,w,c
  2538   001084  B4D8               	btfsc	status,2,c
  2539   001086  EF47  F008         	goto	u2601
  2540   00108A  EF49  F008         	goto	u2600
  2541   00108E                     u2601:
  2542   00108E  EF4D  F008         	goto	l2822
  2543   001092                     u2600:
  2544   001092  6C46               	negf	___awmod@dividend^0,c
  2545   001094  1E47               	comf	(___awmod@dividend+1)^0,f,c
  2546   001096  B0D8               	btfsc	status,0,c
  2547   001098  2A47               	incf	(___awmod@dividend+1)^0,f,c
  2548   00109A                     l2822:
  2549   00109A  C046  F046         	movff	___awmod@dividend,?___awmod
  2550   00109E  C047  F047         	movff	___awmod@dividend+1,?___awmod+1
  2551   0010A2  0012               	return		;funcret
  2552   0010A4                     __end_of___awmod:
  2553                           	callstack 0
  2554                           
  2555 ;; *************** function ___awdiv *****************
  2556 ;; Defined at:
  2557 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  2558 ;; Parameters:    Size  Location     Type
  2559 ;;  dividend        2   15[COMRAM] int 
  2560 ;;  divisor         2   17[COMRAM] int 
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;  quotient        2   21[COMRAM] int 
  2563 ;;  sign            1   20[COMRAM] unsigned char 
  2564 ;;  counter         1   19[COMRAM] unsigned char 
  2565 ;; Return value:  Size  Location     Type
  2566 ;;                  2   15[COMRAM] int 
  2567 ;; Registers used:
  2568 ;;		wreg, status,2, status,0
  2569 ;; Tracked objects:
  2570 ;;		On entry : 0/0
  2571 ;;		On exit  : 0/0
  2572 ;;		Unchanged: 0/0
  2573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2574 ;;      Params:         4       0       0       0       0       0       0
  2575 ;;      Locals:         4       0       0       0       0       0       0
  2576 ;;      Temps:          0       0       0       0       0       0       0
  2577 ;;      Totals:         8       0       0       0       0       0       0
  2578 ;;Total ram usage:        8 bytes
  2579 ;; Hardware stack levels used: 1
  2580 ;; Hardware stack levels required when called: 3
  2581 ;; This function calls:
  2582 ;;		Nothing
  2583 ;; This function is called by:
  2584 ;;		_countTime
  2585 ;;		_dsdec2bcd
  2586 ;;		_dsbcd2dec
  2587 ;; This function uses a non-reentrant model
  2588 ;;
  2589                           
  2590                           	psect	text13
  2591   000F30                     __ptext13:
  2592                           	callstack 0
  2593   000F30                     ___awdiv:
  2594                           	callstack 25
  2595   000F30  0E00               	movlw	0
  2596   000F32  6E43               	movwf	___awdiv@sign^0,c
  2597   000F34  BE41               	btfsc	(___awdiv@divisor+1)^0,7,c
  2598   000F36  EFA1  F007         	goto	u2490
  2599   000F3A  EF9F  F007         	goto	u2491
  2600   000F3E                     u2491:
  2601   000F3E  EFA7  F007         	goto	l2754
  2602   000F42                     u2490:
  2603   000F42  6C40               	negf	___awdiv@divisor^0,c
  2604   000F44  1E41               	comf	(___awdiv@divisor+1)^0,f,c
  2605   000F46  B0D8               	btfsc	status,0,c
  2606   000F48  2A41               	incf	(___awdiv@divisor+1)^0,f,c
  2607   000F4A  0E01               	movlw	1
  2608   000F4C  6E43               	movwf	___awdiv@sign^0,c
  2609   000F4E                     l2754:
  2610   000F4E  BE3F               	btfsc	(___awdiv@dividend+1)^0,7,c
  2611   000F50  EFAE  F007         	goto	u2500
  2612   000F54  EFAC  F007         	goto	u2501
  2613   000F58                     u2501:
  2614   000F58  EFB4  F007         	goto	l2760
  2615   000F5C                     u2500:
  2616   000F5C  6C3E               	negf	___awdiv@dividend^0,c
  2617   000F5E  1E3F               	comf	(___awdiv@dividend+1)^0,f,c
  2618   000F60  B0D8               	btfsc	status,0,c
  2619   000F62  2A3F               	incf	(___awdiv@dividend+1)^0,f,c
  2620   000F64  0E01               	movlw	1
  2621   000F66  1A43               	xorwf	___awdiv@sign^0,f,c
  2622   000F68                     l2760:
  2623   000F68  0E00               	movlw	0
  2624   000F6A  6E45               	movwf	(___awdiv@quotient+1)^0,c
  2625   000F6C  0E00               	movlw	0
  2626   000F6E  6E44               	movwf	___awdiv@quotient^0,c
  2627   000F70  5040               	movf	___awdiv@divisor^0,w,c
  2628   000F72  1041               	iorwf	(___awdiv@divisor+1)^0,w,c
  2629   000F74  B4D8               	btfsc	status,2,c
  2630   000F76  EFBF  F007         	goto	u2511
  2631   000F7A  EFC1  F007         	goto	u2510
  2632   000F7E                     u2511:
  2633   000F7E  EFE9  F007         	goto	l2782
  2634   000F82                     u2510:
  2635   000F82  0E01               	movlw	1
  2636   000F84  6E42               	movwf	___awdiv@counter^0,c
  2637   000F86  EFC9  F007         	goto	l2768
  2638   000F8A                     l2766:
  2639   000F8A  90D8               	bcf	status,0,c
  2640   000F8C  3640               	rlcf	___awdiv@divisor^0,f,c
  2641   000F8E  3641               	rlcf	(___awdiv@divisor+1)^0,f,c
  2642   000F90  2A42               	incf	___awdiv@counter^0,f,c
  2643   000F92                     l2768:
  2644   000F92  AE41               	btfss	(___awdiv@divisor+1)^0,7,c
  2645   000F94  EFCE  F007         	goto	u2521
  2646   000F98  EFD0  F007         	goto	u2520
  2647   000F9C                     u2521:
  2648   000F9C  EFC5  F007         	goto	l2766
  2649   000FA0                     u2520:
  2650   000FA0                     l2770:
  2651   000FA0  90D8               	bcf	status,0,c
  2652   000FA2  3644               	rlcf	___awdiv@quotient^0,f,c
  2653   000FA4  3645               	rlcf	(___awdiv@quotient+1)^0,f,c
  2654   000FA6  5040               	movf	___awdiv@divisor^0,w,c
  2655   000FA8  5C3E               	subwf	___awdiv@dividend^0,w,c
  2656   000FAA  5041               	movf	(___awdiv@divisor+1)^0,w,c
  2657   000FAC  583F               	subwfb	(___awdiv@dividend+1)^0,w,c
  2658   000FAE  A0D8               	btfss	status,0,c
  2659   000FB0  EFDC  F007         	goto	u2531
  2660   000FB4  EFDE  F007         	goto	u2530
  2661   000FB8                     u2531:
  2662   000FB8  EFE3  F007         	goto	l2778
  2663   000FBC                     u2530:
  2664   000FBC  5040               	movf	___awdiv@divisor^0,w,c
  2665   000FBE  5E3E               	subwf	___awdiv@dividend^0,f,c
  2666   000FC0  5041               	movf	(___awdiv@divisor+1)^0,w,c
  2667   000FC2  5A3F               	subwfb	(___awdiv@dividend+1)^0,f,c
  2668   000FC4  8044               	bsf	___awdiv@quotient^0,0,c
  2669   000FC6                     l2778:
  2670   000FC6  90D8               	bcf	status,0,c
  2671   000FC8  3241               	rrcf	(___awdiv@divisor+1)^0,f,c
  2672   000FCA  3240               	rrcf	___awdiv@divisor^0,f,c
  2673   000FCC  2E42               	decfsz	___awdiv@counter^0,f,c
  2674   000FCE  EFD0  F007         	goto	l2770
  2675   000FD2                     l2782:
  2676   000FD2  5043               	movf	___awdiv@sign^0,w,c
  2677   000FD4  B4D8               	btfsc	status,2,c
  2678   000FD6  EFEF  F007         	goto	u2541
  2679   000FDA  EFF1  F007         	goto	u2540
  2680   000FDE                     u2541:
  2681   000FDE  EFF5  F007         	goto	l2786
  2682   000FE2                     u2540:
  2683   000FE2  6C44               	negf	___awdiv@quotient^0,c
  2684   000FE4  1E45               	comf	(___awdiv@quotient+1)^0,f,c
  2685   000FE6  B0D8               	btfsc	status,0,c
  2686   000FE8  2A45               	incf	(___awdiv@quotient+1)^0,f,c
  2687   000FEA                     l2786:
  2688   000FEA  C044  F03E         	movff	___awdiv@quotient,?___awdiv
  2689   000FEE  C045  F03F         	movff	___awdiv@quotient+1,?___awdiv+1
  2690   000FF2  0012               	return		;funcret
  2691   000FF4                     __end_of___awdiv:
  2692                           	callstack 0
  2693                           
  2694 ;; *************** function _kernelInit *****************
  2695 ;; Defined at:
  2696 ;;		line 8 in file "kernel.c"
  2697 ;; Parameters:    Size  Location     Type
  2698 ;;		None
  2699 ;; Auto vars:     Size  Location     Type
  2700 ;;		None
  2701 ;; Return value:  Size  Location     Type
  2702 ;;                  1    wreg      unsigned char 
  2703 ;; Registers used:
  2704 ;;		wreg, status,2
  2705 ;; Tracked objects:
  2706 ;;		On entry : 0/0
  2707 ;;		On exit  : 0/0
  2708 ;;		Unchanged: 0/0
  2709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2710 ;;      Params:         0       0       0       0       0       0       0
  2711 ;;      Locals:         0       0       0       0       0       0       0
  2712 ;;      Temps:          0       0       0       0       0       0       0
  2713 ;;      Totals:         0       0       0       0       0       0       0
  2714 ;;Total ram usage:        0 bytes
  2715 ;; Hardware stack levels used: 1
  2716 ;; Hardware stack levels required when called: 3
  2717 ;; This function calls:
  2718 ;;		Nothing
  2719 ;; This function is called by:
  2720 ;;		_main
  2721 ;; This function uses a non-reentrant model
  2722 ;;
  2723                           
  2724                           	psect	text14
  2725   00146C                     __ptext14:
  2726                           	callstack 0
  2727   00146C                     _kernelInit:
  2728                           	callstack 27
  2729   00146C                     
  2730                           ;kernel.c: 9: start = 0;
  2731   00146C  0E00               	movlw	0
  2732   00146E  6E25               	movwf	_start^0,c
  2733                           
  2734                           ;kernel.c: 10: end = 0;
  2735   001470  0E00               	movlw	0
  2736   001472  6E24               	movwf	_end^0,c
  2737   001474  0012               	return		;funcret
  2738   001476                     __end_of_kernelInit:
  2739                           	callstack 0
  2740                           
  2741 ;; *************** function _ISR *****************
  2742 ;; Defined at:
  2743 ;;		line 10 in file "main.c"
  2744 ;; Parameters:    Size  Location     Type
  2745 ;;		None
  2746 ;; Auto vars:     Size  Location     Type
  2747 ;;		None
  2748 ;; Return value:  Size  Location     Type
  2749 ;;                  1    wreg      void 
  2750 ;; Registers used:
  2751 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2752 ;; Tracked objects:
  2753 ;;		On entry : 0/0
  2754 ;;		On exit  : 0/0
  2755 ;;		Unchanged: 0/0
  2756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2757 ;;      Params:         0       0       0       0       0       0       0
  2758 ;;      Locals:         0       0       0       0       0       0       0
  2759 ;;      Temps:          6       0       0       0       0       0       0
  2760 ;;      Totals:         6       0       0       0       0       0       0
  2761 ;;Total ram usage:        6 bytes
  2762 ;; Hardware stack levels used: 1
  2763 ;; Hardware stack levels required when called: 2
  2764 ;; This function calls:
  2765 ;;		_KernelClock
  2766 ;; This function is called by:
  2767 ;;		Interrupt level 2
  2768 ;; This function uses a non-reentrant model
  2769 ;;
  2770                           
  2771                           	psect	intcode
  2772   000008                     __pintcode:
  2773                           	callstack 0
  2774   000008                     _ISR:
  2775                           	callstack 24
  2776                           
  2777                           ;incstack = 0
  2778   000008  8261               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2779   00000A  ED05  F00A         	call	int_func,f	;refresh shadow registers
  2780                           
  2781                           	psect	intcode_body
  2782   00140A                     __pintcode_body:
  2783                           	callstack 24
  2784   00140A                     int_func:
  2785                           	callstack 24
  2786   00140A  0006               	pop		; remove dummy address from shadow register refresh
  2787   00140C  CFE1 F038          	movff	fsr1l,??_ISR
  2788   001410  CFE2 F039          	movff	fsr1h,??_ISR+1
  2789   001414  CFD9 F03A          	movff	fsr2l,??_ISR+2
  2790   001418  CFDA F03B          	movff	fsr2h,??_ISR+3
  2791   00141C  CFF3 F03C          	movff	prodl,??_ISR+4
  2792   001420  CFF4 F03D          	movff	prodh,??_ISR+5
  2793   001424                     
  2794                           ;main.c: 12: if (((INTCON) & (1<<(2)))) {
  2795   001424  A4F2               	btfss	242,2,c	;volatile
  2796   001426  EF17  F00A         	goto	i2u311_41
  2797   00142A  EF19  F00A         	goto	i2u311_40
  2798   00142E                     i2u311_41:
  2799   00142E  EF20  F00A         	goto	i2l34
  2800   001432                     i2u311_40:
  2801   001432                     
  2802                           ;main.c: 14: TMR0H = (45535 >> 8);
  2803   001432  0EB1               	movlw	177
  2804   001434  6ED7               	movwf	215,c	;volatile
  2805                           
  2806                           ;main.c: 15: TMR0L = (45535 & 0x00FF);
  2807   001436  0EDF               	movlw	223
  2808   001438  6ED6               	movwf	214,c	;volatile
  2809   00143A                     
  2810                           ;main.c: 17: KernelClock();
  2811   00143A  ECFC  F008         	call	_KernelClock	;wreg free
  2812   00143E                     
  2813                           ;main.c: 20: ((INTCON) &= ~(1<<(2)));
  2814   00143E  94F2               	bcf	242,2,c	;volatile
  2815   001440                     i2l34:
  2816   001440  C03D  FFF4         	movff	??_ISR+5,prodh
  2817   001444  C03C  FFF3         	movff	??_ISR+4,prodl
  2818   001448  C03B  FFDA         	movff	??_ISR+3,fsr2h
  2819   00144C  C03A  FFD9         	movff	??_ISR+2,fsr2l
  2820   001450  C039  FFE2         	movff	??_ISR+1,fsr1h
  2821   001454  C038  FFE1         	movff	??_ISR,fsr1l
  2822   001458  9261               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2823   00145A  0011               	retfie		f
  2824   00145C                     __end_of_ISR:
  2825                           	callstack 0
  2826                           
  2827 ;; *************** function _KernelClock *****************
  2828 ;; Defined at:
  2829 ;;		line 74 in file "kernel.c"
  2830 ;; Parameters:    Size  Location     Type
  2831 ;;		None
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;  proc            1    8[COMRAM] unsigned char 
  2834 ;; Return value:  Size  Location     Type
  2835 ;;                  1    wreg      void 
  2836 ;; Registers used:
  2837 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2838 ;; Tracked objects:
  2839 ;;		On entry : 0/0
  2840 ;;		On exit  : 0/0
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2843 ;;      Params:         0       0       0       0       0       0       0
  2844 ;;      Locals:         1       0       0       0       0       0       0
  2845 ;;      Temps:          2       0       0       0       0       0       0
  2846 ;;      Totals:         3       0       0       0       0       0       0
  2847 ;;Total ram usage:        3 bytes
  2848 ;; Hardware stack levels used: 1
  2849 ;; Hardware stack levels required when called: 1
  2850 ;; This function calls:
  2851 ;;		i2___awmod
  2852 ;; This function is called by:
  2853 ;;		_ISR
  2854 ;; This function uses a non-reentrant model
  2855 ;;
  2856                           
  2857                           	psect	text16
  2858   0011F8                     __ptext16:
  2859                           	callstack 0
  2860   0011F8                     _KernelClock:
  2861                           	callstack 24
  2862   0011F8                     
  2863                           ;kernel.c: 75: unsigned char proc;;kernel.c: 76: for (proc = start; proc != end; proc = 
      +                          (proc + 1) % 10) {
  2864   0011F8  C025  F037         	movff	_start,KernelClock@proc
  2865   0011FC  EF3C  F009         	goto	i2l2966
  2866   001200                     i2l2960:
  2867                           
  2868                           ;kernel.c: 77: if ((pool[proc]->start)>(-30000)) {
  2869   001200  5037               	movf	KernelClock@proc^0,w,c
  2870   001202  0D02               	mullw	2
  2871   001204  0E01               	movlw	low _pool
  2872   001206  24F3               	addwf	243,w,c
  2873   001208  6ED9               	movwf	fsr2l,c
  2874   00120A  0E00               	movlw	high _pool
  2875   00120C  20F4               	addwfc	prodh,w,c
  2876   00120E  6EDA               	movwf	fsr2h,c
  2877   001210  EE10 F004          	lfsr	1,4
  2878   001214  50DE               	movf	postinc2,w,c
  2879   001216  26E1               	addwf	fsr1l,f,c
  2880   001218  50DD               	movf	postdec2,w,c
  2881   00121A  22E2               	addwfc	fsr1h,f,c
  2882   00121C  0E01               	movlw	1
  2883   00121E  AEE3               	btfss	plusw1,7,c
  2884   001220  EF1D  F009         	goto	i2u292_40
  2885   001224  0ED1               	movlw	209
  2886   001226  5CE6               	subwf	postinc1,w,c
  2887   001228  0E8A               	movlw	138
  2888   00122A  58E6               	subwfb	postinc1,w,c
  2889   00122C  A0D8               	btfss	status,0,c
  2890   00122E  EF1B  F009         	goto	i2u292_41
  2891   001232  EF1D  F009         	goto	i2u292_40
  2892   001236                     i2u292_41:
  2893   001236  EF2E  F009         	goto	i2l2964
  2894   00123A                     i2u292_40:
  2895   00123A                     
  2896                           ;kernel.c: 78: pool[proc]->start--;
  2897   00123A  5037               	movf	KernelClock@proc^0,w,c
  2898   00123C  0D02               	mullw	2
  2899   00123E  0E01               	movlw	low _pool
  2900   001240  24F3               	addwf	243,w,c
  2901   001242  6ED9               	movwf	fsr2l,c
  2902   001244  0E00               	movlw	high _pool
  2903   001246  20F4               	addwfc	prodh,w,c
  2904   001248  6EDA               	movwf	fsr2h,c
  2905   00124A  EE10 F004          	lfsr	1,4
  2906   00124E  50DE               	movf	postinc2,w,c
  2907   001250  26E1               	addwf	fsr1l,f,c
  2908   001252  50DD               	movf	postdec2,w,c
  2909   001254  22E2               	addwfc	fsr1h,f,c
  2910   001256  06E6               	decf	postinc1,f,c
  2911   001258  0E00               	movlw	0
  2912   00125A  5AE5               	subwfb	postdec1,f,c
  2913   00125C                     i2l2964:
  2914   00125C  0E01               	movlw	1
  2915   00125E  2437               	addwf	KernelClock@proc^0,w,c
  2916   001260  6E2F               	movwf	i2___awmod@dividend^0,c
  2917   001262  6A30               	clrf	(i2___awmod@dividend+1)^0,c
  2918   001264  0E00               	movlw	0
  2919   001266  2230               	addwfc	(i2___awmod@dividend+1)^0,f,c
  2920   001268  0E00               	movlw	0
  2921   00126A  6E32               	movwf	(i2___awmod@divisor+1)^0,c
  2922   00126C  0E0A               	movlw	10
  2923   00126E  6E31               	movwf	i2___awmod@divisor^0,c
  2924   001270  EC52  F008         	call	i2___awmod	;wreg free
  2925   001274  502F               	movf	?i2___awmod^0,w,c
  2926   001276  6E37               	movwf	KernelClock@proc^0,c
  2927   001278                     i2l2966:
  2928   001278  5024               	movf	_end^0,w,c
  2929   00127A  1837               	xorwf	KernelClock@proc^0,w,c
  2930   00127C  A4D8               	btfss	status,2,c
  2931   00127E  EF43  F009         	goto	i2u293_41
  2932   001282  EF45  F009         	goto	i2u293_40
  2933   001286                     i2u293_41:
  2934   001286  EF00  F009         	goto	i2l2960
  2935   00128A                     i2u293_40:
  2936   00128A  0012               	return		;funcret
  2937   00128C                     __end_of_KernelClock:
  2938                           	callstack 0
  2939                           
  2940 ;; *************** function i2___awmod *****************
  2941 ;; Defined at:
  2942 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  2943 ;; Parameters:    Size  Location     Type
  2944 ;;  dividend        2    0[COMRAM] int 
  2945 ;;  divisor         2    2[COMRAM] int 
  2946 ;; Auto vars:     Size  Location     Type
  2947 ;;  sign            1    5[COMRAM] unsigned char 
  2948 ;;  counter         1    4[COMRAM] unsigned char 
  2949 ;; Return value:  Size  Location     Type
  2950 ;;                  2    0[COMRAM] int 
  2951 ;; Registers used:
  2952 ;;		wreg, status,2, status,0
  2953 ;; Tracked objects:
  2954 ;;		On entry : 0/0
  2955 ;;		On exit  : 0/0
  2956 ;;		Unchanged: 0/0
  2957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2958 ;;      Params:         4       0       0       0       0       0       0
  2959 ;;      Locals:         2       0       0       0       0       0       0
  2960 ;;      Temps:          0       0       0       0       0       0       0
  2961 ;;      Totals:         6       0       0       0       0       0       0
  2962 ;;Total ram usage:        6 bytes
  2963 ;; Hardware stack levels used: 1
  2964 ;; This function calls:
  2965 ;;		Nothing
  2966 ;; This function is called by:
  2967 ;;		_KernelClock
  2968 ;; This function uses a non-reentrant model
  2969 ;;
  2970                           
  2971                           	psect	text17
  2972   0010A4                     __ptext17:
  2973                           	callstack 0
  2974   0010A4                     i2___awmod:
  2975                           	callstack 24
  2976   0010A4  0E00               	movlw	0
  2977   0010A6  6E34               	movwf	i2___awmod@sign^0,c
  2978   0010A8  BE30               	btfsc	(i2___awmod@dividend+1)^0,7,c
  2979   0010AA  EF5B  F008         	goto	i2u286_40
  2980   0010AE  EF59  F008         	goto	i2u286_41
  2981   0010B2                     i2u286_41:
  2982   0010B2  EF61  F008         	goto	i2l2930
  2983   0010B6                     i2u286_40:
  2984   0010B6  6C2F               	negf	i2___awmod@dividend^0,c
  2985   0010B8  1E30               	comf	(i2___awmod@dividend+1)^0,f,c
  2986   0010BA  B0D8               	btfsc	status,0,c
  2987   0010BC  2A30               	incf	(i2___awmod@dividend+1)^0,f,c
  2988   0010BE  0E01               	movlw	1
  2989   0010C0  6E34               	movwf	i2___awmod@sign^0,c
  2990   0010C2                     i2l2930:
  2991   0010C2  BE32               	btfsc	(i2___awmod@divisor+1)^0,7,c
  2992   0010C4  EF68  F008         	goto	i2u287_40
  2993   0010C8  EF66  F008         	goto	i2u287_41
  2994   0010CC                     i2u287_41:
  2995   0010CC  EF6C  F008         	goto	i2l2934
  2996   0010D0                     i2u287_40:
  2997   0010D0  6C31               	negf	i2___awmod@divisor^0,c
  2998   0010D2  1E32               	comf	(i2___awmod@divisor+1)^0,f,c
  2999   0010D4  B0D8               	btfsc	status,0,c
  3000   0010D6  2A32               	incf	(i2___awmod@divisor+1)^0,f,c
  3001   0010D8                     i2l2934:
  3002   0010D8  5031               	movf	i2___awmod@divisor^0,w,c
  3003   0010DA  1032               	iorwf	(i2___awmod@divisor+1)^0,w,c
  3004   0010DC  B4D8               	btfsc	status,2,c
  3005   0010DE  EF73  F008         	goto	i2u288_41
  3006   0010E2  EF75  F008         	goto	i2u288_40
  3007   0010E6                     i2u288_41:
  3008   0010E6  EF99  F008         	goto	i2l2950
  3009   0010EA                     i2u288_40:
  3010   0010EA  0E01               	movlw	1
  3011   0010EC  6E33               	movwf	i2___awmod@counter^0,c
  3012   0010EE  EF7D  F008         	goto	i2l2940
  3013   0010F2                     i2l2938:
  3014   0010F2  90D8               	bcf	status,0,c
  3015   0010F4  3631               	rlcf	i2___awmod@divisor^0,f,c
  3016   0010F6  3632               	rlcf	(i2___awmod@divisor+1)^0,f,c
  3017   0010F8  2A33               	incf	i2___awmod@counter^0,f,c
  3018   0010FA                     i2l2940:
  3019   0010FA  AE32               	btfss	(i2___awmod@divisor+1)^0,7,c
  3020   0010FC  EF82  F008         	goto	i2u289_41
  3021   001100  EF84  F008         	goto	i2u289_40
  3022   001104                     i2u289_41:
  3023   001104  EF79  F008         	goto	i2l2938
  3024   001108                     i2u289_40:
  3025   001108                     i2l2942:
  3026   001108  5031               	movf	i2___awmod@divisor^0,w,c
  3027   00110A  5C2F               	subwf	i2___awmod@dividend^0,w,c
  3028   00110C  5032               	movf	(i2___awmod@divisor+1)^0,w,c
  3029   00110E  5830               	subwfb	(i2___awmod@dividend+1)^0,w,c
  3030   001110  A0D8               	btfss	status,0,c
  3031   001112  EF8D  F008         	goto	i2u290_41
  3032   001116  EF8F  F008         	goto	i2u290_40
  3033   00111A                     i2u290_41:
  3034   00111A  EF93  F008         	goto	i2l2946
  3035   00111E                     i2u290_40:
  3036   00111E  5031               	movf	i2___awmod@divisor^0,w,c
  3037   001120  5E2F               	subwf	i2___awmod@dividend^0,f,c
  3038   001122  5032               	movf	(i2___awmod@divisor+1)^0,w,c
  3039   001124  5A30               	subwfb	(i2___awmod@dividend+1)^0,f,c
  3040   001126                     i2l2946:
  3041   001126  90D8               	bcf	status,0,c
  3042   001128  3232               	rrcf	(i2___awmod@divisor+1)^0,f,c
  3043   00112A  3231               	rrcf	i2___awmod@divisor^0,f,c
  3044   00112C  2E33               	decfsz	i2___awmod@counter^0,f,c
  3045   00112E  EF84  F008         	goto	i2l2942
  3046   001132                     i2l2950:
  3047   001132  5034               	movf	i2___awmod@sign^0,w,c
  3048   001134  B4D8               	btfsc	status,2,c
  3049   001136  EF9F  F008         	goto	i2u291_41
  3050   00113A  EFA1  F008         	goto	i2u291_40
  3051   00113E                     i2u291_41:
  3052   00113E  EFA5  F008         	goto	i2l2954
  3053   001142                     i2u291_40:
  3054   001142  6C2F               	negf	i2___awmod@dividend^0,c
  3055   001144  1E30               	comf	(i2___awmod@dividend+1)^0,f,c
  3056   001146  B0D8               	btfsc	status,0,c
  3057   001148  2A30               	incf	(i2___awmod@dividend+1)^0,f,c
  3058   00114A                     i2l2954:
  3059   00114A  C02F  F02F         	movff	i2___awmod@dividend,?i2___awmod
  3060   00114E  C030  F030         	movff	i2___awmod@dividend+1,?i2___awmod+1
  3061   001152  0012               	return		;funcret
  3062   001154                     __end_ofi2___awmod:
  3063                           	callstack 0
  3064                           
  3065                           	psect	text18
  3066   000000                     __ptext18:
  3067                           	callstack 0
  3068   000000                     
  3069                           	psect	rparam
  3070   000000                     
  3071                           	psect	temp
  3072   000061                     btemp:
  3073                           	callstack 0
  3074   000061                     	ds	1
  3075   000000                     int$flags	set	btemp
  3076   000000                     wtemp8	set	btemp+1
  3077   000000                     ttemp5	set	btemp+1
  3078   000000                     ttemp6	set	btemp+4
  3079   000000                     ttemp7	set	btemp+8
  3080                           
  3081                           	psect	idloc
  3082                           
  3083                           ;Config register IDLOC0 @ 0x200000
  3084                           ;	unspecified, using default values
  3085   200000                     	org	2097152
  3086   200000  FF                 	db	255
  3087                           
  3088                           ;Config register IDLOC1 @ 0x200001
  3089                           ;	unspecified, using default values
  3090   200001                     	org	2097153
  3091   200001  FF                 	db	255
  3092                           
  3093                           ;Config register IDLOC2 @ 0x200002
  3094                           ;	unspecified, using default values
  3095   200002                     	org	2097154
  3096   200002  FF                 	db	255
  3097                           
  3098                           ;Config register IDLOC3 @ 0x200003
  3099                           ;	unspecified, using default values
  3100   200003                     	org	2097155
  3101   200003  FF                 	db	255
  3102                           
  3103                           ;Config register IDLOC4 @ 0x200004
  3104                           ;	unspecified, using default values
  3105   200004                     	org	2097156
  3106   200004  FF                 	db	255
  3107                           
  3108                           ;Config register IDLOC5 @ 0x200005
  3109                           ;	unspecified, using default values
  3110   200005                     	org	2097157
  3111   200005  FF                 	db	255
  3112                           
  3113                           ;Config register IDLOC6 @ 0x200006
  3114                           ;	unspecified, using default values
  3115   200006                     	org	2097158
  3116   200006  FF                 	db	255
  3117                           
  3118                           ;Config register IDLOC7 @ 0x200007
  3119                           ;	unspecified, using default values
  3120   200007                     	org	2097159
  3121   200007  FF                 	db	255
  3122                           
  3123                           	psect	config
  3124                           
  3125                           ; Padding undefined space
  3126   300000                     	org	3145728
  3127   300000  FF                 	db	255
  3128                           
  3129                           ;Config register CONFIG1H @ 0x300001
  3130                           ;	Oscillator Selection bits
  3131                           ;	OSC = HS, HS oscillator
  3132                           ;	Fail-Safe Clock Monitor Enable bit
  3133                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3134                           ;	Internal/External Oscillator Switchover bit
  3135                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3136   300001                     	org	3145729
  3137   300001  02                 	db	2
  3138                           
  3139                           ;Config register CONFIG2L @ 0x300002
  3140                           ;	Power-up Timer Enable bit
  3141                           ;	PWRT = OFF, PWRT disabled
  3142                           ;	Brown-out Reset Enable bits
  3143                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3144                           ;	Brown Out Reset Voltage bits
  3145                           ;	BORV = 2, 
  3146   300002                     	org	3145730
  3147   300002  11                 	db	17
  3148                           
  3149                           ;Config register CONFIG2H @ 0x300003
  3150                           ;	Watchdog Timer Enable bit
  3151                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3152                           ;	Watchdog Timer Postscale Select bits
  3153                           ;	WDTPS = 1, 1:1
  3154   300003                     	org	3145731
  3155   300003  00                 	db	0
  3156                           
  3157                           ; Padding undefined space
  3158   300004                     	org	3145732
  3159   300004  FF                 	db	255
  3160                           
  3161                           ;Config register CONFIG3H @ 0x300005
  3162                           ;	CCP2 MUX bit
  3163                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3164                           ;	PORTB A/D Enable bit
  3165                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  3166                           ;	Low-Power Timer1 Oscillator Enable bit
  3167                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3168                           ;	MCLR Pin Enable bit
  3169                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3170   300005                     	org	3145733
  3171   300005  83                 	db	131
  3172                           
  3173                           ;Config register CONFIG4L @ 0x300006
  3174                           ;	Stack Full/Underflow Reset Enable bit
  3175                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  3176                           ;	Single-Supply ICSP Enable bit
  3177                           ;	LVP = OFF, Single-Supply ICSP disabled
  3178                           ;	Extended Instruction Set Enable bit
  3179                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3180                           ;	Background Debugger Enable bit
  3181                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  3182   300006                     	org	3145734
  3183   300006  80                 	db	128
  3184                           
  3185                           ; Padding undefined space
  3186   300007                     	org	3145735
  3187   300007  FF                 	db	255
  3188                           
  3189                           ;Config register CONFIG5L @ 0x300008
  3190                           ;	Code Protection bit
  3191                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  3192                           ;	Code Protection bit
  3193                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  3194                           ;	Code Protection bit
  3195                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  3196                           ;	Code Protection bit
  3197                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  3198   300008                     	org	3145736
  3199   300008  0F                 	db	15
  3200                           
  3201                           ;Config register CONFIG5H @ 0x300009
  3202                           ;	Boot Block Code Protection bit
  3203                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3204                           ;	Data EEPROM Code Protection bit
  3205                           ;	CPD = OFF, Data EEPROM not code-protected
  3206   300009                     	org	3145737
  3207   300009  C0                 	db	192
  3208                           
  3209                           ;Config register CONFIG6L @ 0x30000A
  3210                           ;	Write Protection bit
  3211                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  3212                           ;	Write Protection bit
  3213                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  3214                           ;	Write Protection bit
  3215                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  3216                           ;	Write Protection bit
  3217                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  3218   30000A                     	org	3145738
  3219   30000A  0F                 	db	15
  3220                           
  3221                           ;Config register CONFIG6H @ 0x30000B
  3222                           ;	Configuration Register Write Protection bit
  3223                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3224                           ;	Boot Block Write Protection bit
  3225                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  3226                           ;	Data EEPROM Write Protection bit
  3227                           ;	WRTD = OFF, Data EEPROM not write-protected
  3228   30000B                     	org	3145739
  3229   30000B  E0                 	db	224
  3230                           
  3231                           ;Config register CONFIG7L @ 0x30000C
  3232                           ;	Table Read Protection bit
  3233                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  3234                           ;	Table Read Protection bit
  3235                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  3236                           ;	Table Read Protection bit
  3237                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  3238                           ;	Table Read Protection bit
  3239                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3240   30000C                     	org	3145740
  3241   30000C  0F                 	db	15
  3242                           
  3243                           ;Config register CONFIG7H @ 0x30000D
  3244                           ;	Boot Block Table Read Protection bit
  3245                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3246   30000D                     	org	3145741
  3247   30000D  40                 	db	64
  3248                           tosu	equ	0xFFF
  3249                           tosh	equ	0xFFE
  3250                           tosl	equ	0xFFD
  3251                           stkptr	equ	0xFFC
  3252                           pclatu	equ	0xFFB
  3253                           pclath	equ	0xFFA
  3254                           pcl	equ	0xFF9
  3255                           tblptru	equ	0xFF8
  3256                           tblptrh	equ	0xFF7
  3257                           tblptrl	equ	0xFF6
  3258                           tablat	equ	0xFF5
  3259                           prodh	equ	0xFF4
  3260                           prodl	equ	0xFF3
  3261                           indf0	equ	0xFEF
  3262                           postinc0	equ	0xFEE
  3263                           postdec0	equ	0xFED
  3264                           preinc0	equ	0xFEC
  3265                           plusw0	equ	0xFEB
  3266                           fsr0h	equ	0xFEA
  3267                           fsr0l	equ	0xFE9
  3268                           wreg	equ	0xFE8
  3269                           indf1	equ	0xFE7
  3270                           postinc1	equ	0xFE6
  3271                           postdec1	equ	0xFE5
  3272                           preinc1	equ	0xFE4
  3273                           plusw1	equ	0xFE3
  3274                           fsr1h	equ	0xFE2
  3275                           fsr1l	equ	0xFE1
  3276                           bsr	equ	0xFE0
  3277                           indf2	equ	0xFDF
  3278                           postinc2	equ	0xFDE
  3279                           postdec2	equ	0xFDD
  3280                           preinc2	equ	0xFDC
  3281                           plusw2	equ	0xFDB
  3282                           fsr2h	equ	0xFDA
  3283                           fsr2l	equ	0xFD9
  3284                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    16
    Data        24
    BSS         46
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     42      96
    BANK0           128     24      40
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    my_funcs$0	PTR void  size(2) Largest target is 0

    S148$2$0	PTR void  size(2) Largest target is 0

    kernelLoop$1274	PTR struct . size(2) Largest target is 8
		 -> main@countTime_proc(BANK0[8]), main@SSDUpdate_proc(BANK0[8]), main@init_PD(BANK0[8]), 

    ?_getLedDriver.initFunc	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> initGenerico(), 

    ?_getLedDriver.funcoes	PTR PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 4
		 -> my_funcs(COMRAM[4]), 

    sp__getLedDriver.initFunc	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> initGenerico(), 

    sp__getLedDriver.funcoes	PTR PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 4
		 -> my_funcs(COMRAM[4]), 

    sp__getLedDriver	PTR struct . size(2) Largest target is 6
		 -> myself(COMRAM[5]), 

    my_funcs	PTR FTN(PTR void ,)unsigned char [2] size(2) Largest target is 1
		 -> inverte(), changePORTD(), 

    S148$initFunc	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> initGenerico(), 

    myself.initFunc	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> initGenerico(), 

    S148$funcoes	PTR PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 4
		 -> my_funcs(COMRAM[4]), 

    myself.funcoes	PTR PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 4
		 -> my_funcs(COMRAM[4]), 

    kernelLoop@tempProc	PTR struct . size(2) Largest target is 8
		 -> main@countTime_proc(BANK0[8]), main@SSDUpdate_proc(BANK0[8]), main@init_PD(BANK0[8]), 

    kernelAddProc@newProc.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), initPORTAD(), 

    pool.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), initPORTAD(), 

    kernelAddProc@newProc	PTR struct . size(2) Largest target is 8
		 -> main@countTime_proc(BANK0[8]), main@SSDUpdate_proc(BANK0[8]), main@init_PD(BANK0[8]), 

    pool	PTR struct .[10] size(2) Largest target is 8
		 -> main@countTime_proc(BANK0[8]), main@SSDUpdate_proc(BANK0[8]), main@init_PD(BANK0[8]), 

    F2411.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), initPORTAD(), 

    countTime_proc.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), initPORTAD(), 

    F2408.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), initPORTAD(), 

    SSDUpdate_proc.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), initPORTAD(), 

    F2405.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), initPORTAD(), 

    S44$function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), initPORTAD(), 

    init_PD.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), initPORTAD(), 


Critical Paths under _main in COMRAM

    _main->_kernelLoop
    _ssdInit->_pinMode
    _kernelLoop->_kernelAddProc
    _ssdUpdate->_digitalWrite
    _kernelAddProc->___awmod
    _countTime->___awmod
    ___awmod->___awdiv

Critical Paths under _ISR in COMRAM

    _ISR->_KernelClock
    _KernelClock->i2___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0   18886
                                              0 BANK0     24    24      0
                      _kernelAddProc
                         _kernelInit
                         _kernelLoop
                            _ssdInit
                          _timerInit
 ---------------------------------------------------------------------------------
 (1) _timerInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    3140
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              6     2      4    3140
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _kernelLoop                                           9     9      0   12933
                                             33 COMRAM     9     9      0
                            ___awmod
                          _countTime *
                         _initPORTAD *
                      _kernelAddProc
                          _updateSSD *
 ---------------------------------------------------------------------------------
 (2) _updateSSD                                            0     0      0    3512
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (3) _ssdUpdate                                            0     0      0    3512
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (4) _digitalWrite                                         6     2      4    3512
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _kernelAddProc                                        4     2      2    2585
                                             29 COMRAM     4     2      2
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _initPORTAD                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _countTime                                            2     2      0    4252
                                             29 COMRAM     2     2      0
                            ___awdiv
                            ___awmod
                           _ssdDigit
 ---------------------------------------------------------------------------------
 (3) _ssdDigit                                             2     1      1     608
                                             15 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    2163
                                             23 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1345
                                             15 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _kernelInit                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  6     6      0     633
                                              9 COMRAM     6     6      0
                        _KernelClock
 ---------------------------------------------------------------------------------
 (6) _KernelClock                                          3     3      0     633
                                              6 COMRAM     3     3      0
                          i2___awmod
 ---------------------------------------------------------------------------------
 (7) i2___awmod                                            6     2      4     503
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _kernelAddProc
     ___awmod
       ___awdiv (ARG)
   _kernelInit
   _kernelLoop
     ___awmod
     _countTime *
       ___awdiv
       ___awmod
       _ssdDigit
     _initPORTAD *
     _kernelAddProc *
     _updateSSD *
       _ssdUpdate
         _digitalWrite
   _ssdInit
     _pinMode
   _timerInit

 _ISR (ROOT)
   _KernelClock
     i2___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     18      28       5       31.2%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     2A      60       1       76.2%
BITBIGSFRlh         1A      0       0      17        0.0%
BITBIGSFRllhll       D      0       0      27        0.0%
BITBIGSFRh           D      0       0      16        0.0%
BITBIGSFRllhhll      C      0       0      25        0.0%
BITBIGSFRllhhll      7      0       0      24        0.0%
BITBIGSFRllhhll      7      0       0      26        0.0%
BITBIGSFRllhhlh      5      0       0      20        0.0%
BITBIGSFRllhhll      4      0       0      23        0.0%
BITBIGSFRllhhlh      4      0       0      19        0.0%
BITBIGSFRllhhh       4      0       0      18        0.0%
BITBIGSFRllhhll      1      0       0      22        0.0%
BITBIGSFRllhhll      1      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      88      28        0.0%
DATA                 0      0      88       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Nov 07 07:57:05 2022

           fp__countTime 0000            fp__initPORTAD 0000                       l40 148C  
                     l54 0F2E                       l49 1494                       l81 0612  
                     l65 12FE                       l74 1474                       l78 11F6  
           ___awdiv@sign 0043                       _v0 0020                       _v1 001F  
                     _v2 001E                       _v3 001D                      l210 0D16  
                    l244 0AC8                      l460 13B2                      l470 0E52  
                    l473 1408                      l730 0FF2                      l743 10A2  
                    l496 1484                      _PR2 000FCB                      _ISR 0008  
                    _end 0024             ___awmod@sign 004B                      prod 000FF3  
                    tosl 000FFD                      wreg 000FE8                     ?_ISR 002F  
                   l3000 077A                     l3010 085A                     l3002 07A2  
                   l3004 07BA                     l3100 12E6                     l3006 07F4  
                   l3110 12FA                     l3102 12F2                     l3008 083E  
                   l3104 12F4                     l3106 12F6                     l3108 12F8  
                   l3090 12C2                     l2700 0D74                     l3092 12C6  
                   l2710 0DC8                     l2702 0D86                     l3094 12CA  
                   l2800 1020                     l2720 0E10                     l2712 0DD0  
                   l2704 0D9A                     l3096 12CE                     l3088 128C  
                   l2810 1058                     l2802 1028                     l2730 135E  
                   l2650 0ACA                     l2722 0E24                     l2714 0DE2  
                   l2706 0DA2                     l3098 12DA                     l2820 1092  
                   l2812 106E                     l2804 103A                     l2740 1398  
                   l2732 136E                     l2660 0B56                     l2652 0AE6  
                   l2716 0DF6                     l2708 0DB4                     l2900 0A2E  
                   l2750 0F42                     l2822 109A                     l2814 1076  
                   l2806 1042                     l2742 139C                     l2734 1372  
                   l2670 0BE8                     l2662 0B70                     l2654 0AF8  
                   l2718 0DFE                     l2902 0A54                     l2760 0F68  
                   l2752 0F4A                     l2816 107C                     l2808 104A  
                   l2744 13AE                     l2736 1382                     l2680 0C80  
                   l2672 0C08                     l2664 0B90                     l2656 0B18  
                   l2728 0E2C                     l2832 148E                     l2840 0E58  
                   l2904 0A70                     l2770 0FA0                     l2762 0F70  
                   l2754 0F4E                     l2746 0F30                     l2818 1082  
                   l2738 1386                     l2682 0CA2                     l2674 0C2A  
                   l2666 0BB2                     l2658 0B3A                     l2690 0D18  
                   l2834 1492                     l2826 1486                     l2850 0EE8  
                   l2842 0E74                     l2906 0A82                     l2780 0FCC  
                   l2772 0FA6                     l2764 0F82                     l2756 0F5C  
                   l2748 0F34                     l2860 1154                     l2684 0CBE  
                   l2676 0C46                     l2668 0BCE                     l2692 0D1C  
                   l2828 148A                     l2852 0EF2                     l2844 0E7E  
                   l2908 0AA6                     l2774 0FBC                     l2766 0F8A  
                   l2782 0FD2                     l2758 0F64                     l2790 0FF4  
                   l2862 118A                     l2686 0CD8                     l2678 0C60  
                   l2694 0D30                     l2854 0F22                     l2846 0EAE  
                   l2838 0E54                     l2870 087C                     l2784 0FE2  
                   l2776 0FC4                     l2768 0F92                     l2792 0FF8  
                   l2864 11A2                     l2688 0CF8                     l2696 0D44  
                   l2856 0F2C                     l2848 0EB8                     l2880 0908  
                   l2872 0898                     l2786 0FEA                     l2778 0FC6  
                   l2794 1006                     l2866 11DA                     l2698 0D58  
                   l2890 0992                     l2882 091A                     l2874 08AA  
                   l2970 1482                     l2796 100E                     l2980 0612  
                   l2892 09B6                     l2884 093E                     l2876 08CA  
                   l2972 13B4                     l2798 1012                     l2990 06DA  
                   l2982 0624                     l2894 09DC                     l2886 0964  
                   l2878 08EC                     l2974 1404                     l2976 146C  
                   l2992 0730                     l2984 0630                     l2896 09F8  
                   l2888 0980                     l2968 147E                     l2994 0734  
                   l2986 0680                     l2898 0A0A                     l2988 06D6  
                   l2996 0750                     l2998 0762                     u3010 083E  
                   u3011 083A                     u2300 0B70                     u2301 0B6C  
                   u3008 081A                     u3009 082E                     u3121 1296  
                   u2410 0CBE                     u2330 0BCE                     u2314 0B82  
                   u2250 0AE6                     u2411 0CBA                     u2331 0BCA  
                   u2315 0B7E                     u2251 0AE2                     u3131 12A8  
                   u2500 0F5C                     u2420 0CD8                     u2404 0C92  
                   u2340 0BE8                     u2324 0BA2                     u2260 0AF8  
                   u2501 0F58                     u2421 0CD4                     u2405 0C8E  
                   u2341 0BE4                     u2325 0B9E                     u2261 0AF4  
                   u3141 12BA                     u2510 0F82                     u2511 0F7E  
                   u2520 0FA0                     u2600 1092                     u2521 0F9C  
                   u2601 108E                     u2530 0FBC                     u2450 136E  
                   u2610 118A                     u2434 0CEA                     u2370 0C46  
                   u2354 0BFA                     u2290 0B56                     u2274 0B0A  
                   u2531 0FB8                     u2451 136A                     u2611 1186  
                   u2435 0CE6                     u2371 0C42                     u2355 0BF6  
                   u2291 0B52                     u2275 0B06                     u2540 0FE2  
                   u2460 1382                     u2444 0D0A                     u2380 0C60  
                   u2364 0C1A                     u2284 0B2A                     u2700 0980  
                   u2620 0898                     u2541 0FDE                     u2461 137E  
                   u2445 0D06                     u2381 0C5C                     u2365 0C16  
                   u2285 0B26                     u2701 097C                     u2621 0894  
                   u2550 1006                     u2470 1398                     u2710 0992  
                   u2630 08AA                     u2551 1002                     u2471 1394  
                   u2711 098E                     u2631 08A6                     u2560 1020  
                   u2480 13AE                     u2561 101C                     u2481 13AA  
                   u2490 0F42                     u2570 103A                     u2394 0C72  
                   u2491 0F3E                     u2571 1036                     u2395 0C6E  
                   u2580 1058                     u2804 0A98                     u2740 09F8  
                   u2724 09A8                     u2660 0908                     u2644 08BC  
                   u2581 1054                     u2805 0A94                     u2741 09F4  
                   u2725 09A4                     u2661 0904                     u2645 08B8  
                   u2590 106E                     u2814 0ABC                     u2750 0A0A  
                   u2734 09CC                     u2670 091A                     u2654 08DC  
                   u2591 106A                     u2815 0AB8                     u2751 0A06  
                   u2735 09C8                     u2671 0916                     u2655 08D8  
                   u2940 0624                     u2780 0A70                     u2764 0A20  
                   u2684 0930                     u2941 0620                     u2781 0A6C  
                   u2765 0A1C                     u2685 092C                     u2950 0680  
                   u2790 0A82                     u2774 0A44                     u2694 0954  
                   u2951 067C                     u2791 0A7E                     u2775 0A40  
                   u2695 0950                     u2960 06D6                     u2961 06D2  
                   u2970 0730                     u2971 072C                     u2980 0762  
                   u2981 075E                     u2990 07F4                     u2991 07F0  
                   _PIR1 000F9E                     i2l34 1440              main@init_PD 0080  
                   _RCON 000FD0                     _main 128C                     _pool 0001  
           fp__updateSSD 0000                     fsr0h 000FEA                     fsr1h 000FE2  
                   fsr2h 000FDA                     fsr0l 000FE9                     fsr1l 000FE1  
                   fsr2l 000FD9                     btemp 0061       kernelLoop@tempProc 0055  
                   prodh 000FF4                     prodl 000FF3                     start 000E  
          ??_KernelClock 0035             ___param_bank 000000                    ??_ISR 0038  
                  ?_main 002F          __end_of___awdiv 0FF4          __end_of___awmod 10A4  
                  _T0CON 000FD5          ___awdiv@divisor 0040                    _T2CON 000FCA  
                  i2l100 128A                    i2l743 1152          ___awdiv@counter 0042  
                  _RCREG 000FAE                    _RCSTA 000FAB                    _TMR0H 000FD7  
                  _TMR0L 000FD6                    _SPBRG 000FAF                    _PORTA 000F80  
                  _PORTB 000F81                    _PORTC 000F82                    _PORTD 000F83  
                  _PORTE 000F84                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
                  _TXREG 000FAD                    _TXSTA 000FAC          __end_of_pinMode 0ACA  
                  _valor 001B                    _start 0025                    pclath 000FFA  
                  tablat 000FF5          __end_of_ssdInit 140A                    plusw1 000FE3  
                  plusw2 000FDB                    ttemp5 0062                    ttemp6 0065  
                  ttemp7 0069                    status 000FD8                    wtemp8 0062  
   __end_of_digitalWrite 0D18          __initialization 1302             __end_of_main 1302  
    __end_of_KernelClock 128C                   ??_main 0059            __activetblptr 000002  
                 _ADCON0 000FC2                   _ADCON2 000FC0                   _ADRESH 000FC4  
                 _ADRESL 000FC3                   _CCPR1L 000FBE         ___awdiv@dividend 003E  
                 i2l3080 1424                   i2l3082 1432                   i2l3084 143A  
                 i2l3086 143E                   i2l2930 10C2                   i2l2922 10A4  
                 i2l2940 10FA                   i2l2932 10D0                   i2l2924 10A8  
                 i2l2942 1108                   i2l2950 1132                   i2l2934 10D8  
                 i2l2926 10B6                   i2l2952 1142                   i2l2944 111E  
                 i2l2936 10EA                   i2l2928 10BE                   i2l2960 1200  
                 i2l2954 114A                   i2l2946 1126                   i2l2938 10F2  
                 i2l2962 123A                   i2l2948 112C                   i2l2964 125C  
                 i2l2966 1278                   i2l2958 11F8                   _INTCON 000FF2  
                 _SPBRGH 000FB0              kernelLoop@p 0058                ??___awdiv 0042  
              ??___awmod 004A                   clear_0 1348         ___awdiv@quotient 0044  
        ___awmod@divisor 0048                   isa$std 000001          ___awmod@counter 004A  
                 _myself 0026            _kernelAddProc 1154         __end_of_ssdDigit 13B4  
           __pdataCOMRAM 0059                ??_pinMode 0042        __end_ofi2___awmod 1154  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8                ??_ssdInit 0044           i2___awmod@sign 0034  
             __accesstop 0080  __end_of__initialization 134E            ___rparam_used 000001  
           countTime@dig 004C              _KernelClock 11F8              pinMode@type 0040  
         __pcstackCOMRAM 002F             __pidataBANK0 145C           ?_kernelAddProc 004C  
                _CCP1CON 000FBD                  _BAUDCON 000FB8             _digitalWrite 0ACA  
             _initPORTAD 1486                  __Hparam 0000                  __Lparam 0000  
              ?_ssdDigit 003E          kpDebounce@tempo 0023               _kernelInit 146C  
             _kernelLoop 0612                  ___awdiv 0F30                  ___awmod 0FF4  
        ??_kernelAddProc 004E             __psmallconst 0600              ssdDigit@val 003F  
            ssdDigit@pos 003E                  __pcinit 1302        __end_of_countTime 0F30  
                __ramtop 0600                  __ptext0 128C                  __ptext1 147E  
                __ptext2 13B4                  __ptext3 087C                  __ptext4 0612  
                __ptext5 0E54                  __ptext6 1486                  __ptext7 148E  
                __ptext8 0D18                  __ptext9 0ACA                  _display 0021  
                _pinMode 087C         ___awmod@dividend 0046                  _inverte 000000  
                _ssdInit 13B4                  _started 0022      kpDebounce@valorNovo 0017  
         __pintcode_body 140A     end_of_initialization 134E            __Lmediumconst 0000  
                int_func 140A        __end_of_timerInit 1486        __end_of_ssdUpdate 0E54  
             ??_ssdDigit 003F        __end_of_updateSSD 1496                  postdec1 000FE5  
                postdec2 000FDD                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE           _valor@ssd$F527 0601           kernelLoop@next 0057  
              i2___awmod 10A4              ?_initPORTAD 002F             ?_KernelClock 002F  
            ?_kernelInit 002F              ?_kernelLoop 002F            __pidataCOMRAM 1476  
 __end_of_valor@ssd$F527 0611      start_initialization 1302              __end_of_ISR 145C  
             ?i2___awmod 002F          KernelClock@proc 0037             _initGenerico 000000  
     main@SSDUpdate_proc 0088              __pdataBANK0 0098              _changePORTD 000000  
            __pbssCOMRAM 0001            __pcstackBANK0 0080     kernelAddProc@newProc 004C  
             pinMode@pin 003E                __pintcode 0008                 ?___awdiv 003E  
               ?___awmod 0046              __smallconst 0600                 ?_pinMode 003E  
              _countTime 0E54                 ?_ssdInit 002F              ??i2___awmod 0033  
     main@countTime_proc 0090                 i2u311_40 1432                 i2u311_41 142E  
               i2u290_40 111E                 i2u290_41 111A                 i2u291_40 1142  
               i2u291_41 113E                 i2u292_40 123A                 i2u292_41 1236  
               i2u293_40 128A                 i2u293_41 1286                 i2u286_40 10B6  
               i2u286_41 10B2                 i2u287_40 10D0                 i2u287_41 10CC  
               i2u288_40 10EA                 i2u288_41 10E6                 i2u289_40 1108  
               i2u289_41 1104                main@F2411 0098                main@F2405 0059  
              main@F2408 00A0                _timerInit 147E                _ssdUpdate 0D18  
              _updateSSD 148E    __end_of_kernelAddProc 11F8    kpDebounce@valorAntigo 0015  
             ?_countTime 002F                copy_data0 1316                copy_data1 1336  
     i2___awmod@dividend 002F             ??_initPORTAD 003E                 __Hrparam 0000  
               __Lrparam 0000             ??_kernelInit 003E             ??_kernelLoop 0050  
             ?_timerInit 002F               ?_ssdUpdate 002F               ?_updateSSD 002F  
     __end_of_initPORTAD 148E                 __ptext10 1154                 __ptext11 135C  
               __ptext12 0FF4                 __ptext13 0F30                 __ptext14 146C  
               __ptext16 11F8                 __ptext17 10A4                 __ptext18 0000  
     __end_of_kernelInit 1476       __end_of_kernelLoop 087C                 _ssdDigit 135C  
               _my_funcs 002B                 isa$xinst 000000                 int$flags 0061  
      i2___awmod@divisor 0031        i2___awmod@counter 0033              ??_countTime 004C  
          ?_digitalWrite 003E                 intlevel2 0000        digitalWrite@value 0040  
            ??_timerInit 003E              ??_ssdUpdate 0044              ??_updateSSD 0044  
         ??_digitalWrite 0042          digitalWrite@pin 003E        _valor@keypad$F305 0019  
