

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Nov 04 22:40:49 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    39                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    41   000000                     
    42                           ; Version 2.40
    43                           ; Generated 17/11/2021 GMT
    44                           ; 
    45                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution. Publication is not required when
    59                           ;        this file is used in an embedded application.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC18F4520 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77   000000                     
    78 ;; Function _changePORTD is unused but had its address taken
    79   000000                     
    80 ;; Function _inverte is unused but had its address taken
    81   000000                     
    82 ;; Function _initGenerico is unused but had its address taken
    83   000000                     
    84                           	psect	idataCOMRAM
    85   001438                     __pidataCOMRAM:
    86                           	callstack 0
    87                           
    88                           ;initializer for main@F2404
    89   001438  28                 	db	low _initPORTAD
    90   001439  14                 	db	high _initPORTAD
    91   00143A  0000               	dw	0
    92   00143C  0000               	dw	0
    93                           
    94                           	psect	idataBANK0
    95   0013EE                     __pidataBANK0:
    96                           	callstack 0
    97                           
    98                           ;initializer for main@F2416
    99   0013EE  AA                 	db	low _countTime
   100   0013EF  0D                 	db	high _countTime
   101   0013F0  0064               	dw	100
   102   0013F2  0000               	dw	0
   103                           
   104                           ;initializer for main@F2413
   105   0013F4  30                 	db	low _updateSSD
   106   0013F5  14                 	db	high _updateSSD
   107   0013F6  0001               	dw	1
   108   0013F8  0000               	dw	0
   109                           
   110                           ;initializer for main@F2410
   111   0013FA  18                 	db	low _toggle4L
   112   0013FB  14                 	db	high _toggle4L
   113   0013FC  00C8               	dw	200
   114   0013FE  0000               	dw	0
   115                           
   116                           ;initializer for main@F2407
   117   001400  20                 	db	low _toggle4F
   118   001401  14                 	db	high _toggle4F
   119   001402  0064               	dw	100
   120   001404  0000               	dw	0
   121                           
   122                           	psect	smallconst
   123   000600                     __psmallconst:
   124                           	callstack 0
   125   000600  00                 	db	0
   126   000601                     _valor@ssd$F533:
   127                           	callstack 0
   128   000601  3F                 	db	63
   129   000602  06                 	db	6
   130   000603  5B                 	db	91
   131   000604  4F                 	db	79
   132   000605  66                 	db	102
   133   000606  6D                 	db	109
   134   000607  7D                 	db	125
   135   000608  07                 	db	7
   136   000609  7F                 	db	127
   137   00060A  6F                 	db	111
   138   00060B  77                 	db	119
   139   00060C  7C                 	db	124
   140   00060D  39                 	db	57
   141   00060E  5E                 	db	94
   142   00060F  79                 	db	121
   143   000610  71                 	db	113
   144   000611                     __end_of_valor@ssd$F533:
   145                           	callstack 0
   146   000000                     _SPBRG	set	4015
   147   000000                     _SPBRGH	set	4016
   148   000000                     _BAUDCON	set	4024
   149   000000                     _TXSTA	set	4012
   150   000000                     _RCREG	set	4014
   151   000000                     _TRISC	set	3988
   152   000000                     _TRISB	set	3987
   153   000000                     _PORTC	set	3970
   154   000000                     _PORTB	set	3969
   155   000000                     _PORTA	set	3968
   156   000000                     _ADRESL	set	4035
   157   000000                     _ADRESH	set	4036
   158   000000                     _PORTD	set	3971
   159   000000                     _TMR0L	set	4054
   160   000000                     _TMR0H	set	4055
   161   000000                     _INTCON	set	4082
   162   000000                     _TRISA	set	3986
   163   000000                     _PORTE	set	3972
   164   000000                     _TRISD	set	3989
   165   000000                     _PIR1	set	3998
   166   000000                     _CCP1CON	set	4029
   167   000000                     _CCPR1L	set	4030
   168   000000                     _TRISE	set	3990
   169   000000                     _ADCON2	set	4032
   170   000000                     _ADCON0	set	4034
   171   000000                     _RCON	set	4048
   172   000000                     _T0CON	set	4053
   173   000000                     _T2CON	set	4042
   174   000000                     _PR2	set	4043
   175   000000                     _RCSTA	set	4011
   176   000000                     _TXREG	set	4013
   177   000611  00                 	db	0	; dummy byte at the end
   178   000000                     
   179                           ; #config settings
   180                           
   181                           	psect	cinit
   182   001294                     __pcinit:
   183                           	callstack 0
   184   001294                     start_initialization:
   185                           	callstack 0
   186   001294                     __initialization:
   187                           	callstack 0
   188                           
   189                           ; Initialize objects allocated to BANK0 (24 bytes)
   190                           ; load TBLPTR registers with __pidataBANK0
   191   001294  0EEE               	movlw	low __pidataBANK0
   192   001296  6EF6               	movwf	tblptrl,c
   193   001298  0E13               	movlw	high __pidataBANK0
   194   00129A  6EF7               	movwf	tblptrh,c
   195   00129C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   196   00129E  6EF8               	movwf	tblptru,c
   197   0012A0  EE00  F09E         	lfsr	0,__pdataBANK0
   198   0012A4  EE10 F018          	lfsr	1,24
   199   0012A8                     copy_data0:
   200   0012A8  0009               	tblrd		*+
   201   0012AA  CFF5 FFEE          	movff	tablat,postinc0
   202   0012AE  50E5               	movf	postdec1,w,c
   203   0012B0  50E1               	movf	fsr1l,w,c
   204   0012B2  E1FA               	bnz	copy_data0
   205                           
   206                           ; Initialize objects allocated to COMRAM (6 bytes)
   207                           ; load TBLPTR registers with __pidataCOMRAM
   208   0012B4  0E38               	movlw	low __pidataCOMRAM
   209   0012B6  6EF6               	movwf	tblptrl,c
   210   0012B8  0E14               	movlw	high __pidataCOMRAM
   211   0012BA  6EF7               	movwf	tblptrh,c
   212   0012BC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   213   0012BE  6EF8               	movwf	tblptru,c
   214   0012C0  EE00  F059         	lfsr	0,__pdataCOMRAM
   215   0012C4  EE10 F006          	lfsr	1,6
   216   0012C8                     copy_data1:
   217   0012C8  0009               	tblrd		*+
   218   0012CA  CFF5 FFEE          	movff	tablat,postinc0
   219   0012CE  50E5               	movf	postdec1,w,c
   220   0012D0  50E1               	movf	fsr1l,w,c
   221   0012D2  E1FA               	bnz	copy_data1
   222                           
   223                           ; Clear objects allocated to COMRAM (46 bytes)
   224   0012D4  EE00  F001         	lfsr	0,__pbssCOMRAM
   225   0012D8  0E2E               	movlw	46
   226   0012DA                     clear_0:
   227   0012DA  6AEE               	clrf	postinc0,c
   228   0012DC  06E8               	decf	wreg,f,c
   229   0012DE  E1FD               	bnz	clear_0
   230   0012E0                     end_of_initialization:
   231                           	callstack 0
   232   0012E0                     __end_of__initialization:
   233                           	callstack 0
   234   0012E0  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   235   0012E2  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   236   0012E4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   237   0012E6  6EF8               	movwf	tblptru,c
   238   0012E8  0100               	movlb	0
   239   0012EA  EFA5  F007         	goto	_main	;jump to C main() function
   240                           
   241                           	psect	bssCOMRAM
   242   000001                     __pbssCOMRAM:
   243                           	callstack 0
   244   000001                     _pool:
   245                           	callstack 0
   246   000001                     	ds	20
   247   000015                     kpDebounce@valorAntigo:
   248                           	callstack 0
   249   000015                     	ds	2
   250   000017                     kpDebounce@valorNovo:
   251                           	callstack 0
   252   000017                     	ds	2
   253   000019                     _valor@keypad$F311:
   254                           	callstack 0
   255   000019                     	ds	2
   256   00001B                     _valor:
   257                           	callstack 0
   258   00001B                     	ds	2
   259   00001D                     _v3:
   260                           	callstack 0
   261   00001D                     	ds	1
   262   00001E                     _v2:
   263                           	callstack 0
   264   00001E                     	ds	1
   265   00001F                     _v1:
   266                           	callstack 0
   267   00001F                     	ds	1
   268   000020                     _v0:
   269                           	callstack 0
   270   000020                     	ds	1
   271   000021                     _display:
   272                           	callstack 0
   273   000021                     	ds	1
   274   000022                     _started:
   275                           	callstack 0
   276   000022                     	ds	1
   277   000023                     kpDebounce@tempo:
   278                           	callstack 0
   279   000023                     	ds	1
   280   000024                     _end:
   281                           	callstack 0
   282   000024                     	ds	1
   283   000025                     _start:
   284                           	callstack 0
   285   000025                     	ds	1
   286   000026                     _myself:
   287                           	callstack 0
   288   000026                     	ds	5
   289   00002B                     _my_funcs:
   290                           	callstack 0
   291   00002B                     	ds	4
   292                           
   293                           	psect	dataCOMRAM
   294   000059                     __pdataCOMRAM:
   295                           	callstack 0
   296   000059                     main@F2404:
   297                           	callstack 0
   298   000059                     	ds	6
   299                           
   300                           	psect	dataBANK0
   301   00009E                     __pdataBANK0:
   302                           	callstack 0
   303   00009E                     main@F2416:
   304                           	callstack 0
   305   00009E                     	ds	6
   306   0000A4                     main@F2413:
   307                           	callstack 0
   308   0000A4                     	ds	6
   309   0000AA                     main@F2410:
   310                           	callstack 0
   311   0000AA                     	ds	6
   312   0000B0                     main@F2407:
   313                           	callstack 0
   314   0000B0                     	ds	6
   315                           
   316                           	psect	cstackBANK0
   317   000080                     __pcstackBANK0:
   318                           	callstack 0
   319   000080                     main@init_PD:
   320                           	callstack 0
   321                           
   322                           ; 6 bytes @ 0x0
   323   000080                     	ds	6
   324   000086                     main@ProcLedF:
   325                           	callstack 0
   326                           
   327                           ; 6 bytes @ 0x6
   328   000086                     	ds	6
   329   00008C                     main@ProcLedL:
   330                           	callstack 0
   331                           
   332                           ; 6 bytes @ 0xC
   333   00008C                     	ds	6
   334   000092                     main@SSDUpdate_proc:
   335                           	callstack 0
   336                           
   337                           ; 6 bytes @ 0x12
   338   000092                     	ds	6
   339   000098                     main@countTime_proc:
   340                           	callstack 0
   341                           
   342                           ; 6 bytes @ 0x18
   343   000098                     	ds	6
   344                           
   345                           	psect	cstackCOMRAM
   346   00002F                     __pcstackCOMRAM:
   347                           	callstack 0
   348   00002F                     ?i2___awmod:
   349                           	callstack 0
   350   00002F                     i2___awmod@dividend:
   351                           	callstack 0
   352                           
   353                           ; 2 bytes @ 0x0
   354   00002F                     	ds	2
   355   000031                     i2___awmod@divisor:
   356                           	callstack 0
   357                           
   358                           ; 2 bytes @ 0x2
   359   000031                     	ds	2
   360   000033                     i2___awmod@counter:
   361                           	callstack 0
   362                           
   363                           ; 1 bytes @ 0x4
   364   000033                     	ds	1
   365   000034                     i2___awmod@sign:
   366                           	callstack 0
   367                           
   368                           ; 1 bytes @ 0x5
   369   000034                     	ds	1
   370   000035                     
   371                           ; 1 bytes @ 0x6
   372   000035                     	ds	2
   373   000037                     KernelClock@proc:
   374                           	callstack 0
   375                           
   376                           ; 1 bytes @ 0x8
   377   000037                     	ds	1
   378   000038                     ??_ISR:
   379                           
   380                           ; 1 bytes @ 0x9
   381   000038                     	ds	6
   382   00003E                     ?___awdiv:
   383                           	callstack 0
   384   00003E                     ssdDigit@pos:
   385                           	callstack 0
   386   00003E                     digitalWrite@pin:
   387                           	callstack 0
   388   00003E                     pinMode@pin:
   389                           	callstack 0
   390   00003E                     ___awdiv@dividend:
   391                           	callstack 0
   392                           
   393                           ; 2 bytes @ 0xF
   394   00003E                     	ds	1
   395   00003F                     ssdDigit@val:
   396                           	callstack 0
   397                           
   398                           ; 1 bytes @ 0x10
   399   00003F                     	ds	1
   400   000040                     digitalWrite@value:
   401                           	callstack 0
   402   000040                     pinMode@type:
   403                           	callstack 0
   404   000040                     ___awdiv@divisor:
   405                           	callstack 0
   406                           
   407                           ; 2 bytes @ 0x11
   408   000040                     	ds	2
   409   000042                     ??_pinMode:
   410   000042                     ??_digitalWrite:
   411   000042                     ___awdiv@counter:
   412                           	callstack 0
   413                           
   414                           ; 1 bytes @ 0x13
   415   000042                     	ds	1
   416   000043                     ___awdiv@sign:
   417                           	callstack 0
   418                           
   419                           ; 1 bytes @ 0x14
   420   000043                     	ds	1
   421   000044                     ___awdiv@quotient:
   422                           	callstack 0
   423                           
   424                           ; 2 bytes @ 0x15
   425   000044                     	ds	2
   426   000046                     ?___awmod:
   427                           	callstack 0
   428   000046                     ___awmod@dividend:
   429                           	callstack 0
   430                           
   431                           ; 2 bytes @ 0x17
   432   000046                     	ds	2
   433   000048                     ___awmod@divisor:
   434                           	callstack 0
   435                           
   436                           ; 2 bytes @ 0x19
   437   000048                     	ds	2
   438   00004A                     ___awmod@counter:
   439                           	callstack 0
   440                           
   441                           ; 1 bytes @ 0x1B
   442   00004A                     	ds	1
   443   00004B                     ___awmod@sign:
   444                           	callstack 0
   445                           
   446                           ; 1 bytes @ 0x1C
   447   00004B                     	ds	1
   448   00004C                     countTime@dig:
   449                           	callstack 0
   450   00004C                     kernelAddProc@newProc:
   451                           	callstack 0
   452                           
   453                           ; 2 bytes @ 0x1D
   454   00004C                     	ds	2
   455   00004E                     ??_kernelAddProc:
   456                           
   457                           ; 1 bytes @ 0x1F
   458   00004E                     	ds	2
   459   000050                     ??_kernelLoop:
   460                           
   461                           ; 1 bytes @ 0x21
   462   000050                     	ds	5
   463   000055                     kernelLoop@tempProc:
   464                           	callstack 0
   465                           
   466                           ; 2 bytes @ 0x26
   467   000055                     	ds	2
   468   000057                     kernelLoop@next:
   469                           	callstack 0
   470                           
   471                           ; 1 bytes @ 0x28
   472   000057                     	ds	1
   473   000058                     kernelLoop@p:
   474                           	callstack 0
   475                           
   476                           ; 1 bytes @ 0x29
   477   000058                     	ds	1
   478   000059                     
   479                           ; 1 bytes @ 0x2A
   480 ;;
   481 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   482 ;;
   483 ;; *************** function _main *****************
   484 ;; Defined at:
   485 ;;		line 75 in file "main.c"
   486 ;; Parameters:    Size  Location     Type
   487 ;;		None
   488 ;; Auto vars:     Size  Location     Type
   489 ;;  countTime_pr    6   24[BANK0 ] struct .
   490 ;;  SSDUpdate_pr    6   18[BANK0 ] struct .
   491 ;;  ProcLedL        6   12[BANK0 ] struct .
   492 ;;  ProcLedF        6    6[BANK0 ] struct .
   493 ;;  init_PD         6    0[BANK0 ] struct .
   494 ;; Return value:  Size  Location     Type
   495 ;;                  1    wreg      void 
   496 ;; Registers used:
   497 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
   498 ;; Tracked objects:
   499 ;;		On entry : 0/0
   500 ;;		On exit  : 0/0
   501 ;;		Unchanged: 0/0
   502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   503 ;;      Params:         0       0       0       0       0       0       0
   504 ;;      Locals:         0      30       0       0       0       0       0
   505 ;;      Temps:          0       0       0       0       0       0       0
   506 ;;      Totals:         0      30       0       0       0       0       0
   507 ;;Total ram usage:       30 bytes
   508 ;; Hardware stack levels required when called: 7
   509 ;; This function calls:
   510 ;;		_kernelAddProc
   511 ;;		_kernelInit
   512 ;;		_kernelLoop
   513 ;;		_ssdInit
   514 ;;		_timerInit
   515 ;; This function is called by:
   516 ;;		Startup code after reset
   517 ;; This function uses a non-reentrant model
   518 ;;
   519                           
   520                           	psect	text0
   521   000F4A                     __ptext0:
   522                           	callstack 0
   523   000F4A                     _main:
   524                           	callstack 24
   525   000F4A                     
   526                           ;main.c: 79: process init_PD = {initPORTAD, 0, 0};
   527   000F4A  EE20  F059         	lfsr	2,main@F2404
   528   000F4E  EE10  F080         	lfsr	1,main@init_PD
   529   000F52  0E05               	movlw	5
   530   000F54                     u3101:
   531   000F54  CFDB FFE3          	movff	plusw2,plusw1
   532   000F58  06E8               	decf	wreg,f,c
   533   000F5A  E2FC               	bc	u3101
   534                           
   535                           ;main.c: 83: process ProcLedF = {toggle4F, 100, 0};
   536   000F5C  EE20  F0B0         	lfsr	2,main@F2407
   537   000F60  EE10  F086         	lfsr	1,main@ProcLedF
   538   000F64  0E05               	movlw	5
   539   000F66                     u3111:
   540   000F66  CFDB FFE3          	movff	plusw2,plusw1
   541   000F6A  06E8               	decf	wreg,f,c
   542   000F6C  E2FC               	bc	u3111
   543                           
   544                           ;main.c: 84: process ProcLedL = {toggle4L, 200, 0};
   545   000F6E  EE20  F0AA         	lfsr	2,main@F2410
   546   000F72  EE10  F08C         	lfsr	1,main@ProcLedL
   547   000F76  0E05               	movlw	5
   548   000F78                     u3121:
   549   000F78  CFDB FFE3          	movff	plusw2,plusw1
   550   000F7C  06E8               	decf	wreg,f,c
   551   000F7E  E2FC               	bc	u3121
   552                           
   553                           ;main.c: 86: process SSDUpdate_proc = {updateSSD, 1, 0};
   554   000F80  EE20  F0A4         	lfsr	2,main@F2413
   555   000F84  EE10  F092         	lfsr	1,main@SSDUpdate_proc
   556   000F88  0E05               	movlw	5
   557   000F8A                     u3131:
   558   000F8A  CFDB FFE3          	movff	plusw2,plusw1
   559   000F8E  06E8               	decf	wreg,f,c
   560   000F90  E2FC               	bc	u3131
   561                           
   562                           ;main.c: 87: process countTime_proc = {countTime, 100, 0};
   563   000F92  EE20  F09E         	lfsr	2,main@F2416
   564   000F96  EE10  F098         	lfsr	1,main@countTime_proc
   565   000F9A  0E05               	movlw	5
   566   000F9C                     u3141:
   567   000F9C  CFDB FFE3          	movff	plusw2,plusw1
   568   000FA0  06E8               	decf	wreg,f,c
   569   000FA2  E2FC               	bc	u3141
   570   000FA4                     
   571                           ;main.c: 89: timerInit();
   572   000FA4  EC08  F00A         	call	_timerInit	;wreg free
   573   000FA8                     
   574                           ;main.c: 90: ssdInit();
   575   000FA8  ECA3  F009         	call	_ssdInit	;wreg free
   576   000FAC                     
   577                           ;main.c: 95: kernelInit();
   578   000FAC  EC03  F00A         	call	_kernelInit	;wreg free
   579   000FB0                     
   580                           ;main.c: 96: kernelAddProc(&init_PD);
   581   000FB0  0E80               	movlw	low main@init_PD
   582   000FB2  6E4C               	movwf	kernelAddProc@newProc^0,c
   583   000FB4  0E00               	movlw	high main@init_PD
   584   000FB6  6E4D               	movwf	(kernelAddProc@newProc+1)^0,c
   585   000FB8  ECAE  F008         	call	_kernelAddProc	;wreg free
   586   000FBC                     
   587                           ;main.c: 99: kernelAddProc(&ProcLedL);
   588   000FBC  0E8C               	movlw	low main@ProcLedL
   589   000FBE  6E4C               	movwf	kernelAddProc@newProc^0,c
   590   000FC0  0E00               	movlw	high main@ProcLedL
   591   000FC2  6E4D               	movwf	(kernelAddProc@newProc+1)^0,c
   592   000FC4  ECAE  F008         	call	_kernelAddProc	;wreg free
   593   000FC8                     
   594                           ;main.c: 100: kernelAddProc(&ProcLedF);
   595   000FC8  0E86               	movlw	low main@ProcLedF
   596   000FCA  6E4C               	movwf	kernelAddProc@newProc^0,c
   597   000FCC  0E00               	movlw	high main@ProcLedF
   598   000FCE  6E4D               	movwf	(kernelAddProc@newProc+1)^0,c
   599   000FD0  ECAE  F008         	call	_kernelAddProc	;wreg free
   600   000FD4                     
   601                           ;main.c: 102: kernelAddProc(&SSDUpdate_proc);
   602   000FD4  0E92               	movlw	low main@SSDUpdate_proc
   603   000FD6  6E4C               	movwf	kernelAddProc@newProc^0,c
   604   000FD8  0E00               	movlw	high main@SSDUpdate_proc
   605   000FDA  6E4D               	movwf	(kernelAddProc@newProc+1)^0,c
   606   000FDC  ECAE  F008         	call	_kernelAddProc	;wreg free
   607   000FE0                     
   608                           ;main.c: 103: kernelAddProc(&countTime_proc);
   609   000FE0  0E98               	movlw	low main@countTime_proc
   610   000FE2  6E4C               	movwf	kernelAddProc@newProc^0,c
   611   000FE4  0E00               	movlw	high main@countTime_proc
   612   000FE6  6E4D               	movwf	(kernelAddProc@newProc+1)^0,c
   613   000FE8  ECAE  F008         	call	_kernelAddProc	;wreg free
   614   000FEC                     
   615                           ;main.c: 107: ((RCON) &= ~(1<<(7)));
   616   000FEC  9ED0               	bcf	208,7,c	;volatile
   617   000FEE                     
   618                           ;main.c: 108: ((INTCON) |= (1<<(5)));
   619   000FEE  8AF2               	bsf	242,5,c	;volatile
   620   000FF0                     
   621                           ;main.c: 109: ((INTCON) |= (1<<(7)));
   622   000FF0  8EF2               	bsf	242,7,c	;volatile
   623   000FF2                     
   624                           ;main.c: 110: ((INTCON) |= (1<<(6)));
   625   000FF2  8CF2               	bsf	242,6,c	;volatile
   626   000FF4                     
   627                           ;main.c: 113: kernelLoop();
   628   000FF4  EC57  F005         	call	_kernelLoop	;wreg free
   629   000FF8  EF07  F000         	goto	start
   630   000FFC                     __end_of_main:
   631                           	callstack 0
   632                           
   633 ;; *************** function _timerInit *****************
   634 ;; Defined at:
   635 ;;		line 51 in file "timer.c"
   636 ;; Parameters:    Size  Location     Type
   637 ;;		None
   638 ;; Auto vars:     Size  Location     Type
   639 ;;		None
   640 ;; Return value:  Size  Location     Type
   641 ;;                  1    wreg      void 
   642 ;; Registers used:
   643 ;;		wreg, status,2, status,0
   644 ;; Tracked objects:
   645 ;;		On entry : 0/0
   646 ;;		On exit  : 0/0
   647 ;;		Unchanged: 0/0
   648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   649 ;;      Params:         0       0       0       0       0       0       0
   650 ;;      Locals:         0       0       0       0       0       0       0
   651 ;;      Temps:          0       0       0       0       0       0       0
   652 ;;      Totals:         0       0       0       0       0       0       0
   653 ;;Total ram usage:        0 bytes
   654 ;; Hardware stack levels used: 1
   655 ;; Hardware stack levels required when called: 3
   656 ;; This function calls:
   657 ;;		Nothing
   658 ;; This function is called by:
   659 ;;		_main
   660 ;; This function uses a non-reentrant model
   661 ;;
   662                           
   663                           	psect	text1
   664   001410                     __ptext1:
   665                           	callstack 0
   666   001410                     _timerInit:
   667                           	callstack 27
   668   001410                     
   669                           ;timer.c: 53: T0CON = 0b00001000;
   670   001410  0E08               	movlw	8
   671   001412  6ED5               	movwf	213,c	;volatile
   672   001414                     
   673                           ;timer.c: 54: ((T0CON) |= (1<<(7)));
   674   001414  8ED5               	bsf	213,7,c	;volatile
   675   001416  0012               	return		;funcret
   676   001418                     __end_of_timerInit:
   677                           	callstack 0
   678                           
   679 ;; *************** function _ssdInit *****************
   680 ;; Defined at:
   681 ;;		line 101 in file "ssd.c"
   682 ;; Parameters:    Size  Location     Type
   683 ;;		None
   684 ;; Auto vars:     Size  Location     Type
   685 ;;		None
   686 ;; Return value:  Size  Location     Type
   687 ;;                  1    wreg      void 
   688 ;; Registers used:
   689 ;;		wreg, status,2, status,0, cstack
   690 ;; Tracked objects:
   691 ;;		On entry : 0/0
   692 ;;		On exit  : 0/0
   693 ;;		Unchanged: 0/0
   694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   695 ;;      Params:         0       0       0       0       0       0       0
   696 ;;      Locals:         0       0       0       0       0       0       0
   697 ;;      Temps:          0       0       0       0       0       0       0
   698 ;;      Totals:         0       0       0       0       0       0       0
   699 ;;Total ram usage:        0 bytes
   700 ;; Hardware stack levels used: 1
   701 ;; Hardware stack levels required when called: 4
   702 ;; This function calls:
   703 ;;		_pinMode
   704 ;; This function is called by:
   705 ;;		_main
   706 ;; This function uses a non-reentrant model
   707 ;;
   708                           
   709                           	psect	text2
   710   001346                     __ptext2:
   711                           	callstack 0
   712   001346                     _ssdInit:
   713                           	callstack 26
   714   001346                     
   715                           ;ssd.c: 103: pinMode(PIN_A2, 0);
   716   001346  0E00               	movlw	0
   717   001348  6E3F               	movwf	(pinMode@pin+1)^0,c
   718   00134A  0E02               	movlw	2
   719   00134C  6E3E               	movwf	pinMode@pin^0,c
   720   00134E  0E00               	movlw	0
   721   001350  6E41               	movwf	(pinMode@type+1)^0,c
   722   001352  0E00               	movlw	0
   723   001354  6E40               	movwf	pinMode@type^0,c
   724   001356  EC09  F003         	call	_pinMode	;wreg free
   725                           
   726                           ;ssd.c: 104: pinMode(PIN_A3, 0);
   727   00135A  0E00               	movlw	0
   728   00135C  6E3F               	movwf	(pinMode@pin+1)^0,c
   729   00135E  0E03               	movlw	3
   730   001360  6E3E               	movwf	pinMode@pin^0,c
   731   001362  0E00               	movlw	0
   732   001364  6E41               	movwf	(pinMode@type+1)^0,c
   733   001366  0E00               	movlw	0
   734   001368  6E40               	movwf	pinMode@type^0,c
   735   00136A  EC09  F003         	call	_pinMode	;wreg free
   736                           
   737                           ;ssd.c: 105: pinMode(PIN_A4, 0);
   738   00136E  0E00               	movlw	0
   739   001370  6E3F               	movwf	(pinMode@pin+1)^0,c
   740   001372  0E04               	movlw	4
   741   001374  6E3E               	movwf	pinMode@pin^0,c
   742   001376  0E00               	movlw	0
   743   001378  6E41               	movwf	(pinMode@type+1)^0,c
   744   00137A  0E00               	movlw	0
   745   00137C  6E40               	movwf	pinMode@type^0,c
   746   00137E  EC09  F003         	call	_pinMode	;wreg free
   747                           
   748                           ;ssd.c: 106: pinMode(PIN_A5, 0);
   749   001382  0E00               	movlw	0
   750   001384  6E3F               	movwf	(pinMode@pin+1)^0,c
   751   001386  0E05               	movlw	5
   752   001388  6E3E               	movwf	pinMode@pin^0,c
   753   00138A  0E00               	movlw	0
   754   00138C  6E41               	movwf	(pinMode@type+1)^0,c
   755   00138E  0E00               	movlw	0
   756   001390  6E40               	movwf	pinMode@type^0,c
   757   001392  EC09  F003         	call	_pinMode	;wreg free
   758   001396                     
   759                           ;ssd.c: 109: TRISD = 0x00;
   760   001396  0E00               	movlw	0
   761   001398  6E95               	movwf	149,c	;volatile
   762   00139A  0012               	return		;funcret
   763   00139C                     __end_of_ssdInit:
   764                           	callstack 0
   765                           
   766 ;; *************** function _pinMode *****************
   767 ;; Defined at:
   768 ;;		line 54 in file "io.c"
   769 ;; Parameters:    Size  Location     Type
   770 ;;  pin             2   15[COMRAM] int 
   771 ;;  type            2   17[COMRAM] int 
   772 ;; Auto vars:     Size  Location     Type
   773 ;;		None
   774 ;; Return value:  Size  Location     Type
   775 ;;                  1    wreg      void 
   776 ;; Registers used:
   777 ;;		wreg, status,2, status,0
   778 ;; Tracked objects:
   779 ;;		On entry : 0/0
   780 ;;		On exit  : 0/0
   781 ;;		Unchanged: 0/0
   782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   783 ;;      Params:         4       0       0       0       0       0       0
   784 ;;      Locals:         0       0       0       0       0       0       0
   785 ;;      Temps:          2       0       0       0       0       0       0
   786 ;;      Totals:         6       0       0       0       0       0       0
   787 ;;Total ram usage:        6 bytes
   788 ;; Hardware stack levels used: 1
   789 ;; Hardware stack levels required when called: 3
   790 ;; This function calls:
   791 ;;		Nothing
   792 ;; This function is called by:
   793 ;;		_ssdInit
   794 ;;		_adcInit
   795 ;;		_lcdInit
   796 ;;		_i2cInit
   797 ;;		_read_SCL
   798 ;;		_read_SDA
   799 ;;		_clear_SCL
   800 ;;		_clear_SDA
   801 ;; This function uses a non-reentrant model
   802 ;;
   803                           
   804                           	psect	text3
   805   000612                     __ptext3:
   806                           	callstack 0
   807   000612                     _pinMode:
   808                           	callstack 26
   809   000612                     
   810                           ;io.c: 56: if(pin <8){
   811   000612  BE3F               	btfsc	(pinMode@pin+1)^0,7,c
   812   000614  EF17  F003         	goto	u2620
   813   000618  503F               	movf	(pinMode@pin+1)^0,w,c
   814   00061A  E107               	bnz	u2621
   815   00061C  0E08               	movlw	8
   816   00061E  5C3E               	subwf	pinMode@pin^0,w,c
   817   000620  B0D8               	btfsc	status,0,c
   818   000622  EF15  F003         	goto	u2621
   819   000626  EF17  F003         	goto	u2620
   820   00062A                     u2621:
   821   00062A  EF41  F003         	goto	l2905
   822   00062E                     u2620:
   823   00062E                     
   824                           ;io.c: 57: if (type){ ((TRISA) |= (1<<(pin)));}
   825   00062E  5040               	movf	pinMode@type^0,w,c
   826   000630  1041               	iorwf	(pinMode@type+1)^0,w,c
   827   000632  B4D8               	btfsc	status,2,c
   828   000634  EF1E  F003         	goto	u2631
   829   000638  EF20  F003         	goto	u2630
   830   00063C                     u2631:
   831   00063C  EF30  F003         	goto	l2903
   832   000640                     u2630:
   833   000640  C03E  F042         	movff	pinMode@pin,??_pinMode
   834   000644  0E01               	movlw	1
   835   000646  6E43               	movwf	(??_pinMode+1)^0,c
   836   000648  2A42               	incf	??_pinMode^0,f,c
   837   00064A  EF29  F003         	goto	u2644
   838   00064E                     u2645:
   839   00064E  90D8               	bcf	status,0,c
   840   000650  3643               	rlcf	(??_pinMode+1)^0,f,c
   841   000652                     u2644:
   842   000652  2E42               	decfsz	??_pinMode^0,f,c
   843   000654  EF27  F003         	goto	u2645
   844   000658  5043               	movf	(??_pinMode+1)^0,w,c
   845   00065A  1292               	iorwf	146,f,c	;volatile
   846   00065C  EF2F  F004         	goto	l247
   847   000660                     l2903:
   848                           
   849                           ;io.c: 58: else{ ((TRISA) &= ~(1<<(pin)));}
   850   000660  C03E  F042         	movff	pinMode@pin,??_pinMode
   851   000664  0E01               	movlw	1
   852   000666  6E43               	movwf	(??_pinMode+1)^0,c
   853   000668  2A42               	incf	??_pinMode^0,f,c
   854   00066A  EF39  F003         	goto	u2654
   855   00066E                     u2655:
   856   00066E  90D8               	bcf	status,0,c
   857   000670  3643               	rlcf	(??_pinMode+1)^0,f,c
   858   000672                     u2654:
   859   000672  2E42               	decfsz	??_pinMode^0,f,c
   860   000674  EF37  F003         	goto	u2655
   861   000678  5043               	movf	(??_pinMode+1)^0,w,c
   862   00067A  0AFF               	xorlw	255
   863   00067C  1692               	andwf	146,f,c	;volatile
   864   00067E  EF2F  F004         	goto	l247
   865   000682                     l2905:
   866   000682  BE3F               	btfsc	(pinMode@pin+1)^0,7,c
   867   000684  EF4F  F003         	goto	u2660
   868   000688  503F               	movf	(pinMode@pin+1)^0,w,c
   869   00068A  E107               	bnz	u2661
   870   00068C  0E10               	movlw	16
   871   00068E  5C3E               	subwf	pinMode@pin^0,w,c
   872   000690  B0D8               	btfsc	status,0,c
   873   000692  EF4D  F003         	goto	u2661
   874   000696  EF4F  F003         	goto	u2660
   875   00069A                     u2661:
   876   00069A  EF7D  F003         	goto	l2913
   877   00069E                     u2660:
   878   00069E                     
   879                           ;io.c: 60: if (type){ ((TRISB) |= (1<<(pin-8)));}
   880   00069E  5040               	movf	pinMode@type^0,w,c
   881   0006A0  1041               	iorwf	(pinMode@type+1)^0,w,c
   882   0006A2  B4D8               	btfsc	status,2,c
   883   0006A4  EF56  F003         	goto	u2671
   884   0006A8  EF58  F003         	goto	u2670
   885   0006AC                     u2671:
   886   0006AC  EF6A  F003         	goto	l2911
   887   0006B0                     u2670:
   888   0006B0  C03E  F042         	movff	pinMode@pin,??_pinMode
   889   0006B4  0EF8               	movlw	-8
   890   0006B6  2642               	addwf	??_pinMode^0,f,c
   891   0006B8  0E01               	movlw	1
   892   0006BA  6E43               	movwf	(??_pinMode+1)^0,c
   893   0006BC  2A42               	incf	??_pinMode^0,f,c
   894   0006BE  EF63  F003         	goto	u2684
   895   0006C2                     u2685:
   896   0006C2  90D8               	bcf	status,0,c
   897   0006C4  3643               	rlcf	(??_pinMode+1)^0,f,c
   898   0006C6                     u2684:
   899   0006C6  2E42               	decfsz	??_pinMode^0,f,c
   900   0006C8  EF61  F003         	goto	u2685
   901   0006CC  5043               	movf	(??_pinMode+1)^0,w,c
   902   0006CE  1293               	iorwf	147,f,c	;volatile
   903   0006D0  EF2F  F004         	goto	l247
   904   0006D4                     l2911:
   905                           
   906                           ;io.c: 61: else{ ((TRISB) &= ~(1<<(pin-8)));}
   907   0006D4  C03E  F042         	movff	pinMode@pin,??_pinMode
   908   0006D8  0EF8               	movlw	-8
   909   0006DA  2642               	addwf	??_pinMode^0,f,c
   910   0006DC  0E01               	movlw	1
   911   0006DE  6E43               	movwf	(??_pinMode+1)^0,c
   912   0006E0  2A42               	incf	??_pinMode^0,f,c
   913   0006E2  EF75  F003         	goto	u2694
   914   0006E6                     u2695:
   915   0006E6  90D8               	bcf	status,0,c
   916   0006E8  3643               	rlcf	(??_pinMode+1)^0,f,c
   917   0006EA                     u2694:
   918   0006EA  2E42               	decfsz	??_pinMode^0,f,c
   919   0006EC  EF73  F003         	goto	u2695
   920   0006F0  5043               	movf	(??_pinMode+1)^0,w,c
   921   0006F2  0AFF               	xorlw	255
   922   0006F4  1693               	andwf	147,f,c	;volatile
   923   0006F6  EF2F  F004         	goto	l247
   924   0006FA                     l2913:
   925   0006FA  BE3F               	btfsc	(pinMode@pin+1)^0,7,c
   926   0006FC  EF8B  F003         	goto	u2700
   927   000700  503F               	movf	(pinMode@pin+1)^0,w,c
   928   000702  E107               	bnz	u2701
   929   000704  0E18               	movlw	24
   930   000706  5C3E               	subwf	pinMode@pin^0,w,c
   931   000708  B0D8               	btfsc	status,0,c
   932   00070A  EF89  F003         	goto	u2701
   933   00070E  EF8B  F003         	goto	u2700
   934   000712                     u2701:
   935   000712  EFB9  F003         	goto	l2921
   936   000716                     u2700:
   937   000716                     
   938                           ;io.c: 63: if (type){ ((TRISC) |= (1<<(pin-16)));}
   939   000716  5040               	movf	pinMode@type^0,w,c
   940   000718  1041               	iorwf	(pinMode@type+1)^0,w,c
   941   00071A  B4D8               	btfsc	status,2,c
   942   00071C  EF92  F003         	goto	u2711
   943   000720  EF94  F003         	goto	u2710
   944   000724                     u2711:
   945   000724  EFA6  F003         	goto	l2919
   946   000728                     u2710:
   947   000728  C03E  F042         	movff	pinMode@pin,??_pinMode
   948   00072C  0EF0               	movlw	-16
   949   00072E  2642               	addwf	??_pinMode^0,f,c
   950   000730  0E01               	movlw	1
   951   000732  6E43               	movwf	(??_pinMode+1)^0,c
   952   000734  2A42               	incf	??_pinMode^0,f,c
   953   000736  EF9F  F003         	goto	u2724
   954   00073A                     u2725:
   955   00073A  90D8               	bcf	status,0,c
   956   00073C  3643               	rlcf	(??_pinMode+1)^0,f,c
   957   00073E                     u2724:
   958   00073E  2E42               	decfsz	??_pinMode^0,f,c
   959   000740  EF9D  F003         	goto	u2725
   960   000744  5043               	movf	(??_pinMode+1)^0,w,c
   961   000746  1294               	iorwf	148,f,c	;volatile
   962   000748  EF2F  F004         	goto	l247
   963   00074C                     l2919:
   964                           
   965                           ;io.c: 64: else{ ((TRISC) &= ~(1<<(pin-16)));}
   966   00074C  C03E  F042         	movff	pinMode@pin,??_pinMode
   967   000750  0EF0               	movlw	-16
   968   000752  2642               	addwf	??_pinMode^0,f,c
   969   000754  0E01               	movlw	1
   970   000756  6E43               	movwf	(??_pinMode+1)^0,c
   971   000758  2A42               	incf	??_pinMode^0,f,c
   972   00075A  EFB1  F003         	goto	u2734
   973   00075E                     u2735:
   974   00075E  90D8               	bcf	status,0,c
   975   000760  3643               	rlcf	(??_pinMode+1)^0,f,c
   976   000762                     u2734:
   977   000762  2E42               	decfsz	??_pinMode^0,f,c
   978   000764  EFAF  F003         	goto	u2735
   979   000768  5043               	movf	(??_pinMode+1)^0,w,c
   980   00076A  0AFF               	xorlw	255
   981   00076C  1694               	andwf	148,f,c	;volatile
   982   00076E  EF2F  F004         	goto	l247
   983   000772                     l2921:
   984   000772  BE3F               	btfsc	(pinMode@pin+1)^0,7,c
   985   000774  EFC7  F003         	goto	u2740
   986   000778  503F               	movf	(pinMode@pin+1)^0,w,c
   987   00077A  E107               	bnz	u2741
   988   00077C  0E20               	movlw	32
   989   00077E  5C3E               	subwf	pinMode@pin^0,w,c
   990   000780  B0D8               	btfsc	status,0,c
   991   000782  EFC5  F003         	goto	u2741
   992   000786  EFC7  F003         	goto	u2740
   993   00078A                     u2741:
   994   00078A  EFF5  F003         	goto	l2929
   995   00078E                     u2740:
   996   00078E                     
   997                           ;io.c: 66: if (type){ ((TRISD) |= (1<<(pin-24)));}
   998   00078E  5040               	movf	pinMode@type^0,w,c
   999   000790  1041               	iorwf	(pinMode@type+1)^0,w,c
  1000   000792  B4D8               	btfsc	status,2,c
  1001   000794  EFCE  F003         	goto	u2751
  1002   000798  EFD0  F003         	goto	u2750
  1003   00079C                     u2751:
  1004   00079C  EFE2  F003         	goto	l2927
  1005   0007A0                     u2750:
  1006   0007A0  C03E  F042         	movff	pinMode@pin,??_pinMode
  1007   0007A4  0EE8               	movlw	-24
  1008   0007A6  2642               	addwf	??_pinMode^0,f,c
  1009   0007A8  0E01               	movlw	1
  1010   0007AA  6E43               	movwf	(??_pinMode+1)^0,c
  1011   0007AC  2A42               	incf	??_pinMode^0,f,c
  1012   0007AE  EFDB  F003         	goto	u2764
  1013   0007B2                     u2765:
  1014   0007B2  90D8               	bcf	status,0,c
  1015   0007B4  3643               	rlcf	(??_pinMode+1)^0,f,c
  1016   0007B6                     u2764:
  1017   0007B6  2E42               	decfsz	??_pinMode^0,f,c
  1018   0007B8  EFD9  F003         	goto	u2765
  1019   0007BC  5043               	movf	(??_pinMode+1)^0,w,c
  1020   0007BE  1295               	iorwf	149,f,c	;volatile
  1021   0007C0  EF2F  F004         	goto	l247
  1022   0007C4                     l2927:
  1023                           
  1024                           ;io.c: 67: else{ ((TRISD) &= ~(1<<(pin-24)));}
  1025   0007C4  C03E  F042         	movff	pinMode@pin,??_pinMode
  1026   0007C8  0EE8               	movlw	-24
  1027   0007CA  2642               	addwf	??_pinMode^0,f,c
  1028   0007CC  0E01               	movlw	1
  1029   0007CE  6E43               	movwf	(??_pinMode+1)^0,c
  1030   0007D0  2A42               	incf	??_pinMode^0,f,c
  1031   0007D2  EFED  F003         	goto	u2774
  1032   0007D6                     u2775:
  1033   0007D6  90D8               	bcf	status,0,c
  1034   0007D8  3643               	rlcf	(??_pinMode+1)^0,f,c
  1035   0007DA                     u2774:
  1036   0007DA  2E42               	decfsz	??_pinMode^0,f,c
  1037   0007DC  EFEB  F003         	goto	u2775
  1038   0007E0  5043               	movf	(??_pinMode+1)^0,w,c
  1039   0007E2  0AFF               	xorlw	255
  1040   0007E4  1695               	andwf	149,f,c	;volatile
  1041   0007E6  EF2F  F004         	goto	l247
  1042   0007EA                     l2929:
  1043   0007EA  BE3F               	btfsc	(pinMode@pin+1)^0,7,c
  1044   0007EC  EF03  F004         	goto	u2780
  1045   0007F0  503F               	movf	(pinMode@pin+1)^0,w,c
  1046   0007F2  E107               	bnz	u2781
  1047   0007F4  0E28               	movlw	40
  1048   0007F6  5C3E               	subwf	pinMode@pin^0,w,c
  1049   0007F8  B0D8               	btfsc	status,0,c
  1050   0007FA  EF01  F004         	goto	u2781
  1051   0007FE  EF03  F004         	goto	u2780
  1052   000802                     u2781:
  1053   000802  EF2F  F004         	goto	l247
  1054   000806                     u2780:
  1055   000806                     
  1056                           ;io.c: 69: if (type){ ((TRISE) |= (1<<(pin-32)));}
  1057   000806  5040               	movf	pinMode@type^0,w,c
  1058   000808  1041               	iorwf	(pinMode@type+1)^0,w,c
  1059   00080A  B4D8               	btfsc	status,2,c
  1060   00080C  EF0A  F004         	goto	u2791
  1061   000810  EF0C  F004         	goto	u2790
  1062   000814                     u2791:
  1063   000814  EF1E  F004         	goto	l2935
  1064   000818                     u2790:
  1065   000818  C03E  F042         	movff	pinMode@pin,??_pinMode
  1066   00081C  0EE0               	movlw	-32
  1067   00081E  2642               	addwf	??_pinMode^0,f,c
  1068   000820  0E01               	movlw	1
  1069   000822  6E43               	movwf	(??_pinMode+1)^0,c
  1070   000824  2A42               	incf	??_pinMode^0,f,c
  1071   000826  EF17  F004         	goto	u2804
  1072   00082A                     u2805:
  1073   00082A  90D8               	bcf	status,0,c
  1074   00082C  3643               	rlcf	(??_pinMode+1)^0,f,c
  1075   00082E                     u2804:
  1076   00082E  2E42               	decfsz	??_pinMode^0,f,c
  1077   000830  EF15  F004         	goto	u2805
  1078   000834  5043               	movf	(??_pinMode+1)^0,w,c
  1079   000836  1296               	iorwf	150,f,c	;volatile
  1080   000838  EF2F  F004         	goto	l247
  1081   00083C                     l2935:
  1082                           
  1083                           ;io.c: 70: else{ ((TRISE) &= ~(1<<(pin-32)));}
  1084   00083C  C03E  F042         	movff	pinMode@pin,??_pinMode
  1085   000840  0EE0               	movlw	-32
  1086   000842  2642               	addwf	??_pinMode^0,f,c
  1087   000844  0E01               	movlw	1
  1088   000846  6E43               	movwf	(??_pinMode+1)^0,c
  1089   000848  2A42               	incf	??_pinMode^0,f,c
  1090   00084A  EF29  F004         	goto	u2814
  1091   00084E                     u2815:
  1092   00084E  90D8               	bcf	status,0,c
  1093   000850  3643               	rlcf	(??_pinMode+1)^0,f,c
  1094   000852                     u2814:
  1095   000852  2E42               	decfsz	??_pinMode^0,f,c
  1096   000854  EF27  F004         	goto	u2815
  1097   000858  5043               	movf	(??_pinMode+1)^0,w,c
  1098   00085A  0AFF               	xorlw	255
  1099   00085C  1696               	andwf	150,f,c	;volatile
  1100   00085E                     l247:
  1101   00085E  0012               	return		;funcret
  1102   000860                     __end_of_pinMode:
  1103                           	callstack 0
  1104                           
  1105 ;; *************** function _kernelLoop *****************
  1106 ;; Defined at:
  1107 ;;		line 24 in file "kernel.c"
  1108 ;; Parameters:    Size  Location     Type
  1109 ;;		None
  1110 ;; Auto vars:     Size  Location     Type
  1111 ;;  tempProc        2   38[COMRAM] PTR struct .
  1112 ;;		 -> main@countTime_proc(6), main@SSDUpdate_proc(6), main@ProcLedL(6), main@ProcLedF(6), 
  1113 ;;		 -> main@init_PD(6), 
  1114 ;;  p               1   41[COMRAM] unsigned char 
  1115 ;;  next            1   40[COMRAM] unsigned char 
  1116 ;; Return value:  Size  Location     Type
  1117 ;;                  1    wreg      void 
  1118 ;; Registers used:
  1119 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  1120 ;; Tracked objects:
  1121 ;;		On entry : 0/0
  1122 ;;		On exit  : 0/0
  1123 ;;		Unchanged: 0/0
  1124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1125 ;;      Params:         0       0       0       0       0       0       0
  1126 ;;      Locals:         4       0       0       0       0       0       0
  1127 ;;      Temps:          5       0       0       0       0       0       0
  1128 ;;      Totals:         9       0       0       0       0       0       0
  1129 ;;Total ram usage:        9 bytes
  1130 ;; Hardware stack levels used: 1
  1131 ;; Hardware stack levels required when called: 6
  1132 ;; This function calls:
  1133 ;;		___awmod
  1134 ;;		_countTime
  1135 ;;		_initPORTAD
  1136 ;;		_kernelAddProc
  1137 ;;		_toggle4F
  1138 ;;		_toggle4L
  1139 ;;		_updateSSD
  1140 ;; This function is called by:
  1141 ;;		_main
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           
  1145                           	psect	text4
  1146   000AAE                     __ptext4:
  1147                           	callstack 0
  1148   000AAE                     _kernelLoop:
  1149                           	callstack 24
  1150   000AAE                     l85:
  1151   000AAE                     
  1152                           ;kernel.c: 29: if (start != end) {
  1153   000AAE  5024               	movf	_end^0,w,c
  1154   000AB0  1825               	xorwf	_start^0,w,c
  1155   000AB2  B4D8               	btfsc	status,2,c
  1156   000AB4  EF5E  F005         	goto	u2941
  1157   000AB8  EF60  F005         	goto	u2940
  1158   000ABC                     u2941:
  1159   000ABC  EF57  F005         	goto	l85
  1160   000AC0                     u2940:
  1161   000AC0                     
  1162                           ;kernel.c: 31: next = start;
  1163   000AC0  C025  F057         	movff	_start,kernelLoop@next
  1164                           
  1165                           ;kernel.c: 32: for (p = start; p != end; p = (p + 1) % 10) {
  1166   000AC4  C025  F058         	movff	_start,kernelLoop@p
  1167   000AC8  EFA1  F005         	goto	l3017
  1168   000ACC                     l3011:
  1169                           
  1170                           ;kernel.c: 33: if (pool[p]->start < pool[next]->start) {
  1171   000ACC  5057               	movf	kernelLoop@next^0,w,c
  1172   000ACE  0D02               	mullw	2
  1173   000AD0  0E01               	movlw	low _pool
  1174   000AD2  24F3               	addwf	243,w,c
  1175   000AD4  6ED9               	movwf	fsr2l,c
  1176   000AD6  0E00               	movlw	high _pool
  1177   000AD8  20F4               	addwfc	prodh,w,c
  1178   000ADA  6EDA               	movwf	fsr2h,c
  1179   000ADC  EE10 F004          	lfsr	1,4
  1180   000AE0  50DE               	movf	postinc2,w,c
  1181   000AE2  26E1               	addwf	fsr1l,f,c
  1182   000AE4  50DD               	movf	postdec2,w,c
  1183   000AE6  22E2               	addwfc	fsr1h,f,c
  1184   000AE8  5058               	movf	kernelLoop@p^0,w,c
  1185   000AEA  0D02               	mullw	2
  1186   000AEC  0E01               	movlw	low _pool
  1187   000AEE  24F3               	addwf	243,w,c
  1188   000AF0  6ED9               	movwf	fsr2l,c
  1189   000AF2  0E00               	movlw	high _pool
  1190   000AF4  20F4               	addwfc	prodh,w,c
  1191   000AF6  6EDA               	movwf	fsr2h,c
  1192   000AF8  EE00 F004          	lfsr	0,4
  1193   000AFC  50DE               	movf	postinc2,w,c
  1194   000AFE  26E9               	addwf	fsr0l,f,c
  1195   000B00  50DD               	movf	postdec2,w,c
  1196   000B02  22EA               	addwfc	fsr0h,f,c
  1197   000B04  50E6               	movf	postinc1,w,c
  1198   000B06  5CEE               	subwf	postinc0,w,c
  1199   000B08  50EE               	movf	postinc0,w,c
  1200   000B0A  0A80               	xorlw	128
  1201   000B0C  6E54               	movwf	(??_kernelLoop+4)^0,c
  1202   000B0E  50E6               	movf	postinc1,w,c
  1203   000B10  0A80               	xorlw	128
  1204   000B12  5854               	subwfb	(??_kernelLoop+4)^0,w,c
  1205   000B14  B0D8               	btfsc	status,0,c
  1206   000B16  EF8F  F005         	goto	u2951
  1207   000B1A  EF91  F005         	goto	u2950
  1208   000B1E                     u2951:
  1209   000B1E  EF93  F005         	goto	l3015
  1210   000B22                     u2950:
  1211   000B22                     
  1212                           ;kernel.c: 34: next = p;
  1213   000B22  C058  F057         	movff	kernelLoop@p,kernelLoop@next
  1214   000B26                     l3015:
  1215   000B26  0E01               	movlw	1
  1216   000B28  2458               	addwf	kernelLoop@p^0,w,c
  1217   000B2A  6E46               	movwf	___awmod@dividend^0,c
  1218   000B2C  6A47               	clrf	(___awmod@dividend+1)^0,c
  1219   000B2E  0E00               	movlw	0
  1220   000B30  2247               	addwfc	(___awmod@dividend+1)^0,f,c
  1221   000B32  0E00               	movlw	0
  1222   000B34  6E49               	movwf	(___awmod@divisor+1)^0,c
  1223   000B36  0E0A               	movlw	10
  1224   000B38  6E48               	movwf	___awmod@divisor^0,c
  1225   000B3A  ECFE  F007         	call	___awmod	;wreg free
  1226   000B3E  5046               	movf	?___awmod^0,w,c
  1227   000B40  6E58               	movwf	kernelLoop@p^0,c
  1228   000B42                     l3017:
  1229   000B42  5024               	movf	_end^0,w,c
  1230   000B44  1858               	xorwf	kernelLoop@p^0,w,c
  1231   000B46  A4D8               	btfss	status,2,c
  1232   000B48  EFA8  F005         	goto	u2961
  1233   000B4C  EFAA  F005         	goto	u2960
  1234   000B50                     u2961:
  1235   000B50  EF66  F005         	goto	l3011
  1236   000B54                     u2960:
  1237   000B54                     
  1238                           ;kernel.c: 35: };kernel.c: 36: };kernel.c: 38: tempProc = pool[next];
  1239   000B54  5057               	movf	kernelLoop@next^0,w,c
  1240   000B56  0D02               	mullw	2
  1241   000B58  0E01               	movlw	low _pool
  1242   000B5A  24F3               	addwf	243,w,c
  1243   000B5C  6ED9               	movwf	fsr2l,c
  1244   000B5E  0E00               	movlw	high _pool
  1245   000B60  20F4               	addwfc	prodh,w,c
  1246   000B62  6EDA               	movwf	fsr2h,c
  1247   000B64  CFDE F055          	movff	postinc2,kernelLoop@tempProc
  1248   000B68  CFDD F056          	movff	postdec2,kernelLoop@tempProc+1
  1249   000B6C                     
  1250                           ;kernel.c: 39: pool[next] = pool[start];
  1251   000B6C  5025               	movf	_start^0,w,c
  1252   000B6E  0D02               	mullw	2
  1253   000B70  0E01               	movlw	low _pool
  1254   000B72  24F3               	addwf	243,w,c
  1255   000B74  6ED9               	movwf	fsr2l,c
  1256   000B76  0E00               	movlw	high _pool
  1257   000B78  20F4               	addwfc	prodh,w,c
  1258   000B7A  6EDA               	movwf	fsr2h,c
  1259   000B7C  5057               	movf	kernelLoop@next^0,w,c
  1260   000B7E  0D02               	mullw	2
  1261   000B80  0E01               	movlw	low _pool
  1262   000B82  24F3               	addwf	243,w,c
  1263   000B84  6EE1               	movwf	fsr1l,c
  1264   000B86  0E00               	movlw	high _pool
  1265   000B88  20F4               	addwfc	prodh,w,c
  1266   000B8A  6EE2               	movwf	fsr1h,c
  1267   000B8C  CFDE FFE6          	movff	postinc2,postinc1
  1268   000B90  CFDD FFE5          	movff	postdec2,postdec1
  1269   000B94                     
  1270                           ;kernel.c: 40: pool[start] = tempProc;
  1271   000B94  5025               	movf	_start^0,w,c
  1272   000B96  0D02               	mullw	2
  1273   000B98  0E01               	movlw	low _pool
  1274   000B9A  24F3               	addwf	243,w,c
  1275   000B9C  6ED9               	movwf	fsr2l,c
  1276   000B9E  0E00               	movlw	high _pool
  1277   000BA0  20F4               	addwfc	prodh,w,c
  1278   000BA2  6EDA               	movwf	fsr2h,c
  1279   000BA4  C055  FFDE         	movff	kernelLoop@tempProc,postinc2
  1280   000BA8  C056  FFDD         	movff	kernelLoop@tempProc+1,postdec2
  1281   000BAC                     l3025:
  1282   000BAC  5025               	movf	_start^0,w,c
  1283   000BAE  0D02               	mullw	2
  1284   000BB0  0E01               	movlw	low _pool
  1285   000BB2  24F3               	addwf	243,w,c
  1286   000BB4  6ED9               	movwf	fsr2l,c
  1287   000BB6  0E00               	movlw	high _pool
  1288   000BB8  20F4               	addwfc	prodh,w,c
  1289   000BBA  6EDA               	movwf	fsr2h,c
  1290   000BBC  EE10 F004          	lfsr	1,4
  1291   000BC0  50DE               	movf	postinc2,w,c
  1292   000BC2  26E1               	addwf	fsr1l,f,c
  1293   000BC4  50DD               	movf	postdec2,w,c
  1294   000BC6  22E2               	addwfc	fsr1h,f,c
  1295   000BC8  0E01               	movlw	1
  1296   000BCA  BEE3               	btfsc	plusw1,7,c
  1297   000BCC  EFF3  F005         	goto	u2970
  1298   000BD0  0E01               	movlw	1
  1299   000BD2  50E3               	movf	plusw1,w,c
  1300   000BD4  E106               	bnz	u2971
  1301   000BD6  04E6               	decf	postinc1,w,c
  1302   000BD8  B0D8               	btfsc	status,0,c
  1303   000BDA  EFF1  F005         	goto	u2971
  1304   000BDE  EFF3  F005         	goto	u2970
  1305   000BE2                     u2971:
  1306   000BE2  EFD6  F005         	goto	l3025
  1307   000BE6                     u2970:
  1308   000BE6                     
  1309                           ;kernel.c: 45: };kernel.c: 46: if (pool[start]->function() == 2) {
  1310   000BE6  5025               	movf	_start^0,w,c
  1311   000BE8  0D02               	mullw	2
  1312   000BEA  0E01               	movlw	low _pool
  1313   000BEC  24F3               	addwf	243,w,c
  1314   000BEE  6ED9               	movwf	fsr2l,c
  1315   000BF0  0E00               	movlw	high _pool
  1316   000BF2  20F4               	addwfc	prodh,w,c
  1317   000BF4  6EDA               	movwf	fsr2h,c
  1318   000BF6  CFDE F050          	movff	postinc2,??_kernelLoop
  1319   000BFA  CFDD F051          	movff	postdec2,??_kernelLoop+1
  1320   000BFE  C050  FFD9         	movff	??_kernelLoop,fsr2l
  1321   000C02  C051  FFDA         	movff	??_kernelLoop+1,fsr2h
  1322   000C06  D802               	call	u2988
  1323   000C08  EF10  F006         	goto	u2989
  1324   000C0C                     u2988:
  1325   000C0C  0005               	push	
  1326   000C0E  6EFA               	movwf	pclath,c
  1327   000C10  50DE               	movf	postinc2,w,c
  1328   000C12  6EFD               	movwf	tosl,c
  1329   000C14  50DE               	movf	postinc2,w,c
  1330   000C16  6EFE               	movwf	tosh,c
  1331   000C18  50F8               	movf	tblptru,w,c
  1332   000C1A  6EFF               	movwf	tosu,c
  1333   000C1C  50FA               	movf	pclath,w,c
  1334   000C1E  0012               	return		;indir
  1335   000C20                     u2989:
  1336   000C20  0A02               	xorlw	2
  1337   000C22  A4D8               	btfss	status,2,c
  1338   000C24  EF16  F006         	goto	u2991
  1339   000C28  EF18  F006         	goto	u2990
  1340   000C2C                     u2991:
  1341   000C2C  EF26  F006         	goto	l3031
  1342   000C30                     u2990:
  1343   000C30                     
  1344                           ;kernel.c: 47: kernelAddProc(pool[start]);
  1345   000C30  5025               	movf	_start^0,w,c
  1346   000C32  0D02               	mullw	2
  1347   000C34  0E01               	movlw	low _pool
  1348   000C36  24F3               	addwf	243,w,c
  1349   000C38  6ED9               	movwf	fsr2l,c
  1350   000C3A  0E00               	movlw	high _pool
  1351   000C3C  20F4               	addwfc	prodh,w,c
  1352   000C3E  6EDA               	movwf	fsr2h,c
  1353   000C40  CFDE F04C          	movff	postinc2,kernelAddProc@newProc
  1354   000C44  CFDD F04D          	movff	postdec2,kernelAddProc@newProc+1
  1355   000C48  ECAE  F008         	call	_kernelAddProc	;wreg free
  1356   000C4C                     l3031:
  1357                           
  1358                           ;kernel.c: 48: };kernel.c: 49: start = (start + 1) % 10;
  1359   000C4C  0E01               	movlw	1
  1360   000C4E  2425               	addwf	_start^0,w,c
  1361   000C50  6E46               	movwf	___awmod@dividend^0,c
  1362   000C52  6A47               	clrf	(___awmod@dividend+1)^0,c
  1363   000C54  0E00               	movlw	0
  1364   000C56  2247               	addwfc	(___awmod@dividend+1)^0,f,c
  1365   000C58  0E00               	movlw	0
  1366   000C5A  6E49               	movwf	(___awmod@divisor+1)^0,c
  1367   000C5C  0E0A               	movlw	10
  1368   000C5E  6E48               	movwf	___awmod@divisor^0,c
  1369   000C60  ECFE  F007         	call	___awmod	;wreg free
  1370   000C64  5046               	movf	?___awmod^0,w,c
  1371   000C66  6E25               	movwf	_start^0,c
  1372   000C68  EF57  F005         	goto	l85
  1373   000C6C  0012               	return		;funcret
  1374   000C6E                     __end_of_kernelLoop:
  1375                           	callstack 0
  1376                           
  1377 ;; *************** function _countTime *****************
  1378 ;; Defined at:
  1379 ;;		line 54 in file "main.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;		None
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;  dig             2   29[COMRAM] int 
  1384 ;; Return value:  Size  Location     Type
  1385 ;;                  1    wreg      unsigned char 
  1386 ;; Registers used:
  1387 ;;		wreg, status,2, status,0, cstack
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1393 ;;      Params:         0       0       0       0       0       0       0
  1394 ;;      Locals:         2       0       0       0       0       0       0
  1395 ;;      Temps:          0       0       0       0       0       0       0
  1396 ;;      Totals:         2       0       0       0       0       0       0
  1397 ;;Total ram usage:        2 bytes
  1398 ;; Hardware stack levels used: 1
  1399 ;; Hardware stack levels required when called: 4
  1400 ;; This function calls:
  1401 ;;		___awdiv
  1402 ;;		___awmod
  1403 ;;		_ssdDigit
  1404 ;; This function is called by:
  1405 ;;		_kernelLoop
  1406 ;; This function uses a non-reentrant model
  1407 ;;
  1408                           
  1409                           	psect	text5
  1410   000DAA                     __ptext5:
  1411                           	callstack 0
  1412   000DAA                     _countTime:
  1413                           	callstack 25
  1414   000DAA                     
  1415                           ;main.c: 56: valor++;
  1416   000DAA  4A1B               	infsnz	_valor^0,f,c
  1417   000DAC  2A1C               	incf	(_valor+1)^0,f,c
  1418   000DAE                     
  1419                           ;main.c: 57: int dig;;main.c: 61: dig = (valor)%10;
  1420   000DAE  C01B  F046         	movff	_valor,___awmod@dividend
  1421   000DB2  C01C  F047         	movff	_valor+1,___awmod@dividend+1
  1422   000DB6  0E00               	movlw	0
  1423   000DB8  6E49               	movwf	(___awmod@divisor+1)^0,c
  1424   000DBA  0E0A               	movlw	10
  1425   000DBC  6E48               	movwf	___awmod@divisor^0,c
  1426   000DBE  ECFE  F007         	call	___awmod	;wreg free
  1427   000DC2  C046  F04C         	movff	?___awmod,countTime@dig
  1428   000DC6  C047  F04D         	movff	?___awmod+1,countTime@dig+1
  1429   000DCA                     
  1430                           ;main.c: 62: ssdDigit(dig, 3);
  1431   000DCA  0E03               	movlw	3
  1432   000DCC  6E3E               	movwf	ssdDigit@pos^0,c
  1433   000DCE  504C               	movf	countTime@dig^0,w,c
  1434   000DD0  EC77  F009         	call	_ssdDigit
  1435   000DD4                     
  1436                           ;main.c: 64: dig = (valor/10)%10;
  1437   000DD4  0E00               	movlw	0
  1438   000DD6  6E41               	movwf	(___awdiv@divisor+1)^0,c
  1439   000DD8  0E0A               	movlw	10
  1440   000DDA  6E40               	movwf	___awdiv@divisor^0,c
  1441   000DDC  C01B  F03E         	movff	_valor,___awdiv@dividend
  1442   000DE0  C01C  F03F         	movff	_valor+1,___awdiv@dividend+1
  1443   000DE4  EC43  F007         	call	___awdiv	;wreg free
  1444   000DE8  C03E  F046         	movff	?___awdiv,___awmod@dividend
  1445   000DEC  C03F  F047         	movff	?___awdiv+1,___awmod@dividend+1
  1446   000DF0  0E00               	movlw	0
  1447   000DF2  6E49               	movwf	(___awmod@divisor+1)^0,c
  1448   000DF4  0E0A               	movlw	10
  1449   000DF6  6E48               	movwf	___awmod@divisor^0,c
  1450   000DF8  ECFE  F007         	call	___awmod	;wreg free
  1451   000DFC  C046  F04C         	movff	?___awmod,countTime@dig
  1452   000E00  C047  F04D         	movff	?___awmod+1,countTime@dig+1
  1453   000E04                     
  1454                           ;main.c: 65: ssdDigit(dig, 2);
  1455   000E04  0E02               	movlw	2
  1456   000E06  6E3E               	movwf	ssdDigit@pos^0,c
  1457   000E08  504C               	movf	countTime@dig^0,w,c
  1458   000E0A  EC77  F009         	call	_ssdDigit
  1459   000E0E                     
  1460                           ;main.c: 67: dig = (valor/100)%10;
  1461   000E0E  0E00               	movlw	0
  1462   000E10  6E41               	movwf	(___awdiv@divisor+1)^0,c
  1463   000E12  0E64               	movlw	100
  1464   000E14  6E40               	movwf	___awdiv@divisor^0,c
  1465   000E16  C01B  F03E         	movff	_valor,___awdiv@dividend
  1466   000E1A  C01C  F03F         	movff	_valor+1,___awdiv@dividend+1
  1467   000E1E  EC43  F007         	call	___awdiv	;wreg free
  1468   000E22  C03E  F046         	movff	?___awdiv,___awmod@dividend
  1469   000E26  C03F  F047         	movff	?___awdiv+1,___awmod@dividend+1
  1470   000E2A  0E00               	movlw	0
  1471   000E2C  6E49               	movwf	(___awmod@divisor+1)^0,c
  1472   000E2E  0E0A               	movlw	10
  1473   000E30  6E48               	movwf	___awmod@divisor^0,c
  1474   000E32  ECFE  F007         	call	___awmod	;wreg free
  1475   000E36  C046  F04C         	movff	?___awmod,countTime@dig
  1476   000E3A  C047  F04D         	movff	?___awmod+1,countTime@dig+1
  1477   000E3E                     
  1478                           ;main.c: 68: ssdDigit(dig, 1);
  1479   000E3E  0E01               	movlw	1
  1480   000E40  6E3E               	movwf	ssdDigit@pos^0,c
  1481   000E42  504C               	movf	countTime@dig^0,w,c
  1482   000E44  EC77  F009         	call	_ssdDigit
  1483   000E48                     
  1484                           ;main.c: 70: dig = (valor/1000)%10;
  1485   000E48  0E03               	movlw	3
  1486   000E4A  6E41               	movwf	(___awdiv@divisor+1)^0,c
  1487   000E4C  0EE8               	movlw	232
  1488   000E4E  6E40               	movwf	___awdiv@divisor^0,c
  1489   000E50  C01B  F03E         	movff	_valor,___awdiv@dividend
  1490   000E54  C01C  F03F         	movff	_valor+1,___awdiv@dividend+1
  1491   000E58  EC43  F007         	call	___awdiv	;wreg free
  1492   000E5C  C03E  F046         	movff	?___awdiv,___awmod@dividend
  1493   000E60  C03F  F047         	movff	?___awdiv+1,___awmod@dividend+1
  1494   000E64  0E00               	movlw	0
  1495   000E66  6E49               	movwf	(___awmod@divisor+1)^0,c
  1496   000E68  0E0A               	movlw	10
  1497   000E6A  6E48               	movwf	___awmod@divisor^0,c
  1498   000E6C  ECFE  F007         	call	___awmod	;wreg free
  1499   000E70  C046  F04C         	movff	?___awmod,countTime@dig
  1500   000E74  C047  F04D         	movff	?___awmod+1,countTime@dig+1
  1501   000E78                     
  1502                           ;main.c: 71: ssdDigit(dig, 0);
  1503   000E78  0E00               	movlw	0
  1504   000E7A  6E3E               	movwf	ssdDigit@pos^0,c
  1505   000E7C  504C               	movf	countTime@dig^0,w,c
  1506   000E7E  EC77  F009         	call	_ssdDigit
  1507   000E82                     
  1508                           ;main.c: 72: return 2;
  1509   000E82  0E02               	movlw	2
  1510   000E84  0012               	return		;funcret
  1511   000E86                     __end_of_countTime:
  1512                           	callstack 0
  1513                           
  1514 ;; *************** function _toggle4L *****************
  1515 ;; Defined at:
  1516 ;;		line 41 in file "main.c"
  1517 ;; Parameters:    Size  Location     Type
  1518 ;;		None
  1519 ;; Auto vars:     Size  Location     Type
  1520 ;;		None
  1521 ;; Return value:  Size  Location     Type
  1522 ;;                  1    wreg      unsigned char 
  1523 ;; Registers used:
  1524 ;;		wreg, status,2, status,0
  1525 ;; Tracked objects:
  1526 ;;		On entry : 0/0
  1527 ;;		On exit  : 0/0
  1528 ;;		Unchanged: 0/0
  1529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1530 ;;      Params:         0       0       0       0       0       0       0
  1531 ;;      Locals:         0       0       0       0       0       0       0
  1532 ;;      Temps:          0       0       0       0       0       0       0
  1533 ;;      Totals:         0       0       0       0       0       0       0
  1534 ;;Total ram usage:        0 bytes
  1535 ;; Hardware stack levels used: 1
  1536 ;; Hardware stack levels required when called: 3
  1537 ;; This function calls:
  1538 ;;		Nothing
  1539 ;; This function is called by:
  1540 ;;		_kernelLoop
  1541 ;; This function uses a non-reentrant model
  1542 ;;
  1543                           
  1544                           	psect	text6
  1545   001418                     __ptext6:
  1546                           	callstack 0
  1547   001418                     _toggle4L:
  1548                           	callstack 26
  1549   001418                     
  1550                           ;main.c: 43: PORTD ^= 0xF0;
  1551   001418  0EF0               	movlw	240
  1552   00141A  1A83               	xorwf	131,f,c	;volatile
  1553   00141C                     
  1554                           ;main.c: 44: return 2;
  1555   00141C  0E02               	movlw	2
  1556   00141E  0012               	return		;funcret
  1557   001420                     __end_of_toggle4L:
  1558                           	callstack 0
  1559                           
  1560 ;; *************** function _toggle4F *****************
  1561 ;; Defined at:
  1562 ;;		line 35 in file "main.c"
  1563 ;; Parameters:    Size  Location     Type
  1564 ;;		None
  1565 ;; Auto vars:     Size  Location     Type
  1566 ;;		None
  1567 ;; Return value:  Size  Location     Type
  1568 ;;                  1    wreg      unsigned char 
  1569 ;; Registers used:
  1570 ;;		wreg, status,2, status,0
  1571 ;; Tracked objects:
  1572 ;;		On entry : 0/0
  1573 ;;		On exit  : 0/0
  1574 ;;		Unchanged: 0/0
  1575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1576 ;;      Params:         0       0       0       0       0       0       0
  1577 ;;      Locals:         0       0       0       0       0       0       0
  1578 ;;      Temps:          0       0       0       0       0       0       0
  1579 ;;      Totals:         0       0       0       0       0       0       0
  1580 ;;Total ram usage:        0 bytes
  1581 ;; Hardware stack levels used: 1
  1582 ;; Hardware stack levels required when called: 3
  1583 ;; This function calls:
  1584 ;;		Nothing
  1585 ;; This function is called by:
  1586 ;;		_kernelLoop
  1587 ;; This function uses a non-reentrant model
  1588 ;;
  1589                           
  1590                           	psect	text7
  1591   001420                     __ptext7:
  1592                           	callstack 0
  1593   001420                     _toggle4F:
  1594                           	callstack 26
  1595   001420                     
  1596                           ;main.c: 37: PORTD ^= 0x0F;
  1597   001420  0E0F               	movlw	15
  1598   001422  1A83               	xorwf	131,f,c	;volatile
  1599   001424                     
  1600                           ;main.c: 38: return 2;
  1601   001424  0E02               	movlw	2
  1602   001426  0012               	return		;funcret
  1603   001428                     __end_of_toggle4F:
  1604                           	callstack 0
  1605                           
  1606 ;; *************** function _initPORTAD *****************
  1607 ;; Defined at:
  1608 ;;		line 29 in file "main.c"
  1609 ;; Parameters:    Size  Location     Type
  1610 ;;		None
  1611 ;; Auto vars:     Size  Location     Type
  1612 ;;		None
  1613 ;; Return value:  Size  Location     Type
  1614 ;;                  1    wreg      unsigned char 
  1615 ;; Registers used:
  1616 ;;		wreg, status,2
  1617 ;; Tracked objects:
  1618 ;;		On entry : 0/0
  1619 ;;		On exit  : 0/0
  1620 ;;		Unchanged: 0/0
  1621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1622 ;;      Params:         0       0       0       0       0       0       0
  1623 ;;      Locals:         0       0       0       0       0       0       0
  1624 ;;      Temps:          0       0       0       0       0       0       0
  1625 ;;      Totals:         0       0       0       0       0       0       0
  1626 ;;Total ram usage:        0 bytes
  1627 ;; Hardware stack levels used: 1
  1628 ;; Hardware stack levels required when called: 3
  1629 ;; This function calls:
  1630 ;;		Nothing
  1631 ;; This function is called by:
  1632 ;;		_kernelLoop
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636                           	psect	text8
  1637   001428                     __ptext8:
  1638                           	callstack 0
  1639   001428                     _initPORTAD:
  1640                           	callstack 26
  1641   001428                     
  1642                           ;main.c: 31: TRISD = 0x00;
  1643   001428  0E00               	movlw	0
  1644   00142A  6E95               	movwf	149,c	;volatile
  1645   00142C                     
  1646                           ;main.c: 32: return 0;
  1647   00142C  0E00               	movlw	0
  1648   00142E  0012               	return		;funcret
  1649   001430                     __end_of_initPORTAD:
  1650                           	callstack 0
  1651                           
  1652 ;; *************** function _updateSSD *****************
  1653 ;; Defined at:
  1654 ;;		line 47 in file "main.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;		None
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;		None
  1659 ;; Return value:  Size  Location     Type
  1660 ;;                  1    wreg      unsigned char 
  1661 ;; Registers used:
  1662 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1668 ;;      Params:         0       0       0       0       0       0       0
  1669 ;;      Locals:         0       0       0       0       0       0       0
  1670 ;;      Temps:          0       0       0       0       0       0       0
  1671 ;;      Totals:         0       0       0       0       0       0       0
  1672 ;;Total ram usage:        0 bytes
  1673 ;; Hardware stack levels used: 1
  1674 ;; Hardware stack levels required when called: 5
  1675 ;; This function calls:
  1676 ;;		_ssdUpdate
  1677 ;; This function is called by:
  1678 ;;		_kernelLoop
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682                           	psect	text9
  1683   001430                     __ptext9:
  1684                           	callstack 0
  1685   001430                     _updateSSD:
  1686                           	callstack 24
  1687   001430                     
  1688                           ;main.c: 49: ssdUpdate();
  1689   001430  EC37  F006         	call	_ssdUpdate	;wreg free
  1690   001434                     
  1691                           ;main.c: 50: return 2;
  1692   001434  0E02               	movlw	2
  1693   001436  0012               	return		;funcret
  1694   001438                     __end_of_updateSSD:
  1695                           	callstack 0
  1696                           
  1697 ;; *************** function _ssdUpdate *****************
  1698 ;; Defined at:
  1699 ;;		line 54 in file "ssd.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;		None
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;		None
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  1    wreg      void 
  1706 ;; Registers used:
  1707 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1713 ;;      Params:         0       0       0       0       0       0       0
  1714 ;;      Locals:         0       0       0       0       0       0       0
  1715 ;;      Temps:          0       0       0       0       0       0       0
  1716 ;;      Totals:         0       0       0       0       0       0       0
  1717 ;;Total ram usage:        0 bytes
  1718 ;; Hardware stack levels used: 1
  1719 ;; Hardware stack levels required when called: 4
  1720 ;; This function calls:
  1721 ;;		_digitalWrite
  1722 ;; This function is called by:
  1723 ;;		_updateSSD
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727                           	psect	text10
  1728   000C6E                     __ptext10:
  1729                           	callstack 0
  1730   000C6E                     _ssdUpdate:
  1731                           	callstack 24
  1732   000C6E                     
  1733                           ;ssd.c: 58: TRISD= 0x00;
  1734   000C6E  0E00               	movlw	0
  1735   000C70  6E95               	movwf	149,c	;volatile
  1736   000C72                     
  1737                           ;ssd.c: 60: digitalWrite(PIN_A2,0);
  1738   000C72  0E00               	movlw	0
  1739   000C74  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  1740   000C76  0E02               	movlw	2
  1741   000C78  6E3E               	movwf	digitalWrite@pin^0,c
  1742   000C7A  0E00               	movlw	0
  1743   000C7C  6E41               	movwf	(digitalWrite@value+1)^0,c
  1744   000C7E  0E00               	movlw	0
  1745   000C80  6E40               	movwf	digitalWrite@value^0,c
  1746   000C82  EC30  F004         	call	_digitalWrite	;wreg free
  1747   000C86                     
  1748                           ;ssd.c: 61: digitalWrite(PIN_A3,0);
  1749   000C86  0E00               	movlw	0
  1750   000C88  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  1751   000C8A  0E03               	movlw	3
  1752   000C8C  6E3E               	movwf	digitalWrite@pin^0,c
  1753   000C8E  0E00               	movlw	0
  1754   000C90  6E41               	movwf	(digitalWrite@value+1)^0,c
  1755   000C92  0E00               	movlw	0
  1756   000C94  6E40               	movwf	digitalWrite@value^0,c
  1757   000C96  EC30  F004         	call	_digitalWrite	;wreg free
  1758   000C9A                     
  1759                           ;ssd.c: 62: digitalWrite(PIN_A4,0);
  1760   000C9A  0E00               	movlw	0
  1761   000C9C  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  1762   000C9E  0E04               	movlw	4
  1763   000CA0  6E3E               	movwf	digitalWrite@pin^0,c
  1764   000CA2  0E00               	movlw	0
  1765   000CA4  6E41               	movwf	(digitalWrite@value+1)^0,c
  1766   000CA6  0E00               	movlw	0
  1767   000CA8  6E40               	movwf	digitalWrite@value^0,c
  1768   000CAA  EC30  F004         	call	_digitalWrite	;wreg free
  1769   000CAE                     
  1770                           ;ssd.c: 63: digitalWrite(PIN_A5,0);
  1771   000CAE  0E00               	movlw	0
  1772   000CB0  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  1773   000CB2  0E05               	movlw	5
  1774   000CB4  6E3E               	movwf	digitalWrite@pin^0,c
  1775   000CB6  0E00               	movlw	0
  1776   000CB8  6E41               	movwf	(digitalWrite@value+1)^0,c
  1777   000CBA  0E00               	movlw	0
  1778   000CBC  6E40               	movwf	digitalWrite@value^0,c
  1779   000CBE  EC30  F004         	call	_digitalWrite	;wreg free
  1780                           
  1781                           ;ssd.c: 66: PORTD = 0x00;
  1782   000CC2  0E00               	movlw	0
  1783   000CC4  6E83               	movwf	131,c	;volatile
  1784                           
  1785                           ;ssd.c: 69: switch (display)
  1786   000CC6  EFC1  F006         	goto	l2743
  1787   000CCA                     l2715:
  1788                           
  1789                           ;ssd.c: 72: PORTD = valor[v0];
  1790   000CCA  0E01               	movlw	low _valor@ssd$F533
  1791   000CCC  2420               	addwf	_v0^0,w,c
  1792   000CCE  6EF6               	movwf	tblptrl,c
  1793   000CD0  6AF7               	clrf	tblptrh,c
  1794   000CD2  0E06               	movlw	high _valor@ssd$F533
  1795   000CD4  22F7               	addwfc	tblptrh,f,c
  1796   000CD6                     	if	0	;There are less than 3 active tblptr bytes
  1797   000CD6                     	endif
  1798   000CD6  0008               	tblrd		*
  1799   000CD8  CFF5 FF83          	movff	tablat,3971	;volatile
  1800   000CDC                     
  1801                           ;ssd.c: 73: digitalWrite(PIN_A2,1);
  1802   000CDC  0E00               	movlw	0
  1803   000CDE  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  1804   000CE0  0E02               	movlw	2
  1805   000CE2  6E3E               	movwf	digitalWrite@pin^0,c
  1806   000CE4  0E00               	movlw	0
  1807   000CE6  6E41               	movwf	(digitalWrite@value+1)^0,c
  1808   000CE8  0E01               	movlw	1
  1809   000CEA  6E40               	movwf	digitalWrite@value^0,c
  1810   000CEC  EC30  F004         	call	_digitalWrite	;wreg free
  1811   000CF0                     
  1812                           ;ssd.c: 74: display = 1;
  1813   000CF0  0E01               	movlw	1
  1814   000CF2  6E21               	movwf	_display^0,c
  1815                           
  1816                           ;ssd.c: 75: break;
  1817   000CF4  EFD4  F006         	goto	l473
  1818   000CF8                     l2721:
  1819                           
  1820                           ;ssd.c: 78: PORTD = valor[v1];
  1821   000CF8  0E01               	movlw	low _valor@ssd$F533
  1822   000CFA  241F               	addwf	_v1^0,w,c
  1823   000CFC  6EF6               	movwf	tblptrl,c
  1824   000CFE  6AF7               	clrf	tblptrh,c
  1825   000D00  0E06               	movlw	high _valor@ssd$F533
  1826   000D02  22F7               	addwfc	tblptrh,f,c
  1827   000D04                     	if	0	;There are less than 3 active tblptr bytes
  1828   000D04                     	endif
  1829   000D04  0008               	tblrd		*
  1830   000D06  CFF5 FF83          	movff	tablat,3971	;volatile
  1831   000D0A                     
  1832                           ;ssd.c: 79: digitalWrite(PIN_A3,1);
  1833   000D0A  0E00               	movlw	0
  1834   000D0C  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  1835   000D0E  0E03               	movlw	3
  1836   000D10  6E3E               	movwf	digitalWrite@pin^0,c
  1837   000D12  0E00               	movlw	0
  1838   000D14  6E41               	movwf	(digitalWrite@value+1)^0,c
  1839   000D16  0E01               	movlw	1
  1840   000D18  6E40               	movwf	digitalWrite@value^0,c
  1841   000D1A  EC30  F004         	call	_digitalWrite	;wreg free
  1842   000D1E                     
  1843                           ;ssd.c: 80: display = 2;
  1844   000D1E  0E02               	movlw	2
  1845   000D20  6E21               	movwf	_display^0,c
  1846                           
  1847                           ;ssd.c: 81: break;
  1848   000D22  EFD4  F006         	goto	l473
  1849   000D26                     l2727:
  1850                           
  1851                           ;ssd.c: 84: PORTD = valor[v2];
  1852   000D26  0E01               	movlw	low _valor@ssd$F533
  1853   000D28  241E               	addwf	_v2^0,w,c
  1854   000D2A  6EF6               	movwf	tblptrl,c
  1855   000D2C  6AF7               	clrf	tblptrh,c
  1856   000D2E  0E06               	movlw	high _valor@ssd$F533
  1857   000D30  22F7               	addwfc	tblptrh,f,c
  1858   000D32                     	if	0	;There are less than 3 active tblptr bytes
  1859   000D32                     	endif
  1860   000D32  0008               	tblrd		*
  1861   000D34  CFF5 FF83          	movff	tablat,3971	;volatile
  1862   000D38                     
  1863                           ;ssd.c: 85: digitalWrite(PIN_A4,1);
  1864   000D38  0E00               	movlw	0
  1865   000D3A  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  1866   000D3C  0E04               	movlw	4
  1867   000D3E  6E3E               	movwf	digitalWrite@pin^0,c
  1868   000D40  0E00               	movlw	0
  1869   000D42  6E41               	movwf	(digitalWrite@value+1)^0,c
  1870   000D44  0E01               	movlw	1
  1871   000D46  6E40               	movwf	digitalWrite@value^0,c
  1872   000D48  EC30  F004         	call	_digitalWrite	;wreg free
  1873   000D4C                     
  1874                           ;ssd.c: 86: display = 3;
  1875   000D4C  0E03               	movlw	3
  1876   000D4E  6E21               	movwf	_display^0,c
  1877                           
  1878                           ;ssd.c: 87: break;
  1879   000D50  EFD4  F006         	goto	l473
  1880   000D54                     l2733:
  1881                           
  1882                           ;ssd.c: 90: PORTD = valor[v3];
  1883   000D54  0E01               	movlw	low _valor@ssd$F533
  1884   000D56  241D               	addwf	_v3^0,w,c
  1885   000D58  6EF6               	movwf	tblptrl,c
  1886   000D5A  6AF7               	clrf	tblptrh,c
  1887   000D5C  0E06               	movlw	high _valor@ssd$F533
  1888   000D5E  22F7               	addwfc	tblptrh,f,c
  1889   000D60                     	if	0	;There are less than 3 active tblptr bytes
  1890   000D60                     	endif
  1891   000D60  0008               	tblrd		*
  1892   000D62  CFF5 FF83          	movff	tablat,3971	;volatile
  1893   000D66                     
  1894                           ;ssd.c: 91: digitalWrite(PIN_A5,1);
  1895   000D66  0E00               	movlw	0
  1896   000D68  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  1897   000D6A  0E05               	movlw	5
  1898   000D6C  6E3E               	movwf	digitalWrite@pin^0,c
  1899   000D6E  0E00               	movlw	0
  1900   000D70  6E41               	movwf	(digitalWrite@value+1)^0,c
  1901   000D72  0E01               	movlw	1
  1902   000D74  6E40               	movwf	digitalWrite@value^0,c
  1903   000D76  EC30  F004         	call	_digitalWrite	;wreg free
  1904   000D7A                     l2737:
  1905                           
  1906                           ;ssd.c: 92: display = 0;
  1907   000D7A  0E00               	movlw	0
  1908   000D7C  6E21               	movwf	_display^0,c
  1909                           
  1910                           ;ssd.c: 93: break;
  1911   000D7E  EFD4  F006         	goto	l473
  1912   000D82                     l2743:
  1913   000D82  5021               	movf	_display^0,w,c
  1914                           
  1915                           ; Switch size 1, requested type "simple"
  1916                           ; Number of cases is 4, Range of values is 0 to 3
  1917                           ; switch strategies available:
  1918                           ; Name         Instructions Cycles
  1919                           ; simple_byte           13     7 (average)
  1920                           ;	Chosen strategy is simple_byte
  1921   000D84  0A00               	xorlw	0	; case 0
  1922   000D86  B4D8               	btfsc	status,2,c
  1923   000D88  EF65  F006         	goto	l2715
  1924   000D8C  0A01               	xorlw	1	; case 1
  1925   000D8E  B4D8               	btfsc	status,2,c
  1926   000D90  EF7C  F006         	goto	l2721
  1927   000D94  0A03               	xorlw	3	; case 2
  1928   000D96  B4D8               	btfsc	status,2,c
  1929   000D98  EF93  F006         	goto	l2727
  1930   000D9C  0A01               	xorlw	1	; case 3
  1931   000D9E  B4D8               	btfsc	status,2,c
  1932   000DA0  EFAA  F006         	goto	l2733
  1933   000DA4  EFBD  F006         	goto	l2737
  1934   000DA8                     l473:
  1935   000DA8  0012               	return		;funcret
  1936   000DAA                     __end_of_ssdUpdate:
  1937                           	callstack 0
  1938                           
  1939 ;; *************** function _digitalWrite *****************
  1940 ;; Defined at:
  1941 ;;		line 14 in file "io.c"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;  pin             2   15[COMRAM] int 
  1944 ;;  value           2   17[COMRAM] int 
  1945 ;; Auto vars:     Size  Location     Type
  1946 ;;		None
  1947 ;; Return value:  Size  Location     Type
  1948 ;;                  1    wreg      void 
  1949 ;; Registers used:
  1950 ;;		wreg, status,2, status,0
  1951 ;; Tracked objects:
  1952 ;;		On entry : 0/0
  1953 ;;		On exit  : 0/0
  1954 ;;		Unchanged: 0/0
  1955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1956 ;;      Params:         4       0       0       0       0       0       0
  1957 ;;      Locals:         0       0       0       0       0       0       0
  1958 ;;      Temps:          2       0       0       0       0       0       0
  1959 ;;      Totals:         6       0       0       0       0       0       0
  1960 ;;Total ram usage:        6 bytes
  1961 ;; Hardware stack levels used: 1
  1962 ;; Hardware stack levels required when called: 3
  1963 ;; This function calls:
  1964 ;;		Nothing
  1965 ;; This function is called by:
  1966 ;;		_ssdUpdate
  1967 ;;		_lcdCommand
  1968 ;;		_lcdData
  1969 ;;		_clear_SCL
  1970 ;;		_clear_SDA
  1971 ;; This function uses a non-reentrant model
  1972 ;;
  1973                           
  1974                           	psect	text11
  1975   000860                     __ptext11:
  1976                           	callstack 0
  1977   000860                     _digitalWrite:
  1978                           	callstack 24
  1979   000860                     
  1980                           ;io.c: 16: if(pin <8){
  1981   000860  BE3F               	btfsc	(digitalWrite@pin+1)^0,7,c
  1982   000862  EF3E  F004         	goto	u2250
  1983   000866  503F               	movf	(digitalWrite@pin+1)^0,w,c
  1984   000868  E107               	bnz	u2251
  1985   00086A  0E08               	movlw	8
  1986   00086C  5C3E               	subwf	digitalWrite@pin^0,w,c
  1987   00086E  B0D8               	btfsc	status,0,c
  1988   000870  EF3C  F004         	goto	u2251
  1989   000874  EF3E  F004         	goto	u2250
  1990   000878                     u2251:
  1991   000878  EF68  F004         	goto	l2673
  1992   00087C                     u2250:
  1993   00087C                     
  1994                           ;io.c: 17: if (value){ ((PORTA) |= (1<<(pin)));}
  1995   00087C  5040               	movf	digitalWrite@value^0,w,c
  1996   00087E  1041               	iorwf	(digitalWrite@value+1)^0,w,c
  1997   000880  B4D8               	btfsc	status,2,c
  1998   000882  EF45  F004         	goto	u2261
  1999   000886  EF47  F004         	goto	u2260
  2000   00088A                     u2261:
  2001   00088A  EF57  F004         	goto	l2671
  2002   00088E                     u2260:
  2003   00088E  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2004   000892  0E01               	movlw	1
  2005   000894  6E43               	movwf	(??_digitalWrite+1)^0,c
  2006   000896  2A42               	incf	??_digitalWrite^0,f,c
  2007   000898  EF50  F004         	goto	u2274
  2008   00089C                     u2275:
  2009   00089C  90D8               	bcf	status,0,c
  2010   00089E  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2011   0008A0                     u2274:
  2012   0008A0  2E42               	decfsz	??_digitalWrite^0,f,c
  2013   0008A2  EF4E  F004         	goto	u2275
  2014   0008A6  5043               	movf	(??_digitalWrite+1)^0,w,c
  2015   0008A8  1280               	iorwf	128,f,c	;volatile
  2016   0008AA  EF56  F005         	goto	l213
  2017   0008AE                     l2671:
  2018                           
  2019                           ;io.c: 18: else{ ((PORTA) &= ~(1<<(pin)));}
  2020   0008AE  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2021   0008B2  0E01               	movlw	1
  2022   0008B4  6E43               	movwf	(??_digitalWrite+1)^0,c
  2023   0008B6  2A42               	incf	??_digitalWrite^0,f,c
  2024   0008B8  EF60  F004         	goto	u2284
  2025   0008BC                     u2285:
  2026   0008BC  90D8               	bcf	status,0,c
  2027   0008BE  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2028   0008C0                     u2284:
  2029   0008C0  2E42               	decfsz	??_digitalWrite^0,f,c
  2030   0008C2  EF5E  F004         	goto	u2285
  2031   0008C6  5043               	movf	(??_digitalWrite+1)^0,w,c
  2032   0008C8  0AFF               	xorlw	255
  2033   0008CA  1680               	andwf	128,f,c	;volatile
  2034   0008CC  EF56  F005         	goto	l213
  2035   0008D0                     l2673:
  2036   0008D0  BE3F               	btfsc	(digitalWrite@pin+1)^0,7,c
  2037   0008D2  EF76  F004         	goto	u2290
  2038   0008D6  503F               	movf	(digitalWrite@pin+1)^0,w,c
  2039   0008D8  E107               	bnz	u2291
  2040   0008DA  0E10               	movlw	16
  2041   0008DC  5C3E               	subwf	digitalWrite@pin^0,w,c
  2042   0008DE  B0D8               	btfsc	status,0,c
  2043   0008E0  EF74  F004         	goto	u2291
  2044   0008E4  EF76  F004         	goto	u2290
  2045   0008E8                     u2291:
  2046   0008E8  EFA4  F004         	goto	l2681
  2047   0008EC                     u2290:
  2048   0008EC                     
  2049                           ;io.c: 20: pin -=8;
  2050   0008EC  0EF8               	movlw	248
  2051   0008EE  263E               	addwf	digitalWrite@pin^0,f,c
  2052   0008F0  0EFF               	movlw	255
  2053   0008F2  223F               	addwfc	(digitalWrite@pin+1)^0,f,c
  2054                           
  2055                           ;io.c: 21: if (value){ ((PORTB) |= (1<<(pin)));}
  2056   0008F4  5040               	movf	digitalWrite@value^0,w,c
  2057   0008F6  1041               	iorwf	(digitalWrite@value+1)^0,w,c
  2058   0008F8  B4D8               	btfsc	status,2,c
  2059   0008FA  EF81  F004         	goto	u2301
  2060   0008FE  EF83  F004         	goto	u2300
  2061   000902                     u2301:
  2062   000902  EF93  F004         	goto	l2679
  2063   000906                     u2300:
  2064   000906  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2065   00090A  0E01               	movlw	1
  2066   00090C  6E43               	movwf	(??_digitalWrite+1)^0,c
  2067   00090E  2A42               	incf	??_digitalWrite^0,f,c
  2068   000910  EF8C  F004         	goto	u2314
  2069   000914                     u2315:
  2070   000914  90D8               	bcf	status,0,c
  2071   000916  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2072   000918                     u2314:
  2073   000918  2E42               	decfsz	??_digitalWrite^0,f,c
  2074   00091A  EF8A  F004         	goto	u2315
  2075   00091E  5043               	movf	(??_digitalWrite+1)^0,w,c
  2076   000920  1281               	iorwf	129,f,c	;volatile
  2077   000922  EF56  F005         	goto	l213
  2078   000926                     l2679:
  2079                           
  2080                           ;io.c: 22: else{ ((PORTB) &= ~(1<<(pin)));}
  2081   000926  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2082   00092A  0E01               	movlw	1
  2083   00092C  6E43               	movwf	(??_digitalWrite+1)^0,c
  2084   00092E  2A42               	incf	??_digitalWrite^0,f,c
  2085   000930  EF9C  F004         	goto	u2324
  2086   000934                     u2325:
  2087   000934  90D8               	bcf	status,0,c
  2088   000936  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2089   000938                     u2324:
  2090   000938  2E42               	decfsz	??_digitalWrite^0,f,c
  2091   00093A  EF9A  F004         	goto	u2325
  2092   00093E  5043               	movf	(??_digitalWrite+1)^0,w,c
  2093   000940  0AFF               	xorlw	255
  2094   000942  1681               	andwf	129,f,c	;volatile
  2095   000944  EF56  F005         	goto	l213
  2096   000948                     l2681:
  2097   000948  BE3F               	btfsc	(digitalWrite@pin+1)^0,7,c
  2098   00094A  EFB2  F004         	goto	u2330
  2099   00094E  503F               	movf	(digitalWrite@pin+1)^0,w,c
  2100   000950  E107               	bnz	u2331
  2101   000952  0E18               	movlw	24
  2102   000954  5C3E               	subwf	digitalWrite@pin^0,w,c
  2103   000956  B0D8               	btfsc	status,0,c
  2104   000958  EFB0  F004         	goto	u2331
  2105   00095C  EFB2  F004         	goto	u2330
  2106   000960                     u2331:
  2107   000960  EFE0  F004         	goto	l2689
  2108   000964                     u2330:
  2109   000964                     
  2110                           ;io.c: 24: pin -=16;
  2111   000964  0EF0               	movlw	240
  2112   000966  263E               	addwf	digitalWrite@pin^0,f,c
  2113   000968  0EFF               	movlw	255
  2114   00096A  223F               	addwfc	(digitalWrite@pin+1)^0,f,c
  2115                           
  2116                           ;io.c: 25: if (value){ ((PORTC) |= (1<<(pin)));}
  2117   00096C  5040               	movf	digitalWrite@value^0,w,c
  2118   00096E  1041               	iorwf	(digitalWrite@value+1)^0,w,c
  2119   000970  B4D8               	btfsc	status,2,c
  2120   000972  EFBD  F004         	goto	u2341
  2121   000976  EFBF  F004         	goto	u2340
  2122   00097A                     u2341:
  2123   00097A  EFCF  F004         	goto	l2687
  2124   00097E                     u2340:
  2125   00097E  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2126   000982  0E01               	movlw	1
  2127   000984  6E43               	movwf	(??_digitalWrite+1)^0,c
  2128   000986  2A42               	incf	??_digitalWrite^0,f,c
  2129   000988  EFC8  F004         	goto	u2354
  2130   00098C                     u2355:
  2131   00098C  90D8               	bcf	status,0,c
  2132   00098E  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2133   000990                     u2354:
  2134   000990  2E42               	decfsz	??_digitalWrite^0,f,c
  2135   000992  EFC6  F004         	goto	u2355
  2136   000996  5043               	movf	(??_digitalWrite+1)^0,w,c
  2137   000998  1282               	iorwf	130,f,c	;volatile
  2138   00099A  EF56  F005         	goto	l213
  2139   00099E                     l2687:
  2140                           
  2141                           ;io.c: 26: else{ ((PORTC) &= ~(1<<(pin)));}
  2142   00099E  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2143   0009A2  0E01               	movlw	1
  2144   0009A4  6E43               	movwf	(??_digitalWrite+1)^0,c
  2145   0009A6  2A42               	incf	??_digitalWrite^0,f,c
  2146   0009A8  EFD8  F004         	goto	u2364
  2147   0009AC                     u2365:
  2148   0009AC  90D8               	bcf	status,0,c
  2149   0009AE  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2150   0009B0                     u2364:
  2151   0009B0  2E42               	decfsz	??_digitalWrite^0,f,c
  2152   0009B2  EFD6  F004         	goto	u2365
  2153   0009B6  5043               	movf	(??_digitalWrite+1)^0,w,c
  2154   0009B8  0AFF               	xorlw	255
  2155   0009BA  1682               	andwf	130,f,c	;volatile
  2156   0009BC  EF56  F005         	goto	l213
  2157   0009C0                     l2689:
  2158   0009C0  BE3F               	btfsc	(digitalWrite@pin+1)^0,7,c
  2159   0009C2  EFEE  F004         	goto	u2370
  2160   0009C6  503F               	movf	(digitalWrite@pin+1)^0,w,c
  2161   0009C8  E107               	bnz	u2371
  2162   0009CA  0E20               	movlw	32
  2163   0009CC  5C3E               	subwf	digitalWrite@pin^0,w,c
  2164   0009CE  B0D8               	btfsc	status,0,c
  2165   0009D0  EFEC  F004         	goto	u2371
  2166   0009D4  EFEE  F004         	goto	u2370
  2167   0009D8                     u2371:
  2168   0009D8  EF1C  F005         	goto	l2697
  2169   0009DC                     u2370:
  2170   0009DC                     
  2171                           ;io.c: 28: pin -=24;
  2172   0009DC  0EE8               	movlw	232
  2173   0009DE  263E               	addwf	digitalWrite@pin^0,f,c
  2174   0009E0  0EFF               	movlw	255
  2175   0009E2  223F               	addwfc	(digitalWrite@pin+1)^0,f,c
  2176                           
  2177                           ;io.c: 29: if (value){ ((PORTD) |= (1<<(pin)));}
  2178   0009E4  5040               	movf	digitalWrite@value^0,w,c
  2179   0009E6  1041               	iorwf	(digitalWrite@value+1)^0,w,c
  2180   0009E8  B4D8               	btfsc	status,2,c
  2181   0009EA  EFF9  F004         	goto	u2381
  2182   0009EE  EFFB  F004         	goto	u2380
  2183   0009F2                     u2381:
  2184   0009F2  EF0B  F005         	goto	l2695
  2185   0009F6                     u2380:
  2186   0009F6  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2187   0009FA  0E01               	movlw	1
  2188   0009FC  6E43               	movwf	(??_digitalWrite+1)^0,c
  2189   0009FE  2A42               	incf	??_digitalWrite^0,f,c
  2190   000A00  EF04  F005         	goto	u2394
  2191   000A04                     u2395:
  2192   000A04  90D8               	bcf	status,0,c
  2193   000A06  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2194   000A08                     u2394:
  2195   000A08  2E42               	decfsz	??_digitalWrite^0,f,c
  2196   000A0A  EF02  F005         	goto	u2395
  2197   000A0E  5043               	movf	(??_digitalWrite+1)^0,w,c
  2198   000A10  1283               	iorwf	131,f,c	;volatile
  2199   000A12  EF56  F005         	goto	l213
  2200   000A16                     l2695:
  2201                           
  2202                           ;io.c: 30: else{ ((PORTD) &= ~(1<<(pin)));}
  2203   000A16  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2204   000A1A  0E01               	movlw	1
  2205   000A1C  6E43               	movwf	(??_digitalWrite+1)^0,c
  2206   000A1E  2A42               	incf	??_digitalWrite^0,f,c
  2207   000A20  EF14  F005         	goto	u2404
  2208   000A24                     u2405:
  2209   000A24  90D8               	bcf	status,0,c
  2210   000A26  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2211   000A28                     u2404:
  2212   000A28  2E42               	decfsz	??_digitalWrite^0,f,c
  2213   000A2A  EF12  F005         	goto	u2405
  2214   000A2E  5043               	movf	(??_digitalWrite+1)^0,w,c
  2215   000A30  0AFF               	xorlw	255
  2216   000A32  1683               	andwf	131,f,c	;volatile
  2217   000A34  EF56  F005         	goto	l213
  2218   000A38                     l2697:
  2219   000A38  BE3F               	btfsc	(digitalWrite@pin+1)^0,7,c
  2220   000A3A  EF2A  F005         	goto	u2410
  2221   000A3E  503F               	movf	(digitalWrite@pin+1)^0,w,c
  2222   000A40  E107               	bnz	u2411
  2223   000A42  0E28               	movlw	40
  2224   000A44  5C3E               	subwf	digitalWrite@pin^0,w,c
  2225   000A46  B0D8               	btfsc	status,0,c
  2226   000A48  EF28  F005         	goto	u2411
  2227   000A4C  EF2A  F005         	goto	u2410
  2228   000A50                     u2411:
  2229   000A50  EF56  F005         	goto	l213
  2230   000A54                     u2410:
  2231   000A54                     
  2232                           ;io.c: 32: pin -=32;
  2233   000A54  0EE0               	movlw	224
  2234   000A56  263E               	addwf	digitalWrite@pin^0,f,c
  2235   000A58  0EFF               	movlw	255
  2236   000A5A  223F               	addwfc	(digitalWrite@pin+1)^0,f,c
  2237                           
  2238                           ;io.c: 33: if (value){ ((PORTE) |= (1<<(pin)));}
  2239   000A5C  5040               	movf	digitalWrite@value^0,w,c
  2240   000A5E  1041               	iorwf	(digitalWrite@value+1)^0,w,c
  2241   000A60  B4D8               	btfsc	status,2,c
  2242   000A62  EF35  F005         	goto	u2421
  2243   000A66  EF37  F005         	goto	u2420
  2244   000A6A                     u2421:
  2245   000A6A  EF47  F005         	goto	l2703
  2246   000A6E                     u2420:
  2247   000A6E  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2248   000A72  0E01               	movlw	1
  2249   000A74  6E43               	movwf	(??_digitalWrite+1)^0,c
  2250   000A76  2A42               	incf	??_digitalWrite^0,f,c
  2251   000A78  EF40  F005         	goto	u2434
  2252   000A7C                     u2435:
  2253   000A7C  90D8               	bcf	status,0,c
  2254   000A7E  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2255   000A80                     u2434:
  2256   000A80  2E42               	decfsz	??_digitalWrite^0,f,c
  2257   000A82  EF3E  F005         	goto	u2435
  2258   000A86  5043               	movf	(??_digitalWrite+1)^0,w,c
  2259   000A88  1284               	iorwf	132,f,c	;volatile
  2260   000A8A  EF56  F005         	goto	l213
  2261   000A8E                     l2703:
  2262                           
  2263                           ;io.c: 34: else{ ((PORTE) &= ~(1<<(pin)));}
  2264   000A8E  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2265   000A92  0E01               	movlw	1
  2266   000A94  6E43               	movwf	(??_digitalWrite+1)^0,c
  2267   000A96  2A42               	incf	??_digitalWrite^0,f,c
  2268   000A98  EF50  F005         	goto	u2444
  2269   000A9C                     u2445:
  2270   000A9C  90D8               	bcf	status,0,c
  2271   000A9E  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2272   000AA0                     u2444:
  2273   000AA0  2E42               	decfsz	??_digitalWrite^0,f,c
  2274   000AA2  EF4E  F005         	goto	u2445
  2275   000AA6  5043               	movf	(??_digitalWrite+1)^0,w,c
  2276   000AA8  0AFF               	xorlw	255
  2277   000AAA  1684               	andwf	132,f,c	;volatile
  2278   000AAC                     l213:
  2279   000AAC  0012               	return		;funcret
  2280   000AAE                     __end_of_digitalWrite:
  2281                           	callstack 0
  2282                           
  2283 ;; *************** function _kernelAddProc *****************
  2284 ;; Defined at:
  2285 ;;		line 13 in file "kernel.c"
  2286 ;; Parameters:    Size  Location     Type
  2287 ;;  newProc         2   29[COMRAM] PTR struct .
  2288 ;;		 -> main@countTime_proc(6), main@SSDUpdate_proc(6), main@ProcLedL(6), main@ProcLedF(6), 
  2289 ;;		 -> main@init_PD(6), 
  2290 ;; Auto vars:     Size  Location     Type
  2291 ;;		None
  2292 ;; Return value:  Size  Location     Type
  2293 ;;                  1    wreg      unsigned char 
  2294 ;; Registers used:
  2295 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2296 ;; Tracked objects:
  2297 ;;		On entry : 0/0
  2298 ;;		On exit  : 0/0
  2299 ;;		Unchanged: 0/0
  2300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2301 ;;      Params:         2       0       0       0       0       0       0
  2302 ;;      Locals:         0       0       0       0       0       0       0
  2303 ;;      Temps:          2       0       0       0       0       0       0
  2304 ;;      Totals:         4       0       0       0       0       0       0
  2305 ;;Total ram usage:        4 bytes
  2306 ;; Hardware stack levels used: 1
  2307 ;; Hardware stack levels required when called: 4
  2308 ;; This function calls:
  2309 ;;		___awmod
  2310 ;; This function is called by:
  2311 ;;		_main
  2312 ;;		_kernelLoop
  2313 ;; This function uses a non-reentrant model
  2314 ;;
  2315                           
  2316                           	psect	text12
  2317   00115C                     __ptext12:
  2318                           	callstack 0
  2319   00115C                     _kernelAddProc:
  2320                           	callstack 25
  2321   00115C                     
  2322                           ;kernel.c: 15: if (((end + 1) % 10) != start) {
  2323   00115C  5025               	movf	_start^0,w,c
  2324   00115E  6E4E               	movwf	??_kernelAddProc^0,c
  2325   001160  6A4F               	clrf	(??_kernelAddProc+1)^0,c
  2326   001162  0E01               	movlw	1
  2327   001164  2424               	addwf	_end^0,w,c
  2328   001166  6E46               	movwf	___awmod@dividend^0,c
  2329   001168  6A47               	clrf	(___awmod@dividend+1)^0,c
  2330   00116A  0E00               	movlw	0
  2331   00116C  2247               	addwfc	(___awmod@dividend+1)^0,f,c
  2332   00116E  0E00               	movlw	0
  2333   001170  6E49               	movwf	(___awmod@divisor+1)^0,c
  2334   001172  0E0A               	movlw	10
  2335   001174  6E48               	movwf	___awmod@divisor^0,c
  2336   001176  ECFE  F007         	call	___awmod	;wreg free
  2337   00117A  504E               	movf	??_kernelAddProc^0,w,c
  2338   00117C  1846               	xorwf	?___awmod^0,w,c
  2339   00117E  E109               	bnz	u2610
  2340   001180  504F               	movf	(??_kernelAddProc+1)^0,w,c
  2341   001182  1847               	xorwf	(?___awmod+1)^0,w,c
  2342   001184  B4D8               	btfsc	status,2,c
  2343   001186  EFC7  F008         	goto	u2611
  2344   00118A  EFC9  F008         	goto	u2610
  2345   00118E                     u2611:
  2346   00118E  EFFF  F008         	goto	l82
  2347   001192                     u2610:
  2348   001192                     
  2349                           ;kernel.c: 16: pool[end] = newProc;
  2350   001192  5024               	movf	_end^0,w,c
  2351   001194  0D02               	mullw	2
  2352   001196  0E01               	movlw	low _pool
  2353   001198  24F3               	addwf	243,w,c
  2354   00119A  6ED9               	movwf	fsr2l,c
  2355   00119C  0E00               	movlw	high _pool
  2356   00119E  20F4               	addwfc	prodh,w,c
  2357   0011A0  6EDA               	movwf	fsr2h,c
  2358   0011A2  C04C  FFDE         	movff	kernelAddProc@newProc,postinc2
  2359   0011A6  C04D  FFDD         	movff	kernelAddProc@newProc+1,postdec2
  2360   0011AA                     
  2361                           ;kernel.c: 17: pool[end]->start += newProc->period;
  2362   0011AA  EE20 F002          	lfsr	2,2
  2363   0011AE  504C               	movf	kernelAddProc@newProc^0,w,c
  2364   0011B0  26D9               	addwf	fsr2l,f,c
  2365   0011B2  504D               	movf	(kernelAddProc@newProc+1)^0,w,c
  2366   0011B4  22DA               	addwfc	fsr2h,f,c
  2367   0011B6  CFDE F04E          	movff	postinc2,??_kernelAddProc
  2368   0011BA  CFDD F04F          	movff	postdec2,??_kernelAddProc+1
  2369   0011BE  5024               	movf	_end^0,w,c
  2370   0011C0  0D02               	mullw	2
  2371   0011C2  0E01               	movlw	low _pool
  2372   0011C4  24F3               	addwf	243,w,c
  2373   0011C6  6ED9               	movwf	fsr2l,c
  2374   0011C8  0E00               	movlw	high _pool
  2375   0011CA  20F4               	addwfc	prodh,w,c
  2376   0011CC  6EDA               	movwf	fsr2h,c
  2377   0011CE  EE10 F004          	lfsr	1,4
  2378   0011D2  50DE               	movf	postinc2,w,c
  2379   0011D4  26E1               	addwf	fsr1l,f,c
  2380   0011D6  50DD               	movf	postdec2,w,c
  2381   0011D8  22E2               	addwfc	fsr1h,f,c
  2382   0011DA  504E               	movf	??_kernelAddProc^0,w,c
  2383   0011DC  26E6               	addwf	postinc1,f,c
  2384   0011DE  504F               	movf	(??_kernelAddProc+1)^0,w,c
  2385   0011E0  22E5               	addwfc	postdec1,f,c
  2386   0011E2                     
  2387                           ;kernel.c: 18: end = (end + 1) % 10;
  2388   0011E2  0E01               	movlw	1
  2389   0011E4  2424               	addwf	_end^0,w,c
  2390   0011E6  6E46               	movwf	___awmod@dividend^0,c
  2391   0011E8  6A47               	clrf	(___awmod@dividend+1)^0,c
  2392   0011EA  0E00               	movlw	0
  2393   0011EC  2247               	addwfc	(___awmod@dividend+1)^0,f,c
  2394   0011EE  0E00               	movlw	0
  2395   0011F0  6E49               	movwf	(___awmod@divisor+1)^0,c
  2396   0011F2  0E0A               	movlw	10
  2397   0011F4  6E48               	movwf	___awmod@divisor^0,c
  2398   0011F6  ECFE  F007         	call	___awmod	;wreg free
  2399   0011FA  5046               	movf	?___awmod^0,w,c
  2400   0011FC  6E24               	movwf	_end^0,c
  2401   0011FE                     l82:
  2402   0011FE  0012               	return		;funcret
  2403   001200                     __end_of_kernelAddProc:
  2404                           	callstack 0
  2405                           
  2406 ;; *************** function _ssdDigit *****************
  2407 ;; Defined at:
  2408 ;;		line 38 in file "ssd.c"
  2409 ;; Parameters:    Size  Location     Type
  2410 ;;  val             1    wreg     unsigned char 
  2411 ;;  pos             1   15[COMRAM] unsigned char 
  2412 ;; Auto vars:     Size  Location     Type
  2413 ;;  val             1   16[COMRAM] unsigned char 
  2414 ;; Return value:  Size  Location     Type
  2415 ;;                  1    wreg      void 
  2416 ;; Registers used:
  2417 ;;		wreg, status,2, status,0
  2418 ;; Tracked objects:
  2419 ;;		On entry : 0/0
  2420 ;;		On exit  : 0/0
  2421 ;;		Unchanged: 0/0
  2422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2423 ;;      Params:         1       0       0       0       0       0       0
  2424 ;;      Locals:         1       0       0       0       0       0       0
  2425 ;;      Temps:          0       0       0       0       0       0       0
  2426 ;;      Totals:         2       0       0       0       0       0       0
  2427 ;;Total ram usage:        2 bytes
  2428 ;; Hardware stack levels used: 1
  2429 ;; Hardware stack levels required when called: 3
  2430 ;; This function calls:
  2431 ;;		Nothing
  2432 ;; This function is called by:
  2433 ;;		_countTime
  2434 ;; This function uses a non-reentrant model
  2435 ;;
  2436                           
  2437                           	psect	text13
  2438   0012EE                     __ptext13:
  2439                           	callstack 0
  2440   0012EE                     _ssdDigit:
  2441                           	callstack 25
  2442                           
  2443                           ;incstack = 0
  2444                           ;ssdDigit@val stored from wreg
  2445   0012EE  6E3F               	movwf	ssdDigit@val^0,c
  2446   0012F0                     
  2447                           ;ssd.c: 39: if (pos == 0) {
  2448   0012F0  503E               	movf	ssdDigit@pos^0,w,c
  2449   0012F2  A4D8               	btfss	status,2,c
  2450   0012F4  EF7E  F009         	goto	u2451
  2451   0012F8  EF80  F009         	goto	u2450
  2452   0012FC                     u2451:
  2453   0012FC  EF82  F009         	goto	l2749
  2454   001300                     u2450:
  2455   001300                     
  2456                           ;ssd.c: 40: v0 = val;
  2457   001300  C03F  F020         	movff	ssdDigit@val,_v0
  2458   001304                     l2749:
  2459                           
  2460                           ;ssd.c: 41: };ssd.c: 42: if (pos == 1) {
  2461   001304  043E               	decf	ssdDigit@pos^0,w,c
  2462   001306  A4D8               	btfss	status,2,c
  2463   001308  EF88  F009         	goto	u2461
  2464   00130C  EF8A  F009         	goto	u2460
  2465   001310                     u2461:
  2466   001310  EF8C  F009         	goto	l2753
  2467   001314                     u2460:
  2468   001314                     
  2469                           ;ssd.c: 43: v1 = val;
  2470   001314  C03F  F01F         	movff	ssdDigit@val,_v1
  2471   001318                     l2753:
  2472                           
  2473                           ;ssd.c: 44: };ssd.c: 45: if (pos == 2) {
  2474   001318  0E02               	movlw	2
  2475   00131A  183E               	xorwf	ssdDigit@pos^0,w,c
  2476   00131C  A4D8               	btfss	status,2,c
  2477   00131E  EF93  F009         	goto	u2471
  2478   001322  EF95  F009         	goto	u2470
  2479   001326                     u2471:
  2480   001326  EF97  F009         	goto	l2757
  2481   00132A                     u2470:
  2482   00132A                     
  2483                           ;ssd.c: 46: v2 = val;
  2484   00132A  C03F  F01E         	movff	ssdDigit@val,_v2
  2485   00132E                     l2757:
  2486                           
  2487                           ;ssd.c: 47: };ssd.c: 48: if (pos == 3) {
  2488   00132E  0E03               	movlw	3
  2489   001330  183E               	xorwf	ssdDigit@pos^0,w,c
  2490   001332  A4D8               	btfss	status,2,c
  2491   001334  EF9E  F009         	goto	u2481
  2492   001338  EFA0  F009         	goto	u2480
  2493   00133C                     u2481:
  2494   00133C  EFA2  F009         	goto	l463
  2495   001340                     u2480:
  2496   001340                     
  2497                           ;ssd.c: 49: v3 = val;
  2498   001340  C03F  F01D         	movff	ssdDigit@val,_v3
  2499   001344                     l463:
  2500   001344  0012               	return		;funcret
  2501   001346                     __end_of_ssdDigit:
  2502                           	callstack 0
  2503                           
  2504 ;; *************** function ___awmod *****************
  2505 ;; Defined at:
  2506 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  2507 ;; Parameters:    Size  Location     Type
  2508 ;;  dividend        2   23[COMRAM] int 
  2509 ;;  divisor         2   25[COMRAM] int 
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;  sign            1   28[COMRAM] unsigned char 
  2512 ;;  counter         1   27[COMRAM] unsigned char 
  2513 ;; Return value:  Size  Location     Type
  2514 ;;                  2   23[COMRAM] int 
  2515 ;; Registers used:
  2516 ;;		wreg, status,2, status,0
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/0
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2522 ;;      Params:         4       0       0       0       0       0       0
  2523 ;;      Locals:         2       0       0       0       0       0       0
  2524 ;;      Temps:          0       0       0       0       0       0       0
  2525 ;;      Totals:         6       0       0       0       0       0       0
  2526 ;;Total ram usage:        6 bytes
  2527 ;; Hardware stack levels used: 1
  2528 ;; Hardware stack levels required when called: 3
  2529 ;; This function calls:
  2530 ;;		Nothing
  2531 ;; This function is called by:
  2532 ;;		_countTime
  2533 ;;		_kernelAddProc
  2534 ;;		_kernelLoop
  2535 ;;		_dsdec2bcd
  2536 ;; This function uses a non-reentrant model
  2537 ;;
  2538                           
  2539                           	psect	text14
  2540   000FFC                     __ptext14:
  2541                           	callstack 0
  2542   000FFC                     ___awmod:
  2543                           	callstack 25
  2544   000FFC  0E00               	movlw	0
  2545   000FFE  6E4B               	movwf	___awmod@sign^0,c
  2546   001000  BE47               	btfsc	(___awmod@dividend+1)^0,7,c
  2547   001002  EF07  F008         	goto	u2550
  2548   001006  EF05  F008         	goto	u2551
  2549   00100A                     u2551:
  2550   00100A  EF0D  F008         	goto	l2813
  2551   00100E                     u2550:
  2552   00100E  6C46               	negf	___awmod@dividend^0,c
  2553   001010  1E47               	comf	(___awmod@dividend+1)^0,f,c
  2554   001012  B0D8               	btfsc	status,0,c
  2555   001014  2A47               	incf	(___awmod@dividend+1)^0,f,c
  2556   001016  0E01               	movlw	1
  2557   001018  6E4B               	movwf	___awmod@sign^0,c
  2558   00101A                     l2813:
  2559   00101A  BE49               	btfsc	(___awmod@divisor+1)^0,7,c
  2560   00101C  EF14  F008         	goto	u2560
  2561   001020  EF12  F008         	goto	u2561
  2562   001024                     u2561:
  2563   001024  EF18  F008         	goto	l2817
  2564   001028                     u2560:
  2565   001028  6C48               	negf	___awmod@divisor^0,c
  2566   00102A  1E49               	comf	(___awmod@divisor+1)^0,f,c
  2567   00102C  B0D8               	btfsc	status,0,c
  2568   00102E  2A49               	incf	(___awmod@divisor+1)^0,f,c
  2569   001030                     l2817:
  2570   001030  5048               	movf	___awmod@divisor^0,w,c
  2571   001032  1049               	iorwf	(___awmod@divisor+1)^0,w,c
  2572   001034  B4D8               	btfsc	status,2,c
  2573   001036  EF1F  F008         	goto	u2571
  2574   00103A  EF21  F008         	goto	u2570
  2575   00103E                     u2571:
  2576   00103E  EF45  F008         	goto	l2833
  2577   001042                     u2570:
  2578   001042  0E01               	movlw	1
  2579   001044  6E4A               	movwf	___awmod@counter^0,c
  2580   001046  EF29  F008         	goto	l2823
  2581   00104A                     l2821:
  2582   00104A  90D8               	bcf	status,0,c
  2583   00104C  3648               	rlcf	___awmod@divisor^0,f,c
  2584   00104E  3649               	rlcf	(___awmod@divisor+1)^0,f,c
  2585   001050  2A4A               	incf	___awmod@counter^0,f,c
  2586   001052                     l2823:
  2587   001052  AE49               	btfss	(___awmod@divisor+1)^0,7,c
  2588   001054  EF2E  F008         	goto	u2581
  2589   001058  EF30  F008         	goto	u2580
  2590   00105C                     u2581:
  2591   00105C  EF25  F008         	goto	l2821
  2592   001060                     u2580:
  2593   001060                     l2825:
  2594   001060  5048               	movf	___awmod@divisor^0,w,c
  2595   001062  5C46               	subwf	___awmod@dividend^0,w,c
  2596   001064  5049               	movf	(___awmod@divisor+1)^0,w,c
  2597   001066  5847               	subwfb	(___awmod@dividend+1)^0,w,c
  2598   001068  A0D8               	btfss	status,0,c
  2599   00106A  EF39  F008         	goto	u2591
  2600   00106E  EF3B  F008         	goto	u2590
  2601   001072                     u2591:
  2602   001072  EF3F  F008         	goto	l2829
  2603   001076                     u2590:
  2604   001076  5048               	movf	___awmod@divisor^0,w,c
  2605   001078  5E46               	subwf	___awmod@dividend^0,f,c
  2606   00107A  5049               	movf	(___awmod@divisor+1)^0,w,c
  2607   00107C  5A47               	subwfb	(___awmod@dividend+1)^0,f,c
  2608   00107E                     l2829:
  2609   00107E  90D8               	bcf	status,0,c
  2610   001080  3249               	rrcf	(___awmod@divisor+1)^0,f,c
  2611   001082  3248               	rrcf	___awmod@divisor^0,f,c
  2612   001084  2E4A               	decfsz	___awmod@counter^0,f,c
  2613   001086  EF30  F008         	goto	l2825
  2614   00108A                     l2833:
  2615   00108A  504B               	movf	___awmod@sign^0,w,c
  2616   00108C  B4D8               	btfsc	status,2,c
  2617   00108E  EF4B  F008         	goto	u2601
  2618   001092  EF4D  F008         	goto	u2600
  2619   001096                     u2601:
  2620   001096  EF51  F008         	goto	l2837
  2621   00109A                     u2600:
  2622   00109A  6C46               	negf	___awmod@dividend^0,c
  2623   00109C  1E47               	comf	(___awmod@dividend+1)^0,f,c
  2624   00109E  B0D8               	btfsc	status,0,c
  2625   0010A0  2A47               	incf	(___awmod@dividend+1)^0,f,c
  2626   0010A2                     l2837:
  2627   0010A2  C046  F046         	movff	___awmod@dividend,?___awmod
  2628   0010A6  C047  F047         	movff	___awmod@dividend+1,?___awmod+1
  2629   0010AA  0012               	return		;funcret
  2630   0010AC                     __end_of___awmod:
  2631                           	callstack 0
  2632                           
  2633 ;; *************** function ___awdiv *****************
  2634 ;; Defined at:
  2635 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  2636 ;; Parameters:    Size  Location     Type
  2637 ;;  dividend        2   15[COMRAM] int 
  2638 ;;  divisor         2   17[COMRAM] int 
  2639 ;; Auto vars:     Size  Location     Type
  2640 ;;  quotient        2   21[COMRAM] int 
  2641 ;;  sign            1   20[COMRAM] unsigned char 
  2642 ;;  counter         1   19[COMRAM] unsigned char 
  2643 ;; Return value:  Size  Location     Type
  2644 ;;                  2   15[COMRAM] int 
  2645 ;; Registers used:
  2646 ;;		wreg, status,2, status,0
  2647 ;; Tracked objects:
  2648 ;;		On entry : 0/0
  2649 ;;		On exit  : 0/0
  2650 ;;		Unchanged: 0/0
  2651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2652 ;;      Params:         4       0       0       0       0       0       0
  2653 ;;      Locals:         4       0       0       0       0       0       0
  2654 ;;      Temps:          0       0       0       0       0       0       0
  2655 ;;      Totals:         8       0       0       0       0       0       0
  2656 ;;Total ram usage:        8 bytes
  2657 ;; Hardware stack levels used: 1
  2658 ;; Hardware stack levels required when called: 3
  2659 ;; This function calls:
  2660 ;;		Nothing
  2661 ;; This function is called by:
  2662 ;;		_countTime
  2663 ;;		_dsdec2bcd
  2664 ;;		_dsbcd2dec
  2665 ;; This function uses a non-reentrant model
  2666 ;;
  2667                           
  2668                           	psect	text15
  2669   000E86                     __ptext15:
  2670                           	callstack 0
  2671   000E86                     ___awdiv:
  2672                           	callstack 25
  2673   000E86  0E00               	movlw	0
  2674   000E88  6E43               	movwf	___awdiv@sign^0,c
  2675   000E8A  BE41               	btfsc	(___awdiv@divisor+1)^0,7,c
  2676   000E8C  EF4C  F007         	goto	u2490
  2677   000E90  EF4A  F007         	goto	u2491
  2678   000E94                     u2491:
  2679   000E94  EF52  F007         	goto	l2769
  2680   000E98                     u2490:
  2681   000E98  6C40               	negf	___awdiv@divisor^0,c
  2682   000E9A  1E41               	comf	(___awdiv@divisor+1)^0,f,c
  2683   000E9C  B0D8               	btfsc	status,0,c
  2684   000E9E  2A41               	incf	(___awdiv@divisor+1)^0,f,c
  2685   000EA0  0E01               	movlw	1
  2686   000EA2  6E43               	movwf	___awdiv@sign^0,c
  2687   000EA4                     l2769:
  2688   000EA4  BE3F               	btfsc	(___awdiv@dividend+1)^0,7,c
  2689   000EA6  EF59  F007         	goto	u2500
  2690   000EAA  EF57  F007         	goto	u2501
  2691   000EAE                     u2501:
  2692   000EAE  EF5F  F007         	goto	l2775
  2693   000EB2                     u2500:
  2694   000EB2  6C3E               	negf	___awdiv@dividend^0,c
  2695   000EB4  1E3F               	comf	(___awdiv@dividend+1)^0,f,c
  2696   000EB6  B0D8               	btfsc	status,0,c
  2697   000EB8  2A3F               	incf	(___awdiv@dividend+1)^0,f,c
  2698   000EBA  0E01               	movlw	1
  2699   000EBC  1A43               	xorwf	___awdiv@sign^0,f,c
  2700   000EBE                     l2775:
  2701   000EBE  0E00               	movlw	0
  2702   000EC0  6E45               	movwf	(___awdiv@quotient+1)^0,c
  2703   000EC2  0E00               	movlw	0
  2704   000EC4  6E44               	movwf	___awdiv@quotient^0,c
  2705   000EC6  5040               	movf	___awdiv@divisor^0,w,c
  2706   000EC8  1041               	iorwf	(___awdiv@divisor+1)^0,w,c
  2707   000ECA  B4D8               	btfsc	status,2,c
  2708   000ECC  EF6A  F007         	goto	u2511
  2709   000ED0  EF6C  F007         	goto	u2510
  2710   000ED4                     u2511:
  2711   000ED4  EF94  F007         	goto	l2797
  2712   000ED8                     u2510:
  2713   000ED8  0E01               	movlw	1
  2714   000EDA  6E42               	movwf	___awdiv@counter^0,c
  2715   000EDC  EF74  F007         	goto	l2783
  2716   000EE0                     l2781:
  2717   000EE0  90D8               	bcf	status,0,c
  2718   000EE2  3640               	rlcf	___awdiv@divisor^0,f,c
  2719   000EE4  3641               	rlcf	(___awdiv@divisor+1)^0,f,c
  2720   000EE6  2A42               	incf	___awdiv@counter^0,f,c
  2721   000EE8                     l2783:
  2722   000EE8  AE41               	btfss	(___awdiv@divisor+1)^0,7,c
  2723   000EEA  EF79  F007         	goto	u2521
  2724   000EEE  EF7B  F007         	goto	u2520
  2725   000EF2                     u2521:
  2726   000EF2  EF70  F007         	goto	l2781
  2727   000EF6                     u2520:
  2728   000EF6                     l2785:
  2729   000EF6  90D8               	bcf	status,0,c
  2730   000EF8  3644               	rlcf	___awdiv@quotient^0,f,c
  2731   000EFA  3645               	rlcf	(___awdiv@quotient+1)^0,f,c
  2732   000EFC  5040               	movf	___awdiv@divisor^0,w,c
  2733   000EFE  5C3E               	subwf	___awdiv@dividend^0,w,c
  2734   000F00  5041               	movf	(___awdiv@divisor+1)^0,w,c
  2735   000F02  583F               	subwfb	(___awdiv@dividend+1)^0,w,c
  2736   000F04  A0D8               	btfss	status,0,c
  2737   000F06  EF87  F007         	goto	u2531
  2738   000F0A  EF89  F007         	goto	u2530
  2739   000F0E                     u2531:
  2740   000F0E  EF8E  F007         	goto	l2793
  2741   000F12                     u2530:
  2742   000F12  5040               	movf	___awdiv@divisor^0,w,c
  2743   000F14  5E3E               	subwf	___awdiv@dividend^0,f,c
  2744   000F16  5041               	movf	(___awdiv@divisor+1)^0,w,c
  2745   000F18  5A3F               	subwfb	(___awdiv@dividend+1)^0,f,c
  2746   000F1A  8044               	bsf	___awdiv@quotient^0,0,c
  2747   000F1C                     l2793:
  2748   000F1C  90D8               	bcf	status,0,c
  2749   000F1E  3241               	rrcf	(___awdiv@divisor+1)^0,f,c
  2750   000F20  3240               	rrcf	___awdiv@divisor^0,f,c
  2751   000F22  2E42               	decfsz	___awdiv@counter^0,f,c
  2752   000F24  EF7B  F007         	goto	l2785
  2753   000F28                     l2797:
  2754   000F28  5043               	movf	___awdiv@sign^0,w,c
  2755   000F2A  B4D8               	btfsc	status,2,c
  2756   000F2C  EF9A  F007         	goto	u2541
  2757   000F30  EF9C  F007         	goto	u2540
  2758   000F34                     u2541:
  2759   000F34  EFA0  F007         	goto	l2801
  2760   000F38                     u2540:
  2761   000F38  6C44               	negf	___awdiv@quotient^0,c
  2762   000F3A  1E45               	comf	(___awdiv@quotient+1)^0,f,c
  2763   000F3C  B0D8               	btfsc	status,0,c
  2764   000F3E  2A45               	incf	(___awdiv@quotient+1)^0,f,c
  2765   000F40                     l2801:
  2766   000F40  C044  F03E         	movff	___awdiv@quotient,?___awdiv
  2767   000F44  C045  F03F         	movff	___awdiv@quotient+1,?___awdiv+1
  2768   000F48  0012               	return		;funcret
  2769   000F4A                     __end_of___awdiv:
  2770                           	callstack 0
  2771                           
  2772 ;; *************** function _kernelInit *****************
  2773 ;; Defined at:
  2774 ;;		line 7 in file "kernel.c"
  2775 ;; Parameters:    Size  Location     Type
  2776 ;;		None
  2777 ;; Auto vars:     Size  Location     Type
  2778 ;;		None
  2779 ;; Return value:  Size  Location     Type
  2780 ;;                  1    wreg      unsigned char 
  2781 ;; Registers used:
  2782 ;;		wreg, status,2
  2783 ;; Tracked objects:
  2784 ;;		On entry : 0/0
  2785 ;;		On exit  : 0/0
  2786 ;;		Unchanged: 0/0
  2787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2788 ;;      Params:         0       0       0       0       0       0       0
  2789 ;;      Locals:         0       0       0       0       0       0       0
  2790 ;;      Temps:          0       0       0       0       0       0       0
  2791 ;;      Totals:         0       0       0       0       0       0       0
  2792 ;;Total ram usage:        0 bytes
  2793 ;; Hardware stack levels used: 1
  2794 ;; Hardware stack levels required when called: 3
  2795 ;; This function calls:
  2796 ;;		Nothing
  2797 ;; This function is called by:
  2798 ;;		_main
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802                           	psect	text16
  2803   001406                     __ptext16:
  2804                           	callstack 0
  2805   001406                     _kernelInit:
  2806                           	callstack 27
  2807   001406                     
  2808                           ;kernel.c: 8: start = 0;
  2809   001406  0E00               	movlw	0
  2810   001408  6E25               	movwf	_start^0,c
  2811                           
  2812                           ;kernel.c: 9: end = 0;
  2813   00140A  0E00               	movlw	0
  2814   00140C  6E24               	movwf	_end^0,c
  2815   00140E  0012               	return		;funcret
  2816   001410                     __end_of_kernelInit:
  2817                           	callstack 0
  2818                           
  2819 ;; *************** function _ISR *****************
  2820 ;; Defined at:
  2821 ;;		line 10 in file "main.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;		None
  2824 ;; Auto vars:     Size  Location     Type
  2825 ;;		None
  2826 ;; Return value:  Size  Location     Type
  2827 ;;                  1    wreg      void 
  2828 ;; Registers used:
  2829 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2830 ;; Tracked objects:
  2831 ;;		On entry : 0/0
  2832 ;;		On exit  : 0/0
  2833 ;;		Unchanged: 0/0
  2834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2835 ;;      Params:         0       0       0       0       0       0       0
  2836 ;;      Locals:         0       0       0       0       0       0       0
  2837 ;;      Temps:          6       0       0       0       0       0       0
  2838 ;;      Totals:         6       0       0       0       0       0       0
  2839 ;;Total ram usage:        6 bytes
  2840 ;; Hardware stack levels used: 1
  2841 ;; Hardware stack levels required when called: 2
  2842 ;; This function calls:
  2843 ;;		_KernelClock
  2844 ;; This function is called by:
  2845 ;;		Interrupt level 2
  2846 ;; This function uses a non-reentrant model
  2847 ;;
  2848                           
  2849                           	psect	intcode
  2850   000008                     __pintcode:
  2851                           	callstack 0
  2852   000008                     _ISR:
  2853                           	callstack 24
  2854                           
  2855                           ;incstack = 0
  2856   000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2857   00000A  EDCE  F009         	call	int_func,f	;refresh shadow registers
  2858                           
  2859                           	psect	intcode_body
  2860   00139C                     __pintcode_body:
  2861                           	callstack 24
  2862   00139C                     int_func:
  2863                           	callstack 24
  2864   00139C  0006               	pop		; remove dummy address from shadow register refresh
  2865   00139E  CFE1 F038          	movff	fsr1l,??_ISR
  2866   0013A2  CFE2 F039          	movff	fsr1h,??_ISR+1
  2867   0013A6  CFD9 F03A          	movff	fsr2l,??_ISR+2
  2868   0013AA  CFDA F03B          	movff	fsr2h,??_ISR+3
  2869   0013AE  CFF3 F03C          	movff	prodl,??_ISR+4
  2870   0013B2  CFF4 F03D          	movff	prodh,??_ISR+5
  2871   0013B6                     
  2872                           ;main.c: 12: if (((INTCON) & (1<<(2)))) {
  2873   0013B6  A4F2               	btfss	242,2,c	;volatile
  2874   0013B8  EFE0  F009         	goto	i2u309_41
  2875   0013BC  EFE2  F009         	goto	i2u309_40
  2876   0013C0                     i2u309_41:
  2877   0013C0  EFE9  F009         	goto	i2l34
  2878   0013C4                     i2u309_40:
  2879   0013C4                     
  2880                           ;main.c: 14: TMR0H = (45535 >> 8);
  2881   0013C4  0EB1               	movlw	177
  2882   0013C6  6ED7               	movwf	215,c	;volatile
  2883                           
  2884                           ;main.c: 15: TMR0L = (45535 & 0x00FF);
  2885   0013C8  0EDF               	movlw	223
  2886   0013CA  6ED6               	movwf	214,c	;volatile
  2887   0013CC                     
  2888                           ;main.c: 17: KernelClock();
  2889   0013CC  EC00  F009         	call	_KernelClock	;wreg free
  2890   0013D0                     
  2891                           ;main.c: 20: ((INTCON) &= ~(1<<(2)));
  2892   0013D0  94F2               	bcf	242,2,c	;volatile
  2893   0013D2                     i2l34:
  2894   0013D2  C03D  FFF4         	movff	??_ISR+5,prodh
  2895   0013D6  C03C  FFF3         	movff	??_ISR+4,prodl
  2896   0013DA  C03B  FFDA         	movff	??_ISR+3,fsr2h
  2897   0013DE  C03A  FFD9         	movff	??_ISR+2,fsr2l
  2898   0013E2  C039  FFE2         	movff	??_ISR+1,fsr1h
  2899   0013E6  C038  FFE1         	movff	??_ISR,fsr1l
  2900   0013EA  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2901   0013EC  0011               	retfie		f
  2902   0013EE                     __end_of_ISR:
  2903                           	callstack 0
  2904                           
  2905 ;; *************** function _KernelClock *****************
  2906 ;; Defined at:
  2907 ;;		line 57 in file "kernel.c"
  2908 ;; Parameters:    Size  Location     Type
  2909 ;;		None
  2910 ;; Auto vars:     Size  Location     Type
  2911 ;;  proc            1    8[COMRAM] unsigned char 
  2912 ;; Return value:  Size  Location     Type
  2913 ;;                  1    wreg      void 
  2914 ;; Registers used:
  2915 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2921 ;;      Params:         0       0       0       0       0       0       0
  2922 ;;      Locals:         1       0       0       0       0       0       0
  2923 ;;      Temps:          2       0       0       0       0       0       0
  2924 ;;      Totals:         3       0       0       0       0       0       0
  2925 ;;Total ram usage:        3 bytes
  2926 ;; Hardware stack levels used: 1
  2927 ;; Hardware stack levels required when called: 1
  2928 ;; This function calls:
  2929 ;;		i2___awmod
  2930 ;; This function is called by:
  2931 ;;		_ISR
  2932 ;; This function uses a non-reentrant model
  2933 ;;
  2934                           
  2935                           	psect	text18
  2936   001200                     __ptext18:
  2937                           	callstack 0
  2938   001200                     _KernelClock:
  2939                           	callstack 24
  2940   001200                     
  2941                           ;kernel.c: 58: unsigned char proc;;kernel.c: 59: for (proc = start; proc != end; proc = 
      +                          (proc + 1) % 10) {
  2942   001200  C025  F037         	movff	_start,KernelClock@proc
  2943   001204  EF40  F009         	goto	i2l2993
  2944   001208                     i2l2987:
  2945                           
  2946                           ;kernel.c: 60: if ((pool[proc]->start)>(-30000)) {
  2947   001208  5037               	movf	KernelClock@proc^0,w,c
  2948   00120A  0D02               	mullw	2
  2949   00120C  0E01               	movlw	low _pool
  2950   00120E  24F3               	addwf	243,w,c
  2951   001210  6ED9               	movwf	fsr2l,c
  2952   001212  0E00               	movlw	high _pool
  2953   001214  20F4               	addwfc	prodh,w,c
  2954   001216  6EDA               	movwf	fsr2h,c
  2955   001218  EE10 F004          	lfsr	1,4
  2956   00121C  50DE               	movf	postinc2,w,c
  2957   00121E  26E1               	addwf	fsr1l,f,c
  2958   001220  50DD               	movf	postdec2,w,c
  2959   001222  22E2               	addwfc	fsr1h,f,c
  2960   001224  0E01               	movlw	1
  2961   001226  AEE3               	btfss	plusw1,7,c
  2962   001228  EF21  F009         	goto	i2u292_40
  2963   00122C  0ED1               	movlw	209
  2964   00122E  5CE6               	subwf	postinc1,w,c
  2965   001230  0E8A               	movlw	138
  2966   001232  58E6               	subwfb	postinc1,w,c
  2967   001234  A0D8               	btfss	status,0,c
  2968   001236  EF1F  F009         	goto	i2u292_41
  2969   00123A  EF21  F009         	goto	i2u292_40
  2970   00123E                     i2u292_41:
  2971   00123E  EF32  F009         	goto	i2l2991
  2972   001242                     i2u292_40:
  2973   001242                     
  2974                           ;kernel.c: 61: pool[proc]->start--;
  2975   001242  5037               	movf	KernelClock@proc^0,w,c
  2976   001244  0D02               	mullw	2
  2977   001246  0E01               	movlw	low _pool
  2978   001248  24F3               	addwf	243,w,c
  2979   00124A  6ED9               	movwf	fsr2l,c
  2980   00124C  0E00               	movlw	high _pool
  2981   00124E  20F4               	addwfc	prodh,w,c
  2982   001250  6EDA               	movwf	fsr2h,c
  2983   001252  EE10 F004          	lfsr	1,4
  2984   001256  50DE               	movf	postinc2,w,c
  2985   001258  26E1               	addwf	fsr1l,f,c
  2986   00125A  50DD               	movf	postdec2,w,c
  2987   00125C  22E2               	addwfc	fsr1h,f,c
  2988   00125E  06E6               	decf	postinc1,f,c
  2989   001260  0E00               	movlw	0
  2990   001262  5AE5               	subwfb	postdec1,f,c
  2991   001264                     i2l2991:
  2992   001264  0E01               	movlw	1
  2993   001266  2437               	addwf	KernelClock@proc^0,w,c
  2994   001268  6E2F               	movwf	i2___awmod@dividend^0,c
  2995   00126A  6A30               	clrf	(i2___awmod@dividend+1)^0,c
  2996   00126C  0E00               	movlw	0
  2997   00126E  2230               	addwfc	(i2___awmod@dividend+1)^0,f,c
  2998   001270  0E00               	movlw	0
  2999   001272  6E32               	movwf	(i2___awmod@divisor+1)^0,c
  3000   001274  0E0A               	movlw	10
  3001   001276  6E31               	movwf	i2___awmod@divisor^0,c
  3002   001278  EC56  F008         	call	i2___awmod	;wreg free
  3003   00127C  502F               	movf	?i2___awmod^0,w,c
  3004   00127E  6E37               	movwf	KernelClock@proc^0,c
  3005   001280                     i2l2993:
  3006   001280  5024               	movf	_end^0,w,c
  3007   001282  1837               	xorwf	KernelClock@proc^0,w,c
  3008   001284  A4D8               	btfss	status,2,c
  3009   001286  EF47  F009         	goto	i2u293_41
  3010   00128A  EF49  F009         	goto	i2u293_40
  3011   00128E                     i2u293_41:
  3012   00128E  EF04  F009         	goto	i2l2987
  3013   001292                     i2u293_40:
  3014   001292  0012               	return		;funcret
  3015   001294                     __end_of_KernelClock:
  3016                           	callstack 0
  3017                           
  3018 ;; *************** function i2___awmod *****************
  3019 ;; Defined at:
  3020 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  3021 ;; Parameters:    Size  Location     Type
  3022 ;;  dividend        2    0[COMRAM] int 
  3023 ;;  divisor         2    2[COMRAM] int 
  3024 ;; Auto vars:     Size  Location     Type
  3025 ;;  sign            1    5[COMRAM] unsigned char 
  3026 ;;  counter         1    4[COMRAM] unsigned char 
  3027 ;; Return value:  Size  Location     Type
  3028 ;;                  2    0[COMRAM] int 
  3029 ;; Registers used:
  3030 ;;		wreg, status,2, status,0
  3031 ;; Tracked objects:
  3032 ;;		On entry : 0/0
  3033 ;;		On exit  : 0/0
  3034 ;;		Unchanged: 0/0
  3035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3036 ;;      Params:         4       0       0       0       0       0       0
  3037 ;;      Locals:         2       0       0       0       0       0       0
  3038 ;;      Temps:          0       0       0       0       0       0       0
  3039 ;;      Totals:         6       0       0       0       0       0       0
  3040 ;;Total ram usage:        6 bytes
  3041 ;; Hardware stack levels used: 1
  3042 ;; This function calls:
  3043 ;;		Nothing
  3044 ;; This function is called by:
  3045 ;;		_KernelClock
  3046 ;; This function uses a non-reentrant model
  3047 ;;
  3048                           
  3049                           	psect	text19
  3050   0010AC                     __ptext19:
  3051                           	callstack 0
  3052   0010AC                     i2___awmod:
  3053                           	callstack 24
  3054   0010AC  0E00               	movlw	0
  3055   0010AE  6E34               	movwf	i2___awmod@sign^0,c
  3056   0010B0  BE30               	btfsc	(i2___awmod@dividend+1)^0,7,c
  3057   0010B2  EF5F  F008         	goto	i2u286_40
  3058   0010B6  EF5D  F008         	goto	i2u286_41
  3059   0010BA                     i2u286_41:
  3060   0010BA  EF65  F008         	goto	i2l2957
  3061   0010BE                     i2u286_40:
  3062   0010BE  6C2F               	negf	i2___awmod@dividend^0,c
  3063   0010C0  1E30               	comf	(i2___awmod@dividend+1)^0,f,c
  3064   0010C2  B0D8               	btfsc	status,0,c
  3065   0010C4  2A30               	incf	(i2___awmod@dividend+1)^0,f,c
  3066   0010C6  0E01               	movlw	1
  3067   0010C8  6E34               	movwf	i2___awmod@sign^0,c
  3068   0010CA                     i2l2957:
  3069   0010CA  BE32               	btfsc	(i2___awmod@divisor+1)^0,7,c
  3070   0010CC  EF6C  F008         	goto	i2u287_40
  3071   0010D0  EF6A  F008         	goto	i2u287_41
  3072   0010D4                     i2u287_41:
  3073   0010D4  EF70  F008         	goto	i2l2961
  3074   0010D8                     i2u287_40:
  3075   0010D8  6C31               	negf	i2___awmod@divisor^0,c
  3076   0010DA  1E32               	comf	(i2___awmod@divisor+1)^0,f,c
  3077   0010DC  B0D8               	btfsc	status,0,c
  3078   0010DE  2A32               	incf	(i2___awmod@divisor+1)^0,f,c
  3079   0010E0                     i2l2961:
  3080   0010E0  5031               	movf	i2___awmod@divisor^0,w,c
  3081   0010E2  1032               	iorwf	(i2___awmod@divisor+1)^0,w,c
  3082   0010E4  B4D8               	btfsc	status,2,c
  3083   0010E6  EF77  F008         	goto	i2u288_41
  3084   0010EA  EF79  F008         	goto	i2u288_40
  3085   0010EE                     i2u288_41:
  3086   0010EE  EF9D  F008         	goto	i2l2977
  3087   0010F2                     i2u288_40:
  3088   0010F2  0E01               	movlw	1
  3089   0010F4  6E33               	movwf	i2___awmod@counter^0,c
  3090   0010F6  EF81  F008         	goto	i2l2967
  3091   0010FA                     i2l2965:
  3092   0010FA  90D8               	bcf	status,0,c
  3093   0010FC  3631               	rlcf	i2___awmod@divisor^0,f,c
  3094   0010FE  3632               	rlcf	(i2___awmod@divisor+1)^0,f,c
  3095   001100  2A33               	incf	i2___awmod@counter^0,f,c
  3096   001102                     i2l2967:
  3097   001102  AE32               	btfss	(i2___awmod@divisor+1)^0,7,c
  3098   001104  EF86  F008         	goto	i2u289_41
  3099   001108  EF88  F008         	goto	i2u289_40
  3100   00110C                     i2u289_41:
  3101   00110C  EF7D  F008         	goto	i2l2965
  3102   001110                     i2u289_40:
  3103   001110                     i2l2969:
  3104   001110  5031               	movf	i2___awmod@divisor^0,w,c
  3105   001112  5C2F               	subwf	i2___awmod@dividend^0,w,c
  3106   001114  5032               	movf	(i2___awmod@divisor+1)^0,w,c
  3107   001116  5830               	subwfb	(i2___awmod@dividend+1)^0,w,c
  3108   001118  A0D8               	btfss	status,0,c
  3109   00111A  EF91  F008         	goto	i2u290_41
  3110   00111E  EF93  F008         	goto	i2u290_40
  3111   001122                     i2u290_41:
  3112   001122  EF97  F008         	goto	i2l2973
  3113   001126                     i2u290_40:
  3114   001126  5031               	movf	i2___awmod@divisor^0,w,c
  3115   001128  5E2F               	subwf	i2___awmod@dividend^0,f,c
  3116   00112A  5032               	movf	(i2___awmod@divisor+1)^0,w,c
  3117   00112C  5A30               	subwfb	(i2___awmod@dividend+1)^0,f,c
  3118   00112E                     i2l2973:
  3119   00112E  90D8               	bcf	status,0,c
  3120   001130  3232               	rrcf	(i2___awmod@divisor+1)^0,f,c
  3121   001132  3231               	rrcf	i2___awmod@divisor^0,f,c
  3122   001134  2E33               	decfsz	i2___awmod@counter^0,f,c
  3123   001136  EF88  F008         	goto	i2l2969
  3124   00113A                     i2l2977:
  3125   00113A  5034               	movf	i2___awmod@sign^0,w,c
  3126   00113C  B4D8               	btfsc	status,2,c
  3127   00113E  EFA3  F008         	goto	i2u291_41
  3128   001142  EFA5  F008         	goto	i2u291_40
  3129   001146                     i2u291_41:
  3130   001146  EFA9  F008         	goto	i2l2981
  3131   00114A                     i2u291_40:
  3132   00114A  6C2F               	negf	i2___awmod@dividend^0,c
  3133   00114C  1E30               	comf	(i2___awmod@dividend+1)^0,f,c
  3134   00114E  B0D8               	btfsc	status,0,c
  3135   001150  2A30               	incf	(i2___awmod@dividend+1)^0,f,c
  3136   001152                     i2l2981:
  3137   001152  C02F  F02F         	movff	i2___awmod@dividend,?i2___awmod
  3138   001156  C030  F030         	movff	i2___awmod@dividend+1,?i2___awmod+1
  3139   00115A  0012               	return		;funcret
  3140   00115C                     __end_ofi2___awmod:
  3141                           	callstack 0
  3142                           
  3143                           	psect	text20
  3144   000000                     __ptext20:
  3145                           	callstack 0
  3146   000000                     
  3147                           	psect	rparam
  3148   000000                     
  3149                           	psect	temp
  3150   00005F                     btemp:
  3151                           	callstack 0
  3152   00005F                     	ds	1
  3153   000000                     int$flags	set	btemp
  3154   000000                     wtemp8	set	btemp+1
  3155   000000                     ttemp5	set	btemp+1
  3156   000000                     ttemp6	set	btemp+4
  3157   000000                     ttemp7	set	btemp+8
  3158                           
  3159                           	psect	idloc
  3160                           
  3161                           ;Config register IDLOC0 @ 0x200000
  3162                           ;	unspecified, using default values
  3163   200000                     	org	2097152
  3164   200000  FF                 	db	255
  3165                           
  3166                           ;Config register IDLOC1 @ 0x200001
  3167                           ;	unspecified, using default values
  3168   200001                     	org	2097153
  3169   200001  FF                 	db	255
  3170                           
  3171                           ;Config register IDLOC2 @ 0x200002
  3172                           ;	unspecified, using default values
  3173   200002                     	org	2097154
  3174   200002  FF                 	db	255
  3175                           
  3176                           ;Config register IDLOC3 @ 0x200003
  3177                           ;	unspecified, using default values
  3178   200003                     	org	2097155
  3179   200003  FF                 	db	255
  3180                           
  3181                           ;Config register IDLOC4 @ 0x200004
  3182                           ;	unspecified, using default values
  3183   200004                     	org	2097156
  3184   200004  FF                 	db	255
  3185                           
  3186                           ;Config register IDLOC5 @ 0x200005
  3187                           ;	unspecified, using default values
  3188   200005                     	org	2097157
  3189   200005  FF                 	db	255
  3190                           
  3191                           ;Config register IDLOC6 @ 0x200006
  3192                           ;	unspecified, using default values
  3193   200006                     	org	2097158
  3194   200006  FF                 	db	255
  3195                           
  3196                           ;Config register IDLOC7 @ 0x200007
  3197                           ;	unspecified, using default values
  3198   200007                     	org	2097159
  3199   200007  FF                 	db	255
  3200                           
  3201                           	psect	config
  3202                           
  3203                           ; Padding undefined space
  3204   300000                     	org	3145728
  3205   300000  FF                 	db	255
  3206                           
  3207                           ;Config register CONFIG1H @ 0x300001
  3208                           ;	Oscillator Selection bits
  3209                           ;	OSC = HS, HS oscillator
  3210                           ;	Fail-Safe Clock Monitor Enable bit
  3211                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3212                           ;	Internal/External Oscillator Switchover bit
  3213                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3214   300001                     	org	3145729
  3215   300001  02                 	db	2
  3216                           
  3217                           ;Config register CONFIG2L @ 0x300002
  3218                           ;	Power-up Timer Enable bit
  3219                           ;	PWRT = OFF, PWRT disabled
  3220                           ;	Brown-out Reset Enable bits
  3221                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3222                           ;	Brown Out Reset Voltage bits
  3223                           ;	BORV = 2, 
  3224   300002                     	org	3145730
  3225   300002  11                 	db	17
  3226                           
  3227                           ;Config register CONFIG2H @ 0x300003
  3228                           ;	Watchdog Timer Enable bit
  3229                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3230                           ;	Watchdog Timer Postscale Select bits
  3231                           ;	WDTPS = 1, 1:1
  3232   300003                     	org	3145731
  3233   300003  00                 	db	0
  3234                           
  3235                           ; Padding undefined space
  3236   300004                     	org	3145732
  3237   300004  FF                 	db	255
  3238                           
  3239                           ;Config register CONFIG3H @ 0x300005
  3240                           ;	CCP2 MUX bit
  3241                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3242                           ;	PORTB A/D Enable bit
  3243                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  3244                           ;	Low-Power Timer1 Oscillator Enable bit
  3245                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3246                           ;	MCLR Pin Enable bit
  3247                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3248   300005                     	org	3145733
  3249   300005  83                 	db	131
  3250                           
  3251                           ;Config register CONFIG4L @ 0x300006
  3252                           ;	Stack Full/Underflow Reset Enable bit
  3253                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  3254                           ;	Single-Supply ICSP Enable bit
  3255                           ;	LVP = OFF, Single-Supply ICSP disabled
  3256                           ;	Extended Instruction Set Enable bit
  3257                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3258                           ;	Background Debugger Enable bit
  3259                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  3260   300006                     	org	3145734
  3261   300006  80                 	db	128
  3262                           
  3263                           ; Padding undefined space
  3264   300007                     	org	3145735
  3265   300007  FF                 	db	255
  3266                           
  3267                           ;Config register CONFIG5L @ 0x300008
  3268                           ;	Code Protection bit
  3269                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  3270                           ;	Code Protection bit
  3271                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  3272                           ;	Code Protection bit
  3273                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  3274                           ;	Code Protection bit
  3275                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  3276   300008                     	org	3145736
  3277   300008  0F                 	db	15
  3278                           
  3279                           ;Config register CONFIG5H @ 0x300009
  3280                           ;	Boot Block Code Protection bit
  3281                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3282                           ;	Data EEPROM Code Protection bit
  3283                           ;	CPD = OFF, Data EEPROM not code-protected
  3284   300009                     	org	3145737
  3285   300009  C0                 	db	192
  3286                           
  3287                           ;Config register CONFIG6L @ 0x30000A
  3288                           ;	Write Protection bit
  3289                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  3290                           ;	Write Protection bit
  3291                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  3292                           ;	Write Protection bit
  3293                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  3294                           ;	Write Protection bit
  3295                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  3296   30000A                     	org	3145738
  3297   30000A  0F                 	db	15
  3298                           
  3299                           ;Config register CONFIG6H @ 0x30000B
  3300                           ;	Configuration Register Write Protection bit
  3301                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3302                           ;	Boot Block Write Protection bit
  3303                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  3304                           ;	Data EEPROM Write Protection bit
  3305                           ;	WRTD = OFF, Data EEPROM not write-protected
  3306   30000B                     	org	3145739
  3307   30000B  E0                 	db	224
  3308                           
  3309                           ;Config register CONFIG7L @ 0x30000C
  3310                           ;	Table Read Protection bit
  3311                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  3312                           ;	Table Read Protection bit
  3313                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  3314                           ;	Table Read Protection bit
  3315                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  3316                           ;	Table Read Protection bit
  3317                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3318   30000C                     	org	3145740
  3319   30000C  0F                 	db	15
  3320                           
  3321                           ;Config register CONFIG7H @ 0x30000D
  3322                           ;	Boot Block Table Read Protection bit
  3323                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3324   30000D                     	org	3145741
  3325   30000D  40                 	db	64
  3326                           tosu	equ	0xFFF
  3327                           tosh	equ	0xFFE
  3328                           tosl	equ	0xFFD
  3329                           stkptr	equ	0xFFC
  3330                           pclatu	equ	0xFFB
  3331                           pclath	equ	0xFFA
  3332                           pcl	equ	0xFF9
  3333                           tblptru	equ	0xFF8
  3334                           tblptrh	equ	0xFF7
  3335                           tblptrl	equ	0xFF6
  3336                           tablat	equ	0xFF5
  3337                           prodh	equ	0xFF4
  3338                           prodl	equ	0xFF3
  3339                           indf0	equ	0xFEF
  3340                           postinc0	equ	0xFEE
  3341                           postdec0	equ	0xFED
  3342                           preinc0	equ	0xFEC
  3343                           plusw0	equ	0xFEB
  3344                           fsr0h	equ	0xFEA
  3345                           fsr0l	equ	0xFE9
  3346                           wreg	equ	0xFE8
  3347                           indf1	equ	0xFE7
  3348                           postinc1	equ	0xFE6
  3349                           postdec1	equ	0xFE5
  3350                           preinc1	equ	0xFE4
  3351                           plusw1	equ	0xFE3
  3352                           fsr1h	equ	0xFE2
  3353                           fsr1l	equ	0xFE1
  3354                           bsr	equ	0xFE0
  3355                           indf2	equ	0xFDF
  3356                           postinc2	equ	0xFDE
  3357                           postdec2	equ	0xFDD
  3358                           preinc2	equ	0xFDC
  3359                           plusw2	equ	0xFDB
  3360                           fsr2h	equ	0xFDA
  3361                           fsr2l	equ	0xFD9
  3362                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    16
    Data        30
    BSS         46
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     42      94
    BANK0           128     30      54
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    my_funcs$0	PTR void  size(2) Largest target is 0

    S154$2$0	PTR void  size(2) Largest target is 0

    kernelLoop$1280	PTR struct . size(2) Largest target is 6
		 -> main@countTime_proc(BANK0[6]), main@SSDUpdate_proc(BANK0[6]), main@ProcLedL(BANK0[6]), main@ProcLedF(BANK0[6]), 
		 -> main@init_PD(BANK0[6]), 

    ?_getLedDriver.initFunc	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> initGenerico(), 

    ?_getLedDriver.funcoes	PTR PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 4
		 -> my_funcs(COMRAM[4]), 

    sp__getLedDriver.initFunc	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> initGenerico(), 

    sp__getLedDriver.funcoes	PTR PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 4
		 -> my_funcs(COMRAM[4]), 

    sp__getLedDriver	PTR struct . size(2) Largest target is 6
		 -> myself(COMRAM[5]), 

    my_funcs	PTR FTN(PTR void ,)unsigned char [2] size(2) Largest target is 1
		 -> inverte(), changePORTD(), 

    S154$initFunc	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> initGenerico(), 

    myself.initFunc	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> initGenerico(), 

    S154$funcoes	PTR PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 4
		 -> my_funcs(COMRAM[4]), 

    myself.funcoes	PTR PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 4
		 -> my_funcs(COMRAM[4]), 

    kernelLoop@tempProc	PTR struct . size(2) Largest target is 6
		 -> main@countTime_proc(BANK0[6]), main@SSDUpdate_proc(BANK0[6]), main@ProcLedL(BANK0[6]), main@ProcLedF(BANK0[6]), 
		 -> main@init_PD(BANK0[6]), 

    kernelAddProc@newProc.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), toggle4L(), toggle4F(), 
		 -> initPORTAD(), 

    pool.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), toggle4L(), toggle4F(), 
		 -> initPORTAD(), 

    kernelAddProc@newProc	PTR struct . size(2) Largest target is 6
		 -> main@countTime_proc(BANK0[6]), main@SSDUpdate_proc(BANK0[6]), main@ProcLedL(BANK0[6]), main@ProcLedF(BANK0[6]), 
		 -> main@init_PD(BANK0[6]), 

    pool	PTR struct .[10] size(2) Largest target is 6
		 -> main@countTime_proc(BANK0[6]), main@SSDUpdate_proc(BANK0[6]), main@ProcLedL(BANK0[6]), main@ProcLedF(BANK0[6]), 
		 -> main@init_PD(BANK0[6]), 

    F2416.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), toggle4L(), toggle4F(), 
		 -> initPORTAD(), 

    countTime_proc.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), toggle4L(), toggle4F(), 
		 -> initPORTAD(), 

    F2413.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), toggle4L(), toggle4F(), 
		 -> initPORTAD(), 

    SSDUpdate_proc.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), toggle4L(), toggle4F(), 
		 -> initPORTAD(), 

    F2410.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), toggle4L(), toggle4F(), 
		 -> initPORTAD(), 

    ProcLedL.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), toggle4L(), toggle4F(), 
		 -> initPORTAD(), 

    F2407.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), toggle4L(), toggle4F(), 
		 -> initPORTAD(), 

    ProcLedF.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), toggle4L(), toggle4F(), 
		 -> initPORTAD(), 

    F2404.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), toggle4L(), toggle4F(), 
		 -> initPORTAD(), 

    S44$function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), toggle4L(), toggle4F(), 
		 -> initPORTAD(), 

    init_PD.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), toggle4L(), toggle4F(), 
		 -> initPORTAD(), 


Critical Paths under _main in COMRAM

    _main->_kernelLoop
    _ssdInit->_pinMode
    _kernelLoop->_kernelAddProc
    _ssdUpdate->_digitalWrite
    _kernelAddProc->___awmod
    _countTime->___awmod
    ___awmod->___awdiv

Critical Paths under _ISR in COMRAM

    _ISR->_KernelClock
    _KernelClock->i2___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0   19180
                                              0 BANK0     30    30      0
                      _kernelAddProc
                         _kernelInit
                         _kernelLoop
                            _ssdInit
                          _timerInit
 ---------------------------------------------------------------------------------
 (1) _timerInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    3140
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              6     2      4    3140
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _kernelLoop                                           9     9      0   12955
                                             33 COMRAM     9     9      0
                            ___awmod
                          _countTime *
                         _initPORTAD *
                      _kernelAddProc
                           _toggle4F *
                           _toggle4L *
                          _updateSSD *
 ---------------------------------------------------------------------------------
 (2) _updateSSD                                            0     0      0    3512
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (3) _ssdUpdate                                            0     0      0    3512
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (4) _digitalWrite                                         6     2      4    3512
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _toggle4L                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _toggle4F                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _kernelAddProc                                        4     2      2    2765
                                             29 COMRAM     4     2      2
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _initPORTAD                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _countTime                                            2     2      0    4252
                                             29 COMRAM     2     2      0
                            ___awdiv
                            ___awmod
                           _ssdDigit
 ---------------------------------------------------------------------------------
 (3) _ssdDigit                                             2     1      1     608
                                             15 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    2163
                                             23 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1345
                                             15 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _kernelInit                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  6     6      0     633
                                              9 COMRAM     6     6      0
                        _KernelClock
 ---------------------------------------------------------------------------------
 (6) _KernelClock                                          3     3      0     633
                                              6 COMRAM     3     3      0
                          i2___awmod
 ---------------------------------------------------------------------------------
 (7) i2___awmod                                            6     2      4     503
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _kernelAddProc
     ___awmod
       ___awdiv (ARG)
   _kernelInit
   _kernelLoop
     ___awmod
     _countTime *
       ___awdiv
       ___awmod
       _ssdDigit
     _initPORTAD *
     _kernelAddProc *
     _toggle4F *
     _toggle4L *
     _updateSSD *
       _ssdUpdate
         _digitalWrite
   _ssdInit
     _pinMode
   _timerInit

 _ISR (ROOT)
   _KernelClock
     i2___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     1E      36       5       42.2%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     2A      5E       1       74.6%
BITBIGSFRlh         1A      0       0      17        0.0%
BITBIGSFRllhll       D      0       0      27        0.0%
BITBIGSFRh           D      0       0      16        0.0%
BITBIGSFRllhhll      C      0       0      25        0.0%
BITBIGSFRllhhll      7      0       0      24        0.0%
BITBIGSFRllhhll      7      0       0      26        0.0%
BITBIGSFRllhhlh      5      0       0      20        0.0%
BITBIGSFRllhhll      4      0       0      23        0.0%
BITBIGSFRllhhlh      4      0       0      19        0.0%
BITBIGSFRllhhh       4      0       0      18        0.0%
BITBIGSFRllhhll      1      0       0      22        0.0%
BITBIGSFRllhhll      1      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      94      28        0.0%
DATA                 0      0      94       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Nov 04 22:40:49 2022

           fp__countTime 0000            fp__initPORTAD 0000                       l40 142E  
                     l43 1426                       l46 141E                       l54 0E84  
                     l49 1436                       l82 11FE                       l85 0AAE  
                     l69 0FF8                       l78 140E             ___awdiv@sign 0043  
                     _v0 0020                       _v1 001F                       _v2 001E  
                     _v3 001D                      l213 0AAC                      l247 085E  
                    l463 1344                      l473 0DA8                      l476 139A  
                    l733 0F48                      l746 10AA                      l499 1416  
                    _PR2 000FCB                      _ISR 0008              fp__toggle4F 0000  
            fp__toggle4L 0000                      _end 0024             ___awmod@sign 004B  
                    prod 000FF3                      tosl 000FFD                      wreg 000FE8  
                   ?_ISR 002F             main@ProcLedF 0086             main@ProcLedL 008C  
                   l3001 1396                     l3003 1406                     l3011 0ACC  
                   l3021 0B6C                     l3013 0B22                     l3031 0C4C  
                   l3023 0B94                     l3015 0B26                     l3007 0AAE  
                   l3111 0FA4                     l3025 0BAC                     l3017 0B42  
                   l3009 0AC0                     l3121 0FC8                     l3113 0FA8  
                   l3027 0BE6                     l3019 0B54                     l3131 0FF0  
                   l3123 0FD4                     l3115 0FAC                     l3029 0C30  
                   l3133 0FF2                     l3125 0FE0                     l3117 0FB0  
                   l3109 0F4A                     l3135 0FF4                     l3127 0FEC  
                   l3119 0FBC                     l3129 0FEE                     l2701 0A6E  
                   l2703 0A8E                     l2711 0C9A                     l2801 0F40  
                   l2721 0CF8                     l2713 0CAE                     l2705 0C6E  
                   l2811 1016                     l2731 0D4C                     l2723 0D0A  
                   l2715 0CCA                     l2707 0C72                     l2821 104A  
                   l2813 101A                     l2805 0FFC                     l2733 0D54  
                   l2725 0D1E                     l2717 0CDC                     l2709 0C86  
                   l2901 0640                     l2831 1084                     l2823 1052  
                   l2815 1028                     l2807 1000                     l2751 1314  
                   l2671 08AE                     l2735 0D66                     l2727 0D26  
                   l2719 0CF0                     l2743 0D82                     l2911 06D4  
                   l2903 0660                     l2761 0E86                     l2825 1060  
                   l2833 108A                     l2817 1030                     l2809 100E  
                   l2753 1318                     l2745 12F0                     l2681 0948  
                   l2673 08D0                     l2665 0860                     l2737 0D7A  
                   l2729 0D38                     l2841 1428                     l2921 0772  
                   l2913 06FA                     l2905 0682                     l2771 0EB2  
                   l2763 0E8A                     l2835 109A                     l2827 1076  
                   l2819 1042                     l2755 132A                     l2747 1300  
                   l2691 09DC                     l2683 0964                     l2675 08EC  
                   l2667 087C                     l2843 142C                     l2931 0806  
                   l2923 078E                     l2915 0716                     l2907 069E  
                   l2781 0EE0                     l2773 0EBA                     l2765 0E98  
                   l2837 10A2                     l2829 107E                     l2757 132E  
                   l2749 1304                     l2693 09F6                     l2685 097E  
                   l2677 0906                     l2669 088E                     l2861 1434  
                   l2853 1418                     l2933 0818                     l2925 07A0  
                   l2917 0728                     l2909 06B0                     l2791 0F1A  
                   l2783 0EE8                     l2775 0EBE                     l2767 0EA0  
                   l2759 1340                     l2695 0A16                     l2687 099E  
                   l2679 0926                     l2847 1420                     l2855 141C  
                   l2871 0DD4                     l2935 083C                     l2927 07C4  
                   l2919 074C                     l2793 0F1C                     l2785 0EF6  
                   l2777 0EC6                     l2769 0EA4                     l2697 0A38  
                   l2689 09C0                     l2849 1424                     l2881 0E78  
                   l2873 0E04                     l2865 0DAA                     l2929 07EA  
                   l2795 0F22                     l2787 0EFC                     l2779 0ED8  
                   l2891 11AA                     l2699 0A54                     l2859 1430  
                   l2883 0E82                     l2875 0E0E                     l2867 0DAE  
                   l2789 0F12                     l2797 0F28                     l2893 11E2  
                   l2877 0E3E                     l2869 0DCA                     l2799 0F38  
                   l2887 115C                     l2879 0E48                     l2889 1192  
                   l2897 0612                     l2899 062E                     l2995 1410  
                   l2997 1414                     l2999 1346                     u2300 0906  
                   u2301 0902                     u3101 0F54                     u3111 0F66  
                   u3121 0F78                     u2410 0A54                     u2330 0964  
                   u2314 0918                     u2250 087C                     u2411 0A50  
                   u2331 0960                     u2315 0914                     u2251 0878  
                   u3131 0F8A                     u2500 0EB2                     u2420 0A6E  
                   u2404 0A28                     u2340 097E                     u2324 0938  
                   u2260 088E                     u2501 0EAE                     u2421 0A6A  
                   u2405 0A24                     u2341 097A                     u2325 0934  
                   u2261 088A                     u3141 0F9C                     u2510 0ED8  
                   u2511 0ED4                     u2520 0EF6                     u2600 109A  
                   u2521 0EF2                     u2601 1096                     u2530 0F12  
                   u2450 1300                     u2610 1192                     u2434 0A80  
                   u2370 09DC                     u2354 0990                     u2290 08EC  
                   u2274 08A0                     u2531 0F0E                     u2451 12FC  
                   u2611 118E                     u2435 0A7C                     u2371 09D8  
                   u2355 098C                     u2291 08E8                     u2275 089C  
                   u2540 0F38                     u2460 1314                     u2444 0AA0  
                   u2380 09F6                     u2364 09B0                     u2284 08C0  
                   u2700 0716                     u2620 062E                     u2541 0F34  
                   u2461 1310                     u2445 0A9C                     u2381 09F2  
                   u2365 09AC                     u2285 08BC                     u2701 0712  
                   u2621 062A                     u2550 100E                     u2470 132A  
                   u2710 0728                     u2630 0640                     u2551 100A  
                   u2471 1326                     u2711 0724                     u2631 063C  
                   u2560 1028                     u2480 1340                     u2561 1024  
                   u2481 133C                     u2490 0E98                     u2570 1042  
                   u2394 0A08                     u2491 0E94                     u2571 103E  
                   u2395 0A04                     u2580 1060                     u2804 082E  
                   u2740 078E                     u2724 073E                     u2660 069E  
                   u2644 0652                     u2581 105C                     u2805 082A  
                   u2741 078A                     u2725 073A                     u2661 069A  
                   u2645 064E                     u2590 1076                     u2814 0852  
                   u2750 07A0                     u2734 0762                     u2670 06B0  
                   u2654 0672                     u2591 1072                     u2815 084E  
                   u2751 079C                     u2735 075E                     u2671 06AC  
                   u2655 066E                     u2940 0AC0                     u2780 0806  
                   u2764 07B6                     u2684 06C6                     u2941 0ABC  
                   u2781 0802                     u2765 07B2                     u2685 06C2  
                   u2950 0B22                     u2790 0818                     u2774 07DA  
                   u2694 06EA                     u2951 0B1E                     u2791 0814  
                   u2775 07D6                     u2695 06E6                     u2960 0B54  
                   u2961 0B50                     u2970 0BE6                     u2971 0BE2  
                   u2990 0C30                     u2991 0C2C                     _PIR1 000F9E  
                   i2l34 13D2                     u2988 0C0C                     u2989 0C20  
            main@init_PD 0080                     _RCON 000FD0                     _main 0F4A  
                   _pool 0001             fp__updateSSD 0000                     fsr0h 000FEA  
                   fsr1h 000FE2                     fsr2h 000FDA                     fsr0l 000FE9  
                   fsr1l 000FE1                     fsr2l 000FD9                     btemp 005F  
     kernelLoop@tempProc 0055                     prodh 000FF4                     prodl 000FF3  
                   start 000E            ??_KernelClock 0035             ___param_bank 000000  
                  ??_ISR 0038                    ?_main 002F          __end_of___awdiv 0F4A  
        __end_of___awmod 10AC                    _T0CON 000FD5          ___awdiv@divisor 0040  
                  _T2CON 000FCA                    i2l103 1292                    i2l746 115A  
        ___awdiv@counter 0042                    _RCREG 000FAE                    _RCSTA 000FAB  
                  _TMR0H 000FD7                    _TMR0L 000FD6                    _SPBRG 000FAF  
                  _PORTA 000F80                    _PORTB 000F81                    _PORTC 000F82  
                  _PORTD 000F83                    _PORTE 000F84                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TRISE 000F96                    _TXREG 000FAD                    _TXSTA 000FAC  
        __end_of_pinMode 0860                    _valor 001B                    _start 0025  
                  pclath 000FFA                    tablat 000FF5          __end_of_ssdInit 139C  
                  plusw1 000FE3                    plusw2 000FDB                    ttemp5 0060  
                  ttemp6 0063                    ttemp7 0067                    status 000FD8  
                  wtemp8 0060     __end_of_digitalWrite 0AAE          __initialization 1294  
           __end_of_main 0FFC      __end_of_KernelClock 1294                   ??_main 0059  
          __activetblptr 000002                   _ADCON0 000FC2                   _ADCON2 000FC0  
                 _ADRESH 000FC4                   _ADRESL 000FC3                   _CCPR1L 000FBE  
       ___awdiv@dividend 003E                   i2l3101 13B6                   i2l3103 13C4  
                 i2l3105 13CC                   i2l3107 13D0                   i2l2951 10B0  
                 i2l2961 10E0                   i2l2953 10BE                   i2l2971 1126  
                 i2l2963 10F2                   i2l2955 10C6                   i2l2981 1152  
                 i2l2973 112E                   i2l2965 10FA                   i2l2957 10CA  
                 i2l2949 10AC                   i2l2975 1134                   i2l2967 1102  
                 i2l2959 10D8                   i2l2991 1264                   _INTCON 000FF2  
                 i2l2969 1110                   i2l2977 113A                   i2l2993 1280  
                 i2l2985 1200                   i2l2979 114A                   i2l2987 1208  
                 i2l2989 1242                   _SPBRGH 000FB0              kernelLoop@p 0058  
              ??___awdiv 0042                ??___awmod 004A                   clear_0 12DA  
       ___awdiv@quotient 0044          ___awmod@divisor 0048                   isa$std 000001  
        ___awmod@counter 004A                   _myself 0026            _kernelAddProc 115C  
       __end_of_ssdDigit 1346             __pdataCOMRAM 0059                ??_pinMode 0042  
      __end_ofi2___awmod 115C             __mediumconst 0000         __end_of_toggle4F 1428  
       __end_of_toggle4L 1420                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8                ??_ssdInit 0044           i2___awmod@sign 0034  
             __accesstop 0080  __end_of__initialization 12E0            ___rparam_used 000001  
           countTime@dig 004C              _KernelClock 1200              pinMode@type 0040  
         __pcstackCOMRAM 002F             __pidataBANK0 13EE           ?_kernelAddProc 004C  
                _CCP1CON 000FBD                  _BAUDCON 000FB8             _digitalWrite 0860  
             _initPORTAD 1428                  __Hparam 0000                  __Lparam 0000  
              ?_ssdDigit 003E          kpDebounce@tempo 0023               _kernelInit 1406  
             _kernelLoop 0AAE                ?_toggle4F 002F                ?_toggle4L 002F  
                ___awdiv 0E86                  ___awmod 0FFC          ??_kernelAddProc 004E  
           __psmallconst 0600              ssdDigit@val 003F              ssdDigit@pos 003E  
                __pcinit 1294        __end_of_countTime 0E86                  __ramtop 0600  
                __ptext0 0F4A                  __ptext1 1410                  __ptext2 1346  
                __ptext3 0612                  __ptext4 0AAE                  __ptext5 0DAA  
                __ptext6 1418                  __ptext7 1420                  __ptext8 1428  
                __ptext9 1430                  _display 0021                  _pinMode 0612  
       ___awmod@dividend 0046                  _inverte 000000                  _ssdInit 1346  
                _started 0022      kpDebounce@valorNovo 0017           __pintcode_body 139C  
   end_of_initialization 12E0            __Lmediumconst 0000                  int_func 139C  
      __end_of_timerInit 1418        __end_of_ssdUpdate 0DAA               ??_ssdDigit 003F  
      __end_of_updateSSD 1438                  postdec1 000FE5                  postdec2 000FDD  
             ??_toggle4F 003E               ??_toggle4L 003E                  postinc0 000FEE  
                postinc1 000FE6                  postinc2 000FDE           _valor@ssd$F533 0601  
         kernelLoop@next 0057                i2___awmod 10AC              ?_initPORTAD 002F  
           ?_KernelClock 002F              ?_kernelInit 002F              ?_kernelLoop 002F  
          __pidataCOMRAM 1438   __end_of_valor@ssd$F533 0611      start_initialization 1294  
            __end_of_ISR 13EE               ?i2___awmod 002F          KernelClock@proc 0037  
           _initGenerico 000000       main@SSDUpdate_proc 0092              __pdataBANK0 009E  
            _changePORTD 000000              __pbssCOMRAM 0001            __pcstackBANK0 0080  
   kernelAddProc@newProc 004C               pinMode@pin 003E                __pintcode 0008  
               ?___awdiv 003E                 ?___awmod 0046              __smallconst 0600  
               ?_pinMode 003E                _countTime 0DAA                 ?_ssdInit 002F  
            ??i2___awmod 0033       main@countTime_proc 0098                 i2u309_40 13C4  
               i2u309_41 13C0                 i2u290_40 1126                 i2u290_41 1122  
               i2u291_40 114A                 i2u291_41 1146                 i2u292_40 1242  
               i2u292_41 123E                 i2u293_40 1292                 i2u293_41 128E  
               i2u286_40 10BE                 i2u286_41 10BA                 i2u287_40 10D8  
               i2u287_41 10D4                 i2u288_40 10F2                 i2u288_41 10EE  
               i2u289_40 1110                 i2u289_41 110C                main@F2410 00AA  
              main@F2404 0059                main@F2413 00A4                main@F2407 00B0  
              main@F2416 009E                _timerInit 1410                _ssdUpdate 0C6E  
              _updateSSD 1430    __end_of_kernelAddProc 1200    kpDebounce@valorAntigo 0015  
             ?_countTime 002F                copy_data0 12A8                copy_data1 12C8  
     i2___awmod@dividend 002F             ??_initPORTAD 003E                 __Hrparam 0000  
               __Lrparam 0000             ??_kernelInit 003E             ??_kernelLoop 0050  
             ?_timerInit 002F               ?_ssdUpdate 002F               ?_updateSSD 002F  
     __end_of_initPORTAD 1430                 __ptext10 0C6E                 __ptext11 0860  
               __ptext20 0000                 __ptext12 115C                 __ptext13 12EE  
               __ptext14 0FFC                 __ptext15 0E86                 __ptext16 1406  
               __ptext18 1200                 __ptext19 10AC       __end_of_kernelInit 1410  
     __end_of_kernelLoop 0C6E                 _ssdDigit 12EE                 _my_funcs 002B  
               isa$xinst 000000                 _toggle4F 1420                 _toggle4L 1418  
               int$flags 005F        i2___awmod@divisor 0031        i2___awmod@counter 0033  
            ??_countTime 004C            ?_digitalWrite 003E                 intlevel2 0000  
      digitalWrite@value 0040              ??_timerInit 003E              ??_ssdUpdate 0044  
            ??_updateSSD 0044           ??_digitalWrite 0042          digitalWrite@pin 003E  
      _valor@keypad$F311 0019  
