

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Nov 04 23:33:38 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    37                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    39   000000                     
    40                           ; Version 2.40
    41                           ; Generated 17/11/2021 GMT
    42                           ; 
    43                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F4520 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75   000000                     
    76 ;; Function _changePORTD is unused but had its address taken
    77   000000                     
    78 ;; Function _inverte is unused but had its address taken
    79   000000                     
    80 ;; Function _initGenerico is unused but had its address taken
    81   000000                     
    82                           	psect	idataCOMRAM
    83   001422                     __pidataCOMRAM:
    84                           	callstack 0
    85                           
    86                           ;initializer for main@F2405
    87   001422  32                 	db	low _initPORTAD
    88   001423  14                 	db	high _initPORTAD
    89   001424  0000               	dw	0
    90   001426  0000               	dw	0
    91   001428  000F               	dw	15
    92                           
    93                           	psect	idataBANK0
    94   001408                     __pidataBANK0:
    95                           	callstack 0
    96                           
    97                           ;initializer for main@F2411
    98   001408  00                 	db	low _countTime
    99   001409  0E                 	db	high _countTime
   100   00140A  0064               	dw	100
   101   00140C  0000               	dw	0
   102   00140E  0005               	dw	5
   103                           
   104                           ;initializer for main@F2408
   105   001410  3A                 	db	low _updateSSD
   106   001411  14                 	db	high _updateSSD
   107   001412  0001               	dw	1
   108   001414  0000               	dw	0
   109   001416  000A               	dw	10
   110                           
   111                           	psect	smallconst
   112   000600                     __psmallconst:
   113                           	callstack 0
   114   000600  00                 	db	0
   115   000601                     _valor@ssd$F527:
   116                           	callstack 0
   117   000601  3F                 	db	63
   118   000602  06                 	db	6
   119   000603  5B                 	db	91
   120   000604  4F                 	db	79
   121   000605  66                 	db	102
   122   000606  6D                 	db	109
   123   000607  7D                 	db	125
   124   000608  07                 	db	7
   125   000609  7F                 	db	127
   126   00060A  6F                 	db	111
   127   00060B  77                 	db	119
   128   00060C  7C                 	db	124
   129   00060D  39                 	db	57
   130   00060E  5E                 	db	94
   131   00060F  79                 	db	121
   132   000610  71                 	db	113
   133   000611                     __end_of_valor@ssd$F527:
   134                           	callstack 0
   135   000000                     _SPBRG	set	4015
   136   000000                     _SPBRGH	set	4016
   137   000000                     _BAUDCON	set	4024
   138   000000                     _TXSTA	set	4012
   139   000000                     _RCREG	set	4014
   140   000000                     _TRISC	set	3988
   141   000000                     _TRISB	set	3987
   142   000000                     _PORTC	set	3970
   143   000000                     _PORTB	set	3969
   144   000000                     _PORTA	set	3968
   145   000000                     _ADRESL	set	4035
   146   000000                     _ADRESH	set	4036
   147   000000                     _PORTD	set	3971
   148   000000                     _TMR0L	set	4054
   149   000000                     _TMR0H	set	4055
   150   000000                     _INTCON	set	4082
   151   000000                     _TRISA	set	3986
   152   000000                     _PORTE	set	3972
   153   000000                     _TRISD	set	3989
   154   000000                     _PIR1	set	3998
   155   000000                     _CCP1CON	set	4029
   156   000000                     _CCPR1L	set	4030
   157   000000                     _TRISE	set	3990
   158   000000                     _ADCON2	set	4032
   159   000000                     _ADCON0	set	4034
   160   000000                     _RCON	set	4048
   161   000000                     _T0CON	set	4053
   162   000000                     _T2CON	set	4042
   163   000000                     _PR2	set	4043
   164   000000                     _RCSTA	set	4011
   165   000000                     _TXREG	set	4013
   166   000611  00                 	db	0	; dummy byte at the end
   167   000000                     
   168                           ; #config settings
   169                           
   170                           	psect	cinit
   171   0012AE                     __pcinit:
   172                           	callstack 0
   173   0012AE                     start_initialization:
   174                           	callstack 0
   175   0012AE                     __initialization:
   176                           	callstack 0
   177                           
   178                           ; Initialize objects allocated to BANK0 (16 bytes)
   179                           ; load TBLPTR registers with __pidataBANK0
   180   0012AE  0E08               	movlw	low __pidataBANK0
   181   0012B0  6EF6               	movwf	tblptrl,c
   182   0012B2  0E14               	movlw	high __pidataBANK0
   183   0012B4  6EF7               	movwf	tblptrh,c
   184   0012B6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   185   0012B8  6EF8               	movwf	tblptru,c
   186   0012BA  EE00  F098         	lfsr	0,__pdataBANK0
   187   0012BE  EE10 F010          	lfsr	1,16
   188   0012C2                     copy_data0:
   189   0012C2  0009               	tblrd		*+
   190   0012C4  CFF5 FFEE          	movff	tablat,postinc0
   191   0012C8  50E5               	movf	postdec1,w,c
   192   0012CA  50E1               	movf	fsr1l,w,c
   193   0012CC  E1FA               	bnz	copy_data0
   194                           
   195                           ; Initialize objects allocated to COMRAM (8 bytes)
   196                           ; load TBLPTR registers with __pidataCOMRAM
   197   0012CE  0E22               	movlw	low __pidataCOMRAM
   198   0012D0  6EF6               	movwf	tblptrl,c
   199   0012D2  0E14               	movlw	high __pidataCOMRAM
   200   0012D4  6EF7               	movwf	tblptrh,c
   201   0012D6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   202   0012D8  6EF8               	movwf	tblptru,c
   203   0012DA  EE00  F059         	lfsr	0,__pdataCOMRAM
   204   0012DE  EE10 F008          	lfsr	1,8
   205   0012E2                     copy_data1:
   206   0012E2  0009               	tblrd		*+
   207   0012E4  CFF5 FFEE          	movff	tablat,postinc0
   208   0012E8  50E5               	movf	postdec1,w,c
   209   0012EA  50E1               	movf	fsr1l,w,c
   210   0012EC  E1FA               	bnz	copy_data1
   211                           
   212                           ; Clear objects allocated to COMRAM (46 bytes)
   213   0012EE  EE00  F001         	lfsr	0,__pbssCOMRAM
   214   0012F2  0E2E               	movlw	46
   215   0012F4                     clear_0:
   216   0012F4  6AEE               	clrf	postinc0,c
   217   0012F6  06E8               	decf	wreg,f,c
   218   0012F8  E1FD               	bnz	clear_0
   219   0012FA                     end_of_initialization:
   220                           	callstack 0
   221   0012FA                     __end_of__initialization:
   222                           	callstack 0
   223   0012FA  9061               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   224   0012FC  9261               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   225   0012FE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   226   001300  6EF8               	movwf	tblptru,c
   227   001302  0100               	movlb	0
   228   001304  EF1C  F009         	goto	_main	;jump to C main() function
   229                           
   230                           	psect	bssCOMRAM
   231   000001                     __pbssCOMRAM:
   232                           	callstack 0
   233   000001                     _pool:
   234                           	callstack 0
   235   000001                     	ds	20
   236   000015                     kpDebounce@valorAntigo:
   237                           	callstack 0
   238   000015                     	ds	2
   239   000017                     kpDebounce@valorNovo:
   240                           	callstack 0
   241   000017                     	ds	2
   242   000019                     _valor@keypad$F305:
   243                           	callstack 0
   244   000019                     	ds	2
   245   00001B                     _valor:
   246                           	callstack 0
   247   00001B                     	ds	2
   248   00001D                     _v3:
   249                           	callstack 0
   250   00001D                     	ds	1
   251   00001E                     _v2:
   252                           	callstack 0
   253   00001E                     	ds	1
   254   00001F                     _v1:
   255                           	callstack 0
   256   00001F                     	ds	1
   257   000020                     _v0:
   258                           	callstack 0
   259   000020                     	ds	1
   260   000021                     _display:
   261                           	callstack 0
   262   000021                     	ds	1
   263   000022                     _started:
   264                           	callstack 0
   265   000022                     	ds	1
   266   000023                     kpDebounce@tempo:
   267                           	callstack 0
   268   000023                     	ds	1
   269   000024                     _end:
   270                           	callstack 0
   271   000024                     	ds	1
   272   000025                     _start:
   273                           	callstack 0
   274   000025                     	ds	1
   275   000026                     _myself:
   276                           	callstack 0
   277   000026                     	ds	5
   278   00002B                     _my_funcs:
   279                           	callstack 0
   280   00002B                     	ds	4
   281                           
   282                           	psect	dataCOMRAM
   283   000059                     __pdataCOMRAM:
   284                           	callstack 0
   285   000059                     main@F2405:
   286                           	callstack 0
   287   000059                     	ds	8
   288                           
   289                           	psect	dataBANK0
   290   000098                     __pdataBANK0:
   291                           	callstack 0
   292   000098                     main@F2411:
   293                           	callstack 0
   294   000098                     	ds	8
   295   0000A0                     main@F2408:
   296                           	callstack 0
   297   0000A0                     	ds	8
   298                           
   299                           	psect	cstackBANK0
   300   000080                     __pcstackBANK0:
   301                           	callstack 0
   302   000080                     main@init_PD:
   303                           	callstack 0
   304                           
   305                           ; 8 bytes @ 0x0
   306   000080                     	ds	8
   307   000088                     main@SSDUpdate_proc:
   308                           	callstack 0
   309                           
   310                           ; 8 bytes @ 0x8
   311   000088                     	ds	8
   312   000090                     main@countTime_proc:
   313                           	callstack 0
   314                           
   315                           ; 8 bytes @ 0x10
   316   000090                     	ds	8
   317                           
   318                           	psect	cstackCOMRAM
   319   00002F                     __pcstackCOMRAM:
   320                           	callstack 0
   321   00002F                     ?i2___awmod:
   322                           	callstack 0
   323   00002F                     i2___awmod@dividend:
   324                           	callstack 0
   325                           
   326                           ; 2 bytes @ 0x0
   327   00002F                     	ds	2
   328   000031                     i2___awmod@divisor:
   329                           	callstack 0
   330                           
   331                           ; 2 bytes @ 0x2
   332   000031                     	ds	2
   333   000033                     i2___awmod@counter:
   334                           	callstack 0
   335                           
   336                           ; 1 bytes @ 0x4
   337   000033                     	ds	1
   338   000034                     i2___awmod@sign:
   339                           	callstack 0
   340                           
   341                           ; 1 bytes @ 0x5
   342   000034                     	ds	1
   343   000035                     
   344                           ; 1 bytes @ 0x6
   345   000035                     	ds	2
   346   000037                     KernelClock@proc:
   347                           	callstack 0
   348                           
   349                           ; 1 bytes @ 0x8
   350   000037                     	ds	1
   351   000038                     ??_ISR:
   352                           
   353                           ; 1 bytes @ 0x9
   354   000038                     	ds	6
   355   00003E                     ?___awdiv:
   356                           	callstack 0
   357   00003E                     ssdDigit@pos:
   358                           	callstack 0
   359   00003E                     digitalWrite@pin:
   360                           	callstack 0
   361   00003E                     pinMode@pin:
   362                           	callstack 0
   363   00003E                     ___awdiv@dividend:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0xF
   367   00003E                     	ds	1
   368   00003F                     ssdDigit@val:
   369                           	callstack 0
   370                           
   371                           ; 1 bytes @ 0x10
   372   00003F                     	ds	1
   373   000040                     digitalWrite@value:
   374                           	callstack 0
   375   000040                     pinMode@type:
   376                           	callstack 0
   377   000040                     ___awdiv@divisor:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0x11
   381   000040                     	ds	2
   382   000042                     ??_pinMode:
   383   000042                     ??_digitalWrite:
   384   000042                     ___awdiv@counter:
   385                           	callstack 0
   386                           
   387                           ; 1 bytes @ 0x13
   388   000042                     	ds	1
   389   000043                     ___awdiv@sign:
   390                           	callstack 0
   391                           
   392                           ; 1 bytes @ 0x14
   393   000043                     	ds	1
   394   000044                     ___awdiv@quotient:
   395                           	callstack 0
   396                           
   397                           ; 2 bytes @ 0x15
   398   000044                     	ds	2
   399   000046                     ?___awmod:
   400                           	callstack 0
   401   000046                     ___awmod@dividend:
   402                           	callstack 0
   403                           
   404                           ; 2 bytes @ 0x17
   405   000046                     	ds	2
   406   000048                     ___awmod@divisor:
   407                           	callstack 0
   408                           
   409                           ; 2 bytes @ 0x19
   410   000048                     	ds	2
   411   00004A                     ___awmod@counter:
   412                           	callstack 0
   413                           
   414                           ; 1 bytes @ 0x1B
   415   00004A                     	ds	1
   416   00004B                     ___awmod@sign:
   417                           	callstack 0
   418                           
   419                           ; 1 bytes @ 0x1C
   420   00004B                     	ds	1
   421   00004C                     countTime@dig:
   422                           	callstack 0
   423   00004C                     kernelAddProc@newProc:
   424                           	callstack 0
   425                           
   426                           ; 2 bytes @ 0x1D
   427   00004C                     	ds	2
   428   00004E                     ??_kernelAddProc:
   429                           
   430                           ; 1 bytes @ 0x1F
   431   00004E                     	ds	2
   432   000050                     ??_kernelLoop:
   433                           
   434                           ; 1 bytes @ 0x21
   435   000050                     	ds	5
   436   000055                     kernelLoop@tempProc:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x26
   440   000055                     	ds	2
   441   000057                     kernelLoop@next:
   442                           	callstack 0
   443                           
   444                           ; 1 bytes @ 0x28
   445   000057                     	ds	1
   446   000058                     kernelLoop@p:
   447                           	callstack 0
   448                           
   449                           ; 1 bytes @ 0x29
   450   000058                     	ds	1
   451   000059                     
   452                           ; 1 bytes @ 0x2A
   453 ;;
   454 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   455 ;;
   456 ;; *************** function _main *****************
   457 ;; Defined at:
   458 ;;		line 75 in file "main.c"
   459 ;; Parameters:    Size  Location     Type
   460 ;;		None
   461 ;; Auto vars:     Size  Location     Type
   462 ;;  countTime_pr    8   16[BANK0 ] struct .
   463 ;;  SSDUpdate_pr    8    8[BANK0 ] struct .
   464 ;;  init_PD         8    0[BANK0 ] struct .
   465 ;; Return value:  Size  Location     Type
   466 ;;                  1    wreg      void 
   467 ;; Registers used:
   468 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
   469 ;; Tracked objects:
   470 ;;		On entry : 0/0
   471 ;;		On exit  : 0/0
   472 ;;		Unchanged: 0/0
   473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   474 ;;      Params:         0       0       0       0       0       0       0
   475 ;;      Locals:         0      24       0       0       0       0       0
   476 ;;      Temps:          0       0       0       0       0       0       0
   477 ;;      Totals:         0      24       0       0       0       0       0
   478 ;;Total ram usage:       24 bytes
   479 ;; Hardware stack levels required when called: 7
   480 ;; This function calls:
   481 ;;		_kernelAddProc
   482 ;;		_kernelInit
   483 ;;		_kernelLoop
   484 ;;		_ssdInit
   485 ;;		_timerInit
   486 ;; This function is called by:
   487 ;;		Startup code after reset
   488 ;; This function uses a non-reentrant model
   489 ;;
   490                           
   491                           	psect	text0
   492   001238                     __ptext0:
   493                           	callstack 0
   494   001238                     _main:
   495                           	callstack 24
   496   001238                     
   497                           ;main.c: 79: process init_PD = {initPORTAD, 0, 0, 15};
   498   001238  EE20  F059         	lfsr	2,main@F2405
   499   00123C  EE10  F080         	lfsr	1,main@init_PD
   500   001240  0E07               	movlw	7
   501   001242                     u3091:
   502   001242  CFDB FFE3          	movff	plusw2,plusw1
   503   001246  06E8               	decf	wreg,f,c
   504   001248  E2FC               	bc	u3091
   505                           
   506                           ;main.c: 86: process SSDUpdate_proc = {updateSSD, 1, 0, 10};
   507   00124A  EE20  F0A0         	lfsr	2,main@F2408
   508   00124E  EE10  F088         	lfsr	1,main@SSDUpdate_proc
   509   001252  0E07               	movlw	7
   510   001254                     u3101:
   511   001254  CFDB FFE3          	movff	plusw2,plusw1
   512   001258  06E8               	decf	wreg,f,c
   513   00125A  E2FC               	bc	u3101
   514                           
   515                           ;main.c: 87: process countTime_proc = {countTime, 100, 0, 5};
   516   00125C  EE20  F098         	lfsr	2,main@F2411
   517   001260  EE10  F090         	lfsr	1,main@countTime_proc
   518   001264  0E07               	movlw	7
   519   001266                     u3111:
   520   001266  CFDB FFE3          	movff	plusw2,plusw1
   521   00126A  06E8               	decf	wreg,f,c
   522   00126C  E2FC               	bc	u3111
   523   00126E                     
   524                           ;main.c: 89: timerInit();
   525   00126E  EC15  F00A         	call	_timerInit	;wreg free
   526   001272                     
   527                           ;main.c: 90: ssdInit();
   528   001272  ECB0  F009         	call	_ssdInit	;wreg free
   529   001276                     
   530                           ;main.c: 95: kernelInit();
   531   001276  EC0C  F00A         	call	_kernelInit	;wreg free
   532   00127A                     
   533                           ;main.c: 96: kernelAddProc(&init_PD);
   534   00127A  0E80               	movlw	low main@init_PD
   535   00127C  6E4C               	movwf	kernelAddProc@newProc^0,c
   536   00127E  0E00               	movlw	high main@init_PD
   537   001280  6E4D               	movwf	(kernelAddProc@newProc+1)^0,c
   538   001282  EC80  F008         	call	_kernelAddProc	;wreg free
   539   001286                     
   540                           ;main.c: 102: kernelAddProc(&SSDUpdate_proc);
   541   001286  0E88               	movlw	low main@SSDUpdate_proc
   542   001288  6E4C               	movwf	kernelAddProc@newProc^0,c
   543   00128A  0E00               	movlw	high main@SSDUpdate_proc
   544   00128C  6E4D               	movwf	(kernelAddProc@newProc+1)^0,c
   545   00128E  EC80  F008         	call	_kernelAddProc	;wreg free
   546   001292                     
   547                           ;main.c: 103: kernelAddProc(&countTime_proc);
   548   001292  0E90               	movlw	low main@countTime_proc
   549   001294  6E4C               	movwf	kernelAddProc@newProc^0,c
   550   001296  0E00               	movlw	high main@countTime_proc
   551   001298  6E4D               	movwf	(kernelAddProc@newProc+1)^0,c
   552   00129A  EC80  F008         	call	_kernelAddProc	;wreg free
   553   00129E                     
   554                           ;main.c: 107: ((RCON) &= ~(1<<(7)));
   555   00129E  9ED0               	bcf	208,7,c	;volatile
   556   0012A0                     
   557                           ;main.c: 108: ((INTCON) |= (1<<(5)));
   558   0012A0  8AF2               	bsf	242,5,c	;volatile
   559   0012A2                     
   560                           ;main.c: 109: ((INTCON) |= (1<<(7)));
   561   0012A2  8EF2               	bsf	242,7,c	;volatile
   562   0012A4                     
   563                           ;main.c: 110: ((INTCON) |= (1<<(6)));
   564   0012A4  8CF2               	bsf	242,6,c	;volatile
   565   0012A6                     
   566                           ;main.c: 113: kernelLoop();
   567   0012A6  EC57  F005         	call	_kernelLoop	;wreg free
   568   0012AA  EF07  F000         	goto	start
   569   0012AE                     __end_of_main:
   570                           	callstack 0
   571                           
   572 ;; *************** function _timerInit *****************
   573 ;; Defined at:
   574 ;;		line 51 in file "timer.c"
   575 ;; Parameters:    Size  Location     Type
   576 ;;		None
   577 ;; Auto vars:     Size  Location     Type
   578 ;;		None
   579 ;; Return value:  Size  Location     Type
   580 ;;                  1    wreg      void 
   581 ;; Registers used:
   582 ;;		wreg, status,2, status,0
   583 ;; Tracked objects:
   584 ;;		On entry : 0/0
   585 ;;		On exit  : 0/0
   586 ;;		Unchanged: 0/0
   587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   588 ;;      Params:         0       0       0       0       0       0       0
   589 ;;      Locals:         0       0       0       0       0       0       0
   590 ;;      Temps:          0       0       0       0       0       0       0
   591 ;;      Totals:         0       0       0       0       0       0       0
   592 ;;Total ram usage:        0 bytes
   593 ;; Hardware stack levels used: 1
   594 ;; Hardware stack levels required when called: 3
   595 ;; This function calls:
   596 ;;		Nothing
   597 ;; This function is called by:
   598 ;;		_main
   599 ;; This function uses a non-reentrant model
   600 ;;
   601                           
   602                           	psect	text1
   603   00142A                     __ptext1:
   604                           	callstack 0
   605   00142A                     _timerInit:
   606                           	callstack 27
   607   00142A                     
   608                           ;timer.c: 53: T0CON = 0b00001000;
   609   00142A  0E08               	movlw	8
   610   00142C  6ED5               	movwf	213,c	;volatile
   611   00142E                     
   612                           ;timer.c: 54: ((T0CON) |= (1<<(7)));
   613   00142E  8ED5               	bsf	213,7,c	;volatile
   614   001430  0012               	return		;funcret
   615   001432                     __end_of_timerInit:
   616                           	callstack 0
   617                           
   618 ;; *************** function _ssdInit *****************
   619 ;; Defined at:
   620 ;;		line 101 in file "ssd.c"
   621 ;; Parameters:    Size  Location     Type
   622 ;;		None
   623 ;; Auto vars:     Size  Location     Type
   624 ;;		None
   625 ;; Return value:  Size  Location     Type
   626 ;;                  1    wreg      void 
   627 ;; Registers used:
   628 ;;		wreg, status,2, status,0, cstack
   629 ;; Tracked objects:
   630 ;;		On entry : 0/0
   631 ;;		On exit  : 0/0
   632 ;;		Unchanged: 0/0
   633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   634 ;;      Params:         0       0       0       0       0       0       0
   635 ;;      Locals:         0       0       0       0       0       0       0
   636 ;;      Temps:          0       0       0       0       0       0       0
   637 ;;      Totals:         0       0       0       0       0       0       0
   638 ;;Total ram usage:        0 bytes
   639 ;; Hardware stack levels used: 1
   640 ;; Hardware stack levels required when called: 4
   641 ;; This function calls:
   642 ;;		_pinMode
   643 ;; This function is called by:
   644 ;;		_main
   645 ;; This function uses a non-reentrant model
   646 ;;
   647                           
   648                           	psect	text2
   649   001360                     __ptext2:
   650                           	callstack 0
   651   001360                     _ssdInit:
   652                           	callstack 26
   653   001360                     
   654                           ;ssd.c: 103: pinMode(PIN_A2, 0);
   655   001360  0E00               	movlw	0
   656   001362  6E3F               	movwf	(pinMode@pin+1)^0,c
   657   001364  0E02               	movlw	2
   658   001366  6E3E               	movwf	pinMode@pin^0,c
   659   001368  0E00               	movlw	0
   660   00136A  6E41               	movwf	(pinMode@type+1)^0,c
   661   00136C  0E00               	movlw	0
   662   00136E  6E40               	movwf	pinMode@type^0,c
   663   001370  EC09  F003         	call	_pinMode	;wreg free
   664                           
   665                           ;ssd.c: 104: pinMode(PIN_A3, 0);
   666   001374  0E00               	movlw	0
   667   001376  6E3F               	movwf	(pinMode@pin+1)^0,c
   668   001378  0E03               	movlw	3
   669   00137A  6E3E               	movwf	pinMode@pin^0,c
   670   00137C  0E00               	movlw	0
   671   00137E  6E41               	movwf	(pinMode@type+1)^0,c
   672   001380  0E00               	movlw	0
   673   001382  6E40               	movwf	pinMode@type^0,c
   674   001384  EC09  F003         	call	_pinMode	;wreg free
   675                           
   676                           ;ssd.c: 105: pinMode(PIN_A4, 0);
   677   001388  0E00               	movlw	0
   678   00138A  6E3F               	movwf	(pinMode@pin+1)^0,c
   679   00138C  0E04               	movlw	4
   680   00138E  6E3E               	movwf	pinMode@pin^0,c
   681   001390  0E00               	movlw	0
   682   001392  6E41               	movwf	(pinMode@type+1)^0,c
   683   001394  0E00               	movlw	0
   684   001396  6E40               	movwf	pinMode@type^0,c
   685   001398  EC09  F003         	call	_pinMode	;wreg free
   686                           
   687                           ;ssd.c: 106: pinMode(PIN_A5, 0);
   688   00139C  0E00               	movlw	0
   689   00139E  6E3F               	movwf	(pinMode@pin+1)^0,c
   690   0013A0  0E05               	movlw	5
   691   0013A2  6E3E               	movwf	pinMode@pin^0,c
   692   0013A4  0E00               	movlw	0
   693   0013A6  6E41               	movwf	(pinMode@type+1)^0,c
   694   0013A8  0E00               	movlw	0
   695   0013AA  6E40               	movwf	pinMode@type^0,c
   696   0013AC  EC09  F003         	call	_pinMode	;wreg free
   697   0013B0                     
   698                           ;ssd.c: 109: TRISD = 0x00;
   699   0013B0  0E00               	movlw	0
   700   0013B2  6E95               	movwf	149,c	;volatile
   701   0013B4  0012               	return		;funcret
   702   0013B6                     __end_of_ssdInit:
   703                           	callstack 0
   704                           
   705 ;; *************** function _pinMode *****************
   706 ;; Defined at:
   707 ;;		line 54 in file "io.c"
   708 ;; Parameters:    Size  Location     Type
   709 ;;  pin             2   15[COMRAM] int 
   710 ;;  type            2   17[COMRAM] int 
   711 ;; Auto vars:     Size  Location     Type
   712 ;;		None
   713 ;; Return value:  Size  Location     Type
   714 ;;                  1    wreg      void 
   715 ;; Registers used:
   716 ;;		wreg, status,2, status,0
   717 ;; Tracked objects:
   718 ;;		On entry : 0/0
   719 ;;		On exit  : 0/0
   720 ;;		Unchanged: 0/0
   721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   722 ;;      Params:         4       0       0       0       0       0       0
   723 ;;      Locals:         0       0       0       0       0       0       0
   724 ;;      Temps:          2       0       0       0       0       0       0
   725 ;;      Totals:         6       0       0       0       0       0       0
   726 ;;Total ram usage:        6 bytes
   727 ;; Hardware stack levels used: 1
   728 ;; Hardware stack levels required when called: 3
   729 ;; This function calls:
   730 ;;		Nothing
   731 ;; This function is called by:
   732 ;;		_ssdInit
   733 ;;		_adcInit
   734 ;;		_lcdInit
   735 ;;		_i2cInit
   736 ;;		_read_SCL
   737 ;;		_read_SDA
   738 ;;		_clear_SCL
   739 ;;		_clear_SDA
   740 ;; This function uses a non-reentrant model
   741 ;;
   742                           
   743                           	psect	text3
   744   000612                     __ptext3:
   745                           	callstack 0
   746   000612                     _pinMode:
   747                           	callstack 26
   748   000612                     
   749                           ;io.c: 56: if(pin <8){
   750   000612  BE3F               	btfsc	(pinMode@pin+1)^0,7,c
   751   000614  EF17  F003         	goto	u2600
   752   000618  503F               	movf	(pinMode@pin+1)^0,w,c
   753   00061A  E107               	bnz	u2601
   754   00061C  0E08               	movlw	8
   755   00061E  5C3E               	subwf	pinMode@pin^0,w,c
   756   000620  B0D8               	btfsc	status,0,c
   757   000622  EF15  F003         	goto	u2601
   758   000626  EF17  F003         	goto	u2600
   759   00062A                     u2601:
   760   00062A  EF41  F003         	goto	l2869
   761   00062E                     u2600:
   762   00062E                     
   763                           ;io.c: 57: if (type){ ((TRISA) |= (1<<(pin)));}
   764   00062E  5040               	movf	pinMode@type^0,w,c
   765   000630  1041               	iorwf	(pinMode@type+1)^0,w,c
   766   000632  B4D8               	btfsc	status,2,c
   767   000634  EF1E  F003         	goto	u2611
   768   000638  EF20  F003         	goto	u2610
   769   00063C                     u2611:
   770   00063C  EF30  F003         	goto	l2867
   771   000640                     u2610:
   772   000640  C03E  F042         	movff	pinMode@pin,??_pinMode
   773   000644  0E01               	movlw	1
   774   000646  6E43               	movwf	(??_pinMode+1)^0,c
   775   000648  2A42               	incf	??_pinMode^0,f,c
   776   00064A  EF29  F003         	goto	u2624
   777   00064E                     u2625:
   778   00064E  90D8               	bcf	status,0,c
   779   000650  3643               	rlcf	(??_pinMode+1)^0,f,c
   780   000652                     u2624:
   781   000652  2E42               	decfsz	??_pinMode^0,f,c
   782   000654  EF27  F003         	goto	u2625
   783   000658  5043               	movf	(??_pinMode+1)^0,w,c
   784   00065A  1292               	iorwf	146,f,c	;volatile
   785   00065C  EF2F  F004         	goto	l243
   786   000660                     l2867:
   787                           
   788                           ;io.c: 58: else{ ((TRISA) &= ~(1<<(pin)));}
   789   000660  C03E  F042         	movff	pinMode@pin,??_pinMode
   790   000664  0E01               	movlw	1
   791   000666  6E43               	movwf	(??_pinMode+1)^0,c
   792   000668  2A42               	incf	??_pinMode^0,f,c
   793   00066A  EF39  F003         	goto	u2634
   794   00066E                     u2635:
   795   00066E  90D8               	bcf	status,0,c
   796   000670  3643               	rlcf	(??_pinMode+1)^0,f,c
   797   000672                     u2634:
   798   000672  2E42               	decfsz	??_pinMode^0,f,c
   799   000674  EF37  F003         	goto	u2635
   800   000678  5043               	movf	(??_pinMode+1)^0,w,c
   801   00067A  0AFF               	xorlw	255
   802   00067C  1692               	andwf	146,f,c	;volatile
   803   00067E  EF2F  F004         	goto	l243
   804   000682                     l2869:
   805   000682  BE3F               	btfsc	(pinMode@pin+1)^0,7,c
   806   000684  EF4F  F003         	goto	u2640
   807   000688  503F               	movf	(pinMode@pin+1)^0,w,c
   808   00068A  E107               	bnz	u2641
   809   00068C  0E10               	movlw	16
   810   00068E  5C3E               	subwf	pinMode@pin^0,w,c
   811   000690  B0D8               	btfsc	status,0,c
   812   000692  EF4D  F003         	goto	u2641
   813   000696  EF4F  F003         	goto	u2640
   814   00069A                     u2641:
   815   00069A  EF7D  F003         	goto	l2877
   816   00069E                     u2640:
   817   00069E                     
   818                           ;io.c: 60: if (type){ ((TRISB) |= (1<<(pin-8)));}
   819   00069E  5040               	movf	pinMode@type^0,w,c
   820   0006A0  1041               	iorwf	(pinMode@type+1)^0,w,c
   821   0006A2  B4D8               	btfsc	status,2,c
   822   0006A4  EF56  F003         	goto	u2651
   823   0006A8  EF58  F003         	goto	u2650
   824   0006AC                     u2651:
   825   0006AC  EF6A  F003         	goto	l2875
   826   0006B0                     u2650:
   827   0006B0  C03E  F042         	movff	pinMode@pin,??_pinMode
   828   0006B4  0EF8               	movlw	-8
   829   0006B6  2642               	addwf	??_pinMode^0,f,c
   830   0006B8  0E01               	movlw	1
   831   0006BA  6E43               	movwf	(??_pinMode+1)^0,c
   832   0006BC  2A42               	incf	??_pinMode^0,f,c
   833   0006BE  EF63  F003         	goto	u2664
   834   0006C2                     u2665:
   835   0006C2  90D8               	bcf	status,0,c
   836   0006C4  3643               	rlcf	(??_pinMode+1)^0,f,c
   837   0006C6                     u2664:
   838   0006C6  2E42               	decfsz	??_pinMode^0,f,c
   839   0006C8  EF61  F003         	goto	u2665
   840   0006CC  5043               	movf	(??_pinMode+1)^0,w,c
   841   0006CE  1293               	iorwf	147,f,c	;volatile
   842   0006D0  EF2F  F004         	goto	l243
   843   0006D4                     l2875:
   844                           
   845                           ;io.c: 61: else{ ((TRISB) &= ~(1<<(pin-8)));}
   846   0006D4  C03E  F042         	movff	pinMode@pin,??_pinMode
   847   0006D8  0EF8               	movlw	-8
   848   0006DA  2642               	addwf	??_pinMode^0,f,c
   849   0006DC  0E01               	movlw	1
   850   0006DE  6E43               	movwf	(??_pinMode+1)^0,c
   851   0006E0  2A42               	incf	??_pinMode^0,f,c
   852   0006E2  EF75  F003         	goto	u2674
   853   0006E6                     u2675:
   854   0006E6  90D8               	bcf	status,0,c
   855   0006E8  3643               	rlcf	(??_pinMode+1)^0,f,c
   856   0006EA                     u2674:
   857   0006EA  2E42               	decfsz	??_pinMode^0,f,c
   858   0006EC  EF73  F003         	goto	u2675
   859   0006F0  5043               	movf	(??_pinMode+1)^0,w,c
   860   0006F2  0AFF               	xorlw	255
   861   0006F4  1693               	andwf	147,f,c	;volatile
   862   0006F6  EF2F  F004         	goto	l243
   863   0006FA                     l2877:
   864   0006FA  BE3F               	btfsc	(pinMode@pin+1)^0,7,c
   865   0006FC  EF8B  F003         	goto	u2680
   866   000700  503F               	movf	(pinMode@pin+1)^0,w,c
   867   000702  E107               	bnz	u2681
   868   000704  0E18               	movlw	24
   869   000706  5C3E               	subwf	pinMode@pin^0,w,c
   870   000708  B0D8               	btfsc	status,0,c
   871   00070A  EF89  F003         	goto	u2681
   872   00070E  EF8B  F003         	goto	u2680
   873   000712                     u2681:
   874   000712  EFB9  F003         	goto	l2885
   875   000716                     u2680:
   876   000716                     
   877                           ;io.c: 63: if (type){ ((TRISC) |= (1<<(pin-16)));}
   878   000716  5040               	movf	pinMode@type^0,w,c
   879   000718  1041               	iorwf	(pinMode@type+1)^0,w,c
   880   00071A  B4D8               	btfsc	status,2,c
   881   00071C  EF92  F003         	goto	u2691
   882   000720  EF94  F003         	goto	u2690
   883   000724                     u2691:
   884   000724  EFA6  F003         	goto	l2883
   885   000728                     u2690:
   886   000728  C03E  F042         	movff	pinMode@pin,??_pinMode
   887   00072C  0EF0               	movlw	-16
   888   00072E  2642               	addwf	??_pinMode^0,f,c
   889   000730  0E01               	movlw	1
   890   000732  6E43               	movwf	(??_pinMode+1)^0,c
   891   000734  2A42               	incf	??_pinMode^0,f,c
   892   000736  EF9F  F003         	goto	u2704
   893   00073A                     u2705:
   894   00073A  90D8               	bcf	status,0,c
   895   00073C  3643               	rlcf	(??_pinMode+1)^0,f,c
   896   00073E                     u2704:
   897   00073E  2E42               	decfsz	??_pinMode^0,f,c
   898   000740  EF9D  F003         	goto	u2705
   899   000744  5043               	movf	(??_pinMode+1)^0,w,c
   900   000746  1294               	iorwf	148,f,c	;volatile
   901   000748  EF2F  F004         	goto	l243
   902   00074C                     l2883:
   903                           
   904                           ;io.c: 64: else{ ((TRISC) &= ~(1<<(pin-16)));}
   905   00074C  C03E  F042         	movff	pinMode@pin,??_pinMode
   906   000750  0EF0               	movlw	-16
   907   000752  2642               	addwf	??_pinMode^0,f,c
   908   000754  0E01               	movlw	1
   909   000756  6E43               	movwf	(??_pinMode+1)^0,c
   910   000758  2A42               	incf	??_pinMode^0,f,c
   911   00075A  EFB1  F003         	goto	u2714
   912   00075E                     u2715:
   913   00075E  90D8               	bcf	status,0,c
   914   000760  3643               	rlcf	(??_pinMode+1)^0,f,c
   915   000762                     u2714:
   916   000762  2E42               	decfsz	??_pinMode^0,f,c
   917   000764  EFAF  F003         	goto	u2715
   918   000768  5043               	movf	(??_pinMode+1)^0,w,c
   919   00076A  0AFF               	xorlw	255
   920   00076C  1694               	andwf	148,f,c	;volatile
   921   00076E  EF2F  F004         	goto	l243
   922   000772                     l2885:
   923   000772  BE3F               	btfsc	(pinMode@pin+1)^0,7,c
   924   000774  EFC7  F003         	goto	u2720
   925   000778  503F               	movf	(pinMode@pin+1)^0,w,c
   926   00077A  E107               	bnz	u2721
   927   00077C  0E20               	movlw	32
   928   00077E  5C3E               	subwf	pinMode@pin^0,w,c
   929   000780  B0D8               	btfsc	status,0,c
   930   000782  EFC5  F003         	goto	u2721
   931   000786  EFC7  F003         	goto	u2720
   932   00078A                     u2721:
   933   00078A  EFF5  F003         	goto	l2893
   934   00078E                     u2720:
   935   00078E                     
   936                           ;io.c: 66: if (type){ ((TRISD) |= (1<<(pin-24)));}
   937   00078E  5040               	movf	pinMode@type^0,w,c
   938   000790  1041               	iorwf	(pinMode@type+1)^0,w,c
   939   000792  B4D8               	btfsc	status,2,c
   940   000794  EFCE  F003         	goto	u2731
   941   000798  EFD0  F003         	goto	u2730
   942   00079C                     u2731:
   943   00079C  EFE2  F003         	goto	l2891
   944   0007A0                     u2730:
   945   0007A0  C03E  F042         	movff	pinMode@pin,??_pinMode
   946   0007A4  0EE8               	movlw	-24
   947   0007A6  2642               	addwf	??_pinMode^0,f,c
   948   0007A8  0E01               	movlw	1
   949   0007AA  6E43               	movwf	(??_pinMode+1)^0,c
   950   0007AC  2A42               	incf	??_pinMode^0,f,c
   951   0007AE  EFDB  F003         	goto	u2744
   952   0007B2                     u2745:
   953   0007B2  90D8               	bcf	status,0,c
   954   0007B4  3643               	rlcf	(??_pinMode+1)^0,f,c
   955   0007B6                     u2744:
   956   0007B6  2E42               	decfsz	??_pinMode^0,f,c
   957   0007B8  EFD9  F003         	goto	u2745
   958   0007BC  5043               	movf	(??_pinMode+1)^0,w,c
   959   0007BE  1295               	iorwf	149,f,c	;volatile
   960   0007C0  EF2F  F004         	goto	l243
   961   0007C4                     l2891:
   962                           
   963                           ;io.c: 67: else{ ((TRISD) &= ~(1<<(pin-24)));}
   964   0007C4  C03E  F042         	movff	pinMode@pin,??_pinMode
   965   0007C8  0EE8               	movlw	-24
   966   0007CA  2642               	addwf	??_pinMode^0,f,c
   967   0007CC  0E01               	movlw	1
   968   0007CE  6E43               	movwf	(??_pinMode+1)^0,c
   969   0007D0  2A42               	incf	??_pinMode^0,f,c
   970   0007D2  EFED  F003         	goto	u2754
   971   0007D6                     u2755:
   972   0007D6  90D8               	bcf	status,0,c
   973   0007D8  3643               	rlcf	(??_pinMode+1)^0,f,c
   974   0007DA                     u2754:
   975   0007DA  2E42               	decfsz	??_pinMode^0,f,c
   976   0007DC  EFEB  F003         	goto	u2755
   977   0007E0  5043               	movf	(??_pinMode+1)^0,w,c
   978   0007E2  0AFF               	xorlw	255
   979   0007E4  1695               	andwf	149,f,c	;volatile
   980   0007E6  EF2F  F004         	goto	l243
   981   0007EA                     l2893:
   982   0007EA  BE3F               	btfsc	(pinMode@pin+1)^0,7,c
   983   0007EC  EF03  F004         	goto	u2760
   984   0007F0  503F               	movf	(pinMode@pin+1)^0,w,c
   985   0007F2  E107               	bnz	u2761
   986   0007F4  0E28               	movlw	40
   987   0007F6  5C3E               	subwf	pinMode@pin^0,w,c
   988   0007F8  B0D8               	btfsc	status,0,c
   989   0007FA  EF01  F004         	goto	u2761
   990   0007FE  EF03  F004         	goto	u2760
   991   000802                     u2761:
   992   000802  EF2F  F004         	goto	l243
   993   000806                     u2760:
   994   000806                     
   995                           ;io.c: 69: if (type){ ((TRISE) |= (1<<(pin-32)));}
   996   000806  5040               	movf	pinMode@type^0,w,c
   997   000808  1041               	iorwf	(pinMode@type+1)^0,w,c
   998   00080A  B4D8               	btfsc	status,2,c
   999   00080C  EF0A  F004         	goto	u2771
  1000   000810  EF0C  F004         	goto	u2770
  1001   000814                     u2771:
  1002   000814  EF1E  F004         	goto	l2899
  1003   000818                     u2770:
  1004   000818  C03E  F042         	movff	pinMode@pin,??_pinMode
  1005   00081C  0EE0               	movlw	-32
  1006   00081E  2642               	addwf	??_pinMode^0,f,c
  1007   000820  0E01               	movlw	1
  1008   000822  6E43               	movwf	(??_pinMode+1)^0,c
  1009   000824  2A42               	incf	??_pinMode^0,f,c
  1010   000826  EF17  F004         	goto	u2784
  1011   00082A                     u2785:
  1012   00082A  90D8               	bcf	status,0,c
  1013   00082C  3643               	rlcf	(??_pinMode+1)^0,f,c
  1014   00082E                     u2784:
  1015   00082E  2E42               	decfsz	??_pinMode^0,f,c
  1016   000830  EF15  F004         	goto	u2785
  1017   000834  5043               	movf	(??_pinMode+1)^0,w,c
  1018   000836  1296               	iorwf	150,f,c	;volatile
  1019   000838  EF2F  F004         	goto	l243
  1020   00083C                     l2899:
  1021                           
  1022                           ;io.c: 70: else{ ((TRISE) &= ~(1<<(pin-32)));}
  1023   00083C  C03E  F042         	movff	pinMode@pin,??_pinMode
  1024   000840  0EE0               	movlw	-32
  1025   000842  2642               	addwf	??_pinMode^0,f,c
  1026   000844  0E01               	movlw	1
  1027   000846  6E43               	movwf	(??_pinMode+1)^0,c
  1028   000848  2A42               	incf	??_pinMode^0,f,c
  1029   00084A  EF29  F004         	goto	u2794
  1030   00084E                     u2795:
  1031   00084E  90D8               	bcf	status,0,c
  1032   000850  3643               	rlcf	(??_pinMode+1)^0,f,c
  1033   000852                     u2794:
  1034   000852  2E42               	decfsz	??_pinMode^0,f,c
  1035   000854  EF27  F004         	goto	u2795
  1036   000858  5043               	movf	(??_pinMode+1)^0,w,c
  1037   00085A  0AFF               	xorlw	255
  1038   00085C  1696               	andwf	150,f,c	;volatile
  1039   00085E                     l243:
  1040   00085E  0012               	return		;funcret
  1041   000860                     __end_of_pinMode:
  1042                           	callstack 0
  1043                           
  1044 ;; *************** function _kernelLoop *****************
  1045 ;; Defined at:
  1046 ;;		line 25 in file "kernel.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;		None
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;  tempProc        2   38[COMRAM] PTR struct .
  1051 ;;		 -> main@countTime_proc(8), main@SSDUpdate_proc(8), main@init_PD(8), 
  1052 ;;  p               1   41[COMRAM] unsigned char 
  1053 ;;  next            1   40[COMRAM] unsigned char 
  1054 ;; Return value:  Size  Location     Type
  1055 ;;                  1    wreg      void 
  1056 ;; Registers used:
  1057 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  1058 ;; Tracked objects:
  1059 ;;		On entry : 0/0
  1060 ;;		On exit  : 0/0
  1061 ;;		Unchanged: 0/0
  1062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1063 ;;      Params:         0       0       0       0       0       0       0
  1064 ;;      Locals:         4       0       0       0       0       0       0
  1065 ;;      Temps:          5       0       0       0       0       0       0
  1066 ;;      Totals:         9       0       0       0       0       0       0
  1067 ;;Total ram usage:        9 bytes
  1068 ;; Hardware stack levels used: 1
  1069 ;; Hardware stack levels required when called: 6
  1070 ;; This function calls:
  1071 ;;		___awmod
  1072 ;;		_countTime
  1073 ;;		_initPORTAD
  1074 ;;		_kernelAddProc
  1075 ;;		_updateSSD
  1076 ;; This function is called by:
  1077 ;;		_main
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           
  1081                           	psect	text4
  1082   000AAE                     __ptext4:
  1083                           	callstack 0
  1084   000AAE                     _kernelLoop:
  1085                           	callstack 24
  1086   000AAE                     l81:
  1087   000AAE                     
  1088                           ;kernel.c: 30: if (start != end) {
  1089   000AAE  5024               	movf	_end^0,w,c
  1090   000AB0  1825               	xorwf	_start^0,w,c
  1091   000AB2  B4D8               	btfsc	status,2,c
  1092   000AB4  EF5E  F005         	goto	u2921
  1093   000AB8  EF60  F005         	goto	u2920
  1094   000ABC                     u2921:
  1095   000ABC  EF57  F005         	goto	l81
  1096   000AC0                     u2920:
  1097   000AC0                     
  1098                           ;kernel.c: 33: next = start;
  1099   000AC0  C025  F057         	movff	_start,kernelLoop@next
  1100                           
  1101                           ;kernel.c: 39: for (p = start; p != end; p = (p + 1) % 10) {
  1102   000AC4  C025  F058         	movff	_start,kernelLoop@p
  1103   000AC8  EFCC  F005         	goto	l2983
  1104   000ACC                     l2975:
  1105                           
  1106                           ;kernel.c: 40: if ((pool[p]->prio > pool[next]->prio) && (pool[p]->start < pool[next]->s
      +                          tart)) {
  1107   000ACC  5058               	movf	kernelLoop@p^0,w,c
  1108   000ACE  0D02               	mullw	2
  1109   000AD0  0E01               	movlw	low _pool
  1110   000AD2  24F3               	addwf	243,w,c
  1111   000AD4  6ED9               	movwf	fsr2l,c
  1112   000AD6  0E00               	movlw	high _pool
  1113   000AD8  20F4               	addwfc	prodh,w,c
  1114   000ADA  6EDA               	movwf	fsr2h,c
  1115   000ADC  EE10 F006          	lfsr	1,6
  1116   000AE0  50DE               	movf	postinc2,w,c
  1117   000AE2  26E1               	addwf	fsr1l,f,c
  1118   000AE4  50DD               	movf	postdec2,w,c
  1119   000AE6  22E2               	addwfc	fsr1h,f,c
  1120   000AE8  5057               	movf	kernelLoop@next^0,w,c
  1121   000AEA  0D02               	mullw	2
  1122   000AEC  0E01               	movlw	low _pool
  1123   000AEE  24F3               	addwf	243,w,c
  1124   000AF0  6ED9               	movwf	fsr2l,c
  1125   000AF2  0E00               	movlw	high _pool
  1126   000AF4  20F4               	addwfc	prodh,w,c
  1127   000AF6  6EDA               	movwf	fsr2h,c
  1128   000AF8  EE00 F006          	lfsr	0,6
  1129   000AFC  50DE               	movf	postinc2,w,c
  1130   000AFE  26E9               	addwf	fsr0l,f,c
  1131   000B00  50DD               	movf	postdec2,w,c
  1132   000B02  22EA               	addwfc	fsr0h,f,c
  1133   000B04  50E6               	movf	postinc1,w,c
  1134   000B06  5CEE               	subwf	postinc0,w,c
  1135   000B08  50EE               	movf	postinc0,w,c
  1136   000B0A  0A80               	xorlw	128
  1137   000B0C  6E54               	movwf	(??_kernelLoop+4)^0,c
  1138   000B0E  50E6               	movf	postinc1,w,c
  1139   000B10  0A80               	xorlw	128
  1140   000B12  5854               	subwfb	(??_kernelLoop+4)^0,w,c
  1141   000B14  B0D8               	btfsc	status,0,c
  1142   000B16  EF8F  F005         	goto	u2931
  1143   000B1A  EF91  F005         	goto	u2930
  1144   000B1E                     u2931:
  1145   000B1E  EFBE  F005         	goto	l2981
  1146   000B22                     u2930:
  1147   000B22  5057               	movf	kernelLoop@next^0,w,c
  1148   000B24  0D02               	mullw	2
  1149   000B26  0E01               	movlw	low _pool
  1150   000B28  24F3               	addwf	243,w,c
  1151   000B2A  6ED9               	movwf	fsr2l,c
  1152   000B2C  0E00               	movlw	high _pool
  1153   000B2E  20F4               	addwfc	prodh,w,c
  1154   000B30  6EDA               	movwf	fsr2h,c
  1155   000B32  EE10 F004          	lfsr	1,4
  1156   000B36  50DE               	movf	postinc2,w,c
  1157   000B38  26E1               	addwf	fsr1l,f,c
  1158   000B3A  50DD               	movf	postdec2,w,c
  1159   000B3C  22E2               	addwfc	fsr1h,f,c
  1160   000B3E  5058               	movf	kernelLoop@p^0,w,c
  1161   000B40  0D02               	mullw	2
  1162   000B42  0E01               	movlw	low _pool
  1163   000B44  24F3               	addwf	243,w,c
  1164   000B46  6ED9               	movwf	fsr2l,c
  1165   000B48  0E00               	movlw	high _pool
  1166   000B4A  20F4               	addwfc	prodh,w,c
  1167   000B4C  6EDA               	movwf	fsr2h,c
  1168   000B4E  EE00 F004          	lfsr	0,4
  1169   000B52  50DE               	movf	postinc2,w,c
  1170   000B54  26E9               	addwf	fsr0l,f,c
  1171   000B56  50DD               	movf	postdec2,w,c
  1172   000B58  22EA               	addwfc	fsr0h,f,c
  1173   000B5A  50E6               	movf	postinc1,w,c
  1174   000B5C  5CEE               	subwf	postinc0,w,c
  1175   000B5E  50EE               	movf	postinc0,w,c
  1176   000B60  0A80               	xorlw	128
  1177   000B62  6E54               	movwf	(??_kernelLoop+4)^0,c
  1178   000B64  50E6               	movf	postinc1,w,c
  1179   000B66  0A80               	xorlw	128
  1180   000B68  5854               	subwfb	(??_kernelLoop+4)^0,w,c
  1181   000B6A  B0D8               	btfsc	status,0,c
  1182   000B6C  EFBA  F005         	goto	u2941
  1183   000B70  EFBC  F005         	goto	u2940
  1184   000B74                     u2941:
  1185   000B74  EFBE  F005         	goto	l2981
  1186   000B78                     u2940:
  1187   000B78                     
  1188                           ;kernel.c: 41: next = p;
  1189   000B78  C058  F057         	movff	kernelLoop@p,kernelLoop@next
  1190   000B7C                     l2981:
  1191   000B7C  0E01               	movlw	1
  1192   000B7E  2458               	addwf	kernelLoop@p^0,w,c
  1193   000B80  6E46               	movwf	___awmod@dividend^0,c
  1194   000B82  6A47               	clrf	(___awmod@dividend+1)^0,c
  1195   000B84  0E00               	movlw	0
  1196   000B86  2247               	addwfc	(___awmod@dividend+1)^0,f,c
  1197   000B88  0E00               	movlw	0
  1198   000B8A  6E49               	movwf	(___awmod@divisor+1)^0,c
  1199   000B8C  0E0A               	movlw	10
  1200   000B8E  6E48               	movwf	___awmod@divisor^0,c
  1201   000B90  ECD0  F007         	call	___awmod	;wreg free
  1202   000B94  5046               	movf	?___awmod^0,w,c
  1203   000B96  6E58               	movwf	kernelLoop@p^0,c
  1204   000B98                     l2983:
  1205   000B98  5024               	movf	_end^0,w,c
  1206   000B9A  1858               	xorwf	kernelLoop@p^0,w,c
  1207   000B9C  A4D8               	btfss	status,2,c
  1208   000B9E  EFD3  F005         	goto	u2951
  1209   000BA2  EFD5  F005         	goto	u2950
  1210   000BA6                     u2951:
  1211   000BA6  EF66  F005         	goto	l2975
  1212   000BAA                     u2950:
  1213   000BAA                     
  1214                           ;kernel.c: 42: };kernel.c: 43: };kernel.c: 46: tempProc = pool[next];
  1215   000BAA  5057               	movf	kernelLoop@next^0,w,c
  1216   000BAC  0D02               	mullw	2
  1217   000BAE  0E01               	movlw	low _pool
  1218   000BB0  24F3               	addwf	243,w,c
  1219   000BB2  6ED9               	movwf	fsr2l,c
  1220   000BB4  0E00               	movlw	high _pool
  1221   000BB6  20F4               	addwfc	prodh,w,c
  1222   000BB8  6EDA               	movwf	fsr2h,c
  1223   000BBA  CFDE F055          	movff	postinc2,kernelLoop@tempProc
  1224   000BBE  CFDD F056          	movff	postdec2,kernelLoop@tempProc+1
  1225   000BC2                     
  1226                           ;kernel.c: 47: pool[next] = pool[start];
  1227   000BC2  5025               	movf	_start^0,w,c
  1228   000BC4  0D02               	mullw	2
  1229   000BC6  0E01               	movlw	low _pool
  1230   000BC8  24F3               	addwf	243,w,c
  1231   000BCA  6ED9               	movwf	fsr2l,c
  1232   000BCC  0E00               	movlw	high _pool
  1233   000BCE  20F4               	addwfc	prodh,w,c
  1234   000BD0  6EDA               	movwf	fsr2h,c
  1235   000BD2  5057               	movf	kernelLoop@next^0,w,c
  1236   000BD4  0D02               	mullw	2
  1237   000BD6  0E01               	movlw	low _pool
  1238   000BD8  24F3               	addwf	243,w,c
  1239   000BDA  6EE1               	movwf	fsr1l,c
  1240   000BDC  0E00               	movlw	high _pool
  1241   000BDE  20F4               	addwfc	prodh,w,c
  1242   000BE0  6EE2               	movwf	fsr1h,c
  1243   000BE2  CFDE FFE6          	movff	postinc2,postinc1
  1244   000BE6  CFDD FFE5          	movff	postdec2,postdec1
  1245   000BEA                     
  1246                           ;kernel.c: 48: pool[start] = tempProc;
  1247   000BEA  5025               	movf	_start^0,w,c
  1248   000BEC  0D02               	mullw	2
  1249   000BEE  0E01               	movlw	low _pool
  1250   000BF0  24F3               	addwf	243,w,c
  1251   000BF2  6ED9               	movwf	fsr2l,c
  1252   000BF4  0E00               	movlw	high _pool
  1253   000BF6  20F4               	addwfc	prodh,w,c
  1254   000BF8  6EDA               	movwf	fsr2h,c
  1255   000BFA  C055  FFDE         	movff	kernelLoop@tempProc,postinc2
  1256   000BFE  C056  FFDD         	movff	kernelLoop@tempProc+1,postdec2
  1257   000C02                     l2991:
  1258   000C02  5025               	movf	_start^0,w,c
  1259   000C04  0D02               	mullw	2
  1260   000C06  0E01               	movlw	low _pool
  1261   000C08  24F3               	addwf	243,w,c
  1262   000C0A  6ED9               	movwf	fsr2l,c
  1263   000C0C  0E00               	movlw	high _pool
  1264   000C0E  20F4               	addwfc	prodh,w,c
  1265   000C10  6EDA               	movwf	fsr2h,c
  1266   000C12  EE10 F004          	lfsr	1,4
  1267   000C16  50DE               	movf	postinc2,w,c
  1268   000C18  26E1               	addwf	fsr1l,f,c
  1269   000C1A  50DD               	movf	postdec2,w,c
  1270   000C1C  22E2               	addwfc	fsr1h,f,c
  1271   000C1E  0E01               	movlw	1
  1272   000C20  BEE3               	btfsc	plusw1,7,c
  1273   000C22  EF1E  F006         	goto	u2960
  1274   000C26  0E01               	movlw	1
  1275   000C28  50E3               	movf	plusw1,w,c
  1276   000C2A  E106               	bnz	u2961
  1277   000C2C  04E6               	decf	postinc1,w,c
  1278   000C2E  B0D8               	btfsc	status,0,c
  1279   000C30  EF1C  F006         	goto	u2961
  1280   000C34  EF1E  F006         	goto	u2960
  1281   000C38                     u2961:
  1282   000C38  EF01  F006         	goto	l2991
  1283   000C3C                     u2960:
  1284   000C3C                     
  1285                           ;kernel.c: 53: };kernel.c: 54: if (pool[start]->function() == 2) {
  1286   000C3C  5025               	movf	_start^0,w,c
  1287   000C3E  0D02               	mullw	2
  1288   000C40  0E01               	movlw	low _pool
  1289   000C42  24F3               	addwf	243,w,c
  1290   000C44  6ED9               	movwf	fsr2l,c
  1291   000C46  0E00               	movlw	high _pool
  1292   000C48  20F4               	addwfc	prodh,w,c
  1293   000C4A  6EDA               	movwf	fsr2h,c
  1294   000C4C  CFDE F050          	movff	postinc2,??_kernelLoop
  1295   000C50  CFDD F051          	movff	postdec2,??_kernelLoop+1
  1296   000C54  C050  FFD9         	movff	??_kernelLoop,fsr2l
  1297   000C58  C051  FFDA         	movff	??_kernelLoop+1,fsr2h
  1298   000C5C  D802               	call	u2978
  1299   000C5E  EF3B  F006         	goto	u2979
  1300   000C62                     u2978:
  1301   000C62  0005               	push	
  1302   000C64  6EFA               	movwf	pclath,c
  1303   000C66  50DE               	movf	postinc2,w,c
  1304   000C68  6EFD               	movwf	tosl,c
  1305   000C6A  50DE               	movf	postinc2,w,c
  1306   000C6C  6EFE               	movwf	tosh,c
  1307   000C6E  50F8               	movf	tblptru,w,c
  1308   000C70  6EFF               	movwf	tosu,c
  1309   000C72  50FA               	movf	pclath,w,c
  1310   000C74  0012               	return		;indir
  1311   000C76                     u2979:
  1312   000C76  0A02               	xorlw	2
  1313   000C78  A4D8               	btfss	status,2,c
  1314   000C7A  EF41  F006         	goto	u2981
  1315   000C7E  EF43  F006         	goto	u2980
  1316   000C82                     u2981:
  1317   000C82  EF51  F006         	goto	l2997
  1318   000C86                     u2980:
  1319   000C86                     
  1320                           ;kernel.c: 55: kernelAddProc(pool[start]);
  1321   000C86  5025               	movf	_start^0,w,c
  1322   000C88  0D02               	mullw	2
  1323   000C8A  0E01               	movlw	low _pool
  1324   000C8C  24F3               	addwf	243,w,c
  1325   000C8E  6ED9               	movwf	fsr2l,c
  1326   000C90  0E00               	movlw	high _pool
  1327   000C92  20F4               	addwfc	prodh,w,c
  1328   000C94  6EDA               	movwf	fsr2h,c
  1329   000C96  CFDE F04C          	movff	postinc2,kernelAddProc@newProc
  1330   000C9A  CFDD F04D          	movff	postdec2,kernelAddProc@newProc+1
  1331   000C9E  EC80  F008         	call	_kernelAddProc	;wreg free
  1332   000CA2                     l2997:
  1333                           
  1334                           ;kernel.c: 56: };kernel.c: 57: start = (start + 1) % 10;
  1335   000CA2  0E01               	movlw	1
  1336   000CA4  2425               	addwf	_start^0,w,c
  1337   000CA6  6E46               	movwf	___awmod@dividend^0,c
  1338   000CA8  6A47               	clrf	(___awmod@dividend+1)^0,c
  1339   000CAA  0E00               	movlw	0
  1340   000CAC  2247               	addwfc	(___awmod@dividend+1)^0,f,c
  1341   000CAE  0E00               	movlw	0
  1342   000CB0  6E49               	movwf	(___awmod@divisor+1)^0,c
  1343   000CB2  0E0A               	movlw	10
  1344   000CB4  6E48               	movwf	___awmod@divisor^0,c
  1345   000CB6  ECD0  F007         	call	___awmod	;wreg free
  1346   000CBA  5046               	movf	?___awmod^0,w,c
  1347   000CBC  6E25               	movwf	_start^0,c
  1348   000CBE  EF57  F005         	goto	l81
  1349   000CC2  0012               	return		;funcret
  1350   000CC4                     __end_of_kernelLoop:
  1351                           	callstack 0
  1352                           
  1353 ;; *************** function _countTime *****************
  1354 ;; Defined at:
  1355 ;;		line 54 in file "main.c"
  1356 ;; Parameters:    Size  Location     Type
  1357 ;;		None
  1358 ;; Auto vars:     Size  Location     Type
  1359 ;;  dig             2   29[COMRAM] int 
  1360 ;; Return value:  Size  Location     Type
  1361 ;;                  1    wreg      unsigned char 
  1362 ;; Registers used:
  1363 ;;		wreg, status,2, status,0, cstack
  1364 ;; Tracked objects:
  1365 ;;		On entry : 0/0
  1366 ;;		On exit  : 0/0
  1367 ;;		Unchanged: 0/0
  1368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1369 ;;      Params:         0       0       0       0       0       0       0
  1370 ;;      Locals:         2       0       0       0       0       0       0
  1371 ;;      Temps:          0       0       0       0       0       0       0
  1372 ;;      Totals:         2       0       0       0       0       0       0
  1373 ;;Total ram usage:        2 bytes
  1374 ;; Hardware stack levels used: 1
  1375 ;; Hardware stack levels required when called: 4
  1376 ;; This function calls:
  1377 ;;		___awdiv
  1378 ;;		___awmod
  1379 ;;		_ssdDigit
  1380 ;; This function is called by:
  1381 ;;		_kernelLoop
  1382 ;; This function uses a non-reentrant model
  1383 ;;
  1384                           
  1385                           	psect	text5
  1386   000E00                     __ptext5:
  1387                           	callstack 0
  1388   000E00                     _countTime:
  1389                           	callstack 25
  1390   000E00                     
  1391                           ;main.c: 56: valor++;
  1392   000E00  4A1B               	infsnz	_valor^0,f,c
  1393   000E02  2A1C               	incf	(_valor+1)^0,f,c
  1394   000E04                     
  1395                           ;main.c: 57: int dig;;main.c: 61: dig = (valor)%10;
  1396   000E04  C01B  F046         	movff	_valor,___awmod@dividend
  1397   000E08  C01C  F047         	movff	_valor+1,___awmod@dividend+1
  1398   000E0C  0E00               	movlw	0
  1399   000E0E  6E49               	movwf	(___awmod@divisor+1)^0,c
  1400   000E10  0E0A               	movlw	10
  1401   000E12  6E48               	movwf	___awmod@divisor^0,c
  1402   000E14  ECD0  F007         	call	___awmod	;wreg free
  1403   000E18  C046  F04C         	movff	?___awmod,countTime@dig
  1404   000E1C  C047  F04D         	movff	?___awmod+1,countTime@dig+1
  1405   000E20                     
  1406                           ;main.c: 62: ssdDigit(dig, 3);
  1407   000E20  0E03               	movlw	3
  1408   000E22  6E3E               	movwf	ssdDigit@pos^0,c
  1409   000E24  504C               	movf	countTime@dig^0,w,c
  1410   000E26  EC84  F009         	call	_ssdDigit
  1411   000E2A                     
  1412                           ;main.c: 64: dig = (valor/10)%10;
  1413   000E2A  0E00               	movlw	0
  1414   000E2C  6E41               	movwf	(___awdiv@divisor+1)^0,c
  1415   000E2E  0E0A               	movlw	10
  1416   000E30  6E40               	movwf	___awdiv@divisor^0,c
  1417   000E32  C01B  F03E         	movff	_valor,___awdiv@dividend
  1418   000E36  C01C  F03F         	movff	_valor+1,___awdiv@dividend+1
  1419   000E3A  EC6E  F007         	call	___awdiv	;wreg free
  1420   000E3E  C03E  F046         	movff	?___awdiv,___awmod@dividend
  1421   000E42  C03F  F047         	movff	?___awdiv+1,___awmod@dividend+1
  1422   000E46  0E00               	movlw	0
  1423   000E48  6E49               	movwf	(___awmod@divisor+1)^0,c
  1424   000E4A  0E0A               	movlw	10
  1425   000E4C  6E48               	movwf	___awmod@divisor^0,c
  1426   000E4E  ECD0  F007         	call	___awmod	;wreg free
  1427   000E52  C046  F04C         	movff	?___awmod,countTime@dig
  1428   000E56  C047  F04D         	movff	?___awmod+1,countTime@dig+1
  1429   000E5A                     
  1430                           ;main.c: 65: ssdDigit(dig, 2);
  1431   000E5A  0E02               	movlw	2
  1432   000E5C  6E3E               	movwf	ssdDigit@pos^0,c
  1433   000E5E  504C               	movf	countTime@dig^0,w,c
  1434   000E60  EC84  F009         	call	_ssdDigit
  1435   000E64                     
  1436                           ;main.c: 67: dig = (valor/100)%10;
  1437   000E64  0E00               	movlw	0
  1438   000E66  6E41               	movwf	(___awdiv@divisor+1)^0,c
  1439   000E68  0E64               	movlw	100
  1440   000E6A  6E40               	movwf	___awdiv@divisor^0,c
  1441   000E6C  C01B  F03E         	movff	_valor,___awdiv@dividend
  1442   000E70  C01C  F03F         	movff	_valor+1,___awdiv@dividend+1
  1443   000E74  EC6E  F007         	call	___awdiv	;wreg free
  1444   000E78  C03E  F046         	movff	?___awdiv,___awmod@dividend
  1445   000E7C  C03F  F047         	movff	?___awdiv+1,___awmod@dividend+1
  1446   000E80  0E00               	movlw	0
  1447   000E82  6E49               	movwf	(___awmod@divisor+1)^0,c
  1448   000E84  0E0A               	movlw	10
  1449   000E86  6E48               	movwf	___awmod@divisor^0,c
  1450   000E88  ECD0  F007         	call	___awmod	;wreg free
  1451   000E8C  C046  F04C         	movff	?___awmod,countTime@dig
  1452   000E90  C047  F04D         	movff	?___awmod+1,countTime@dig+1
  1453   000E94                     
  1454                           ;main.c: 68: ssdDigit(dig, 1);
  1455   000E94  0E01               	movlw	1
  1456   000E96  6E3E               	movwf	ssdDigit@pos^0,c
  1457   000E98  504C               	movf	countTime@dig^0,w,c
  1458   000E9A  EC84  F009         	call	_ssdDigit
  1459   000E9E                     
  1460                           ;main.c: 70: dig = (valor/1000)%10;
  1461   000E9E  0E03               	movlw	3
  1462   000EA0  6E41               	movwf	(___awdiv@divisor+1)^0,c
  1463   000EA2  0EE8               	movlw	232
  1464   000EA4  6E40               	movwf	___awdiv@divisor^0,c
  1465   000EA6  C01B  F03E         	movff	_valor,___awdiv@dividend
  1466   000EAA  C01C  F03F         	movff	_valor+1,___awdiv@dividend+1
  1467   000EAE  EC6E  F007         	call	___awdiv	;wreg free
  1468   000EB2  C03E  F046         	movff	?___awdiv,___awmod@dividend
  1469   000EB6  C03F  F047         	movff	?___awdiv+1,___awmod@dividend+1
  1470   000EBA  0E00               	movlw	0
  1471   000EBC  6E49               	movwf	(___awmod@divisor+1)^0,c
  1472   000EBE  0E0A               	movlw	10
  1473   000EC0  6E48               	movwf	___awmod@divisor^0,c
  1474   000EC2  ECD0  F007         	call	___awmod	;wreg free
  1475   000EC6  C046  F04C         	movff	?___awmod,countTime@dig
  1476   000ECA  C047  F04D         	movff	?___awmod+1,countTime@dig+1
  1477   000ECE                     
  1478                           ;main.c: 71: ssdDigit(dig, 0);
  1479   000ECE  0E00               	movlw	0
  1480   000ED0  6E3E               	movwf	ssdDigit@pos^0,c
  1481   000ED2  504C               	movf	countTime@dig^0,w,c
  1482   000ED4  EC84  F009         	call	_ssdDigit
  1483   000ED8                     
  1484                           ;main.c: 72: return 2;
  1485   000ED8  0E02               	movlw	2
  1486   000EDA  0012               	return		;funcret
  1487   000EDC                     __end_of_countTime:
  1488                           	callstack 0
  1489                           
  1490 ;; *************** function _initPORTAD *****************
  1491 ;; Defined at:
  1492 ;;		line 29 in file "main.c"
  1493 ;; Parameters:    Size  Location     Type
  1494 ;;		None
  1495 ;; Auto vars:     Size  Location     Type
  1496 ;;		None
  1497 ;; Return value:  Size  Location     Type
  1498 ;;                  1    wreg      unsigned char 
  1499 ;; Registers used:
  1500 ;;		wreg, status,2
  1501 ;; Tracked objects:
  1502 ;;		On entry : 0/0
  1503 ;;		On exit  : 0/0
  1504 ;;		Unchanged: 0/0
  1505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1506 ;;      Params:         0       0       0       0       0       0       0
  1507 ;;      Locals:         0       0       0       0       0       0       0
  1508 ;;      Temps:          0       0       0       0       0       0       0
  1509 ;;      Totals:         0       0       0       0       0       0       0
  1510 ;;Total ram usage:        0 bytes
  1511 ;; Hardware stack levels used: 1
  1512 ;; Hardware stack levels required when called: 3
  1513 ;; This function calls:
  1514 ;;		Nothing
  1515 ;; This function is called by:
  1516 ;;		_kernelLoop
  1517 ;; This function uses a non-reentrant model
  1518 ;;
  1519                           
  1520                           	psect	text6
  1521   001432                     __ptext6:
  1522                           	callstack 0
  1523   001432                     _initPORTAD:
  1524                           	callstack 26
  1525   001432                     
  1526                           ;main.c: 31: TRISD = 0x00;
  1527   001432  0E00               	movlw	0
  1528   001434  6E95               	movwf	149,c	;volatile
  1529   001436                     
  1530                           ;main.c: 32: return 0;
  1531   001436  0E00               	movlw	0
  1532   001438  0012               	return		;funcret
  1533   00143A                     __end_of_initPORTAD:
  1534                           	callstack 0
  1535                           
  1536 ;; *************** function _updateSSD *****************
  1537 ;; Defined at:
  1538 ;;		line 47 in file "main.c"
  1539 ;; Parameters:    Size  Location     Type
  1540 ;;		None
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;		None
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  1    wreg      unsigned char 
  1545 ;; Registers used:
  1546 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1552 ;;      Params:         0       0       0       0       0       0       0
  1553 ;;      Locals:         0       0       0       0       0       0       0
  1554 ;;      Temps:          0       0       0       0       0       0       0
  1555 ;;      Totals:         0       0       0       0       0       0       0
  1556 ;;Total ram usage:        0 bytes
  1557 ;; Hardware stack levels used: 1
  1558 ;; Hardware stack levels required when called: 5
  1559 ;; This function calls:
  1560 ;;		_ssdUpdate
  1561 ;; This function is called by:
  1562 ;;		_kernelLoop
  1563 ;; This function uses a non-reentrant model
  1564 ;;
  1565                           
  1566                           	psect	text7
  1567   00143A                     __ptext7:
  1568                           	callstack 0
  1569   00143A                     _updateSSD:
  1570                           	callstack 24
  1571   00143A                     
  1572                           ;main.c: 49: ssdUpdate();
  1573   00143A  EC62  F006         	call	_ssdUpdate	;wreg free
  1574   00143E                     
  1575                           ;main.c: 50: return 2;
  1576   00143E  0E02               	movlw	2
  1577   001440  0012               	return		;funcret
  1578   001442                     __end_of_updateSSD:
  1579                           	callstack 0
  1580                           
  1581 ;; *************** function _ssdUpdate *****************
  1582 ;; Defined at:
  1583 ;;		line 54 in file "ssd.c"
  1584 ;; Parameters:    Size  Location     Type
  1585 ;;		None
  1586 ;; Auto vars:     Size  Location     Type
  1587 ;;		None
  1588 ;; Return value:  Size  Location     Type
  1589 ;;                  1    wreg      void 
  1590 ;; Registers used:
  1591 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1592 ;; Tracked objects:
  1593 ;;		On entry : 0/0
  1594 ;;		On exit  : 0/0
  1595 ;;		Unchanged: 0/0
  1596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1597 ;;      Params:         0       0       0       0       0       0       0
  1598 ;;      Locals:         0       0       0       0       0       0       0
  1599 ;;      Temps:          0       0       0       0       0       0       0
  1600 ;;      Totals:         0       0       0       0       0       0       0
  1601 ;;Total ram usage:        0 bytes
  1602 ;; Hardware stack levels used: 1
  1603 ;; Hardware stack levels required when called: 4
  1604 ;; This function calls:
  1605 ;;		_digitalWrite
  1606 ;; This function is called by:
  1607 ;;		_updateSSD
  1608 ;; This function uses a non-reentrant model
  1609 ;;
  1610                           
  1611                           	psect	text8
  1612   000CC4                     __ptext8:
  1613                           	callstack 0
  1614   000CC4                     _ssdUpdate:
  1615                           	callstack 24
  1616   000CC4                     
  1617                           ;ssd.c: 58: TRISD= 0x00;
  1618   000CC4  0E00               	movlw	0
  1619   000CC6  6E95               	movwf	149,c	;volatile
  1620   000CC8                     
  1621                           ;ssd.c: 60: digitalWrite(PIN_A2,0);
  1622   000CC8  0E00               	movlw	0
  1623   000CCA  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  1624   000CCC  0E02               	movlw	2
  1625   000CCE  6E3E               	movwf	digitalWrite@pin^0,c
  1626   000CD0  0E00               	movlw	0
  1627   000CD2  6E41               	movwf	(digitalWrite@value+1)^0,c
  1628   000CD4  0E00               	movlw	0
  1629   000CD6  6E40               	movwf	digitalWrite@value^0,c
  1630   000CD8  EC30  F004         	call	_digitalWrite	;wreg free
  1631   000CDC                     
  1632                           ;ssd.c: 61: digitalWrite(PIN_A3,0);
  1633   000CDC  0E00               	movlw	0
  1634   000CDE  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  1635   000CE0  0E03               	movlw	3
  1636   000CE2  6E3E               	movwf	digitalWrite@pin^0,c
  1637   000CE4  0E00               	movlw	0
  1638   000CE6  6E41               	movwf	(digitalWrite@value+1)^0,c
  1639   000CE8  0E00               	movlw	0
  1640   000CEA  6E40               	movwf	digitalWrite@value^0,c
  1641   000CEC  EC30  F004         	call	_digitalWrite	;wreg free
  1642   000CF0                     
  1643                           ;ssd.c: 62: digitalWrite(PIN_A4,0);
  1644   000CF0  0E00               	movlw	0
  1645   000CF2  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  1646   000CF4  0E04               	movlw	4
  1647   000CF6  6E3E               	movwf	digitalWrite@pin^0,c
  1648   000CF8  0E00               	movlw	0
  1649   000CFA  6E41               	movwf	(digitalWrite@value+1)^0,c
  1650   000CFC  0E00               	movlw	0
  1651   000CFE  6E40               	movwf	digitalWrite@value^0,c
  1652   000D00  EC30  F004         	call	_digitalWrite	;wreg free
  1653   000D04                     
  1654                           ;ssd.c: 63: digitalWrite(PIN_A5,0);
  1655   000D04  0E00               	movlw	0
  1656   000D06  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  1657   000D08  0E05               	movlw	5
  1658   000D0A  6E3E               	movwf	digitalWrite@pin^0,c
  1659   000D0C  0E00               	movlw	0
  1660   000D0E  6E41               	movwf	(digitalWrite@value+1)^0,c
  1661   000D10  0E00               	movlw	0
  1662   000D12  6E40               	movwf	digitalWrite@value^0,c
  1663   000D14  EC30  F004         	call	_digitalWrite	;wreg free
  1664                           
  1665                           ;ssd.c: 66: PORTD = 0x00;
  1666   000D18  0E00               	movlw	0
  1667   000D1A  6E83               	movwf	131,c	;volatile
  1668                           
  1669                           ;ssd.c: 69: switch (display)
  1670   000D1C  EFEC  F006         	goto	l2719
  1671   000D20                     l2691:
  1672                           
  1673                           ;ssd.c: 72: PORTD = valor[v0];
  1674   000D20  0E01               	movlw	low _valor@ssd$F527
  1675   000D22  2420               	addwf	_v0^0,w,c
  1676   000D24  6EF6               	movwf	tblptrl,c
  1677   000D26  6AF7               	clrf	tblptrh,c
  1678   000D28  0E06               	movlw	high _valor@ssd$F527
  1679   000D2A  22F7               	addwfc	tblptrh,f,c
  1680   000D2C                     	if	0	;There are less than 3 active tblptr bytes
  1681   000D2C                     	endif
  1682   000D2C  0008               	tblrd		*
  1683   000D2E  CFF5 FF83          	movff	tablat,3971	;volatile
  1684   000D32                     
  1685                           ;ssd.c: 73: digitalWrite(PIN_A2,1);
  1686   000D32  0E00               	movlw	0
  1687   000D34  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  1688   000D36  0E02               	movlw	2
  1689   000D38  6E3E               	movwf	digitalWrite@pin^0,c
  1690   000D3A  0E00               	movlw	0
  1691   000D3C  6E41               	movwf	(digitalWrite@value+1)^0,c
  1692   000D3E  0E01               	movlw	1
  1693   000D40  6E40               	movwf	digitalWrite@value^0,c
  1694   000D42  EC30  F004         	call	_digitalWrite	;wreg free
  1695   000D46                     
  1696                           ;ssd.c: 74: display = 1;
  1697   000D46  0E01               	movlw	1
  1698   000D48  6E21               	movwf	_display^0,c
  1699                           
  1700                           ;ssd.c: 75: break;
  1701   000D4A  EFFF  F006         	goto	l469
  1702   000D4E                     l2697:
  1703                           
  1704                           ;ssd.c: 78: PORTD = valor[v1];
  1705   000D4E  0E01               	movlw	low _valor@ssd$F527
  1706   000D50  241F               	addwf	_v1^0,w,c
  1707   000D52  6EF6               	movwf	tblptrl,c
  1708   000D54  6AF7               	clrf	tblptrh,c
  1709   000D56  0E06               	movlw	high _valor@ssd$F527
  1710   000D58  22F7               	addwfc	tblptrh,f,c
  1711   000D5A                     	if	0	;There are less than 3 active tblptr bytes
  1712   000D5A                     	endif
  1713   000D5A  0008               	tblrd		*
  1714   000D5C  CFF5 FF83          	movff	tablat,3971	;volatile
  1715   000D60                     
  1716                           ;ssd.c: 79: digitalWrite(PIN_A3,1);
  1717   000D60  0E00               	movlw	0
  1718   000D62  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  1719   000D64  0E03               	movlw	3
  1720   000D66  6E3E               	movwf	digitalWrite@pin^0,c
  1721   000D68  0E00               	movlw	0
  1722   000D6A  6E41               	movwf	(digitalWrite@value+1)^0,c
  1723   000D6C  0E01               	movlw	1
  1724   000D6E  6E40               	movwf	digitalWrite@value^0,c
  1725   000D70  EC30  F004         	call	_digitalWrite	;wreg free
  1726   000D74                     
  1727                           ;ssd.c: 80: display = 2;
  1728   000D74  0E02               	movlw	2
  1729   000D76  6E21               	movwf	_display^0,c
  1730                           
  1731                           ;ssd.c: 81: break;
  1732   000D78  EFFF  F006         	goto	l469
  1733   000D7C                     l2703:
  1734                           
  1735                           ;ssd.c: 84: PORTD = valor[v2];
  1736   000D7C  0E01               	movlw	low _valor@ssd$F527
  1737   000D7E  241E               	addwf	_v2^0,w,c
  1738   000D80  6EF6               	movwf	tblptrl,c
  1739   000D82  6AF7               	clrf	tblptrh,c
  1740   000D84  0E06               	movlw	high _valor@ssd$F527
  1741   000D86  22F7               	addwfc	tblptrh,f,c
  1742   000D88                     	if	0	;There are less than 3 active tblptr bytes
  1743   000D88                     	endif
  1744   000D88  0008               	tblrd		*
  1745   000D8A  CFF5 FF83          	movff	tablat,3971	;volatile
  1746   000D8E                     
  1747                           ;ssd.c: 85: digitalWrite(PIN_A4,1);
  1748   000D8E  0E00               	movlw	0
  1749   000D90  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  1750   000D92  0E04               	movlw	4
  1751   000D94  6E3E               	movwf	digitalWrite@pin^0,c
  1752   000D96  0E00               	movlw	0
  1753   000D98  6E41               	movwf	(digitalWrite@value+1)^0,c
  1754   000D9A  0E01               	movlw	1
  1755   000D9C  6E40               	movwf	digitalWrite@value^0,c
  1756   000D9E  EC30  F004         	call	_digitalWrite	;wreg free
  1757   000DA2                     
  1758                           ;ssd.c: 86: display = 3;
  1759   000DA2  0E03               	movlw	3
  1760   000DA4  6E21               	movwf	_display^0,c
  1761                           
  1762                           ;ssd.c: 87: break;
  1763   000DA6  EFFF  F006         	goto	l469
  1764   000DAA                     l2709:
  1765                           
  1766                           ;ssd.c: 90: PORTD = valor[v3];
  1767   000DAA  0E01               	movlw	low _valor@ssd$F527
  1768   000DAC  241D               	addwf	_v3^0,w,c
  1769   000DAE  6EF6               	movwf	tblptrl,c
  1770   000DB0  6AF7               	clrf	tblptrh,c
  1771   000DB2  0E06               	movlw	high _valor@ssd$F527
  1772   000DB4  22F7               	addwfc	tblptrh,f,c
  1773   000DB6                     	if	0	;There are less than 3 active tblptr bytes
  1774   000DB6                     	endif
  1775   000DB6  0008               	tblrd		*
  1776   000DB8  CFF5 FF83          	movff	tablat,3971	;volatile
  1777   000DBC                     
  1778                           ;ssd.c: 91: digitalWrite(PIN_A5,1);
  1779   000DBC  0E00               	movlw	0
  1780   000DBE  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  1781   000DC0  0E05               	movlw	5
  1782   000DC2  6E3E               	movwf	digitalWrite@pin^0,c
  1783   000DC4  0E00               	movlw	0
  1784   000DC6  6E41               	movwf	(digitalWrite@value+1)^0,c
  1785   000DC8  0E01               	movlw	1
  1786   000DCA  6E40               	movwf	digitalWrite@value^0,c
  1787   000DCC  EC30  F004         	call	_digitalWrite	;wreg free
  1788   000DD0                     l2713:
  1789                           
  1790                           ;ssd.c: 92: display = 0;
  1791   000DD0  0E00               	movlw	0
  1792   000DD2  6E21               	movwf	_display^0,c
  1793                           
  1794                           ;ssd.c: 93: break;
  1795   000DD4  EFFF  F006         	goto	l469
  1796   000DD8                     l2719:
  1797   000DD8  5021               	movf	_display^0,w,c
  1798                           
  1799                           ; Switch size 1, requested type "simple"
  1800                           ; Number of cases is 4, Range of values is 0 to 3
  1801                           ; switch strategies available:
  1802                           ; Name         Instructions Cycles
  1803                           ; simple_byte           13     7 (average)
  1804                           ;	Chosen strategy is simple_byte
  1805   000DDA  0A00               	xorlw	0	; case 0
  1806   000DDC  B4D8               	btfsc	status,2,c
  1807   000DDE  EF90  F006         	goto	l2691
  1808   000DE2  0A01               	xorlw	1	; case 1
  1809   000DE4  B4D8               	btfsc	status,2,c
  1810   000DE6  EFA7  F006         	goto	l2697
  1811   000DEA  0A03               	xorlw	3	; case 2
  1812   000DEC  B4D8               	btfsc	status,2,c
  1813   000DEE  EFBE  F006         	goto	l2703
  1814   000DF2  0A01               	xorlw	1	; case 3
  1815   000DF4  B4D8               	btfsc	status,2,c
  1816   000DF6  EFD5  F006         	goto	l2709
  1817   000DFA  EFE8  F006         	goto	l2713
  1818   000DFE                     l469:
  1819   000DFE  0012               	return		;funcret
  1820   000E00                     __end_of_ssdUpdate:
  1821                           	callstack 0
  1822                           
  1823 ;; *************** function _digitalWrite *****************
  1824 ;; Defined at:
  1825 ;;		line 14 in file "io.c"
  1826 ;; Parameters:    Size  Location     Type
  1827 ;;  pin             2   15[COMRAM] int 
  1828 ;;  value           2   17[COMRAM] int 
  1829 ;; Auto vars:     Size  Location     Type
  1830 ;;		None
  1831 ;; Return value:  Size  Location     Type
  1832 ;;                  1    wreg      void 
  1833 ;; Registers used:
  1834 ;;		wreg, status,2, status,0
  1835 ;; Tracked objects:
  1836 ;;		On entry : 0/0
  1837 ;;		On exit  : 0/0
  1838 ;;		Unchanged: 0/0
  1839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1840 ;;      Params:         4       0       0       0       0       0       0
  1841 ;;      Locals:         0       0       0       0       0       0       0
  1842 ;;      Temps:          2       0       0       0       0       0       0
  1843 ;;      Totals:         6       0       0       0       0       0       0
  1844 ;;Total ram usage:        6 bytes
  1845 ;; Hardware stack levels used: 1
  1846 ;; Hardware stack levels required when called: 3
  1847 ;; This function calls:
  1848 ;;		Nothing
  1849 ;; This function is called by:
  1850 ;;		_ssdUpdate
  1851 ;;		_lcdCommand
  1852 ;;		_lcdData
  1853 ;;		_clear_SCL
  1854 ;;		_clear_SDA
  1855 ;; This function uses a non-reentrant model
  1856 ;;
  1857                           
  1858                           	psect	text9
  1859   000860                     __ptext9:
  1860                           	callstack 0
  1861   000860                     _digitalWrite:
  1862                           	callstack 24
  1863   000860                     
  1864                           ;io.c: 16: if(pin <8){
  1865   000860  BE3F               	btfsc	(digitalWrite@pin+1)^0,7,c
  1866   000862  EF3E  F004         	goto	u2230
  1867   000866  503F               	movf	(digitalWrite@pin+1)^0,w,c
  1868   000868  E107               	bnz	u2231
  1869   00086A  0E08               	movlw	8
  1870   00086C  5C3E               	subwf	digitalWrite@pin^0,w,c
  1871   00086E  B0D8               	btfsc	status,0,c
  1872   000870  EF3C  F004         	goto	u2231
  1873   000874  EF3E  F004         	goto	u2230
  1874   000878                     u2231:
  1875   000878  EF68  F004         	goto	l2649
  1876   00087C                     u2230:
  1877   00087C                     
  1878                           ;io.c: 17: if (value){ ((PORTA) |= (1<<(pin)));}
  1879   00087C  5040               	movf	digitalWrite@value^0,w,c
  1880   00087E  1041               	iorwf	(digitalWrite@value+1)^0,w,c
  1881   000880  B4D8               	btfsc	status,2,c
  1882   000882  EF45  F004         	goto	u2241
  1883   000886  EF47  F004         	goto	u2240
  1884   00088A                     u2241:
  1885   00088A  EF57  F004         	goto	l2647
  1886   00088E                     u2240:
  1887   00088E  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  1888   000892  0E01               	movlw	1
  1889   000894  6E43               	movwf	(??_digitalWrite+1)^0,c
  1890   000896  2A42               	incf	??_digitalWrite^0,f,c
  1891   000898  EF50  F004         	goto	u2254
  1892   00089C                     u2255:
  1893   00089C  90D8               	bcf	status,0,c
  1894   00089E  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  1895   0008A0                     u2254:
  1896   0008A0  2E42               	decfsz	??_digitalWrite^0,f,c
  1897   0008A2  EF4E  F004         	goto	u2255
  1898   0008A6  5043               	movf	(??_digitalWrite+1)^0,w,c
  1899   0008A8  1280               	iorwf	128,f,c	;volatile
  1900   0008AA  EF56  F005         	goto	l209
  1901   0008AE                     l2647:
  1902                           
  1903                           ;io.c: 18: else{ ((PORTA) &= ~(1<<(pin)));}
  1904   0008AE  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  1905   0008B2  0E01               	movlw	1
  1906   0008B4  6E43               	movwf	(??_digitalWrite+1)^0,c
  1907   0008B6  2A42               	incf	??_digitalWrite^0,f,c
  1908   0008B8  EF60  F004         	goto	u2264
  1909   0008BC                     u2265:
  1910   0008BC  90D8               	bcf	status,0,c
  1911   0008BE  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  1912   0008C0                     u2264:
  1913   0008C0  2E42               	decfsz	??_digitalWrite^0,f,c
  1914   0008C2  EF5E  F004         	goto	u2265
  1915   0008C6  5043               	movf	(??_digitalWrite+1)^0,w,c
  1916   0008C8  0AFF               	xorlw	255
  1917   0008CA  1680               	andwf	128,f,c	;volatile
  1918   0008CC  EF56  F005         	goto	l209
  1919   0008D0                     l2649:
  1920   0008D0  BE3F               	btfsc	(digitalWrite@pin+1)^0,7,c
  1921   0008D2  EF76  F004         	goto	u2270
  1922   0008D6  503F               	movf	(digitalWrite@pin+1)^0,w,c
  1923   0008D8  E107               	bnz	u2271
  1924   0008DA  0E10               	movlw	16
  1925   0008DC  5C3E               	subwf	digitalWrite@pin^0,w,c
  1926   0008DE  B0D8               	btfsc	status,0,c
  1927   0008E0  EF74  F004         	goto	u2271
  1928   0008E4  EF76  F004         	goto	u2270
  1929   0008E8                     u2271:
  1930   0008E8  EFA4  F004         	goto	l2657
  1931   0008EC                     u2270:
  1932   0008EC                     
  1933                           ;io.c: 20: pin -=8;
  1934   0008EC  0EF8               	movlw	248
  1935   0008EE  263E               	addwf	digitalWrite@pin^0,f,c
  1936   0008F0  0EFF               	movlw	255
  1937   0008F2  223F               	addwfc	(digitalWrite@pin+1)^0,f,c
  1938                           
  1939                           ;io.c: 21: if (value){ ((PORTB) |= (1<<(pin)));}
  1940   0008F4  5040               	movf	digitalWrite@value^0,w,c
  1941   0008F6  1041               	iorwf	(digitalWrite@value+1)^0,w,c
  1942   0008F8  B4D8               	btfsc	status,2,c
  1943   0008FA  EF81  F004         	goto	u2281
  1944   0008FE  EF83  F004         	goto	u2280
  1945   000902                     u2281:
  1946   000902  EF93  F004         	goto	l2655
  1947   000906                     u2280:
  1948   000906  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  1949   00090A  0E01               	movlw	1
  1950   00090C  6E43               	movwf	(??_digitalWrite+1)^0,c
  1951   00090E  2A42               	incf	??_digitalWrite^0,f,c
  1952   000910  EF8C  F004         	goto	u2294
  1953   000914                     u2295:
  1954   000914  90D8               	bcf	status,0,c
  1955   000916  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  1956   000918                     u2294:
  1957   000918  2E42               	decfsz	??_digitalWrite^0,f,c
  1958   00091A  EF8A  F004         	goto	u2295
  1959   00091E  5043               	movf	(??_digitalWrite+1)^0,w,c
  1960   000920  1281               	iorwf	129,f,c	;volatile
  1961   000922  EF56  F005         	goto	l209
  1962   000926                     l2655:
  1963                           
  1964                           ;io.c: 22: else{ ((PORTB) &= ~(1<<(pin)));}
  1965   000926  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  1966   00092A  0E01               	movlw	1
  1967   00092C  6E43               	movwf	(??_digitalWrite+1)^0,c
  1968   00092E  2A42               	incf	??_digitalWrite^0,f,c
  1969   000930  EF9C  F004         	goto	u2304
  1970   000934                     u2305:
  1971   000934  90D8               	bcf	status,0,c
  1972   000936  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  1973   000938                     u2304:
  1974   000938  2E42               	decfsz	??_digitalWrite^0,f,c
  1975   00093A  EF9A  F004         	goto	u2305
  1976   00093E  5043               	movf	(??_digitalWrite+1)^0,w,c
  1977   000940  0AFF               	xorlw	255
  1978   000942  1681               	andwf	129,f,c	;volatile
  1979   000944  EF56  F005         	goto	l209
  1980   000948                     l2657:
  1981   000948  BE3F               	btfsc	(digitalWrite@pin+1)^0,7,c
  1982   00094A  EFB2  F004         	goto	u2310
  1983   00094E  503F               	movf	(digitalWrite@pin+1)^0,w,c
  1984   000950  E107               	bnz	u2311
  1985   000952  0E18               	movlw	24
  1986   000954  5C3E               	subwf	digitalWrite@pin^0,w,c
  1987   000956  B0D8               	btfsc	status,0,c
  1988   000958  EFB0  F004         	goto	u2311
  1989   00095C  EFB2  F004         	goto	u2310
  1990   000960                     u2311:
  1991   000960  EFE0  F004         	goto	l2665
  1992   000964                     u2310:
  1993   000964                     
  1994                           ;io.c: 24: pin -=16;
  1995   000964  0EF0               	movlw	240
  1996   000966  263E               	addwf	digitalWrite@pin^0,f,c
  1997   000968  0EFF               	movlw	255
  1998   00096A  223F               	addwfc	(digitalWrite@pin+1)^0,f,c
  1999                           
  2000                           ;io.c: 25: if (value){ ((PORTC) |= (1<<(pin)));}
  2001   00096C  5040               	movf	digitalWrite@value^0,w,c
  2002   00096E  1041               	iorwf	(digitalWrite@value+1)^0,w,c
  2003   000970  B4D8               	btfsc	status,2,c
  2004   000972  EFBD  F004         	goto	u2321
  2005   000976  EFBF  F004         	goto	u2320
  2006   00097A                     u2321:
  2007   00097A  EFCF  F004         	goto	l2663
  2008   00097E                     u2320:
  2009   00097E  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2010   000982  0E01               	movlw	1
  2011   000984  6E43               	movwf	(??_digitalWrite+1)^0,c
  2012   000986  2A42               	incf	??_digitalWrite^0,f,c
  2013   000988  EFC8  F004         	goto	u2334
  2014   00098C                     u2335:
  2015   00098C  90D8               	bcf	status,0,c
  2016   00098E  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2017   000990                     u2334:
  2018   000990  2E42               	decfsz	??_digitalWrite^0,f,c
  2019   000992  EFC6  F004         	goto	u2335
  2020   000996  5043               	movf	(??_digitalWrite+1)^0,w,c
  2021   000998  1282               	iorwf	130,f,c	;volatile
  2022   00099A  EF56  F005         	goto	l209
  2023   00099E                     l2663:
  2024                           
  2025                           ;io.c: 26: else{ ((PORTC) &= ~(1<<(pin)));}
  2026   00099E  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2027   0009A2  0E01               	movlw	1
  2028   0009A4  6E43               	movwf	(??_digitalWrite+1)^0,c
  2029   0009A6  2A42               	incf	??_digitalWrite^0,f,c
  2030   0009A8  EFD8  F004         	goto	u2344
  2031   0009AC                     u2345:
  2032   0009AC  90D8               	bcf	status,0,c
  2033   0009AE  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2034   0009B0                     u2344:
  2035   0009B0  2E42               	decfsz	??_digitalWrite^0,f,c
  2036   0009B2  EFD6  F004         	goto	u2345
  2037   0009B6  5043               	movf	(??_digitalWrite+1)^0,w,c
  2038   0009B8  0AFF               	xorlw	255
  2039   0009BA  1682               	andwf	130,f,c	;volatile
  2040   0009BC  EF56  F005         	goto	l209
  2041   0009C0                     l2665:
  2042   0009C0  BE3F               	btfsc	(digitalWrite@pin+1)^0,7,c
  2043   0009C2  EFEE  F004         	goto	u2350
  2044   0009C6  503F               	movf	(digitalWrite@pin+1)^0,w,c
  2045   0009C8  E107               	bnz	u2351
  2046   0009CA  0E20               	movlw	32
  2047   0009CC  5C3E               	subwf	digitalWrite@pin^0,w,c
  2048   0009CE  B0D8               	btfsc	status,0,c
  2049   0009D0  EFEC  F004         	goto	u2351
  2050   0009D4  EFEE  F004         	goto	u2350
  2051   0009D8                     u2351:
  2052   0009D8  EF1C  F005         	goto	l2673
  2053   0009DC                     u2350:
  2054   0009DC                     
  2055                           ;io.c: 28: pin -=24;
  2056   0009DC  0EE8               	movlw	232
  2057   0009DE  263E               	addwf	digitalWrite@pin^0,f,c
  2058   0009E0  0EFF               	movlw	255
  2059   0009E2  223F               	addwfc	(digitalWrite@pin+1)^0,f,c
  2060                           
  2061                           ;io.c: 29: if (value){ ((PORTD) |= (1<<(pin)));}
  2062   0009E4  5040               	movf	digitalWrite@value^0,w,c
  2063   0009E6  1041               	iorwf	(digitalWrite@value+1)^0,w,c
  2064   0009E8  B4D8               	btfsc	status,2,c
  2065   0009EA  EFF9  F004         	goto	u2361
  2066   0009EE  EFFB  F004         	goto	u2360
  2067   0009F2                     u2361:
  2068   0009F2  EF0B  F005         	goto	l2671
  2069   0009F6                     u2360:
  2070   0009F6  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2071   0009FA  0E01               	movlw	1
  2072   0009FC  6E43               	movwf	(??_digitalWrite+1)^0,c
  2073   0009FE  2A42               	incf	??_digitalWrite^0,f,c
  2074   000A00  EF04  F005         	goto	u2374
  2075   000A04                     u2375:
  2076   000A04  90D8               	bcf	status,0,c
  2077   000A06  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2078   000A08                     u2374:
  2079   000A08  2E42               	decfsz	??_digitalWrite^0,f,c
  2080   000A0A  EF02  F005         	goto	u2375
  2081   000A0E  5043               	movf	(??_digitalWrite+1)^0,w,c
  2082   000A10  1283               	iorwf	131,f,c	;volatile
  2083   000A12  EF56  F005         	goto	l209
  2084   000A16                     l2671:
  2085                           
  2086                           ;io.c: 30: else{ ((PORTD) &= ~(1<<(pin)));}
  2087   000A16  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2088   000A1A  0E01               	movlw	1
  2089   000A1C  6E43               	movwf	(??_digitalWrite+1)^0,c
  2090   000A1E  2A42               	incf	??_digitalWrite^0,f,c
  2091   000A20  EF14  F005         	goto	u2384
  2092   000A24                     u2385:
  2093   000A24  90D8               	bcf	status,0,c
  2094   000A26  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2095   000A28                     u2384:
  2096   000A28  2E42               	decfsz	??_digitalWrite^0,f,c
  2097   000A2A  EF12  F005         	goto	u2385
  2098   000A2E  5043               	movf	(??_digitalWrite+1)^0,w,c
  2099   000A30  0AFF               	xorlw	255
  2100   000A32  1683               	andwf	131,f,c	;volatile
  2101   000A34  EF56  F005         	goto	l209
  2102   000A38                     l2673:
  2103   000A38  BE3F               	btfsc	(digitalWrite@pin+1)^0,7,c
  2104   000A3A  EF2A  F005         	goto	u2390
  2105   000A3E  503F               	movf	(digitalWrite@pin+1)^0,w,c
  2106   000A40  E107               	bnz	u2391
  2107   000A42  0E28               	movlw	40
  2108   000A44  5C3E               	subwf	digitalWrite@pin^0,w,c
  2109   000A46  B0D8               	btfsc	status,0,c
  2110   000A48  EF28  F005         	goto	u2391
  2111   000A4C  EF2A  F005         	goto	u2390
  2112   000A50                     u2391:
  2113   000A50  EF56  F005         	goto	l209
  2114   000A54                     u2390:
  2115   000A54                     
  2116                           ;io.c: 32: pin -=32;
  2117   000A54  0EE0               	movlw	224
  2118   000A56  263E               	addwf	digitalWrite@pin^0,f,c
  2119   000A58  0EFF               	movlw	255
  2120   000A5A  223F               	addwfc	(digitalWrite@pin+1)^0,f,c
  2121                           
  2122                           ;io.c: 33: if (value){ ((PORTE) |= (1<<(pin)));}
  2123   000A5C  5040               	movf	digitalWrite@value^0,w,c
  2124   000A5E  1041               	iorwf	(digitalWrite@value+1)^0,w,c
  2125   000A60  B4D8               	btfsc	status,2,c
  2126   000A62  EF35  F005         	goto	u2401
  2127   000A66  EF37  F005         	goto	u2400
  2128   000A6A                     u2401:
  2129   000A6A  EF47  F005         	goto	l2679
  2130   000A6E                     u2400:
  2131   000A6E  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2132   000A72  0E01               	movlw	1
  2133   000A74  6E43               	movwf	(??_digitalWrite+1)^0,c
  2134   000A76  2A42               	incf	??_digitalWrite^0,f,c
  2135   000A78  EF40  F005         	goto	u2414
  2136   000A7C                     u2415:
  2137   000A7C  90D8               	bcf	status,0,c
  2138   000A7E  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2139   000A80                     u2414:
  2140   000A80  2E42               	decfsz	??_digitalWrite^0,f,c
  2141   000A82  EF3E  F005         	goto	u2415
  2142   000A86  5043               	movf	(??_digitalWrite+1)^0,w,c
  2143   000A88  1284               	iorwf	132,f,c	;volatile
  2144   000A8A  EF56  F005         	goto	l209
  2145   000A8E                     l2679:
  2146                           
  2147                           ;io.c: 34: else{ ((PORTE) &= ~(1<<(pin)));}
  2148   000A8E  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2149   000A92  0E01               	movlw	1
  2150   000A94  6E43               	movwf	(??_digitalWrite+1)^0,c
  2151   000A96  2A42               	incf	??_digitalWrite^0,f,c
  2152   000A98  EF50  F005         	goto	u2424
  2153   000A9C                     u2425:
  2154   000A9C  90D8               	bcf	status,0,c
  2155   000A9E  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2156   000AA0                     u2424:
  2157   000AA0  2E42               	decfsz	??_digitalWrite^0,f,c
  2158   000AA2  EF4E  F005         	goto	u2425
  2159   000AA6  5043               	movf	(??_digitalWrite+1)^0,w,c
  2160   000AA8  0AFF               	xorlw	255
  2161   000AAA  1684               	andwf	132,f,c	;volatile
  2162   000AAC                     l209:
  2163   000AAC  0012               	return		;funcret
  2164   000AAE                     __end_of_digitalWrite:
  2165                           	callstack 0
  2166                           
  2167 ;; *************** function _kernelAddProc *****************
  2168 ;; Defined at:
  2169 ;;		line 14 in file "kernel.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;  newProc         2   29[COMRAM] PTR struct .
  2172 ;;		 -> main@countTime_proc(8), main@SSDUpdate_proc(8), main@init_PD(8), 
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;		None
  2175 ;; Return value:  Size  Location     Type
  2176 ;;                  1    wreg      unsigned char 
  2177 ;; Registers used:
  2178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2179 ;; Tracked objects:
  2180 ;;		On entry : 0/0
  2181 ;;		On exit  : 0/0
  2182 ;;		Unchanged: 0/0
  2183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2184 ;;      Params:         2       0       0       0       0       0       0
  2185 ;;      Locals:         0       0       0       0       0       0       0
  2186 ;;      Temps:          2       0       0       0       0       0       0
  2187 ;;      Totals:         4       0       0       0       0       0       0
  2188 ;;Total ram usage:        4 bytes
  2189 ;; Hardware stack levels used: 1
  2190 ;; Hardware stack levels required when called: 4
  2191 ;; This function calls:
  2192 ;;		___awmod
  2193 ;; This function is called by:
  2194 ;;		_main
  2195 ;;		_kernelLoop
  2196 ;; This function uses a non-reentrant model
  2197 ;;
  2198                           
  2199                           	psect	text10
  2200   001100                     __ptext10:
  2201                           	callstack 0
  2202   001100                     _kernelAddProc:
  2203                           	callstack 25
  2204   001100                     
  2205                           ;kernel.c: 16: if (((end + 1) % 10) != start) {
  2206   001100  5025               	movf	_start^0,w,c
  2207   001102  6E4E               	movwf	??_kernelAddProc^0,c
  2208   001104  6A4F               	clrf	(??_kernelAddProc+1)^0,c
  2209   001106  0E01               	movlw	1
  2210   001108  2424               	addwf	_end^0,w,c
  2211   00110A  6E46               	movwf	___awmod@dividend^0,c
  2212   00110C  6A47               	clrf	(___awmod@dividend+1)^0,c
  2213   00110E  0E00               	movlw	0
  2214   001110  2247               	addwfc	(___awmod@dividend+1)^0,f,c
  2215   001112  0E00               	movlw	0
  2216   001114  6E49               	movwf	(___awmod@divisor+1)^0,c
  2217   001116  0E0A               	movlw	10
  2218   001118  6E48               	movwf	___awmod@divisor^0,c
  2219   00111A  ECD0  F007         	call	___awmod	;wreg free
  2220   00111E  504E               	movf	??_kernelAddProc^0,w,c
  2221   001120  1846               	xorwf	?___awmod^0,w,c
  2222   001122  E109               	bnz	u2590
  2223   001124  504F               	movf	(??_kernelAddProc+1)^0,w,c
  2224   001126  1847               	xorwf	(?___awmod+1)^0,w,c
  2225   001128  B4D8               	btfsc	status,2,c
  2226   00112A  EF99  F008         	goto	u2591
  2227   00112E  EF9B  F008         	goto	u2590
  2228   001132                     u2591:
  2229   001132  EFD1  F008         	goto	l78
  2230   001136                     u2590:
  2231   001136                     
  2232                           ;kernel.c: 17: pool[end] = newProc;
  2233   001136  5024               	movf	_end^0,w,c
  2234   001138  0D02               	mullw	2
  2235   00113A  0E01               	movlw	low _pool
  2236   00113C  24F3               	addwf	243,w,c
  2237   00113E  6ED9               	movwf	fsr2l,c
  2238   001140  0E00               	movlw	high _pool
  2239   001142  20F4               	addwfc	prodh,w,c
  2240   001144  6EDA               	movwf	fsr2h,c
  2241   001146  C04C  FFDE         	movff	kernelAddProc@newProc,postinc2
  2242   00114A  C04D  FFDD         	movff	kernelAddProc@newProc+1,postdec2
  2243   00114E                     
  2244                           ;kernel.c: 18: pool[end]->start += newProc->period;
  2245   00114E  EE20 F002          	lfsr	2,2
  2246   001152  504C               	movf	kernelAddProc@newProc^0,w,c
  2247   001154  26D9               	addwf	fsr2l,f,c
  2248   001156  504D               	movf	(kernelAddProc@newProc+1)^0,w,c
  2249   001158  22DA               	addwfc	fsr2h,f,c
  2250   00115A  CFDE F04E          	movff	postinc2,??_kernelAddProc
  2251   00115E  CFDD F04F          	movff	postdec2,??_kernelAddProc+1
  2252   001162  5024               	movf	_end^0,w,c
  2253   001164  0D02               	mullw	2
  2254   001166  0E01               	movlw	low _pool
  2255   001168  24F3               	addwf	243,w,c
  2256   00116A  6ED9               	movwf	fsr2l,c
  2257   00116C  0E00               	movlw	high _pool
  2258   00116E  20F4               	addwfc	prodh,w,c
  2259   001170  6EDA               	movwf	fsr2h,c
  2260   001172  EE10 F004          	lfsr	1,4
  2261   001176  50DE               	movf	postinc2,w,c
  2262   001178  26E1               	addwf	fsr1l,f,c
  2263   00117A  50DD               	movf	postdec2,w,c
  2264   00117C  22E2               	addwfc	fsr1h,f,c
  2265   00117E  504E               	movf	??_kernelAddProc^0,w,c
  2266   001180  26E6               	addwf	postinc1,f,c
  2267   001182  504F               	movf	(??_kernelAddProc+1)^0,w,c
  2268   001184  22E5               	addwfc	postdec1,f,c
  2269   001186                     
  2270                           ;kernel.c: 19: end = (end + 1) % 10;
  2271   001186  0E01               	movlw	1
  2272   001188  2424               	addwf	_end^0,w,c
  2273   00118A  6E46               	movwf	___awmod@dividend^0,c
  2274   00118C  6A47               	clrf	(___awmod@dividend+1)^0,c
  2275   00118E  0E00               	movlw	0
  2276   001190  2247               	addwfc	(___awmod@dividend+1)^0,f,c
  2277   001192  0E00               	movlw	0
  2278   001194  6E49               	movwf	(___awmod@divisor+1)^0,c
  2279   001196  0E0A               	movlw	10
  2280   001198  6E48               	movwf	___awmod@divisor^0,c
  2281   00119A  ECD0  F007         	call	___awmod	;wreg free
  2282   00119E  5046               	movf	?___awmod^0,w,c
  2283   0011A0  6E24               	movwf	_end^0,c
  2284   0011A2                     l78:
  2285   0011A2  0012               	return		;funcret
  2286   0011A4                     __end_of_kernelAddProc:
  2287                           	callstack 0
  2288                           
  2289 ;; *************** function _ssdDigit *****************
  2290 ;; Defined at:
  2291 ;;		line 38 in file "ssd.c"
  2292 ;; Parameters:    Size  Location     Type
  2293 ;;  val             1    wreg     unsigned char 
  2294 ;;  pos             1   15[COMRAM] unsigned char 
  2295 ;; Auto vars:     Size  Location     Type
  2296 ;;  val             1   16[COMRAM] unsigned char 
  2297 ;; Return value:  Size  Location     Type
  2298 ;;                  1    wreg      void 
  2299 ;; Registers used:
  2300 ;;		wreg, status,2, status,0
  2301 ;; Tracked objects:
  2302 ;;		On entry : 0/0
  2303 ;;		On exit  : 0/0
  2304 ;;		Unchanged: 0/0
  2305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2306 ;;      Params:         1       0       0       0       0       0       0
  2307 ;;      Locals:         1       0       0       0       0       0       0
  2308 ;;      Temps:          0       0       0       0       0       0       0
  2309 ;;      Totals:         2       0       0       0       0       0       0
  2310 ;;Total ram usage:        2 bytes
  2311 ;; Hardware stack levels used: 1
  2312 ;; Hardware stack levels required when called: 3
  2313 ;; This function calls:
  2314 ;;		Nothing
  2315 ;; This function is called by:
  2316 ;;		_countTime
  2317 ;; This function uses a non-reentrant model
  2318 ;;
  2319                           
  2320                           	psect	text11
  2321   001308                     __ptext11:
  2322                           	callstack 0
  2323   001308                     _ssdDigit:
  2324                           	callstack 25
  2325                           
  2326                           ;incstack = 0
  2327                           ;ssdDigit@val stored from wreg
  2328   001308  6E3F               	movwf	ssdDigit@val^0,c
  2329   00130A                     
  2330                           ;ssd.c: 39: if (pos == 0) {
  2331   00130A  503E               	movf	ssdDigit@pos^0,w,c
  2332   00130C  A4D8               	btfss	status,2,c
  2333   00130E  EF8B  F009         	goto	u2431
  2334   001312  EF8D  F009         	goto	u2430
  2335   001316                     u2431:
  2336   001316  EF8F  F009         	goto	l2725
  2337   00131A                     u2430:
  2338   00131A                     
  2339                           ;ssd.c: 40: v0 = val;
  2340   00131A  C03F  F020         	movff	ssdDigit@val,_v0
  2341   00131E                     l2725:
  2342                           
  2343                           ;ssd.c: 41: };ssd.c: 42: if (pos == 1) {
  2344   00131E  043E               	decf	ssdDigit@pos^0,w,c
  2345   001320  A4D8               	btfss	status,2,c
  2346   001322  EF95  F009         	goto	u2441
  2347   001326  EF97  F009         	goto	u2440
  2348   00132A                     u2441:
  2349   00132A  EF99  F009         	goto	l2729
  2350   00132E                     u2440:
  2351   00132E                     
  2352                           ;ssd.c: 43: v1 = val;
  2353   00132E  C03F  F01F         	movff	ssdDigit@val,_v1
  2354   001332                     l2729:
  2355                           
  2356                           ;ssd.c: 44: };ssd.c: 45: if (pos == 2) {
  2357   001332  0E02               	movlw	2
  2358   001334  183E               	xorwf	ssdDigit@pos^0,w,c
  2359   001336  A4D8               	btfss	status,2,c
  2360   001338  EFA0  F009         	goto	u2451
  2361   00133C  EFA2  F009         	goto	u2450
  2362   001340                     u2451:
  2363   001340  EFA4  F009         	goto	l2733
  2364   001344                     u2450:
  2365   001344                     
  2366                           ;ssd.c: 46: v2 = val;
  2367   001344  C03F  F01E         	movff	ssdDigit@val,_v2
  2368   001348                     l2733:
  2369                           
  2370                           ;ssd.c: 47: };ssd.c: 48: if (pos == 3) {
  2371   001348  0E03               	movlw	3
  2372   00134A  183E               	xorwf	ssdDigit@pos^0,w,c
  2373   00134C  A4D8               	btfss	status,2,c
  2374   00134E  EFAB  F009         	goto	u2461
  2375   001352  EFAD  F009         	goto	u2460
  2376   001356                     u2461:
  2377   001356  EFAF  F009         	goto	l459
  2378   00135A                     u2460:
  2379   00135A                     
  2380                           ;ssd.c: 49: v3 = val;
  2381   00135A  C03F  F01D         	movff	ssdDigit@val,_v3
  2382   00135E                     l459:
  2383   00135E  0012               	return		;funcret
  2384   001360                     __end_of_ssdDigit:
  2385                           	callstack 0
  2386                           
  2387 ;; *************** function ___awmod *****************
  2388 ;; Defined at:
  2389 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  2390 ;; Parameters:    Size  Location     Type
  2391 ;;  dividend        2   23[COMRAM] int 
  2392 ;;  divisor         2   25[COMRAM] int 
  2393 ;; Auto vars:     Size  Location     Type
  2394 ;;  sign            1   28[COMRAM] unsigned char 
  2395 ;;  counter         1   27[COMRAM] unsigned char 
  2396 ;; Return value:  Size  Location     Type
  2397 ;;                  2   23[COMRAM] int 
  2398 ;; Registers used:
  2399 ;;		wreg, status,2, status,0
  2400 ;; Tracked objects:
  2401 ;;		On entry : 0/0
  2402 ;;		On exit  : 0/0
  2403 ;;		Unchanged: 0/0
  2404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2405 ;;      Params:         4       0       0       0       0       0       0
  2406 ;;      Locals:         2       0       0       0       0       0       0
  2407 ;;      Temps:          0       0       0       0       0       0       0
  2408 ;;      Totals:         6       0       0       0       0       0       0
  2409 ;;Total ram usage:        6 bytes
  2410 ;; Hardware stack levels used: 1
  2411 ;; Hardware stack levels required when called: 3
  2412 ;; This function calls:
  2413 ;;		Nothing
  2414 ;; This function is called by:
  2415 ;;		_countTime
  2416 ;;		_kernelAddProc
  2417 ;;		_kernelLoop
  2418 ;;		_dsdec2bcd
  2419 ;; This function uses a non-reentrant model
  2420 ;;
  2421                           
  2422                           	psect	text12
  2423   000FA0                     __ptext12:
  2424                           	callstack 0
  2425   000FA0                     ___awmod:
  2426                           	callstack 25
  2427   000FA0  0E00               	movlw	0
  2428   000FA2  6E4B               	movwf	___awmod@sign^0,c
  2429   000FA4  BE47               	btfsc	(___awmod@dividend+1)^0,7,c
  2430   000FA6  EFD9  F007         	goto	u2530
  2431   000FAA  EFD7  F007         	goto	u2531
  2432   000FAE                     u2531:
  2433   000FAE  EFDF  F007         	goto	l2789
  2434   000FB2                     u2530:
  2435   000FB2  6C46               	negf	___awmod@dividend^0,c
  2436   000FB4  1E47               	comf	(___awmod@dividend+1)^0,f,c
  2437   000FB6  B0D8               	btfsc	status,0,c
  2438   000FB8  2A47               	incf	(___awmod@dividend+1)^0,f,c
  2439   000FBA  0E01               	movlw	1
  2440   000FBC  6E4B               	movwf	___awmod@sign^0,c
  2441   000FBE                     l2789:
  2442   000FBE  BE49               	btfsc	(___awmod@divisor+1)^0,7,c
  2443   000FC0  EFE6  F007         	goto	u2540
  2444   000FC4  EFE4  F007         	goto	u2541
  2445   000FC8                     u2541:
  2446   000FC8  EFEA  F007         	goto	l2793
  2447   000FCC                     u2540:
  2448   000FCC  6C48               	negf	___awmod@divisor^0,c
  2449   000FCE  1E49               	comf	(___awmod@divisor+1)^0,f,c
  2450   000FD0  B0D8               	btfsc	status,0,c
  2451   000FD2  2A49               	incf	(___awmod@divisor+1)^0,f,c
  2452   000FD4                     l2793:
  2453   000FD4  5048               	movf	___awmod@divisor^0,w,c
  2454   000FD6  1049               	iorwf	(___awmod@divisor+1)^0,w,c
  2455   000FD8  B4D8               	btfsc	status,2,c
  2456   000FDA  EFF1  F007         	goto	u2551
  2457   000FDE  EFF3  F007         	goto	u2550
  2458   000FE2                     u2551:
  2459   000FE2  EF17  F008         	goto	l2809
  2460   000FE6                     u2550:
  2461   000FE6  0E01               	movlw	1
  2462   000FE8  6E4A               	movwf	___awmod@counter^0,c
  2463   000FEA  EFFB  F007         	goto	l2799
  2464   000FEE                     l2797:
  2465   000FEE  90D8               	bcf	status,0,c
  2466   000FF0  3648               	rlcf	___awmod@divisor^0,f,c
  2467   000FF2  3649               	rlcf	(___awmod@divisor+1)^0,f,c
  2468   000FF4  2A4A               	incf	___awmod@counter^0,f,c
  2469   000FF6                     l2799:
  2470   000FF6  AE49               	btfss	(___awmod@divisor+1)^0,7,c
  2471   000FF8  EF00  F008         	goto	u2561
  2472   000FFC  EF02  F008         	goto	u2560
  2473   001000                     u2561:
  2474   001000  EFF7  F007         	goto	l2797
  2475   001004                     u2560:
  2476   001004                     l2801:
  2477   001004  5048               	movf	___awmod@divisor^0,w,c
  2478   001006  5C46               	subwf	___awmod@dividend^0,w,c
  2479   001008  5049               	movf	(___awmod@divisor+1)^0,w,c
  2480   00100A  5847               	subwfb	(___awmod@dividend+1)^0,w,c
  2481   00100C  A0D8               	btfss	status,0,c
  2482   00100E  EF0B  F008         	goto	u2571
  2483   001012  EF0D  F008         	goto	u2570
  2484   001016                     u2571:
  2485   001016  EF11  F008         	goto	l2805
  2486   00101A                     u2570:
  2487   00101A  5048               	movf	___awmod@divisor^0,w,c
  2488   00101C  5E46               	subwf	___awmod@dividend^0,f,c
  2489   00101E  5049               	movf	(___awmod@divisor+1)^0,w,c
  2490   001020  5A47               	subwfb	(___awmod@dividend+1)^0,f,c
  2491   001022                     l2805:
  2492   001022  90D8               	bcf	status,0,c
  2493   001024  3249               	rrcf	(___awmod@divisor+1)^0,f,c
  2494   001026  3248               	rrcf	___awmod@divisor^0,f,c
  2495   001028  2E4A               	decfsz	___awmod@counter^0,f,c
  2496   00102A  EF02  F008         	goto	l2801
  2497   00102E                     l2809:
  2498   00102E  504B               	movf	___awmod@sign^0,w,c
  2499   001030  B4D8               	btfsc	status,2,c
  2500   001032  EF1D  F008         	goto	u2581
  2501   001036  EF1F  F008         	goto	u2580
  2502   00103A                     u2581:
  2503   00103A  EF23  F008         	goto	l2813
  2504   00103E                     u2580:
  2505   00103E  6C46               	negf	___awmod@dividend^0,c
  2506   001040  1E47               	comf	(___awmod@dividend+1)^0,f,c
  2507   001042  B0D8               	btfsc	status,0,c
  2508   001044  2A47               	incf	(___awmod@dividend+1)^0,f,c
  2509   001046                     l2813:
  2510   001046  C046  F046         	movff	___awmod@dividend,?___awmod
  2511   00104A  C047  F047         	movff	___awmod@dividend+1,?___awmod+1
  2512   00104E  0012               	return		;funcret
  2513   001050                     __end_of___awmod:
  2514                           	callstack 0
  2515                           
  2516 ;; *************** function ___awdiv *****************
  2517 ;; Defined at:
  2518 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  2519 ;; Parameters:    Size  Location     Type
  2520 ;;  dividend        2   15[COMRAM] int 
  2521 ;;  divisor         2   17[COMRAM] int 
  2522 ;; Auto vars:     Size  Location     Type
  2523 ;;  quotient        2   21[COMRAM] int 
  2524 ;;  sign            1   20[COMRAM] unsigned char 
  2525 ;;  counter         1   19[COMRAM] unsigned char 
  2526 ;; Return value:  Size  Location     Type
  2527 ;;                  2   15[COMRAM] int 
  2528 ;; Registers used:
  2529 ;;		wreg, status,2, status,0
  2530 ;; Tracked objects:
  2531 ;;		On entry : 0/0
  2532 ;;		On exit  : 0/0
  2533 ;;		Unchanged: 0/0
  2534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2535 ;;      Params:         4       0       0       0       0       0       0
  2536 ;;      Locals:         4       0       0       0       0       0       0
  2537 ;;      Temps:          0       0       0       0       0       0       0
  2538 ;;      Totals:         8       0       0       0       0       0       0
  2539 ;;Total ram usage:        8 bytes
  2540 ;; Hardware stack levels used: 1
  2541 ;; Hardware stack levels required when called: 3
  2542 ;; This function calls:
  2543 ;;		Nothing
  2544 ;; This function is called by:
  2545 ;;		_countTime
  2546 ;;		_dsdec2bcd
  2547 ;;		_dsbcd2dec
  2548 ;; This function uses a non-reentrant model
  2549 ;;
  2550                           
  2551                           	psect	text13
  2552   000EDC                     __ptext13:
  2553                           	callstack 0
  2554   000EDC                     ___awdiv:
  2555                           	callstack 25
  2556   000EDC  0E00               	movlw	0
  2557   000EDE  6E43               	movwf	___awdiv@sign^0,c
  2558   000EE0  BE41               	btfsc	(___awdiv@divisor+1)^0,7,c
  2559   000EE2  EF77  F007         	goto	u2470
  2560   000EE6  EF75  F007         	goto	u2471
  2561   000EEA                     u2471:
  2562   000EEA  EF7D  F007         	goto	l2745
  2563   000EEE                     u2470:
  2564   000EEE  6C40               	negf	___awdiv@divisor^0,c
  2565   000EF0  1E41               	comf	(___awdiv@divisor+1)^0,f,c
  2566   000EF2  B0D8               	btfsc	status,0,c
  2567   000EF4  2A41               	incf	(___awdiv@divisor+1)^0,f,c
  2568   000EF6  0E01               	movlw	1
  2569   000EF8  6E43               	movwf	___awdiv@sign^0,c
  2570   000EFA                     l2745:
  2571   000EFA  BE3F               	btfsc	(___awdiv@dividend+1)^0,7,c
  2572   000EFC  EF84  F007         	goto	u2480
  2573   000F00  EF82  F007         	goto	u2481
  2574   000F04                     u2481:
  2575   000F04  EF8A  F007         	goto	l2751
  2576   000F08                     u2480:
  2577   000F08  6C3E               	negf	___awdiv@dividend^0,c
  2578   000F0A  1E3F               	comf	(___awdiv@dividend+1)^0,f,c
  2579   000F0C  B0D8               	btfsc	status,0,c
  2580   000F0E  2A3F               	incf	(___awdiv@dividend+1)^0,f,c
  2581   000F10  0E01               	movlw	1
  2582   000F12  1A43               	xorwf	___awdiv@sign^0,f,c
  2583   000F14                     l2751:
  2584   000F14  0E00               	movlw	0
  2585   000F16  6E45               	movwf	(___awdiv@quotient+1)^0,c
  2586   000F18  0E00               	movlw	0
  2587   000F1A  6E44               	movwf	___awdiv@quotient^0,c
  2588   000F1C  5040               	movf	___awdiv@divisor^0,w,c
  2589   000F1E  1041               	iorwf	(___awdiv@divisor+1)^0,w,c
  2590   000F20  B4D8               	btfsc	status,2,c
  2591   000F22  EF95  F007         	goto	u2491
  2592   000F26  EF97  F007         	goto	u2490
  2593   000F2A                     u2491:
  2594   000F2A  EFBF  F007         	goto	l2773
  2595   000F2E                     u2490:
  2596   000F2E  0E01               	movlw	1
  2597   000F30  6E42               	movwf	___awdiv@counter^0,c
  2598   000F32  EF9F  F007         	goto	l2759
  2599   000F36                     l2757:
  2600   000F36  90D8               	bcf	status,0,c
  2601   000F38  3640               	rlcf	___awdiv@divisor^0,f,c
  2602   000F3A  3641               	rlcf	(___awdiv@divisor+1)^0,f,c
  2603   000F3C  2A42               	incf	___awdiv@counter^0,f,c
  2604   000F3E                     l2759:
  2605   000F3E  AE41               	btfss	(___awdiv@divisor+1)^0,7,c
  2606   000F40  EFA4  F007         	goto	u2501
  2607   000F44  EFA6  F007         	goto	u2500
  2608   000F48                     u2501:
  2609   000F48  EF9B  F007         	goto	l2757
  2610   000F4C                     u2500:
  2611   000F4C                     l2761:
  2612   000F4C  90D8               	bcf	status,0,c
  2613   000F4E  3644               	rlcf	___awdiv@quotient^0,f,c
  2614   000F50  3645               	rlcf	(___awdiv@quotient+1)^0,f,c
  2615   000F52  5040               	movf	___awdiv@divisor^0,w,c
  2616   000F54  5C3E               	subwf	___awdiv@dividend^0,w,c
  2617   000F56  5041               	movf	(___awdiv@divisor+1)^0,w,c
  2618   000F58  583F               	subwfb	(___awdiv@dividend+1)^0,w,c
  2619   000F5A  A0D8               	btfss	status,0,c
  2620   000F5C  EFB2  F007         	goto	u2511
  2621   000F60  EFB4  F007         	goto	u2510
  2622   000F64                     u2511:
  2623   000F64  EFB9  F007         	goto	l2769
  2624   000F68                     u2510:
  2625   000F68  5040               	movf	___awdiv@divisor^0,w,c
  2626   000F6A  5E3E               	subwf	___awdiv@dividend^0,f,c
  2627   000F6C  5041               	movf	(___awdiv@divisor+1)^0,w,c
  2628   000F6E  5A3F               	subwfb	(___awdiv@dividend+1)^0,f,c
  2629   000F70  8044               	bsf	___awdiv@quotient^0,0,c
  2630   000F72                     l2769:
  2631   000F72  90D8               	bcf	status,0,c
  2632   000F74  3241               	rrcf	(___awdiv@divisor+1)^0,f,c
  2633   000F76  3240               	rrcf	___awdiv@divisor^0,f,c
  2634   000F78  2E42               	decfsz	___awdiv@counter^0,f,c
  2635   000F7A  EFA6  F007         	goto	l2761
  2636   000F7E                     l2773:
  2637   000F7E  5043               	movf	___awdiv@sign^0,w,c
  2638   000F80  B4D8               	btfsc	status,2,c
  2639   000F82  EFC5  F007         	goto	u2521
  2640   000F86  EFC7  F007         	goto	u2520
  2641   000F8A                     u2521:
  2642   000F8A  EFCB  F007         	goto	l2777
  2643   000F8E                     u2520:
  2644   000F8E  6C44               	negf	___awdiv@quotient^0,c
  2645   000F90  1E45               	comf	(___awdiv@quotient+1)^0,f,c
  2646   000F92  B0D8               	btfsc	status,0,c
  2647   000F94  2A45               	incf	(___awdiv@quotient+1)^0,f,c
  2648   000F96                     l2777:
  2649   000F96  C044  F03E         	movff	___awdiv@quotient,?___awdiv
  2650   000F9A  C045  F03F         	movff	___awdiv@quotient+1,?___awdiv+1
  2651   000F9E  0012               	return		;funcret
  2652   000FA0                     __end_of___awdiv:
  2653                           	callstack 0
  2654                           
  2655 ;; *************** function _kernelInit *****************
  2656 ;; Defined at:
  2657 ;;		line 8 in file "kernel.c"
  2658 ;; Parameters:    Size  Location     Type
  2659 ;;		None
  2660 ;; Auto vars:     Size  Location     Type
  2661 ;;		None
  2662 ;; Return value:  Size  Location     Type
  2663 ;;                  1    wreg      unsigned char 
  2664 ;; Registers used:
  2665 ;;		wreg, status,2
  2666 ;; Tracked objects:
  2667 ;;		On entry : 0/0
  2668 ;;		On exit  : 0/0
  2669 ;;		Unchanged: 0/0
  2670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2671 ;;      Params:         0       0       0       0       0       0       0
  2672 ;;      Locals:         0       0       0       0       0       0       0
  2673 ;;      Temps:          0       0       0       0       0       0       0
  2674 ;;      Totals:         0       0       0       0       0       0       0
  2675 ;;Total ram usage:        0 bytes
  2676 ;; Hardware stack levels used: 1
  2677 ;; Hardware stack levels required when called: 3
  2678 ;; This function calls:
  2679 ;;		Nothing
  2680 ;; This function is called by:
  2681 ;;		_main
  2682 ;; This function uses a non-reentrant model
  2683 ;;
  2684                           
  2685                           	psect	text14
  2686   001418                     __ptext14:
  2687                           	callstack 0
  2688   001418                     _kernelInit:
  2689                           	callstack 27
  2690   001418                     
  2691                           ;kernel.c: 9: start = 0;
  2692   001418  0E00               	movlw	0
  2693   00141A  6E25               	movwf	_start^0,c
  2694                           
  2695                           ;kernel.c: 10: end = 0;
  2696   00141C  0E00               	movlw	0
  2697   00141E  6E24               	movwf	_end^0,c
  2698   001420  0012               	return		;funcret
  2699   001422                     __end_of_kernelInit:
  2700                           	callstack 0
  2701                           
  2702 ;; *************** function _ISR *****************
  2703 ;; Defined at:
  2704 ;;		line 10 in file "main.c"
  2705 ;; Parameters:    Size  Location     Type
  2706 ;;		None
  2707 ;; Auto vars:     Size  Location     Type
  2708 ;;		None
  2709 ;; Return value:  Size  Location     Type
  2710 ;;                  1    wreg      void 
  2711 ;; Registers used:
  2712 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2713 ;; Tracked objects:
  2714 ;;		On entry : 0/0
  2715 ;;		On exit  : 0/0
  2716 ;;		Unchanged: 0/0
  2717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2718 ;;      Params:         0       0       0       0       0       0       0
  2719 ;;      Locals:         0       0       0       0       0       0       0
  2720 ;;      Temps:          6       0       0       0       0       0       0
  2721 ;;      Totals:         6       0       0       0       0       0       0
  2722 ;;Total ram usage:        6 bytes
  2723 ;; Hardware stack levels used: 1
  2724 ;; Hardware stack levels required when called: 2
  2725 ;; This function calls:
  2726 ;;		_KernelClock
  2727 ;; This function is called by:
  2728 ;;		Interrupt level 2
  2729 ;; This function uses a non-reentrant model
  2730 ;;
  2731                           
  2732                           	psect	intcode
  2733   000008                     __pintcode:
  2734                           	callstack 0
  2735   000008                     _ISR:
  2736                           	callstack 24
  2737                           
  2738                           ;incstack = 0
  2739   000008  8261               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2740   00000A  EDDB  F009         	call	int_func,f	;refresh shadow registers
  2741                           
  2742                           	psect	intcode_body
  2743   0013B6                     __pintcode_body:
  2744                           	callstack 24
  2745   0013B6                     int_func:
  2746                           	callstack 24
  2747   0013B6  0006               	pop		; remove dummy address from shadow register refresh
  2748   0013B8  CFE1 F038          	movff	fsr1l,??_ISR
  2749   0013BC  CFE2 F039          	movff	fsr1h,??_ISR+1
  2750   0013C0  CFD9 F03A          	movff	fsr2l,??_ISR+2
  2751   0013C4  CFDA F03B          	movff	fsr2h,??_ISR+3
  2752   0013C8  CFF3 F03C          	movff	prodl,??_ISR+4
  2753   0013CC  CFF4 F03D          	movff	prodh,??_ISR+5
  2754   0013D0                     
  2755                           ;main.c: 12: if (((INTCON) & (1<<(2)))) {
  2756   0013D0  A4F2               	btfss	242,2,c	;volatile
  2757   0013D2  EFED  F009         	goto	i2u308_41
  2758   0013D6  EFEF  F009         	goto	i2u308_40
  2759   0013DA                     i2u308_41:
  2760   0013DA  EFF6  F009         	goto	i2l34
  2761   0013DE                     i2u308_40:
  2762   0013DE                     
  2763                           ;main.c: 14: TMR0H = (45535 >> 8);
  2764   0013DE  0EB1               	movlw	177
  2765   0013E0  6ED7               	movwf	215,c	;volatile
  2766                           
  2767                           ;main.c: 15: TMR0L = (45535 & 0x00FF);
  2768   0013E2  0EDF               	movlw	223
  2769   0013E4  6ED6               	movwf	214,c	;volatile
  2770   0013E6                     
  2771                           ;main.c: 17: KernelClock();
  2772   0013E6  ECD2  F008         	call	_KernelClock	;wreg free
  2773   0013EA                     
  2774                           ;main.c: 20: ((INTCON) &= ~(1<<(2)));
  2775   0013EA  94F2               	bcf	242,2,c	;volatile
  2776   0013EC                     i2l34:
  2777   0013EC  C03D  FFF4         	movff	??_ISR+5,prodh
  2778   0013F0  C03C  FFF3         	movff	??_ISR+4,prodl
  2779   0013F4  C03B  FFDA         	movff	??_ISR+3,fsr2h
  2780   0013F8  C03A  FFD9         	movff	??_ISR+2,fsr2l
  2781   0013FC  C039  FFE2         	movff	??_ISR+1,fsr1h
  2782   001400  C038  FFE1         	movff	??_ISR,fsr1l
  2783   001404  9261               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2784   001406  0011               	retfie		f
  2785   001408                     __end_of_ISR:
  2786                           	callstack 0
  2787                           
  2788 ;; *************** function _KernelClock *****************
  2789 ;; Defined at:
  2790 ;;		line 65 in file "kernel.c"
  2791 ;; Parameters:    Size  Location     Type
  2792 ;;		None
  2793 ;; Auto vars:     Size  Location     Type
  2794 ;;  proc            1    8[COMRAM] unsigned char 
  2795 ;; Return value:  Size  Location     Type
  2796 ;;                  1    wreg      void 
  2797 ;; Registers used:
  2798 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2799 ;; Tracked objects:
  2800 ;;		On entry : 0/0
  2801 ;;		On exit  : 0/0
  2802 ;;		Unchanged: 0/0
  2803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2804 ;;      Params:         0       0       0       0       0       0       0
  2805 ;;      Locals:         1       0       0       0       0       0       0
  2806 ;;      Temps:          2       0       0       0       0       0       0
  2807 ;;      Totals:         3       0       0       0       0       0       0
  2808 ;;Total ram usage:        3 bytes
  2809 ;; Hardware stack levels used: 1
  2810 ;; Hardware stack levels required when called: 1
  2811 ;; This function calls:
  2812 ;;		i2___awmod
  2813 ;; This function is called by:
  2814 ;;		_ISR
  2815 ;; This function uses a non-reentrant model
  2816 ;;
  2817                           
  2818                           	psect	text16
  2819   0011A4                     __ptext16:
  2820                           	callstack 0
  2821   0011A4                     _KernelClock:
  2822                           	callstack 24
  2823   0011A4                     
  2824                           ;kernel.c: 66: unsigned char proc;;kernel.c: 67: for (proc = start; proc != end; proc = 
      +                          (proc + 1) % 10) {
  2825   0011A4  C025  F037         	movff	_start,KernelClock@proc
  2826   0011A8  EF12  F009         	goto	i2l2957
  2827   0011AC                     i2l2951:
  2828                           
  2829                           ;kernel.c: 68: if ((pool[proc]->start)>(-30000)) {
  2830   0011AC  5037               	movf	KernelClock@proc^0,w,c
  2831   0011AE  0D02               	mullw	2
  2832   0011B0  0E01               	movlw	low _pool
  2833   0011B2  24F3               	addwf	243,w,c
  2834   0011B4  6ED9               	movwf	fsr2l,c
  2835   0011B6  0E00               	movlw	high _pool
  2836   0011B8  20F4               	addwfc	prodh,w,c
  2837   0011BA  6EDA               	movwf	fsr2h,c
  2838   0011BC  EE10 F004          	lfsr	1,4
  2839   0011C0  50DE               	movf	postinc2,w,c
  2840   0011C2  26E1               	addwf	fsr1l,f,c
  2841   0011C4  50DD               	movf	postdec2,w,c
  2842   0011C6  22E2               	addwfc	fsr1h,f,c
  2843   0011C8  0E01               	movlw	1
  2844   0011CA  AEE3               	btfss	plusw1,7,c
  2845   0011CC  EFF3  F008         	goto	i2u290_40
  2846   0011D0  0ED1               	movlw	209
  2847   0011D2  5CE6               	subwf	postinc1,w,c
  2848   0011D4  0E8A               	movlw	138
  2849   0011D6  58E6               	subwfb	postinc1,w,c
  2850   0011D8  A0D8               	btfss	status,0,c
  2851   0011DA  EFF1  F008         	goto	i2u290_41
  2852   0011DE  EFF3  F008         	goto	i2u290_40
  2853   0011E2                     i2u290_41:
  2854   0011E2  EF04  F009         	goto	i2l2955
  2855   0011E6                     i2u290_40:
  2856   0011E6                     
  2857                           ;kernel.c: 69: pool[proc]->start--;
  2858   0011E6  5037               	movf	KernelClock@proc^0,w,c
  2859   0011E8  0D02               	mullw	2
  2860   0011EA  0E01               	movlw	low _pool
  2861   0011EC  24F3               	addwf	243,w,c
  2862   0011EE  6ED9               	movwf	fsr2l,c
  2863   0011F0  0E00               	movlw	high _pool
  2864   0011F2  20F4               	addwfc	prodh,w,c
  2865   0011F4  6EDA               	movwf	fsr2h,c
  2866   0011F6  EE10 F004          	lfsr	1,4
  2867   0011FA  50DE               	movf	postinc2,w,c
  2868   0011FC  26E1               	addwf	fsr1l,f,c
  2869   0011FE  50DD               	movf	postdec2,w,c
  2870   001200  22E2               	addwfc	fsr1h,f,c
  2871   001202  06E6               	decf	postinc1,f,c
  2872   001204  0E00               	movlw	0
  2873   001206  5AE5               	subwfb	postdec1,f,c
  2874   001208                     i2l2955:
  2875   001208  0E01               	movlw	1
  2876   00120A  2437               	addwf	KernelClock@proc^0,w,c
  2877   00120C  6E2F               	movwf	i2___awmod@dividend^0,c
  2878   00120E  6A30               	clrf	(i2___awmod@dividend+1)^0,c
  2879   001210  0E00               	movlw	0
  2880   001212  2230               	addwfc	(i2___awmod@dividend+1)^0,f,c
  2881   001214  0E00               	movlw	0
  2882   001216  6E32               	movwf	(i2___awmod@divisor+1)^0,c
  2883   001218  0E0A               	movlw	10
  2884   00121A  6E31               	movwf	i2___awmod@divisor^0,c
  2885   00121C  EC28  F008         	call	i2___awmod	;wreg free
  2886   001220  502F               	movf	?i2___awmod^0,w,c
  2887   001222  6E37               	movwf	KernelClock@proc^0,c
  2888   001224                     i2l2957:
  2889   001224  5024               	movf	_end^0,w,c
  2890   001226  1837               	xorwf	KernelClock@proc^0,w,c
  2891   001228  A4D8               	btfss	status,2,c
  2892   00122A  EF19  F009         	goto	i2u291_41
  2893   00122E  EF1B  F009         	goto	i2u291_40
  2894   001232                     i2u291_41:
  2895   001232  EFD6  F008         	goto	i2l2951
  2896   001236                     i2u291_40:
  2897   001236  0012               	return		;funcret
  2898   001238                     __end_of_KernelClock:
  2899                           	callstack 0
  2900                           
  2901 ;; *************** function i2___awmod *****************
  2902 ;; Defined at:
  2903 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  2904 ;; Parameters:    Size  Location     Type
  2905 ;;  dividend        2    0[COMRAM] int 
  2906 ;;  divisor         2    2[COMRAM] int 
  2907 ;; Auto vars:     Size  Location     Type
  2908 ;;  sign            1    5[COMRAM] unsigned char 
  2909 ;;  counter         1    4[COMRAM] unsigned char 
  2910 ;; Return value:  Size  Location     Type
  2911 ;;                  2    0[COMRAM] int 
  2912 ;; Registers used:
  2913 ;;		wreg, status,2, status,0
  2914 ;; Tracked objects:
  2915 ;;		On entry : 0/0
  2916 ;;		On exit  : 0/0
  2917 ;;		Unchanged: 0/0
  2918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2919 ;;      Params:         4       0       0       0       0       0       0
  2920 ;;      Locals:         2       0       0       0       0       0       0
  2921 ;;      Temps:          0       0       0       0       0       0       0
  2922 ;;      Totals:         6       0       0       0       0       0       0
  2923 ;;Total ram usage:        6 bytes
  2924 ;; Hardware stack levels used: 1
  2925 ;; This function calls:
  2926 ;;		Nothing
  2927 ;; This function is called by:
  2928 ;;		_KernelClock
  2929 ;; This function uses a non-reentrant model
  2930 ;;
  2931                           
  2932                           	psect	text17
  2933   001050                     __ptext17:
  2934                           	callstack 0
  2935   001050                     i2___awmod:
  2936                           	callstack 24
  2937   001050  0E00               	movlw	0
  2938   001052  6E34               	movwf	i2___awmod@sign^0,c
  2939   001054  BE30               	btfsc	(i2___awmod@dividend+1)^0,7,c
  2940   001056  EF31  F008         	goto	i2u284_40
  2941   00105A  EF2F  F008         	goto	i2u284_41
  2942   00105E                     i2u284_41:
  2943   00105E  EF37  F008         	goto	i2l2921
  2944   001062                     i2u284_40:
  2945   001062  6C2F               	negf	i2___awmod@dividend^0,c
  2946   001064  1E30               	comf	(i2___awmod@dividend+1)^0,f,c
  2947   001066  B0D8               	btfsc	status,0,c
  2948   001068  2A30               	incf	(i2___awmod@dividend+1)^0,f,c
  2949   00106A  0E01               	movlw	1
  2950   00106C  6E34               	movwf	i2___awmod@sign^0,c
  2951   00106E                     i2l2921:
  2952   00106E  BE32               	btfsc	(i2___awmod@divisor+1)^0,7,c
  2953   001070  EF3E  F008         	goto	i2u285_40
  2954   001074  EF3C  F008         	goto	i2u285_41
  2955   001078                     i2u285_41:
  2956   001078  EF42  F008         	goto	i2l2925
  2957   00107C                     i2u285_40:
  2958   00107C  6C31               	negf	i2___awmod@divisor^0,c
  2959   00107E  1E32               	comf	(i2___awmod@divisor+1)^0,f,c
  2960   001080  B0D8               	btfsc	status,0,c
  2961   001082  2A32               	incf	(i2___awmod@divisor+1)^0,f,c
  2962   001084                     i2l2925:
  2963   001084  5031               	movf	i2___awmod@divisor^0,w,c
  2964   001086  1032               	iorwf	(i2___awmod@divisor+1)^0,w,c
  2965   001088  B4D8               	btfsc	status,2,c
  2966   00108A  EF49  F008         	goto	i2u286_41
  2967   00108E  EF4B  F008         	goto	i2u286_40
  2968   001092                     i2u286_41:
  2969   001092  EF6F  F008         	goto	i2l2941
  2970   001096                     i2u286_40:
  2971   001096  0E01               	movlw	1
  2972   001098  6E33               	movwf	i2___awmod@counter^0,c
  2973   00109A  EF53  F008         	goto	i2l2931
  2974   00109E                     i2l2929:
  2975   00109E  90D8               	bcf	status,0,c
  2976   0010A0  3631               	rlcf	i2___awmod@divisor^0,f,c
  2977   0010A2  3632               	rlcf	(i2___awmod@divisor+1)^0,f,c
  2978   0010A4  2A33               	incf	i2___awmod@counter^0,f,c
  2979   0010A6                     i2l2931:
  2980   0010A6  AE32               	btfss	(i2___awmod@divisor+1)^0,7,c
  2981   0010A8  EF58  F008         	goto	i2u287_41
  2982   0010AC  EF5A  F008         	goto	i2u287_40
  2983   0010B0                     i2u287_41:
  2984   0010B0  EF4F  F008         	goto	i2l2929
  2985   0010B4                     i2u287_40:
  2986   0010B4                     i2l2933:
  2987   0010B4  5031               	movf	i2___awmod@divisor^0,w,c
  2988   0010B6  5C2F               	subwf	i2___awmod@dividend^0,w,c
  2989   0010B8  5032               	movf	(i2___awmod@divisor+1)^0,w,c
  2990   0010BA  5830               	subwfb	(i2___awmod@dividend+1)^0,w,c
  2991   0010BC  A0D8               	btfss	status,0,c
  2992   0010BE  EF63  F008         	goto	i2u288_41
  2993   0010C2  EF65  F008         	goto	i2u288_40
  2994   0010C6                     i2u288_41:
  2995   0010C6  EF69  F008         	goto	i2l2937
  2996   0010CA                     i2u288_40:
  2997   0010CA  5031               	movf	i2___awmod@divisor^0,w,c
  2998   0010CC  5E2F               	subwf	i2___awmod@dividend^0,f,c
  2999   0010CE  5032               	movf	(i2___awmod@divisor+1)^0,w,c
  3000   0010D0  5A30               	subwfb	(i2___awmod@dividend+1)^0,f,c
  3001   0010D2                     i2l2937:
  3002   0010D2  90D8               	bcf	status,0,c
  3003   0010D4  3232               	rrcf	(i2___awmod@divisor+1)^0,f,c
  3004   0010D6  3231               	rrcf	i2___awmod@divisor^0,f,c
  3005   0010D8  2E33               	decfsz	i2___awmod@counter^0,f,c
  3006   0010DA  EF5A  F008         	goto	i2l2933
  3007   0010DE                     i2l2941:
  3008   0010DE  5034               	movf	i2___awmod@sign^0,w,c
  3009   0010E0  B4D8               	btfsc	status,2,c
  3010   0010E2  EF75  F008         	goto	i2u289_41
  3011   0010E6  EF77  F008         	goto	i2u289_40
  3012   0010EA                     i2u289_41:
  3013   0010EA  EF7B  F008         	goto	i2l2945
  3014   0010EE                     i2u289_40:
  3015   0010EE  6C2F               	negf	i2___awmod@dividend^0,c
  3016   0010F0  1E30               	comf	(i2___awmod@dividend+1)^0,f,c
  3017   0010F2  B0D8               	btfsc	status,0,c
  3018   0010F4  2A30               	incf	(i2___awmod@dividend+1)^0,f,c
  3019   0010F6                     i2l2945:
  3020   0010F6  C02F  F02F         	movff	i2___awmod@dividend,?i2___awmod
  3021   0010FA  C030  F030         	movff	i2___awmod@dividend+1,?i2___awmod+1
  3022   0010FE  0012               	return		;funcret
  3023   001100                     __end_ofi2___awmod:
  3024                           	callstack 0
  3025                           
  3026                           	psect	text18
  3027   000000                     __ptext18:
  3028                           	callstack 0
  3029   000000                     
  3030                           	psect	rparam
  3031   000000                     
  3032                           	psect	temp
  3033   000061                     btemp:
  3034                           	callstack 0
  3035   000061                     	ds	1
  3036   000000                     int$flags	set	btemp
  3037   000000                     wtemp8	set	btemp+1
  3038   000000                     ttemp5	set	btemp+1
  3039   000000                     ttemp6	set	btemp+4
  3040   000000                     ttemp7	set	btemp+8
  3041                           
  3042                           	psect	idloc
  3043                           
  3044                           ;Config register IDLOC0 @ 0x200000
  3045                           ;	unspecified, using default values
  3046   200000                     	org	2097152
  3047   200000  FF                 	db	255
  3048                           
  3049                           ;Config register IDLOC1 @ 0x200001
  3050                           ;	unspecified, using default values
  3051   200001                     	org	2097153
  3052   200001  FF                 	db	255
  3053                           
  3054                           ;Config register IDLOC2 @ 0x200002
  3055                           ;	unspecified, using default values
  3056   200002                     	org	2097154
  3057   200002  FF                 	db	255
  3058                           
  3059                           ;Config register IDLOC3 @ 0x200003
  3060                           ;	unspecified, using default values
  3061   200003                     	org	2097155
  3062   200003  FF                 	db	255
  3063                           
  3064                           ;Config register IDLOC4 @ 0x200004
  3065                           ;	unspecified, using default values
  3066   200004                     	org	2097156
  3067   200004  FF                 	db	255
  3068                           
  3069                           ;Config register IDLOC5 @ 0x200005
  3070                           ;	unspecified, using default values
  3071   200005                     	org	2097157
  3072   200005  FF                 	db	255
  3073                           
  3074                           ;Config register IDLOC6 @ 0x200006
  3075                           ;	unspecified, using default values
  3076   200006                     	org	2097158
  3077   200006  FF                 	db	255
  3078                           
  3079                           ;Config register IDLOC7 @ 0x200007
  3080                           ;	unspecified, using default values
  3081   200007                     	org	2097159
  3082   200007  FF                 	db	255
  3083                           
  3084                           	psect	config
  3085                           
  3086                           ; Padding undefined space
  3087   300000                     	org	3145728
  3088   300000  FF                 	db	255
  3089                           
  3090                           ;Config register CONFIG1H @ 0x300001
  3091                           ;	Oscillator Selection bits
  3092                           ;	OSC = HS, HS oscillator
  3093                           ;	Fail-Safe Clock Monitor Enable bit
  3094                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3095                           ;	Internal/External Oscillator Switchover bit
  3096                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3097   300001                     	org	3145729
  3098   300001  02                 	db	2
  3099                           
  3100                           ;Config register CONFIG2L @ 0x300002
  3101                           ;	Power-up Timer Enable bit
  3102                           ;	PWRT = OFF, PWRT disabled
  3103                           ;	Brown-out Reset Enable bits
  3104                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3105                           ;	Brown Out Reset Voltage bits
  3106                           ;	BORV = 2, 
  3107   300002                     	org	3145730
  3108   300002  11                 	db	17
  3109                           
  3110                           ;Config register CONFIG2H @ 0x300003
  3111                           ;	Watchdog Timer Enable bit
  3112                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3113                           ;	Watchdog Timer Postscale Select bits
  3114                           ;	WDTPS = 1, 1:1
  3115   300003                     	org	3145731
  3116   300003  00                 	db	0
  3117                           
  3118                           ; Padding undefined space
  3119   300004                     	org	3145732
  3120   300004  FF                 	db	255
  3121                           
  3122                           ;Config register CONFIG3H @ 0x300005
  3123                           ;	CCP2 MUX bit
  3124                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3125                           ;	PORTB A/D Enable bit
  3126                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  3127                           ;	Low-Power Timer1 Oscillator Enable bit
  3128                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3129                           ;	MCLR Pin Enable bit
  3130                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3131   300005                     	org	3145733
  3132   300005  83                 	db	131
  3133                           
  3134                           ;Config register CONFIG4L @ 0x300006
  3135                           ;	Stack Full/Underflow Reset Enable bit
  3136                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  3137                           ;	Single-Supply ICSP Enable bit
  3138                           ;	LVP = OFF, Single-Supply ICSP disabled
  3139                           ;	Extended Instruction Set Enable bit
  3140                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3141                           ;	Background Debugger Enable bit
  3142                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  3143   300006                     	org	3145734
  3144   300006  80                 	db	128
  3145                           
  3146                           ; Padding undefined space
  3147   300007                     	org	3145735
  3148   300007  FF                 	db	255
  3149                           
  3150                           ;Config register CONFIG5L @ 0x300008
  3151                           ;	Code Protection bit
  3152                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  3153                           ;	Code Protection bit
  3154                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  3155                           ;	Code Protection bit
  3156                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  3157                           ;	Code Protection bit
  3158                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  3159   300008                     	org	3145736
  3160   300008  0F                 	db	15
  3161                           
  3162                           ;Config register CONFIG5H @ 0x300009
  3163                           ;	Boot Block Code Protection bit
  3164                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3165                           ;	Data EEPROM Code Protection bit
  3166                           ;	CPD = OFF, Data EEPROM not code-protected
  3167   300009                     	org	3145737
  3168   300009  C0                 	db	192
  3169                           
  3170                           ;Config register CONFIG6L @ 0x30000A
  3171                           ;	Write Protection bit
  3172                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  3173                           ;	Write Protection bit
  3174                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  3175                           ;	Write Protection bit
  3176                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  3177                           ;	Write Protection bit
  3178                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  3179   30000A                     	org	3145738
  3180   30000A  0F                 	db	15
  3181                           
  3182                           ;Config register CONFIG6H @ 0x30000B
  3183                           ;	Configuration Register Write Protection bit
  3184                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3185                           ;	Boot Block Write Protection bit
  3186                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  3187                           ;	Data EEPROM Write Protection bit
  3188                           ;	WRTD = OFF, Data EEPROM not write-protected
  3189   30000B                     	org	3145739
  3190   30000B  E0                 	db	224
  3191                           
  3192                           ;Config register CONFIG7L @ 0x30000C
  3193                           ;	Table Read Protection bit
  3194                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  3195                           ;	Table Read Protection bit
  3196                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  3197                           ;	Table Read Protection bit
  3198                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  3199                           ;	Table Read Protection bit
  3200                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3201   30000C                     	org	3145740
  3202   30000C  0F                 	db	15
  3203                           
  3204                           ;Config register CONFIG7H @ 0x30000D
  3205                           ;	Boot Block Table Read Protection bit
  3206                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3207   30000D                     	org	3145741
  3208   30000D  40                 	db	64
  3209                           tosu	equ	0xFFF
  3210                           tosh	equ	0xFFE
  3211                           tosl	equ	0xFFD
  3212                           stkptr	equ	0xFFC
  3213                           pclatu	equ	0xFFB
  3214                           pclath	equ	0xFFA
  3215                           pcl	equ	0xFF9
  3216                           tblptru	equ	0xFF8
  3217                           tblptrh	equ	0xFF7
  3218                           tblptrl	equ	0xFF6
  3219                           tablat	equ	0xFF5
  3220                           prodh	equ	0xFF4
  3221                           prodl	equ	0xFF3
  3222                           indf0	equ	0xFEF
  3223                           postinc0	equ	0xFEE
  3224                           postdec0	equ	0xFED
  3225                           preinc0	equ	0xFEC
  3226                           plusw0	equ	0xFEB
  3227                           fsr0h	equ	0xFEA
  3228                           fsr0l	equ	0xFE9
  3229                           wreg	equ	0xFE8
  3230                           indf1	equ	0xFE7
  3231                           postinc1	equ	0xFE6
  3232                           postdec1	equ	0xFE5
  3233                           preinc1	equ	0xFE4
  3234                           plusw1	equ	0xFE3
  3235                           fsr1h	equ	0xFE2
  3236                           fsr1l	equ	0xFE1
  3237                           bsr	equ	0xFE0
  3238                           indf2	equ	0xFDF
  3239                           postinc2	equ	0xFDE
  3240                           postdec2	equ	0xFDD
  3241                           preinc2	equ	0xFDC
  3242                           plusw2	equ	0xFDB
  3243                           fsr2h	equ	0xFDA
  3244                           fsr2l	equ	0xFD9
  3245                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    16
    Data        24
    BSS         46
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     42      96
    BANK0           128     24      40
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    my_funcs$0	PTR void  size(2) Largest target is 0

    S148$2$0	PTR void  size(2) Largest target is 0

    kernelLoop$1274	PTR struct . size(2) Largest target is 8
		 -> main@countTime_proc(BANK0[8]), main@SSDUpdate_proc(BANK0[8]), main@init_PD(BANK0[8]), 

    ?_getLedDriver.initFunc	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> initGenerico(), 

    ?_getLedDriver.funcoes	PTR PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 4
		 -> my_funcs(COMRAM[4]), 

    sp__getLedDriver.initFunc	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> initGenerico(), 

    sp__getLedDriver.funcoes	PTR PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 4
		 -> my_funcs(COMRAM[4]), 

    sp__getLedDriver	PTR struct . size(2) Largest target is 6
		 -> myself(COMRAM[5]), 

    my_funcs	PTR FTN(PTR void ,)unsigned char [2] size(2) Largest target is 1
		 -> inverte(), changePORTD(), 

    S148$initFunc	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> initGenerico(), 

    myself.initFunc	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> initGenerico(), 

    S148$funcoes	PTR PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 4
		 -> my_funcs(COMRAM[4]), 

    myself.funcoes	PTR PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 4
		 -> my_funcs(COMRAM[4]), 

    kernelLoop@tempProc	PTR struct . size(2) Largest target is 8
		 -> main@countTime_proc(BANK0[8]), main@SSDUpdate_proc(BANK0[8]), main@init_PD(BANK0[8]), 

    kernelAddProc@newProc.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), initPORTAD(), 

    pool.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), initPORTAD(), 

    kernelAddProc@newProc	PTR struct . size(2) Largest target is 8
		 -> main@countTime_proc(BANK0[8]), main@SSDUpdate_proc(BANK0[8]), main@init_PD(BANK0[8]), 

    pool	PTR struct .[10] size(2) Largest target is 8
		 -> main@countTime_proc(BANK0[8]), main@SSDUpdate_proc(BANK0[8]), main@init_PD(BANK0[8]), 

    F2411.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), initPORTAD(), 

    countTime_proc.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), initPORTAD(), 

    F2408.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), initPORTAD(), 

    SSDUpdate_proc.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), initPORTAD(), 

    F2405.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), initPORTAD(), 

    S44$function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), initPORTAD(), 

    init_PD.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), initPORTAD(), 


Critical Paths under _main in COMRAM

    _main->_kernelLoop
    _ssdInit->_pinMode
    _kernelLoop->_kernelAddProc
    _ssdUpdate->_digitalWrite
    _kernelAddProc->___awmod
    _countTime->___awmod
    ___awmod->___awdiv

Critical Paths under _ISR in COMRAM

    _ISR->_KernelClock
    _KernelClock->i2___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0   18772
                                              0 BANK0     24    24      0
                      _kernelAddProc
                         _kernelInit
                         _kernelLoop
                            _ssdInit
                          _timerInit
 ---------------------------------------------------------------------------------
 (1) _timerInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    3140
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              6     2      4    3140
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _kernelLoop                                           9     9      0   12837
                                             33 COMRAM     9     9      0
                            ___awmod
                          _countTime *
                         _initPORTAD *
                      _kernelAddProc
                          _updateSSD *
 ---------------------------------------------------------------------------------
 (2) _updateSSD                                            0     0      0    3512
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (3) _ssdUpdate                                            0     0      0    3512
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (4) _digitalWrite                                         6     2      4    3512
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _kernelAddProc                                        4     2      2    2585
                                             29 COMRAM     4     2      2
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _initPORTAD                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _countTime                                            2     2      0    4252
                                             29 COMRAM     2     2      0
                            ___awdiv
                            ___awmod
                           _ssdDigit
 ---------------------------------------------------------------------------------
 (3) _ssdDigit                                             2     1      1     608
                                             15 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    2163
                                             23 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1345
                                             15 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _kernelInit                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  6     6      0     633
                                              9 COMRAM     6     6      0
                        _KernelClock
 ---------------------------------------------------------------------------------
 (6) _KernelClock                                          3     3      0     633
                                              6 COMRAM     3     3      0
                          i2___awmod
 ---------------------------------------------------------------------------------
 (7) i2___awmod                                            6     2      4     503
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _kernelAddProc
     ___awmod
       ___awdiv (ARG)
   _kernelInit
   _kernelLoop
     ___awmod
     _countTime *
       ___awdiv
       ___awmod
       _ssdDigit
     _initPORTAD *
     _kernelAddProc *
     _updateSSD *
       _ssdUpdate
         _digitalWrite
   _ssdInit
     _pinMode
   _timerInit

 _ISR (ROOT)
   _KernelClock
     i2___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     18      28       5       31.2%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     2A      60       1       76.2%
BITBIGSFRlh         1A      0       0      17        0.0%
BITBIGSFRllhll       D      0       0      27        0.0%
BITBIGSFRh           D      0       0      16        0.0%
BITBIGSFRllhhll      C      0       0      25        0.0%
BITBIGSFRllhhll      7      0       0      24        0.0%
BITBIGSFRllhhll      7      0       0      26        0.0%
BITBIGSFRllhhlh      5      0       0      20        0.0%
BITBIGSFRllhhll      4      0       0      23        0.0%
BITBIGSFRllhhlh      4      0       0      19        0.0%
BITBIGSFRllhhh       4      0       0      18        0.0%
BITBIGSFRllhhll      1      0       0      22        0.0%
BITBIGSFRllhhll      1      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      88      28        0.0%
DATA                 0      0      88       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Nov 04 23:33:38 2022

           fp__countTime 0000            fp__initPORTAD 0000                       l40 1438  
                     l54 0EDA                       l49 1440                       l81 0AAE  
                     l65 12AA                       l74 1420                       l78 11A2  
           ___awdiv@sign 0043                       _v0 0020                       _v1 001F  
                     _v2 001E                       _v3 001D                      l209 0AAC  
                    l243 085E                      l472 13B4                      l459 135E  
                    l469 0DFE                      l742 104E                      l495 1430  
                    l729 0F9E                      _PR2 000FCB                      _ISR 0008  
                    _end 0024             ___awmod@sign 004B                      prod 000FF3  
                    tosl 000FFD                      wreg 000FE8                     ?_ISR 002F  
                   l3081 1276                     l3091 12A0                     l3083 127A  
                   l3075 1238                     l2701 0D74                     l3093 12A2  
                   l3085 1286                     l3077 126E                     l2711 0DBC  
                   l2703 0D7C                     l3095 12A4                     l3087 1292  
                   l3079 1272                     l2801 1004                     l2721 130A  
                   l2641 0860                     l2713 0DD0                     l2705 0D8E  
                   l3097 12A6                     l3089 129E                     l2811 103E  
                   l2803 101A                     l2731 1344                     l2723 131A  
                   l2651 08EC                     l2643 087C                     l2707 0DA2  
                   l2741 0EEE                     l2813 1046                     l2805 1022  
                   l2733 1348                     l2725 131E                     l2661 097E  
                   l2653 0906                     l2645 088E                     l2709 0DAA  
                   l2751 0F14                     l2743 0EF6                     l2807 1028  
                   l2735 135A                     l2727 132E                     l2671 0A16  
                   l2663 099E                     l2655 0926                     l2647 08AE  
                   l2719 0DD8                     l2823 143A                     l2831 0E04  
                   l2761 0F4C                     l2753 0F1C                     l2745 0EFA  
                   l2737 0EDC                     l2809 102E                     l2729 1332  
                   l2673 0A38                     l2665 09C0                     l2657 0948  
                   l2649 08D0                     l2681 0CC4                     l2825 143E  
                   l2817 1432                     l2841 0E94                     l2833 0E20  
                   l2771 0F78                     l2763 0F52                     l2755 0F2E  
                   l2747 0F08                     l2739 0EE0                     l2851 1100  
                   l2675 0A54                     l2667 09DC                     l2659 0964  
                   l2691 0D20                     l2683 0CC8                     l2819 1436  
                   l2843 0E9E                     l2835 0E2A                     l2765 0F68  
                   l2757 0F36                     l2773 0F7E                     l2749 0F10  
                   l2781 0FA0                     l2853 1136                     l2677 0A6E  
                   l2669 09F6                     l2693 0D32                     l2685 0CDC  
                   l2845 0ECE                     l2837 0E5A                     l2829 0E00  
                   l2861 0612                     l2775 0F8E                     l2767 0F70  
                   l2759 0F3E                     l2791 0FCC                     l2783 0FA4  
                   l2855 114E                     l2679 0A8E                     l2695 0D46  
                   l2687 0CF0                     l2847 0ED8                     l2839 0E64  
                   l2871 069E                     l2863 062E                     l2777 0F96  
                   l2769 0F72                     l2793 0FD4                     l2785 0FB2  
                   l2857 1186                     l2697 0D4E                     l2689 0D04  
                   l2881 0728                     l2873 06B0                     l2865 0640  
                   l2961 142E                     l2795 0FE6                     l2787 0FBA  
                   l2699 0D60                     l2971 0AAE                     l2891 07C4  
                   l2883 074C                     l2875 06D4                     l2867 0660  
                   l2963 1360                     l2797 0FEE                     l2789 0FBE  
                   l2981 0B7C                     l2973 0AC0                     l2893 07EA  
                   l2885 0772                     l2877 06FA                     l2869 0682  
                   l2965 13B0                     l2967 1418                     l2799 0FF6  
                   l2991 0C02                     l2975 0ACC                     l2983 0B98  
                   l2895 0806                     l2887 078E                     l2879 0716  
                   l2959 142A                     l2993 0C3C                     l2985 0BAA  
                   l2977 0B22                     l2897 0818                     l2889 07A0  
                   l2995 0C86                     l2987 0BC2                     l2979 0B78  
                   l2899 083C                     l2997 0CA2                     l2989 0BEA  
                   u3101 1254                     u2310 0964                     u2230 087C  
                   u2311 0960                     u2231 0878                     u3111 1266  
                   u2400 0A6E                     u2320 097E                     u2304 0938  
                   u2240 088E                     u2401 0A6A                     u2321 097A  
                   u2305 0934                     u2241 088A                     u2500 0F4C  
                   u2501 0F48                     u2510 0F68                     u2430 131A  
                   u2414 0A80                     u2350 09DC                     u2334 0990  
                   u2270 08EC                     u2254 08A0                     u2511 0F64  
                   u2431 1316                     u2415 0A7C                     u2351 09D8  
                   u2335 098C                     u2271 08E8                     u2255 089C  
                   u2520 0F8E                     u2440 132E                     u2424 0AA0  
                   u2360 09F6                     u2344 09B0                     u2280 0906  
                   u2264 08C0                     u2600 062E                     u2521 0F8A  
                   u2441 132A                     u2425 0A9C                     u2361 09F2  
                   u2345 09AC                     u2281 0902                     u2265 08BC  
                   u2601 062A                     u2530 0FB2                     u2450 1344  
                   u2610 0640                     u2531 0FAE                     u2451 1340  
                   u2611 063C                     u3091 1242                     u2540 0FCC  
                   u2460 135A                     u2541 0FC8                     u2461 1356  
                   u2470 0EEE                     u2550 0FE6                     u2390 0A54  
                   u2374 0A08                     u2294 0918                     u2471 0EEA  
                   u2551 0FE2                     u2391 0A50                     u2375 0A04  
                   u2295 0914                     u2480 0F08                     u2560 1004  
                   u2384 0A28                     u2720 078E                     u2704 073E  
                   u2640 069E                     u2624 0652                     u2481 0F04  
                   u2561 1000                     u2385 0A24                     u2721 078A  
                   u2705 073A                     u2641 069A                     u2625 064E  
                   u2490 0F2E                     u2570 101A                     u2730 07A0  
                   u2714 0762                     u2650 06B0                     u2634 0672  
                   u2491 0F2A                     u2571 1016                     u2731 079C  
                   u2715 075E                     u2651 06AC                     u2635 066E  
                   u2580 103E                     u2581 103A                     u2590 1136  
                   u2591 1132                     u2920 0AC0                     u2760 0806  
                   u2744 07B6                     u2680 0716                     u2664 06C6  
                   u2921 0ABC                     u2761 0802                     u2745 07B2  
                   u2681 0712                     u2665 06C2                     u2930 0B22  
                   u2770 0818                     u2754 07DA                     u2690 0728  
                   u2674 06EA                     u2931 0B1E                     u2771 0814  
                   u2755 07D6                     u2691 0724                     u2675 06E6  
                   u2940 0B78                     u2941 0B74                     u2950 0BAA  
                   u2951 0BA6                     u2960 0C3C                     u2784 082E  
                   u2961 0C38                     u2785 082A                     u2794 0852  
                   u2795 084E                     u2980 0C86                     u2981 0C82  
                   _PIR1 000F9E                     i2l34 13EC                     u2978 0C62  
                   u2979 0C76              main@init_PD 0080                     _RCON 000FD0  
                   i2l99 1236                     _main 1238                     _pool 0001  
           fp__updateSSD 0000                     fsr0h 000FEA                     fsr1h 000FE2  
                   fsr2h 000FDA                     fsr0l 000FE9                     fsr1l 000FE1  
                   fsr2l 000FD9                     btemp 0061       kernelLoop@tempProc 0055  
                   prodh 000FF4                     prodl 000FF3                     start 000E  
          ??_KernelClock 0035             ___param_bank 000000                    ??_ISR 0038  
                  ?_main 002F          __end_of___awdiv 0FA0          __end_of___awmod 1050  
                  _T0CON 000FD5          ___awdiv@divisor 0040                    _T2CON 000FCA  
                  i2l742 10FE          ___awdiv@counter 0042                    _RCREG 000FAE  
                  _RCSTA 000FAB                    _TMR0H 000FD7                    _TMR0L 000FD6  
                  _SPBRG 000FAF                    _PORTA 000F80                    _PORTB 000F81  
                  _PORTC 000F82                    _PORTD 000F83                    _PORTE 000F84  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    _TRISE 000F96                    _TXREG 000FAD  
                  _TXSTA 000FAC          __end_of_pinMode 0860                    _valor 001B  
                  _start 0025                    pclath 000FFA                    tablat 000FF5  
        __end_of_ssdInit 13B6                    plusw1 000FE3                    plusw2 000FDB  
                  ttemp5 0062                    ttemp6 0065                    ttemp7 0069  
                  status 000FD8                    wtemp8 0062     __end_of_digitalWrite 0AAE  
        __initialization 12AE             __end_of_main 12AE      __end_of_KernelClock 1238  
                 ??_main 0059            __activetblptr 000002                   _ADCON0 000FC2  
                 _ADCON2 000FC0                   _ADRESH 000FC4                   _ADRESL 000FC3  
                 _CCPR1L 000FBE         ___awdiv@dividend 003E                   i2l3071 13E6  
                 i2l3073 13EA                   i2l3067 13D0                   i2l3069 13DE  
                 i2l2921 106E                   i2l2913 1050                   i2l2931 10A6  
                 i2l2923 107C                   i2l2915 1054                   i2l2933 10B4  
                 i2l2941 10DE                   i2l2925 1084                   i2l2917 1062  
                 i2l2943 10EE                   i2l2935 10CA                   i2l2927 1096  
                 i2l2919 106A                   i2l2951 11AC                   i2l2945 10F6  
                 i2l2937 10D2                   i2l2929 109E                   i2l2953 11E6  
                 i2l2939 10D8                   i2l2955 1208                   i2l2957 1224  
                 i2l2949 11A4                   _INTCON 000FF2                   _SPBRGH 000FB0  
            kernelLoop@p 0058                ??___awdiv 0042                ??___awmod 004A  
                 clear_0 12F4         ___awdiv@quotient 0044          ___awmod@divisor 0048  
                 isa$std 000001          ___awmod@counter 004A                   _myself 0026  
          _kernelAddProc 1100         __end_of_ssdDigit 1360             __pdataCOMRAM 0059  
              ??_pinMode 0042        __end_ofi2___awmod 1100             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
              ??_ssdInit 0044           i2___awmod@sign 0034               __accesstop 0080  
__end_of__initialization 12FA            ___rparam_used 000001             countTime@dig 004C  
            _KernelClock 11A4              pinMode@type 0040           __pcstackCOMRAM 002F  
           __pidataBANK0 1408           ?_kernelAddProc 004C                  _CCP1CON 000FBD  
                _BAUDCON 000FB8             _digitalWrite 0860               _initPORTAD 1432  
                __Hparam 0000                  __Lparam 0000                ?_ssdDigit 003E  
        kpDebounce@tempo 0023               _kernelInit 1418               _kernelLoop 0AAE  
                ___awdiv 0EDC                  ___awmod 0FA0          ??_kernelAddProc 004E  
           __psmallconst 0600              ssdDigit@val 003F              ssdDigit@pos 003E  
                __pcinit 12AE        __end_of_countTime 0EDC                  __ramtop 0600  
                __ptext0 1238                  __ptext1 142A                  __ptext2 1360  
                __ptext3 0612                  __ptext4 0AAE                  __ptext5 0E00  
                __ptext6 1432                  __ptext7 143A                  __ptext8 0CC4  
                __ptext9 0860                  _display 0021                  _pinMode 0612  
       ___awmod@dividend 0046                  _inverte 000000                  _ssdInit 1360  
                _started 0022      kpDebounce@valorNovo 0017           __pintcode_body 13B6  
   end_of_initialization 12FA            __Lmediumconst 0000                  int_func 13B6  
      __end_of_timerInit 1432        __end_of_ssdUpdate 0E00               ??_ssdDigit 003F  
      __end_of_updateSSD 1442                  postdec1 000FE5                  postdec2 000FDD  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
         _valor@ssd$F527 0601           kernelLoop@next 0057                i2___awmod 1050  
            ?_initPORTAD 002F             ?_KernelClock 002F              ?_kernelInit 002F  
            ?_kernelLoop 002F            __pidataCOMRAM 1422   __end_of_valor@ssd$F527 0611  
    start_initialization 12AE              __end_of_ISR 1408               ?i2___awmod 002F  
        KernelClock@proc 0037             _initGenerico 000000       main@SSDUpdate_proc 0088  
            __pdataBANK0 0098              _changePORTD 000000              __pbssCOMRAM 0001  
          __pcstackBANK0 0080     kernelAddProc@newProc 004C               pinMode@pin 003E  
              __pintcode 0008                 ?___awdiv 003E                 ?___awmod 0046  
            __smallconst 0600                 ?_pinMode 003E                _countTime 0E00  
               ?_ssdInit 002F              ??i2___awmod 0033       main@countTime_proc 0090  
               i2u308_40 13DE                 i2u308_41 13DA                 i2u290_40 11E6  
               i2u290_41 11E2                 i2u291_40 1236                 i2u291_41 1232  
               i2u284_40 1062                 i2u284_41 105E                 i2u285_40 107C  
               i2u285_41 1078                 i2u286_40 1096                 i2u286_41 1092  
               i2u287_40 10B4                 i2u287_41 10B0                 i2u288_40 10CA  
               i2u288_41 10C6                 i2u289_40 10EE                 i2u289_41 10EA  
              main@F2411 0098                main@F2405 0059                main@F2408 00A0  
              _timerInit 142A                _ssdUpdate 0CC4                _updateSSD 143A  
  __end_of_kernelAddProc 11A4    kpDebounce@valorAntigo 0015               ?_countTime 002F  
              copy_data0 12C2                copy_data1 12E2       i2___awmod@dividend 002F  
           ??_initPORTAD 003E                 __Hrparam 0000                 __Lrparam 0000  
           ??_kernelInit 003E             ??_kernelLoop 0050               ?_timerInit 002F  
             ?_ssdUpdate 002F               ?_updateSSD 002F       __end_of_initPORTAD 143A  
               __ptext10 1100                 __ptext11 1308                 __ptext12 0FA0  
               __ptext13 0EDC                 __ptext14 1418                 __ptext16 11A4  
               __ptext17 1050                 __ptext18 0000       __end_of_kernelInit 1422  
     __end_of_kernelLoop 0CC4                 _ssdDigit 1308                 _my_funcs 002B  
               isa$xinst 000000                 int$flags 0061        i2___awmod@divisor 0031  
      i2___awmod@counter 0033              ??_countTime 004C            ?_digitalWrite 003E  
               intlevel2 0000        digitalWrite@value 0040              ??_timerInit 003E  
            ??_ssdUpdate 0044              ??_updateSSD 0044           ??_digitalWrite 0042  
        digitalWrite@pin 003E        _valor@keypad$F305 0019  
