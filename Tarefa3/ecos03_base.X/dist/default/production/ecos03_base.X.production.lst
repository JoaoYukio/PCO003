

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Nov 05 11:16:08 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    37                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    39   000000                     
    40                           ; Version 2.40
    41                           ; Generated 17/11/2021 GMT
    42                           ; 
    43                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F4520 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75   000000                     
    76 ;; Function _changePORTD is unused but had its address taken
    77   000000                     
    78 ;; Function _inverte is unused but had its address taken
    79   000000                     
    80 ;; Function _initGenerico is unused but had its address taken
    81   000000                     
    82                           	psect	idataCOMRAM
    83   00147A                     __pidataCOMRAM:
    84                           	callstack 0
    85                           
    86                           ;initializer for main@F2405
    87   00147A  8A                 	db	low _initPORTAD
    88   00147B  14                 	db	high _initPORTAD
    89   00147C  0000               	dw	0
    90   00147E  0000               	dw	0
    91   001480  000F               	dw	15
    92                           
    93                           	psect	idataBANK0
    94   001460                     __pidataBANK0:
    95                           	callstack 0
    96                           
    97                           ;initializer for main@F2411
    98   001460  58                 	db	low _countTime
    99   001461  0E                 	db	high _countTime
   100   001462  0064               	dw	100
   101   001464  0000               	dw	0
   102   001466  0005               	dw	5
   103                           
   104                           ;initializer for main@F2408
   105   001468  92                 	db	low _updateSSD
   106   001469  14                 	db	high _updateSSD
   107   00146A  0001               	dw	1
   108   00146C  0000               	dw	0
   109   00146E  000A               	dw	10
   110                           
   111                           	psect	smallconst
   112   000600                     __psmallconst:
   113                           	callstack 0
   114   000600  00                 	db	0
   115   000601                     _valor@ssd$F527:
   116                           	callstack 0
   117   000601  3F                 	db	63
   118   000602  06                 	db	6
   119   000603  5B                 	db	91
   120   000604  4F                 	db	79
   121   000605  66                 	db	102
   122   000606  6D                 	db	109
   123   000607  7D                 	db	125
   124   000608  07                 	db	7
   125   000609  7F                 	db	127
   126   00060A  6F                 	db	111
   127   00060B  77                 	db	119
   128   00060C  7C                 	db	124
   129   00060D  39                 	db	57
   130   00060E  5E                 	db	94
   131   00060F  79                 	db	121
   132   000610  71                 	db	113
   133   000611                     __end_of_valor@ssd$F527:
   134                           	callstack 0
   135   000000                     _SPBRG	set	4015
   136   000000                     _SPBRGH	set	4016
   137   000000                     _BAUDCON	set	4024
   138   000000                     _TXSTA	set	4012
   139   000000                     _RCREG	set	4014
   140   000000                     _TRISC	set	3988
   141   000000                     _TRISB	set	3987
   142   000000                     _PORTC	set	3970
   143   000000                     _PORTB	set	3969
   144   000000                     _PORTA	set	3968
   145   000000                     _ADRESL	set	4035
   146   000000                     _ADRESH	set	4036
   147   000000                     _PORTD	set	3971
   148   000000                     _TMR0L	set	4054
   149   000000                     _TMR0H	set	4055
   150   000000                     _INTCON	set	4082
   151   000000                     _TRISA	set	3986
   152   000000                     _PORTE	set	3972
   153   000000                     _TRISD	set	3989
   154   000000                     _PIR1	set	3998
   155   000000                     _CCP1CON	set	4029
   156   000000                     _CCPR1L	set	4030
   157   000000                     _TRISE	set	3990
   158   000000                     _ADCON2	set	4032
   159   000000                     _ADCON0	set	4034
   160   000000                     _RCON	set	4048
   161   000000                     _T0CON	set	4053
   162   000000                     _T2CON	set	4042
   163   000000                     _PR2	set	4043
   164   000000                     _RCSTA	set	4011
   165   000000                     _TXREG	set	4013
   166   000611  00                 	db	0	; dummy byte at the end
   167   000000                     
   168                           ; #config settings
   169                           
   170                           	psect	cinit
   171   001306                     __pcinit:
   172                           	callstack 0
   173   001306                     start_initialization:
   174                           	callstack 0
   175   001306                     __initialization:
   176                           	callstack 0
   177                           
   178                           ; Initialize objects allocated to BANK0 (16 bytes)
   179                           ; load TBLPTR registers with __pidataBANK0
   180   001306  0E60               	movlw	low __pidataBANK0
   181   001308  6EF6               	movwf	tblptrl,c
   182   00130A  0E14               	movlw	high __pidataBANK0
   183   00130C  6EF7               	movwf	tblptrh,c
   184   00130E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   185   001310  6EF8               	movwf	tblptru,c
   186   001312  EE00  F098         	lfsr	0,__pdataBANK0
   187   001316  EE10 F010          	lfsr	1,16
   188   00131A                     copy_data0:
   189   00131A  0009               	tblrd		*+
   190   00131C  CFF5 FFEE          	movff	tablat,postinc0
   191   001320  50E5               	movf	postdec1,w,c
   192   001322  50E1               	movf	fsr1l,w,c
   193   001324  E1FA               	bnz	copy_data0
   194                           
   195                           ; Initialize objects allocated to COMRAM (8 bytes)
   196                           ; load TBLPTR registers with __pidataCOMRAM
   197   001326  0E7A               	movlw	low __pidataCOMRAM
   198   001328  6EF6               	movwf	tblptrl,c
   199   00132A  0E14               	movlw	high __pidataCOMRAM
   200   00132C  6EF7               	movwf	tblptrh,c
   201   00132E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   202   001330  6EF8               	movwf	tblptru,c
   203   001332  EE00  F059         	lfsr	0,__pdataCOMRAM
   204   001336  EE10 F008          	lfsr	1,8
   205   00133A                     copy_data1:
   206   00133A  0009               	tblrd		*+
   207   00133C  CFF5 FFEE          	movff	tablat,postinc0
   208   001340  50E5               	movf	postdec1,w,c
   209   001342  50E1               	movf	fsr1l,w,c
   210   001344  E1FA               	bnz	copy_data1
   211                           
   212                           ; Clear objects allocated to COMRAM (46 bytes)
   213   001346  EE00  F001         	lfsr	0,__pbssCOMRAM
   214   00134A  0E2E               	movlw	46
   215   00134C                     clear_0:
   216   00134C  6AEE               	clrf	postinc0,c
   217   00134E  06E8               	decf	wreg,f,c
   218   001350  E1FD               	bnz	clear_0
   219   001352                     end_of_initialization:
   220                           	callstack 0
   221   001352                     __end_of__initialization:
   222                           	callstack 0
   223   001352  9061               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   224   001354  9261               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   225   001356  0E00               	movlw	low (__Lmediumconst shr (0+16))
   226   001358  6EF8               	movwf	tblptru,c
   227   00135A  0100               	movlb	0
   228   00135C  EF48  F009         	goto	_main	;jump to C main() function
   229                           
   230                           	psect	bssCOMRAM
   231   000001                     __pbssCOMRAM:
   232                           	callstack 0
   233   000001                     _pool:
   234                           	callstack 0
   235   000001                     	ds	20
   236   000015                     kpDebounce@valorAntigo:
   237                           	callstack 0
   238   000015                     	ds	2
   239   000017                     kpDebounce@valorNovo:
   240                           	callstack 0
   241   000017                     	ds	2
   242   000019                     _valor@keypad$F305:
   243                           	callstack 0
   244   000019                     	ds	2
   245   00001B                     _valor:
   246                           	callstack 0
   247   00001B                     	ds	2
   248   00001D                     _v3:
   249                           	callstack 0
   250   00001D                     	ds	1
   251   00001E                     _v2:
   252                           	callstack 0
   253   00001E                     	ds	1
   254   00001F                     _v1:
   255                           	callstack 0
   256   00001F                     	ds	1
   257   000020                     _v0:
   258                           	callstack 0
   259   000020                     	ds	1
   260   000021                     _display:
   261                           	callstack 0
   262   000021                     	ds	1
   263   000022                     _started:
   264                           	callstack 0
   265   000022                     	ds	1
   266   000023                     kpDebounce@tempo:
   267                           	callstack 0
   268   000023                     	ds	1
   269   000024                     _end:
   270                           	callstack 0
   271   000024                     	ds	1
   272   000025                     _start:
   273                           	callstack 0
   274   000025                     	ds	1
   275   000026                     _myself:
   276                           	callstack 0
   277   000026                     	ds	5
   278   00002B                     _my_funcs:
   279                           	callstack 0
   280   00002B                     	ds	4
   281                           
   282                           	psect	dataCOMRAM
   283   000059                     __pdataCOMRAM:
   284                           	callstack 0
   285   000059                     main@F2405:
   286                           	callstack 0
   287   000059                     	ds	8
   288                           
   289                           	psect	dataBANK0
   290   000098                     __pdataBANK0:
   291                           	callstack 0
   292   000098                     main@F2411:
   293                           	callstack 0
   294   000098                     	ds	8
   295   0000A0                     main@F2408:
   296                           	callstack 0
   297   0000A0                     	ds	8
   298                           
   299                           	psect	cstackBANK0
   300   000080                     __pcstackBANK0:
   301                           	callstack 0
   302   000080                     main@init_PD:
   303                           	callstack 0
   304                           
   305                           ; 8 bytes @ 0x0
   306   000080                     	ds	8
   307   000088                     main@SSDUpdate_proc:
   308                           	callstack 0
   309                           
   310                           ; 8 bytes @ 0x8
   311   000088                     	ds	8
   312   000090                     main@countTime_proc:
   313                           	callstack 0
   314                           
   315                           ; 8 bytes @ 0x10
   316   000090                     	ds	8
   317                           
   318                           	psect	cstackCOMRAM
   319   00002F                     __pcstackCOMRAM:
   320                           	callstack 0
   321   00002F                     ?i2___awmod:
   322                           	callstack 0
   323   00002F                     i2___awmod@dividend:
   324                           	callstack 0
   325                           
   326                           ; 2 bytes @ 0x0
   327   00002F                     	ds	2
   328   000031                     i2___awmod@divisor:
   329                           	callstack 0
   330                           
   331                           ; 2 bytes @ 0x2
   332   000031                     	ds	2
   333   000033                     i2___awmod@counter:
   334                           	callstack 0
   335                           
   336                           ; 1 bytes @ 0x4
   337   000033                     	ds	1
   338   000034                     i2___awmod@sign:
   339                           	callstack 0
   340                           
   341                           ; 1 bytes @ 0x5
   342   000034                     	ds	1
   343   000035                     
   344                           ; 1 bytes @ 0x6
   345   000035                     	ds	2
   346   000037                     KernelClock@proc:
   347                           	callstack 0
   348                           
   349                           ; 1 bytes @ 0x8
   350   000037                     	ds	1
   351   000038                     ??_ISR:
   352                           
   353                           ; 1 bytes @ 0x9
   354   000038                     	ds	6
   355   00003E                     ?___awdiv:
   356                           	callstack 0
   357   00003E                     ssdDigit@pos:
   358                           	callstack 0
   359   00003E                     digitalWrite@pin:
   360                           	callstack 0
   361   00003E                     pinMode@pin:
   362                           	callstack 0
   363   00003E                     ___awdiv@dividend:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0xF
   367   00003E                     	ds	1
   368   00003F                     ssdDigit@val:
   369                           	callstack 0
   370                           
   371                           ; 1 bytes @ 0x10
   372   00003F                     	ds	1
   373   000040                     digitalWrite@value:
   374                           	callstack 0
   375   000040                     pinMode@type:
   376                           	callstack 0
   377   000040                     ___awdiv@divisor:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0x11
   381   000040                     	ds	2
   382   000042                     ??_pinMode:
   383   000042                     ??_digitalWrite:
   384   000042                     ___awdiv@counter:
   385                           	callstack 0
   386                           
   387                           ; 1 bytes @ 0x13
   388   000042                     	ds	1
   389   000043                     ___awdiv@sign:
   390                           	callstack 0
   391                           
   392                           ; 1 bytes @ 0x14
   393   000043                     	ds	1
   394   000044                     ___awdiv@quotient:
   395                           	callstack 0
   396                           
   397                           ; 2 bytes @ 0x15
   398   000044                     	ds	2
   399   000046                     ?___awmod:
   400                           	callstack 0
   401   000046                     ___awmod@dividend:
   402                           	callstack 0
   403                           
   404                           ; 2 bytes @ 0x17
   405   000046                     	ds	2
   406   000048                     ___awmod@divisor:
   407                           	callstack 0
   408                           
   409                           ; 2 bytes @ 0x19
   410   000048                     	ds	2
   411   00004A                     ___awmod@counter:
   412                           	callstack 0
   413                           
   414                           ; 1 bytes @ 0x1B
   415   00004A                     	ds	1
   416   00004B                     ___awmod@sign:
   417                           	callstack 0
   418                           
   419                           ; 1 bytes @ 0x1C
   420   00004B                     	ds	1
   421   00004C                     countTime@dig:
   422                           	callstack 0
   423   00004C                     kernelAddProc@newProc:
   424                           	callstack 0
   425                           
   426                           ; 2 bytes @ 0x1D
   427   00004C                     	ds	2
   428   00004E                     ??_kernelAddProc:
   429                           
   430                           ; 1 bytes @ 0x1F
   431   00004E                     	ds	2
   432   000050                     ??_kernelLoop:
   433                           
   434                           ; 1 bytes @ 0x21
   435   000050                     	ds	5
   436   000055                     kernelLoop@tempProc:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x26
   440   000055                     	ds	2
   441   000057                     kernelLoop@next:
   442                           	callstack 0
   443                           
   444                           ; 1 bytes @ 0x28
   445   000057                     	ds	1
   446   000058                     kernelLoop@p:
   447                           	callstack 0
   448                           
   449                           ; 1 bytes @ 0x29
   450   000058                     	ds	1
   451   000059                     
   452                           ; 1 bytes @ 0x2A
   453 ;;
   454 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   455 ;;
   456 ;; *************** function _main *****************
   457 ;; Defined at:
   458 ;;		line 75 in file "main.c"
   459 ;; Parameters:    Size  Location     Type
   460 ;;		None
   461 ;; Auto vars:     Size  Location     Type
   462 ;;  countTime_pr    8   16[BANK0 ] struct .
   463 ;;  SSDUpdate_pr    8    8[BANK0 ] struct .
   464 ;;  init_PD         8    0[BANK0 ] struct .
   465 ;; Return value:  Size  Location     Type
   466 ;;                  1    wreg      void 
   467 ;; Registers used:
   468 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
   469 ;; Tracked objects:
   470 ;;		On entry : 0/0
   471 ;;		On exit  : 0/0
   472 ;;		Unchanged: 0/0
   473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   474 ;;      Params:         0       0       0       0       0       0       0
   475 ;;      Locals:         0      24       0       0       0       0       0
   476 ;;      Temps:          0       0       0       0       0       0       0
   477 ;;      Totals:         0      24       0       0       0       0       0
   478 ;;Total ram usage:       24 bytes
   479 ;; Hardware stack levels required when called: 7
   480 ;; This function calls:
   481 ;;		_kernelAddProc
   482 ;;		_kernelInit
   483 ;;		_kernelLoop
   484 ;;		_ssdInit
   485 ;;		_timerInit
   486 ;; This function is called by:
   487 ;;		Startup code after reset
   488 ;; This function uses a non-reentrant model
   489 ;;
   490                           
   491                           	psect	text0
   492   001290                     __ptext0:
   493                           	callstack 0
   494   001290                     _main:
   495                           	callstack 24
   496   001290                     
   497                           ;main.c: 79: process init_PD = {initPORTAD, 0, 0, 15};
   498   001290  EE20  F059         	lfsr	2,main@F2405
   499   001294  EE10  F080         	lfsr	1,main@init_PD
   500   001298  0E07               	movlw	7
   501   00129A                     u3121:
   502   00129A  CFDB FFE3          	movff	plusw2,plusw1
   503   00129E  06E8               	decf	wreg,f,c
   504   0012A0  E2FC               	bc	u3121
   505                           
   506                           ;main.c: 86: process SSDUpdate_proc = {updateSSD, 1, 0, 10};
   507   0012A2  EE20  F0A0         	lfsr	2,main@F2408
   508   0012A6  EE10  F088         	lfsr	1,main@SSDUpdate_proc
   509   0012AA  0E07               	movlw	7
   510   0012AC                     u3131:
   511   0012AC  CFDB FFE3          	movff	plusw2,plusw1
   512   0012B0  06E8               	decf	wreg,f,c
   513   0012B2  E2FC               	bc	u3131
   514                           
   515                           ;main.c: 87: process countTime_proc = {countTime, 100, 0, 5};
   516   0012B4  EE20  F098         	lfsr	2,main@F2411
   517   0012B8  EE10  F090         	lfsr	1,main@countTime_proc
   518   0012BC  0E07               	movlw	7
   519   0012BE                     u3141:
   520   0012BE  CFDB FFE3          	movff	plusw2,plusw1
   521   0012C2  06E8               	decf	wreg,f,c
   522   0012C4  E2FC               	bc	u3141
   523   0012C6                     
   524                           ;main.c: 89: timerInit();
   525   0012C6  EC41  F00A         	call	_timerInit	;wreg free
   526   0012CA                     
   527                           ;main.c: 90: ssdInit();
   528   0012CA  ECDC  F009         	call	_ssdInit	;wreg free
   529   0012CE                     
   530                           ;main.c: 95: kernelInit();
   531   0012CE  EC38  F00A         	call	_kernelInit	;wreg free
   532   0012D2                     
   533                           ;main.c: 96: kernelAddProc(&init_PD);
   534   0012D2  0E80               	movlw	low main@init_PD
   535   0012D4  6E4C               	movwf	kernelAddProc@newProc^0,c
   536   0012D6  0E00               	movlw	high main@init_PD
   537   0012D8  6E4D               	movwf	(kernelAddProc@newProc+1)^0,c
   538   0012DA  ECAC  F008         	call	_kernelAddProc	;wreg free
   539   0012DE                     
   540                           ;main.c: 102: kernelAddProc(&SSDUpdate_proc);
   541   0012DE  0E88               	movlw	low main@SSDUpdate_proc
   542   0012E0  6E4C               	movwf	kernelAddProc@newProc^0,c
   543   0012E2  0E00               	movlw	high main@SSDUpdate_proc
   544   0012E4  6E4D               	movwf	(kernelAddProc@newProc+1)^0,c
   545   0012E6  ECAC  F008         	call	_kernelAddProc	;wreg free
   546   0012EA                     
   547                           ;main.c: 103: kernelAddProc(&countTime_proc);
   548   0012EA  0E90               	movlw	low main@countTime_proc
   549   0012EC  6E4C               	movwf	kernelAddProc@newProc^0,c
   550   0012EE  0E00               	movlw	high main@countTime_proc
   551   0012F0  6E4D               	movwf	(kernelAddProc@newProc+1)^0,c
   552   0012F2  ECAC  F008         	call	_kernelAddProc	;wreg free
   553   0012F6                     
   554                           ;main.c: 107: ((RCON) &= ~(1<<(7)));
   555   0012F6  9ED0               	bcf	208,7,c	;volatile
   556   0012F8                     
   557                           ;main.c: 108: ((INTCON) |= (1<<(5)));
   558   0012F8  8AF2               	bsf	242,5,c	;volatile
   559   0012FA                     
   560                           ;main.c: 109: ((INTCON) |= (1<<(7)));
   561   0012FA  8EF2               	bsf	242,7,c	;volatile
   562   0012FC                     
   563                           ;main.c: 110: ((INTCON) |= (1<<(6)));
   564   0012FC  8CF2               	bsf	242,6,c	;volatile
   565   0012FE                     
   566                           ;main.c: 113: kernelLoop();
   567   0012FE  EC09  F003         	call	_kernelLoop	;wreg free
   568   001302  EF07  F000         	goto	start
   569   001306                     __end_of_main:
   570                           	callstack 0
   571                           
   572 ;; *************** function _timerInit *****************
   573 ;; Defined at:
   574 ;;		line 51 in file "timer.c"
   575 ;; Parameters:    Size  Location     Type
   576 ;;		None
   577 ;; Auto vars:     Size  Location     Type
   578 ;;		None
   579 ;; Return value:  Size  Location     Type
   580 ;;                  1    wreg      void 
   581 ;; Registers used:
   582 ;;		wreg, status,2, status,0
   583 ;; Tracked objects:
   584 ;;		On entry : 0/0
   585 ;;		On exit  : 0/0
   586 ;;		Unchanged: 0/0
   587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   588 ;;      Params:         0       0       0       0       0       0       0
   589 ;;      Locals:         0       0       0       0       0       0       0
   590 ;;      Temps:          0       0       0       0       0       0       0
   591 ;;      Totals:         0       0       0       0       0       0       0
   592 ;;Total ram usage:        0 bytes
   593 ;; Hardware stack levels used: 1
   594 ;; Hardware stack levels required when called: 3
   595 ;; This function calls:
   596 ;;		Nothing
   597 ;; This function is called by:
   598 ;;		_main
   599 ;; This function uses a non-reentrant model
   600 ;;
   601                           
   602                           	psect	text1
   603   001482                     __ptext1:
   604                           	callstack 0
   605   001482                     _timerInit:
   606                           	callstack 27
   607   001482                     
   608                           ;timer.c: 53: T0CON = 0b00001000;
   609   001482  0E08               	movlw	8
   610   001484  6ED5               	movwf	213,c	;volatile
   611   001486                     
   612                           ;timer.c: 54: ((T0CON) |= (1<<(7)));
   613   001486  8ED5               	bsf	213,7,c	;volatile
   614   001488  0012               	return		;funcret
   615   00148A                     __end_of_timerInit:
   616                           	callstack 0
   617                           
   618 ;; *************** function _ssdInit *****************
   619 ;; Defined at:
   620 ;;		line 101 in file "ssd.c"
   621 ;; Parameters:    Size  Location     Type
   622 ;;		None
   623 ;; Auto vars:     Size  Location     Type
   624 ;;		None
   625 ;; Return value:  Size  Location     Type
   626 ;;                  1    wreg      void 
   627 ;; Registers used:
   628 ;;		wreg, status,2, status,0, cstack
   629 ;; Tracked objects:
   630 ;;		On entry : 0/0
   631 ;;		On exit  : 0/0
   632 ;;		Unchanged: 0/0
   633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   634 ;;      Params:         0       0       0       0       0       0       0
   635 ;;      Locals:         0       0       0       0       0       0       0
   636 ;;      Temps:          0       0       0       0       0       0       0
   637 ;;      Totals:         0       0       0       0       0       0       0
   638 ;;Total ram usage:        0 bytes
   639 ;; Hardware stack levels used: 1
   640 ;; Hardware stack levels required when called: 4
   641 ;; This function calls:
   642 ;;		_pinMode
   643 ;; This function is called by:
   644 ;;		_main
   645 ;; This function uses a non-reentrant model
   646 ;;
   647                           
   648                           	psect	text2
   649   0013B8                     __ptext2:
   650                           	callstack 0
   651   0013B8                     _ssdInit:
   652                           	callstack 26
   653   0013B8                     
   654                           ;ssd.c: 103: pinMode(PIN_A2, 0);
   655   0013B8  0E00               	movlw	0
   656   0013BA  6E3F               	movwf	(pinMode@pin+1)^0,c
   657   0013BC  0E02               	movlw	2
   658   0013BE  6E3E               	movwf	pinMode@pin^0,c
   659   0013C0  0E00               	movlw	0
   660   0013C2  6E41               	movwf	(pinMode@type+1)^0,c
   661   0013C4  0E00               	movlw	0
   662   0013C6  6E40               	movwf	pinMode@type^0,c
   663   0013C8  EC40  F004         	call	_pinMode	;wreg free
   664                           
   665                           ;ssd.c: 104: pinMode(PIN_A3, 0);
   666   0013CC  0E00               	movlw	0
   667   0013CE  6E3F               	movwf	(pinMode@pin+1)^0,c
   668   0013D0  0E03               	movlw	3
   669   0013D2  6E3E               	movwf	pinMode@pin^0,c
   670   0013D4  0E00               	movlw	0
   671   0013D6  6E41               	movwf	(pinMode@type+1)^0,c
   672   0013D8  0E00               	movlw	0
   673   0013DA  6E40               	movwf	pinMode@type^0,c
   674   0013DC  EC40  F004         	call	_pinMode	;wreg free
   675                           
   676                           ;ssd.c: 105: pinMode(PIN_A4, 0);
   677   0013E0  0E00               	movlw	0
   678   0013E2  6E3F               	movwf	(pinMode@pin+1)^0,c
   679   0013E4  0E04               	movlw	4
   680   0013E6  6E3E               	movwf	pinMode@pin^0,c
   681   0013E8  0E00               	movlw	0
   682   0013EA  6E41               	movwf	(pinMode@type+1)^0,c
   683   0013EC  0E00               	movlw	0
   684   0013EE  6E40               	movwf	pinMode@type^0,c
   685   0013F0  EC40  F004         	call	_pinMode	;wreg free
   686                           
   687                           ;ssd.c: 106: pinMode(PIN_A5, 0);
   688   0013F4  0E00               	movlw	0
   689   0013F6  6E3F               	movwf	(pinMode@pin+1)^0,c
   690   0013F8  0E05               	movlw	5
   691   0013FA  6E3E               	movwf	pinMode@pin^0,c
   692   0013FC  0E00               	movlw	0
   693   0013FE  6E41               	movwf	(pinMode@type+1)^0,c
   694   001400  0E00               	movlw	0
   695   001402  6E40               	movwf	pinMode@type^0,c
   696   001404  EC40  F004         	call	_pinMode	;wreg free
   697   001408                     
   698                           ;ssd.c: 109: TRISD = 0x00;
   699   001408  0E00               	movlw	0
   700   00140A  6E95               	movwf	149,c	;volatile
   701   00140C  0012               	return		;funcret
   702   00140E                     __end_of_ssdInit:
   703                           	callstack 0
   704                           
   705 ;; *************** function _pinMode *****************
   706 ;; Defined at:
   707 ;;		line 54 in file "io.c"
   708 ;; Parameters:    Size  Location     Type
   709 ;;  pin             2   15[COMRAM] int 
   710 ;;  type            2   17[COMRAM] int 
   711 ;; Auto vars:     Size  Location     Type
   712 ;;		None
   713 ;; Return value:  Size  Location     Type
   714 ;;                  1    wreg      void 
   715 ;; Registers used:
   716 ;;		wreg, status,2, status,0
   717 ;; Tracked objects:
   718 ;;		On entry : 0/0
   719 ;;		On exit  : 0/0
   720 ;;		Unchanged: 0/0
   721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   722 ;;      Params:         4       0       0       0       0       0       0
   723 ;;      Locals:         0       0       0       0       0       0       0
   724 ;;      Temps:          2       0       0       0       0       0       0
   725 ;;      Totals:         6       0       0       0       0       0       0
   726 ;;Total ram usage:        6 bytes
   727 ;; Hardware stack levels used: 1
   728 ;; Hardware stack levels required when called: 3
   729 ;; This function calls:
   730 ;;		Nothing
   731 ;; This function is called by:
   732 ;;		_ssdInit
   733 ;;		_adcInit
   734 ;;		_lcdInit
   735 ;;		_i2cInit
   736 ;;		_read_SCL
   737 ;;		_read_SDA
   738 ;;		_clear_SCL
   739 ;;		_clear_SDA
   740 ;; This function uses a non-reentrant model
   741 ;;
   742                           
   743                           	psect	text3
   744   000880                     __ptext3:
   745                           	callstack 0
   746   000880                     _pinMode:
   747                           	callstack 26
   748   000880                     
   749                           ;io.c: 56: if(pin <8){
   750   000880  BE3F               	btfsc	(pinMode@pin+1)^0,7,c
   751   000882  EF4E  F004         	goto	u2620
   752   000886  503F               	movf	(pinMode@pin+1)^0,w,c
   753   000888  E107               	bnz	u2621
   754   00088A  0E08               	movlw	8
   755   00088C  5C3E               	subwf	pinMode@pin^0,w,c
   756   00088E  B0D8               	btfsc	status,0,c
   757   000890  EF4C  F004         	goto	u2621
   758   000894  EF4E  F004         	goto	u2620
   759   000898                     u2621:
   760   000898  EF78  F004         	goto	l2879
   761   00089C                     u2620:
   762   00089C                     
   763                           ;io.c: 57: if (type){ ((TRISA) |= (1<<(pin)));}
   764   00089C  5040               	movf	pinMode@type^0,w,c
   765   00089E  1041               	iorwf	(pinMode@type+1)^0,w,c
   766   0008A0  B4D8               	btfsc	status,2,c
   767   0008A2  EF55  F004         	goto	u2631
   768   0008A6  EF57  F004         	goto	u2630
   769   0008AA                     u2631:
   770   0008AA  EF67  F004         	goto	l2877
   771   0008AE                     u2630:
   772   0008AE  C03E  F042         	movff	pinMode@pin,??_pinMode
   773   0008B2  0E01               	movlw	1
   774   0008B4  6E43               	movwf	(??_pinMode+1)^0,c
   775   0008B6  2A42               	incf	??_pinMode^0,f,c
   776   0008B8  EF60  F004         	goto	u2644
   777   0008BC                     u2645:
   778   0008BC  90D8               	bcf	status,0,c
   779   0008BE  3643               	rlcf	(??_pinMode+1)^0,f,c
   780   0008C0                     u2644:
   781   0008C0  2E42               	decfsz	??_pinMode^0,f,c
   782   0008C2  EF5E  F004         	goto	u2645
   783   0008C6  5043               	movf	(??_pinMode+1)^0,w,c
   784   0008C8  1292               	iorwf	146,f,c	;volatile
   785   0008CA  EF66  F005         	goto	l245
   786   0008CE                     l2877:
   787                           
   788                           ;io.c: 58: else{ ((TRISA) &= ~(1<<(pin)));}
   789   0008CE  C03E  F042         	movff	pinMode@pin,??_pinMode
   790   0008D2  0E01               	movlw	1
   791   0008D4  6E43               	movwf	(??_pinMode+1)^0,c
   792   0008D6  2A42               	incf	??_pinMode^0,f,c
   793   0008D8  EF70  F004         	goto	u2654
   794   0008DC                     u2655:
   795   0008DC  90D8               	bcf	status,0,c
   796   0008DE  3643               	rlcf	(??_pinMode+1)^0,f,c
   797   0008E0                     u2654:
   798   0008E0  2E42               	decfsz	??_pinMode^0,f,c
   799   0008E2  EF6E  F004         	goto	u2655
   800   0008E6  5043               	movf	(??_pinMode+1)^0,w,c
   801   0008E8  0AFF               	xorlw	255
   802   0008EA  1692               	andwf	146,f,c	;volatile
   803   0008EC  EF66  F005         	goto	l245
   804   0008F0                     l2879:
   805   0008F0  BE3F               	btfsc	(pinMode@pin+1)^0,7,c
   806   0008F2  EF86  F004         	goto	u2660
   807   0008F6  503F               	movf	(pinMode@pin+1)^0,w,c
   808   0008F8  E107               	bnz	u2661
   809   0008FA  0E10               	movlw	16
   810   0008FC  5C3E               	subwf	pinMode@pin^0,w,c
   811   0008FE  B0D8               	btfsc	status,0,c
   812   000900  EF84  F004         	goto	u2661
   813   000904  EF86  F004         	goto	u2660
   814   000908                     u2661:
   815   000908  EFB4  F004         	goto	l2887
   816   00090C                     u2660:
   817   00090C                     
   818                           ;io.c: 60: if (type){ ((TRISB) |= (1<<(pin-8)));}
   819   00090C  5040               	movf	pinMode@type^0,w,c
   820   00090E  1041               	iorwf	(pinMode@type+1)^0,w,c
   821   000910  B4D8               	btfsc	status,2,c
   822   000912  EF8D  F004         	goto	u2671
   823   000916  EF8F  F004         	goto	u2670
   824   00091A                     u2671:
   825   00091A  EFA1  F004         	goto	l2885
   826   00091E                     u2670:
   827   00091E  C03E  F042         	movff	pinMode@pin,??_pinMode
   828   000922  0EF8               	movlw	-8
   829   000924  2642               	addwf	??_pinMode^0,f,c
   830   000926  0E01               	movlw	1
   831   000928  6E43               	movwf	(??_pinMode+1)^0,c
   832   00092A  2A42               	incf	??_pinMode^0,f,c
   833   00092C  EF9A  F004         	goto	u2684
   834   000930                     u2685:
   835   000930  90D8               	bcf	status,0,c
   836   000932  3643               	rlcf	(??_pinMode+1)^0,f,c
   837   000934                     u2684:
   838   000934  2E42               	decfsz	??_pinMode^0,f,c
   839   000936  EF98  F004         	goto	u2685
   840   00093A  5043               	movf	(??_pinMode+1)^0,w,c
   841   00093C  1293               	iorwf	147,f,c	;volatile
   842   00093E  EF66  F005         	goto	l245
   843   000942                     l2885:
   844                           
   845                           ;io.c: 61: else{ ((TRISB) &= ~(1<<(pin-8)));}
   846   000942  C03E  F042         	movff	pinMode@pin,??_pinMode
   847   000946  0EF8               	movlw	-8
   848   000948  2642               	addwf	??_pinMode^0,f,c
   849   00094A  0E01               	movlw	1
   850   00094C  6E43               	movwf	(??_pinMode+1)^0,c
   851   00094E  2A42               	incf	??_pinMode^0,f,c
   852   000950  EFAC  F004         	goto	u2694
   853   000954                     u2695:
   854   000954  90D8               	bcf	status,0,c
   855   000956  3643               	rlcf	(??_pinMode+1)^0,f,c
   856   000958                     u2694:
   857   000958  2E42               	decfsz	??_pinMode^0,f,c
   858   00095A  EFAA  F004         	goto	u2695
   859   00095E  5043               	movf	(??_pinMode+1)^0,w,c
   860   000960  0AFF               	xorlw	255
   861   000962  1693               	andwf	147,f,c	;volatile
   862   000964  EF66  F005         	goto	l245
   863   000968                     l2887:
   864   000968  BE3F               	btfsc	(pinMode@pin+1)^0,7,c
   865   00096A  EFC2  F004         	goto	u2700
   866   00096E  503F               	movf	(pinMode@pin+1)^0,w,c
   867   000970  E107               	bnz	u2701
   868   000972  0E18               	movlw	24
   869   000974  5C3E               	subwf	pinMode@pin^0,w,c
   870   000976  B0D8               	btfsc	status,0,c
   871   000978  EFC0  F004         	goto	u2701
   872   00097C  EFC2  F004         	goto	u2700
   873   000980                     u2701:
   874   000980  EFF0  F004         	goto	l2895
   875   000984                     u2700:
   876   000984                     
   877                           ;io.c: 63: if (type){ ((TRISC) |= (1<<(pin-16)));}
   878   000984  5040               	movf	pinMode@type^0,w,c
   879   000986  1041               	iorwf	(pinMode@type+1)^0,w,c
   880   000988  B4D8               	btfsc	status,2,c
   881   00098A  EFC9  F004         	goto	u2711
   882   00098E  EFCB  F004         	goto	u2710
   883   000992                     u2711:
   884   000992  EFDD  F004         	goto	l2893
   885   000996                     u2710:
   886   000996  C03E  F042         	movff	pinMode@pin,??_pinMode
   887   00099A  0EF0               	movlw	-16
   888   00099C  2642               	addwf	??_pinMode^0,f,c
   889   00099E  0E01               	movlw	1
   890   0009A0  6E43               	movwf	(??_pinMode+1)^0,c
   891   0009A2  2A42               	incf	??_pinMode^0,f,c
   892   0009A4  EFD6  F004         	goto	u2724
   893   0009A8                     u2725:
   894   0009A8  90D8               	bcf	status,0,c
   895   0009AA  3643               	rlcf	(??_pinMode+1)^0,f,c
   896   0009AC                     u2724:
   897   0009AC  2E42               	decfsz	??_pinMode^0,f,c
   898   0009AE  EFD4  F004         	goto	u2725
   899   0009B2  5043               	movf	(??_pinMode+1)^0,w,c
   900   0009B4  1294               	iorwf	148,f,c	;volatile
   901   0009B6  EF66  F005         	goto	l245
   902   0009BA                     l2893:
   903                           
   904                           ;io.c: 64: else{ ((TRISC) &= ~(1<<(pin-16)));}
   905   0009BA  C03E  F042         	movff	pinMode@pin,??_pinMode
   906   0009BE  0EF0               	movlw	-16
   907   0009C0  2642               	addwf	??_pinMode^0,f,c
   908   0009C2  0E01               	movlw	1
   909   0009C4  6E43               	movwf	(??_pinMode+1)^0,c
   910   0009C6  2A42               	incf	??_pinMode^0,f,c
   911   0009C8  EFE8  F004         	goto	u2734
   912   0009CC                     u2735:
   913   0009CC  90D8               	bcf	status,0,c
   914   0009CE  3643               	rlcf	(??_pinMode+1)^0,f,c
   915   0009D0                     u2734:
   916   0009D0  2E42               	decfsz	??_pinMode^0,f,c
   917   0009D2  EFE6  F004         	goto	u2735
   918   0009D6  5043               	movf	(??_pinMode+1)^0,w,c
   919   0009D8  0AFF               	xorlw	255
   920   0009DA  1694               	andwf	148,f,c	;volatile
   921   0009DC  EF66  F005         	goto	l245
   922   0009E0                     l2895:
   923   0009E0  BE3F               	btfsc	(pinMode@pin+1)^0,7,c
   924   0009E2  EFFE  F004         	goto	u2740
   925   0009E6  503F               	movf	(pinMode@pin+1)^0,w,c
   926   0009E8  E107               	bnz	u2741
   927   0009EA  0E20               	movlw	32
   928   0009EC  5C3E               	subwf	pinMode@pin^0,w,c
   929   0009EE  B0D8               	btfsc	status,0,c
   930   0009F0  EFFC  F004         	goto	u2741
   931   0009F4  EFFE  F004         	goto	u2740
   932   0009F8                     u2741:
   933   0009F8  EF2C  F005         	goto	l2903
   934   0009FC                     u2740:
   935   0009FC                     
   936                           ;io.c: 66: if (type){ ((TRISD) |= (1<<(pin-24)));}
   937   0009FC  5040               	movf	pinMode@type^0,w,c
   938   0009FE  1041               	iorwf	(pinMode@type+1)^0,w,c
   939   000A00  B4D8               	btfsc	status,2,c
   940   000A02  EF05  F005         	goto	u2751
   941   000A06  EF07  F005         	goto	u2750
   942   000A0A                     u2751:
   943   000A0A  EF19  F005         	goto	l2901
   944   000A0E                     u2750:
   945   000A0E  C03E  F042         	movff	pinMode@pin,??_pinMode
   946   000A12  0EE8               	movlw	-24
   947   000A14  2642               	addwf	??_pinMode^0,f,c
   948   000A16  0E01               	movlw	1
   949   000A18  6E43               	movwf	(??_pinMode+1)^0,c
   950   000A1A  2A42               	incf	??_pinMode^0,f,c
   951   000A1C  EF12  F005         	goto	u2764
   952   000A20                     u2765:
   953   000A20  90D8               	bcf	status,0,c
   954   000A22  3643               	rlcf	(??_pinMode+1)^0,f,c
   955   000A24                     u2764:
   956   000A24  2E42               	decfsz	??_pinMode^0,f,c
   957   000A26  EF10  F005         	goto	u2765
   958   000A2A  5043               	movf	(??_pinMode+1)^0,w,c
   959   000A2C  1295               	iorwf	149,f,c	;volatile
   960   000A2E  EF66  F005         	goto	l245
   961   000A32                     l2901:
   962                           
   963                           ;io.c: 67: else{ ((TRISD) &= ~(1<<(pin-24)));}
   964   000A32  C03E  F042         	movff	pinMode@pin,??_pinMode
   965   000A36  0EE8               	movlw	-24
   966   000A38  2642               	addwf	??_pinMode^0,f,c
   967   000A3A  0E01               	movlw	1
   968   000A3C  6E43               	movwf	(??_pinMode+1)^0,c
   969   000A3E  2A42               	incf	??_pinMode^0,f,c
   970   000A40  EF24  F005         	goto	u2774
   971   000A44                     u2775:
   972   000A44  90D8               	bcf	status,0,c
   973   000A46  3643               	rlcf	(??_pinMode+1)^0,f,c
   974   000A48                     u2774:
   975   000A48  2E42               	decfsz	??_pinMode^0,f,c
   976   000A4A  EF22  F005         	goto	u2775
   977   000A4E  5043               	movf	(??_pinMode+1)^0,w,c
   978   000A50  0AFF               	xorlw	255
   979   000A52  1695               	andwf	149,f,c	;volatile
   980   000A54  EF66  F005         	goto	l245
   981   000A58                     l2903:
   982   000A58  BE3F               	btfsc	(pinMode@pin+1)^0,7,c
   983   000A5A  EF3A  F005         	goto	u2780
   984   000A5E  503F               	movf	(pinMode@pin+1)^0,w,c
   985   000A60  E107               	bnz	u2781
   986   000A62  0E28               	movlw	40
   987   000A64  5C3E               	subwf	pinMode@pin^0,w,c
   988   000A66  B0D8               	btfsc	status,0,c
   989   000A68  EF38  F005         	goto	u2781
   990   000A6C  EF3A  F005         	goto	u2780
   991   000A70                     u2781:
   992   000A70  EF66  F005         	goto	l245
   993   000A74                     u2780:
   994   000A74                     
   995                           ;io.c: 69: if (type){ ((TRISE) |= (1<<(pin-32)));}
   996   000A74  5040               	movf	pinMode@type^0,w,c
   997   000A76  1041               	iorwf	(pinMode@type+1)^0,w,c
   998   000A78  B4D8               	btfsc	status,2,c
   999   000A7A  EF41  F005         	goto	u2791
  1000   000A7E  EF43  F005         	goto	u2790
  1001   000A82                     u2791:
  1002   000A82  EF55  F005         	goto	l2909
  1003   000A86                     u2790:
  1004   000A86  C03E  F042         	movff	pinMode@pin,??_pinMode
  1005   000A8A  0EE0               	movlw	-32
  1006   000A8C  2642               	addwf	??_pinMode^0,f,c
  1007   000A8E  0E01               	movlw	1
  1008   000A90  6E43               	movwf	(??_pinMode+1)^0,c
  1009   000A92  2A42               	incf	??_pinMode^0,f,c
  1010   000A94  EF4E  F005         	goto	u2804
  1011   000A98                     u2805:
  1012   000A98  90D8               	bcf	status,0,c
  1013   000A9A  3643               	rlcf	(??_pinMode+1)^0,f,c
  1014   000A9C                     u2804:
  1015   000A9C  2E42               	decfsz	??_pinMode^0,f,c
  1016   000A9E  EF4C  F005         	goto	u2805
  1017   000AA2  5043               	movf	(??_pinMode+1)^0,w,c
  1018   000AA4  1296               	iorwf	150,f,c	;volatile
  1019   000AA6  EF66  F005         	goto	l245
  1020   000AAA                     l2909:
  1021                           
  1022                           ;io.c: 70: else{ ((TRISE) &= ~(1<<(pin-32)));}
  1023   000AAA  C03E  F042         	movff	pinMode@pin,??_pinMode
  1024   000AAE  0EE0               	movlw	-32
  1025   000AB0  2642               	addwf	??_pinMode^0,f,c
  1026   000AB2  0E01               	movlw	1
  1027   000AB4  6E43               	movwf	(??_pinMode+1)^0,c
  1028   000AB6  2A42               	incf	??_pinMode^0,f,c
  1029   000AB8  EF60  F005         	goto	u2814
  1030   000ABC                     u2815:
  1031   000ABC  90D8               	bcf	status,0,c
  1032   000ABE  3643               	rlcf	(??_pinMode+1)^0,f,c
  1033   000AC0                     u2814:
  1034   000AC0  2E42               	decfsz	??_pinMode^0,f,c
  1035   000AC2  EF5E  F005         	goto	u2815
  1036   000AC6  5043               	movf	(??_pinMode+1)^0,w,c
  1037   000AC8  0AFF               	xorlw	255
  1038   000ACA  1696               	andwf	150,f,c	;volatile
  1039   000ACC                     l245:
  1040   000ACC  0012               	return		;funcret
  1041   000ACE                     __end_of_pinMode:
  1042                           	callstack 0
  1043                           
  1044 ;; *************** function _kernelLoop *****************
  1045 ;; Defined at:
  1046 ;;		line 25 in file "kernel.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;		None
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;  tempProc        2   38[COMRAM] PTR struct .
  1051 ;;		 -> main@countTime_proc(8), main@SSDUpdate_proc(8), main@init_PD(8), 
  1052 ;;  p               1   41[COMRAM] unsigned char 
  1053 ;;  next            1   40[COMRAM] unsigned char 
  1054 ;; Return value:  Size  Location     Type
  1055 ;;                  1    wreg      void 
  1056 ;; Registers used:
  1057 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  1058 ;; Tracked objects:
  1059 ;;		On entry : 0/0
  1060 ;;		On exit  : 0/0
  1061 ;;		Unchanged: 0/0
  1062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1063 ;;      Params:         0       0       0       0       0       0       0
  1064 ;;      Locals:         4       0       0       0       0       0       0
  1065 ;;      Temps:          5       0       0       0       0       0       0
  1066 ;;      Totals:         9       0       0       0       0       0       0
  1067 ;;Total ram usage:        9 bytes
  1068 ;; Hardware stack levels used: 1
  1069 ;; Hardware stack levels required when called: 6
  1070 ;; This function calls:
  1071 ;;		___awmod
  1072 ;;		_countTime
  1073 ;;		_initPORTAD
  1074 ;;		_kernelAddProc
  1075 ;;		_updateSSD
  1076 ;; This function is called by:
  1077 ;;		_main
  1078 ;; This function uses a non-reentrant model
  1079 ;;
  1080                           
  1081                           	psect	text4
  1082   000612                     __ptext4:
  1083                           	callstack 0
  1084   000612                     _kernelLoop:
  1085                           	callstack 24
  1086   000612                     l81:
  1087   000612                     
  1088                           ;kernel.c: 30: if (start != end) {
  1089   000612  5024               	movf	_end^0,w,c
  1090   000614  1825               	xorwf	_start^0,w,c
  1091   000616  B4D8               	btfsc	status,2,c
  1092   000618  EF10  F003         	goto	u2941
  1093   00061C  EF12  F003         	goto	u2940
  1094   000620                     u2941:
  1095   000620  EF09  F003         	goto	l81
  1096   000624                     u2940:
  1097   000624                     
  1098                           ;kernel.c: 33: next = start;
  1099   000624  C025  F057         	movff	_start,kernelLoop@next
  1100                           
  1101                           ;kernel.c: 39: for (p = start; p != end; p = (p + 1) % 10) {
  1102   000628  C025  F058         	movff	_start,kernelLoop@p
  1103   00062C  EFAA  F003         	goto	l2997
  1104   000630                     l2985:
  1105                           
  1106                           ;kernel.c: 50: if((pool[p]->start == pool[next]->start) && (pool[p]->prio > pool[next]->
      +                          prio))next = p;
  1107   000630  5057               	movf	kernelLoop@next^0,w,c
  1108   000632  0D02               	mullw	2
  1109   000634  0E01               	movlw	low _pool
  1110   000636  24F3               	addwf	243,w,c
  1111   000638  6ED9               	movwf	fsr2l,c
  1112   00063A  0E00               	movlw	high _pool
  1113   00063C  20F4               	addwfc	prodh,w,c
  1114   00063E  6EDA               	movwf	fsr2h,c
  1115   000640  EE10 F004          	lfsr	1,4
  1116   000644  50DE               	movf	postinc2,w,c
  1117   000646  26E1               	addwf	fsr1l,f,c
  1118   000648  50DD               	movf	postdec2,w,c
  1119   00064A  22E2               	addwfc	fsr1h,f,c
  1120   00064C  5058               	movf	kernelLoop@p^0,w,c
  1121   00064E  0D02               	mullw	2
  1122   000650  0E01               	movlw	low _pool
  1123   000652  24F3               	addwf	243,w,c
  1124   000654  6ED9               	movwf	fsr2l,c
  1125   000656  0E00               	movlw	high _pool
  1126   000658  20F4               	addwfc	prodh,w,c
  1127   00065A  6EDA               	movwf	fsr2h,c
  1128   00065C  EE00 F004          	lfsr	0,4
  1129   000660  50DE               	movf	postinc2,w,c
  1130   000662  26E9               	addwf	fsr0l,f,c
  1131   000664  50DD               	movf	postdec2,w,c
  1132   000666  22EA               	addwfc	fsr0h,f,c
  1133   000668  50E6               	movf	postinc1,w,c
  1134   00066A  18EE               	xorwf	postinc0,w,c
  1135   00066C  E107               	bnz	u2951
  1136   00066E  50E6               	movf	postinc1,w,c
  1137   000670  18EE               	xorwf	postinc0,w,c
  1138   000672  A4D8               	btfss	status,2,c
  1139   000674  EF3E  F003         	goto	u2951
  1140   000678  EF40  F003         	goto	u2950
  1141   00067C                     u2951:
  1142   00067C  EF6F  F003         	goto	l2991
  1143   000680                     u2950:
  1144   000680  5058               	movf	kernelLoop@p^0,w,c
  1145   000682  0D02               	mullw	2
  1146   000684  0E01               	movlw	low _pool
  1147   000686  24F3               	addwf	243,w,c
  1148   000688  6ED9               	movwf	fsr2l,c
  1149   00068A  0E00               	movlw	high _pool
  1150   00068C  20F4               	addwfc	prodh,w,c
  1151   00068E  6EDA               	movwf	fsr2h,c
  1152   000690  EE10 F006          	lfsr	1,6
  1153   000694  50DE               	movf	postinc2,w,c
  1154   000696  26E1               	addwf	fsr1l,f,c
  1155   000698  50DD               	movf	postdec2,w,c
  1156   00069A  22E2               	addwfc	fsr1h,f,c
  1157   00069C  5057               	movf	kernelLoop@next^0,w,c
  1158   00069E  0D02               	mullw	2
  1159   0006A0  0E01               	movlw	low _pool
  1160   0006A2  24F3               	addwf	243,w,c
  1161   0006A4  6ED9               	movwf	fsr2l,c
  1162   0006A6  0E00               	movlw	high _pool
  1163   0006A8  20F4               	addwfc	prodh,w,c
  1164   0006AA  6EDA               	movwf	fsr2h,c
  1165   0006AC  EE00 F006          	lfsr	0,6
  1166   0006B0  50DE               	movf	postinc2,w,c
  1167   0006B2  26E9               	addwf	fsr0l,f,c
  1168   0006B4  50DD               	movf	postdec2,w,c
  1169   0006B6  22EA               	addwfc	fsr0h,f,c
  1170   0006B8  50E6               	movf	postinc1,w,c
  1171   0006BA  5CEE               	subwf	postinc0,w,c
  1172   0006BC  50EE               	movf	postinc0,w,c
  1173   0006BE  0A80               	xorlw	128
  1174   0006C0  6E54               	movwf	(??_kernelLoop+4)^0,c
  1175   0006C2  50E6               	movf	postinc1,w,c
  1176   0006C4  0A80               	xorlw	128
  1177   0006C6  5854               	subwfb	(??_kernelLoop+4)^0,w,c
  1178   0006C8  B0D8               	btfsc	status,0,c
  1179   0006CA  EF69  F003         	goto	u2961
  1180   0006CE  EF6B  F003         	goto	u2960
  1181   0006D2                     u2961:
  1182   0006D2  EF6F  F003         	goto	l2991
  1183   0006D6                     u2960:
  1184   0006D6                     l2989:
  1185   0006D6  C058  F057         	movff	kernelLoop@p,kernelLoop@next
  1186   0006DA  EF9C  F003         	goto	l2995
  1187   0006DE                     l2991:
  1188                           
  1189                           ;kernel.c: 51: else if(pool[p]->start < pool[next]->start)next = p;
  1190   0006DE  5057               	movf	kernelLoop@next^0,w,c
  1191   0006E0  0D02               	mullw	2
  1192   0006E2  0E01               	movlw	low _pool
  1193   0006E4  24F3               	addwf	243,w,c
  1194   0006E6  6ED9               	movwf	fsr2l,c
  1195   0006E8  0E00               	movlw	high _pool
  1196   0006EA  20F4               	addwfc	prodh,w,c
  1197   0006EC  6EDA               	movwf	fsr2h,c
  1198   0006EE  EE10 F004          	lfsr	1,4
  1199   0006F2  50DE               	movf	postinc2,w,c
  1200   0006F4  26E1               	addwf	fsr1l,f,c
  1201   0006F6  50DD               	movf	postdec2,w,c
  1202   0006F8  22E2               	addwfc	fsr1h,f,c
  1203   0006FA  5058               	movf	kernelLoop@p^0,w,c
  1204   0006FC  0D02               	mullw	2
  1205   0006FE  0E01               	movlw	low _pool
  1206   000700  24F3               	addwf	243,w,c
  1207   000702  6ED9               	movwf	fsr2l,c
  1208   000704  0E00               	movlw	high _pool
  1209   000706  20F4               	addwfc	prodh,w,c
  1210   000708  6EDA               	movwf	fsr2h,c
  1211   00070A  EE00 F004          	lfsr	0,4
  1212   00070E  50DE               	movf	postinc2,w,c
  1213   000710  26E9               	addwf	fsr0l,f,c
  1214   000712  50DD               	movf	postdec2,w,c
  1215   000714  22EA               	addwfc	fsr0h,f,c
  1216   000716  50E6               	movf	postinc1,w,c
  1217   000718  5CEE               	subwf	postinc0,w,c
  1218   00071A  50EE               	movf	postinc0,w,c
  1219   00071C  0A80               	xorlw	128
  1220   00071E  6E54               	movwf	(??_kernelLoop+4)^0,c
  1221   000720  50E6               	movf	postinc1,w,c
  1222   000722  0A80               	xorlw	128
  1223   000724  5854               	subwfb	(??_kernelLoop+4)^0,w,c
  1224   000726  B0D8               	btfsc	status,0,c
  1225   000728  EF98  F003         	goto	u2971
  1226   00072C  EF9A  F003         	goto	u2970
  1227   000730                     u2971:
  1228   000730  EF9C  F003         	goto	l2995
  1229   000734                     u2970:
  1230   000734  EF6B  F003         	goto	l2989
  1231   000738                     l2995:
  1232   000738  0E01               	movlw	1
  1233   00073A  2458               	addwf	kernelLoop@p^0,w,c
  1234   00073C  6E46               	movwf	___awmod@dividend^0,c
  1235   00073E  6A47               	clrf	(___awmod@dividend+1)^0,c
  1236   000740  0E00               	movlw	0
  1237   000742  2247               	addwfc	(___awmod@dividend+1)^0,f,c
  1238   000744  0E00               	movlw	0
  1239   000746  6E49               	movwf	(___awmod@divisor+1)^0,c
  1240   000748  0E0A               	movlw	10
  1241   00074A  6E48               	movwf	___awmod@divisor^0,c
  1242   00074C  ECFC  F007         	call	___awmod	;wreg free
  1243   000750  5046               	movf	?___awmod^0,w,c
  1244   000752  6E58               	movwf	kernelLoop@p^0,c
  1245   000754                     l2997:
  1246   000754  5024               	movf	_end^0,w,c
  1247   000756  1858               	xorwf	kernelLoop@p^0,w,c
  1248   000758  A4D8               	btfss	status,2,c
  1249   00075A  EFB1  F003         	goto	u2981
  1250   00075E  EFB3  F003         	goto	u2980
  1251   000762                     u2981:
  1252   000762  EF18  F003         	goto	l2985
  1253   000766                     u2980:
  1254   000766                     
  1255                           ;kernel.c: 52: };kernel.c: 55: tempProc = pool[next];
  1256   000766  5057               	movf	kernelLoop@next^0,w,c
  1257   000768  0D02               	mullw	2
  1258   00076A  0E01               	movlw	low _pool
  1259   00076C  24F3               	addwf	243,w,c
  1260   00076E  6ED9               	movwf	fsr2l,c
  1261   000770  0E00               	movlw	high _pool
  1262   000772  20F4               	addwfc	prodh,w,c
  1263   000774  6EDA               	movwf	fsr2h,c
  1264   000776  CFDE F055          	movff	postinc2,kernelLoop@tempProc
  1265   00077A  CFDD F056          	movff	postdec2,kernelLoop@tempProc+1
  1266   00077E                     
  1267                           ;kernel.c: 56: pool[next] = pool[start];
  1268   00077E  5025               	movf	_start^0,w,c
  1269   000780  0D02               	mullw	2
  1270   000782  0E01               	movlw	low _pool
  1271   000784  24F3               	addwf	243,w,c
  1272   000786  6ED9               	movwf	fsr2l,c
  1273   000788  0E00               	movlw	high _pool
  1274   00078A  20F4               	addwfc	prodh,w,c
  1275   00078C  6EDA               	movwf	fsr2h,c
  1276   00078E  5057               	movf	kernelLoop@next^0,w,c
  1277   000790  0D02               	mullw	2
  1278   000792  0E01               	movlw	low _pool
  1279   000794  24F3               	addwf	243,w,c
  1280   000796  6EE1               	movwf	fsr1l,c
  1281   000798  0E00               	movlw	high _pool
  1282   00079A  20F4               	addwfc	prodh,w,c
  1283   00079C  6EE2               	movwf	fsr1h,c
  1284   00079E  CFDE FFE6          	movff	postinc2,postinc1
  1285   0007A2  CFDD FFE5          	movff	postdec2,postdec1
  1286   0007A6                     
  1287                           ;kernel.c: 57: pool[start] = tempProc;
  1288   0007A6  5025               	movf	_start^0,w,c
  1289   0007A8  0D02               	mullw	2
  1290   0007AA  0E01               	movlw	low _pool
  1291   0007AC  24F3               	addwf	243,w,c
  1292   0007AE  6ED9               	movwf	fsr2l,c
  1293   0007B0  0E00               	movlw	high _pool
  1294   0007B2  20F4               	addwfc	prodh,w,c
  1295   0007B4  6EDA               	movwf	fsr2h,c
  1296   0007B6  C055  FFDE         	movff	kernelLoop@tempProc,postinc2
  1297   0007BA  C056  FFDD         	movff	kernelLoop@tempProc+1,postdec2
  1298   0007BE                     l3005:
  1299   0007BE  5025               	movf	_start^0,w,c
  1300   0007C0  0D02               	mullw	2
  1301   0007C2  0E01               	movlw	low _pool
  1302   0007C4  24F3               	addwf	243,w,c
  1303   0007C6  6ED9               	movwf	fsr2l,c
  1304   0007C8  0E00               	movlw	high _pool
  1305   0007CA  20F4               	addwfc	prodh,w,c
  1306   0007CC  6EDA               	movwf	fsr2h,c
  1307   0007CE  EE10 F004          	lfsr	1,4
  1308   0007D2  50DE               	movf	postinc2,w,c
  1309   0007D4  26E1               	addwf	fsr1l,f,c
  1310   0007D6  50DD               	movf	postdec2,w,c
  1311   0007D8  22E2               	addwfc	fsr1h,f,c
  1312   0007DA  0E01               	movlw	1
  1313   0007DC  BEE3               	btfsc	plusw1,7,c
  1314   0007DE  EFFC  F003         	goto	u2990
  1315   0007E2  0E01               	movlw	1
  1316   0007E4  50E3               	movf	plusw1,w,c
  1317   0007E6  E106               	bnz	u2991
  1318   0007E8  04E6               	decf	postinc1,w,c
  1319   0007EA  B0D8               	btfsc	status,0,c
  1320   0007EC  EFFA  F003         	goto	u2991
  1321   0007F0  EFFC  F003         	goto	u2990
  1322   0007F4                     u2991:
  1323   0007F4  EFDF  F003         	goto	l3005
  1324   0007F8                     u2990:
  1325   0007F8                     
  1326                           ;kernel.c: 62: };kernel.c: 63: if (pool[start]->function() == 2) {
  1327   0007F8  5025               	movf	_start^0,w,c
  1328   0007FA  0D02               	mullw	2
  1329   0007FC  0E01               	movlw	low _pool
  1330   0007FE  24F3               	addwf	243,w,c
  1331   000800  6ED9               	movwf	fsr2l,c
  1332   000802  0E00               	movlw	high _pool
  1333   000804  20F4               	addwfc	prodh,w,c
  1334   000806  6EDA               	movwf	fsr2h,c
  1335   000808  CFDE F050          	movff	postinc2,??_kernelLoop
  1336   00080C  CFDD F051          	movff	postdec2,??_kernelLoop+1
  1337   000810  C050  FFD9         	movff	??_kernelLoop,fsr2l
  1338   000814  C051  FFDA         	movff	??_kernelLoop+1,fsr2h
  1339   000818  D802               	call	u3008
  1340   00081A  EF19  F004         	goto	u3009
  1341   00081E                     u3008:
  1342   00081E  0005               	push	
  1343   000820  6EFA               	movwf	pclath,c
  1344   000822  50DE               	movf	postinc2,w,c
  1345   000824  6EFD               	movwf	tosl,c
  1346   000826  50DE               	movf	postinc2,w,c
  1347   000828  6EFE               	movwf	tosh,c
  1348   00082A  50F8               	movf	tblptru,w,c
  1349   00082C  6EFF               	movwf	tosu,c
  1350   00082E  50FA               	movf	pclath,w,c
  1351   000830  0012               	return		;indir
  1352   000832                     u3009:
  1353   000832  0A02               	xorlw	2
  1354   000834  A4D8               	btfss	status,2,c
  1355   000836  EF1F  F004         	goto	u3011
  1356   00083A  EF21  F004         	goto	u3010
  1357   00083E                     u3011:
  1358   00083E  EF2F  F004         	goto	l3011
  1359   000842                     u3010:
  1360   000842                     
  1361                           ;kernel.c: 64: kernelAddProc(pool[start]);
  1362   000842  5025               	movf	_start^0,w,c
  1363   000844  0D02               	mullw	2
  1364   000846  0E01               	movlw	low _pool
  1365   000848  24F3               	addwf	243,w,c
  1366   00084A  6ED9               	movwf	fsr2l,c
  1367   00084C  0E00               	movlw	high _pool
  1368   00084E  20F4               	addwfc	prodh,w,c
  1369   000850  6EDA               	movwf	fsr2h,c
  1370   000852  CFDE F04C          	movff	postinc2,kernelAddProc@newProc
  1371   000856  CFDD F04D          	movff	postdec2,kernelAddProc@newProc+1
  1372   00085A  ECAC  F008         	call	_kernelAddProc	;wreg free
  1373   00085E                     l3011:
  1374                           
  1375                           ;kernel.c: 65: };kernel.c: 66: start = (start + 1) % 10;
  1376   00085E  0E01               	movlw	1
  1377   000860  2425               	addwf	_start^0,w,c
  1378   000862  6E46               	movwf	___awmod@dividend^0,c
  1379   000864  6A47               	clrf	(___awmod@dividend+1)^0,c
  1380   000866  0E00               	movlw	0
  1381   000868  2247               	addwfc	(___awmod@dividend+1)^0,f,c
  1382   00086A  0E00               	movlw	0
  1383   00086C  6E49               	movwf	(___awmod@divisor+1)^0,c
  1384   00086E  0E0A               	movlw	10
  1385   000870  6E48               	movwf	___awmod@divisor^0,c
  1386   000872  ECFC  F007         	call	___awmod	;wreg free
  1387   000876  5046               	movf	?___awmod^0,w,c
  1388   000878  6E25               	movwf	_start^0,c
  1389   00087A  EF09  F003         	goto	l81
  1390   00087E  0012               	return		;funcret
  1391   000880                     __end_of_kernelLoop:
  1392                           	callstack 0
  1393                           
  1394 ;; *************** function _countTime *****************
  1395 ;; Defined at:
  1396 ;;		line 54 in file "main.c"
  1397 ;; Parameters:    Size  Location     Type
  1398 ;;		None
  1399 ;; Auto vars:     Size  Location     Type
  1400 ;;  dig             2   29[COMRAM] int 
  1401 ;; Return value:  Size  Location     Type
  1402 ;;                  1    wreg      unsigned char 
  1403 ;; Registers used:
  1404 ;;		wreg, status,2, status,0, cstack
  1405 ;; Tracked objects:
  1406 ;;		On entry : 0/0
  1407 ;;		On exit  : 0/0
  1408 ;;		Unchanged: 0/0
  1409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1410 ;;      Params:         0       0       0       0       0       0       0
  1411 ;;      Locals:         2       0       0       0       0       0       0
  1412 ;;      Temps:          0       0       0       0       0       0       0
  1413 ;;      Totals:         2       0       0       0       0       0       0
  1414 ;;Total ram usage:        2 bytes
  1415 ;; Hardware stack levels used: 1
  1416 ;; Hardware stack levels required when called: 4
  1417 ;; This function calls:
  1418 ;;		___awdiv
  1419 ;;		___awmod
  1420 ;;		_ssdDigit
  1421 ;; This function is called by:
  1422 ;;		_kernelLoop
  1423 ;; This function uses a non-reentrant model
  1424 ;;
  1425                           
  1426                           	psect	text5
  1427   000E58                     __ptext5:
  1428                           	callstack 0
  1429   000E58                     _countTime:
  1430                           	callstack 25
  1431   000E58                     
  1432                           ;main.c: 56: valor++;
  1433   000E58  4A1B               	infsnz	_valor^0,f,c
  1434   000E5A  2A1C               	incf	(_valor+1)^0,f,c
  1435   000E5C                     
  1436                           ;main.c: 57: int dig;;main.c: 61: dig = (valor)%10;
  1437   000E5C  C01B  F046         	movff	_valor,___awmod@dividend
  1438   000E60  C01C  F047         	movff	_valor+1,___awmod@dividend+1
  1439   000E64  0E00               	movlw	0
  1440   000E66  6E49               	movwf	(___awmod@divisor+1)^0,c
  1441   000E68  0E0A               	movlw	10
  1442   000E6A  6E48               	movwf	___awmod@divisor^0,c
  1443   000E6C  ECFC  F007         	call	___awmod	;wreg free
  1444   000E70  C046  F04C         	movff	?___awmod,countTime@dig
  1445   000E74  C047  F04D         	movff	?___awmod+1,countTime@dig+1
  1446   000E78                     
  1447                           ;main.c: 62: ssdDigit(dig, 3);
  1448   000E78  0E03               	movlw	3
  1449   000E7A  6E3E               	movwf	ssdDigit@pos^0,c
  1450   000E7C  504C               	movf	countTime@dig^0,w,c
  1451   000E7E  ECB0  F009         	call	_ssdDigit
  1452   000E82                     
  1453                           ;main.c: 64: dig = (valor/10)%10;
  1454   000E82  0E00               	movlw	0
  1455   000E84  6E41               	movwf	(___awdiv@divisor+1)^0,c
  1456   000E86  0E0A               	movlw	10
  1457   000E88  6E40               	movwf	___awdiv@divisor^0,c
  1458   000E8A  C01B  F03E         	movff	_valor,___awdiv@dividend
  1459   000E8E  C01C  F03F         	movff	_valor+1,___awdiv@dividend+1
  1460   000E92  EC9A  F007         	call	___awdiv	;wreg free
  1461   000E96  C03E  F046         	movff	?___awdiv,___awmod@dividend
  1462   000E9A  C03F  F047         	movff	?___awdiv+1,___awmod@dividend+1
  1463   000E9E  0E00               	movlw	0
  1464   000EA0  6E49               	movwf	(___awmod@divisor+1)^0,c
  1465   000EA2  0E0A               	movlw	10
  1466   000EA4  6E48               	movwf	___awmod@divisor^0,c
  1467   000EA6  ECFC  F007         	call	___awmod	;wreg free
  1468   000EAA  C046  F04C         	movff	?___awmod,countTime@dig
  1469   000EAE  C047  F04D         	movff	?___awmod+1,countTime@dig+1
  1470   000EB2                     
  1471                           ;main.c: 65: ssdDigit(dig, 2);
  1472   000EB2  0E02               	movlw	2
  1473   000EB4  6E3E               	movwf	ssdDigit@pos^0,c
  1474   000EB6  504C               	movf	countTime@dig^0,w,c
  1475   000EB8  ECB0  F009         	call	_ssdDigit
  1476   000EBC                     
  1477                           ;main.c: 67: dig = (valor/100)%10;
  1478   000EBC  0E00               	movlw	0
  1479   000EBE  6E41               	movwf	(___awdiv@divisor+1)^0,c
  1480   000EC0  0E64               	movlw	100
  1481   000EC2  6E40               	movwf	___awdiv@divisor^0,c
  1482   000EC4  C01B  F03E         	movff	_valor,___awdiv@dividend
  1483   000EC8  C01C  F03F         	movff	_valor+1,___awdiv@dividend+1
  1484   000ECC  EC9A  F007         	call	___awdiv	;wreg free
  1485   000ED0  C03E  F046         	movff	?___awdiv,___awmod@dividend
  1486   000ED4  C03F  F047         	movff	?___awdiv+1,___awmod@dividend+1
  1487   000ED8  0E00               	movlw	0
  1488   000EDA  6E49               	movwf	(___awmod@divisor+1)^0,c
  1489   000EDC  0E0A               	movlw	10
  1490   000EDE  6E48               	movwf	___awmod@divisor^0,c
  1491   000EE0  ECFC  F007         	call	___awmod	;wreg free
  1492   000EE4  C046  F04C         	movff	?___awmod,countTime@dig
  1493   000EE8  C047  F04D         	movff	?___awmod+1,countTime@dig+1
  1494   000EEC                     
  1495                           ;main.c: 68: ssdDigit(dig, 1);
  1496   000EEC  0E01               	movlw	1
  1497   000EEE  6E3E               	movwf	ssdDigit@pos^0,c
  1498   000EF0  504C               	movf	countTime@dig^0,w,c
  1499   000EF2  ECB0  F009         	call	_ssdDigit
  1500   000EF6                     
  1501                           ;main.c: 70: dig = (valor/1000)%10;
  1502   000EF6  0E03               	movlw	3
  1503   000EF8  6E41               	movwf	(___awdiv@divisor+1)^0,c
  1504   000EFA  0EE8               	movlw	232
  1505   000EFC  6E40               	movwf	___awdiv@divisor^0,c
  1506   000EFE  C01B  F03E         	movff	_valor,___awdiv@dividend
  1507   000F02  C01C  F03F         	movff	_valor+1,___awdiv@dividend+1
  1508   000F06  EC9A  F007         	call	___awdiv	;wreg free
  1509   000F0A  C03E  F046         	movff	?___awdiv,___awmod@dividend
  1510   000F0E  C03F  F047         	movff	?___awdiv+1,___awmod@dividend+1
  1511   000F12  0E00               	movlw	0
  1512   000F14  6E49               	movwf	(___awmod@divisor+1)^0,c
  1513   000F16  0E0A               	movlw	10
  1514   000F18  6E48               	movwf	___awmod@divisor^0,c
  1515   000F1A  ECFC  F007         	call	___awmod	;wreg free
  1516   000F1E  C046  F04C         	movff	?___awmod,countTime@dig
  1517   000F22  C047  F04D         	movff	?___awmod+1,countTime@dig+1
  1518   000F26                     
  1519                           ;main.c: 71: ssdDigit(dig, 0);
  1520   000F26  0E00               	movlw	0
  1521   000F28  6E3E               	movwf	ssdDigit@pos^0,c
  1522   000F2A  504C               	movf	countTime@dig^0,w,c
  1523   000F2C  ECB0  F009         	call	_ssdDigit
  1524   000F30                     
  1525                           ;main.c: 72: return 2;
  1526   000F30  0E02               	movlw	2
  1527   000F32  0012               	return		;funcret
  1528   000F34                     __end_of_countTime:
  1529                           	callstack 0
  1530                           
  1531 ;; *************** function _initPORTAD *****************
  1532 ;; Defined at:
  1533 ;;		line 29 in file "main.c"
  1534 ;; Parameters:    Size  Location     Type
  1535 ;;		None
  1536 ;; Auto vars:     Size  Location     Type
  1537 ;;		None
  1538 ;; Return value:  Size  Location     Type
  1539 ;;                  1    wreg      unsigned char 
  1540 ;; Registers used:
  1541 ;;		wreg, status,2
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1547 ;;      Params:         0       0       0       0       0       0       0
  1548 ;;      Locals:         0       0       0       0       0       0       0
  1549 ;;      Temps:          0       0       0       0       0       0       0
  1550 ;;      Totals:         0       0       0       0       0       0       0
  1551 ;;Total ram usage:        0 bytes
  1552 ;; Hardware stack levels used: 1
  1553 ;; Hardware stack levels required when called: 3
  1554 ;; This function calls:
  1555 ;;		Nothing
  1556 ;; This function is called by:
  1557 ;;		_kernelLoop
  1558 ;; This function uses a non-reentrant model
  1559 ;;
  1560                           
  1561                           	psect	text6
  1562   00148A                     __ptext6:
  1563                           	callstack 0
  1564   00148A                     _initPORTAD:
  1565                           	callstack 26
  1566   00148A                     
  1567                           ;main.c: 31: TRISD = 0x00;
  1568   00148A  0E00               	movlw	0
  1569   00148C  6E95               	movwf	149,c	;volatile
  1570   00148E                     
  1571                           ;main.c: 32: return 0;
  1572   00148E  0E00               	movlw	0
  1573   001490  0012               	return		;funcret
  1574   001492                     __end_of_initPORTAD:
  1575                           	callstack 0
  1576                           
  1577 ;; *************** function _updateSSD *****************
  1578 ;; Defined at:
  1579 ;;		line 47 in file "main.c"
  1580 ;; Parameters:    Size  Location     Type
  1581 ;;		None
  1582 ;; Auto vars:     Size  Location     Type
  1583 ;;		None
  1584 ;; Return value:  Size  Location     Type
  1585 ;;                  1    wreg      unsigned char 
  1586 ;; Registers used:
  1587 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1588 ;; Tracked objects:
  1589 ;;		On entry : 0/0
  1590 ;;		On exit  : 0/0
  1591 ;;		Unchanged: 0/0
  1592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1593 ;;      Params:         0       0       0       0       0       0       0
  1594 ;;      Locals:         0       0       0       0       0       0       0
  1595 ;;      Temps:          0       0       0       0       0       0       0
  1596 ;;      Totals:         0       0       0       0       0       0       0
  1597 ;;Total ram usage:        0 bytes
  1598 ;; Hardware stack levels used: 1
  1599 ;; Hardware stack levels required when called: 5
  1600 ;; This function calls:
  1601 ;;		_ssdUpdate
  1602 ;; This function is called by:
  1603 ;;		_kernelLoop
  1604 ;; This function uses a non-reentrant model
  1605 ;;
  1606                           
  1607                           	psect	text7
  1608   001492                     __ptext7:
  1609                           	callstack 0
  1610   001492                     _updateSSD:
  1611                           	callstack 24
  1612   001492                     
  1613                           ;main.c: 49: ssdUpdate();
  1614   001492  EC8E  F006         	call	_ssdUpdate	;wreg free
  1615   001496                     
  1616                           ;main.c: 50: return 2;
  1617   001496  0E02               	movlw	2
  1618   001498  0012               	return		;funcret
  1619   00149A                     __end_of_updateSSD:
  1620                           	callstack 0
  1621                           
  1622 ;; *************** function _ssdUpdate *****************
  1623 ;; Defined at:
  1624 ;;		line 54 in file "ssd.c"
  1625 ;; Parameters:    Size  Location     Type
  1626 ;;		None
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;		None
  1629 ;; Return value:  Size  Location     Type
  1630 ;;                  1    wreg      void 
  1631 ;; Registers used:
  1632 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1633 ;; Tracked objects:
  1634 ;;		On entry : 0/0
  1635 ;;		On exit  : 0/0
  1636 ;;		Unchanged: 0/0
  1637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1638 ;;      Params:         0       0       0       0       0       0       0
  1639 ;;      Locals:         0       0       0       0       0       0       0
  1640 ;;      Temps:          0       0       0       0       0       0       0
  1641 ;;      Totals:         0       0       0       0       0       0       0
  1642 ;;Total ram usage:        0 bytes
  1643 ;; Hardware stack levels used: 1
  1644 ;; Hardware stack levels required when called: 4
  1645 ;; This function calls:
  1646 ;;		_digitalWrite
  1647 ;; This function is called by:
  1648 ;;		_updateSSD
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           
  1652                           	psect	text8
  1653   000D1C                     __ptext8:
  1654                           	callstack 0
  1655   000D1C                     _ssdUpdate:
  1656                           	callstack 24
  1657   000D1C                     
  1658                           ;ssd.c: 58: TRISD= 0x00;
  1659   000D1C  0E00               	movlw	0
  1660   000D1E  6E95               	movwf	149,c	;volatile
  1661   000D20                     
  1662                           ;ssd.c: 60: digitalWrite(PIN_A2,0);
  1663   000D20  0E00               	movlw	0
  1664   000D22  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  1665   000D24  0E02               	movlw	2
  1666   000D26  6E3E               	movwf	digitalWrite@pin^0,c
  1667   000D28  0E00               	movlw	0
  1668   000D2A  6E41               	movwf	(digitalWrite@value+1)^0,c
  1669   000D2C  0E00               	movlw	0
  1670   000D2E  6E40               	movwf	digitalWrite@value^0,c
  1671   000D30  EC67  F005         	call	_digitalWrite	;wreg free
  1672   000D34                     
  1673                           ;ssd.c: 61: digitalWrite(PIN_A3,0);
  1674   000D34  0E00               	movlw	0
  1675   000D36  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  1676   000D38  0E03               	movlw	3
  1677   000D3A  6E3E               	movwf	digitalWrite@pin^0,c
  1678   000D3C  0E00               	movlw	0
  1679   000D3E  6E41               	movwf	(digitalWrite@value+1)^0,c
  1680   000D40  0E00               	movlw	0
  1681   000D42  6E40               	movwf	digitalWrite@value^0,c
  1682   000D44  EC67  F005         	call	_digitalWrite	;wreg free
  1683   000D48                     
  1684                           ;ssd.c: 62: digitalWrite(PIN_A4,0);
  1685   000D48  0E00               	movlw	0
  1686   000D4A  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  1687   000D4C  0E04               	movlw	4
  1688   000D4E  6E3E               	movwf	digitalWrite@pin^0,c
  1689   000D50  0E00               	movlw	0
  1690   000D52  6E41               	movwf	(digitalWrite@value+1)^0,c
  1691   000D54  0E00               	movlw	0
  1692   000D56  6E40               	movwf	digitalWrite@value^0,c
  1693   000D58  EC67  F005         	call	_digitalWrite	;wreg free
  1694   000D5C                     
  1695                           ;ssd.c: 63: digitalWrite(PIN_A5,0);
  1696   000D5C  0E00               	movlw	0
  1697   000D5E  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  1698   000D60  0E05               	movlw	5
  1699   000D62  6E3E               	movwf	digitalWrite@pin^0,c
  1700   000D64  0E00               	movlw	0
  1701   000D66  6E41               	movwf	(digitalWrite@value+1)^0,c
  1702   000D68  0E00               	movlw	0
  1703   000D6A  6E40               	movwf	digitalWrite@value^0,c
  1704   000D6C  EC67  F005         	call	_digitalWrite	;wreg free
  1705                           
  1706                           ;ssd.c: 66: PORTD = 0x00;
  1707   000D70  0E00               	movlw	0
  1708   000D72  6E83               	movwf	131,c	;volatile
  1709                           
  1710                           ;ssd.c: 69: switch (display)
  1711   000D74  EF18  F007         	goto	l2729
  1712   000D78                     l2701:
  1713                           
  1714                           ;ssd.c: 72: PORTD = valor[v0];
  1715   000D78  0E01               	movlw	low _valor@ssd$F527
  1716   000D7A  2420               	addwf	_v0^0,w,c
  1717   000D7C  6EF6               	movwf	tblptrl,c
  1718   000D7E  6AF7               	clrf	tblptrh,c
  1719   000D80  0E06               	movlw	high _valor@ssd$F527
  1720   000D82  22F7               	addwfc	tblptrh,f,c
  1721   000D84                     	if	0	;There are less than 3 active tblptr bytes
  1722   000D84                     	endif
  1723   000D84  0008               	tblrd		*
  1724   000D86  CFF5 FF83          	movff	tablat,3971	;volatile
  1725   000D8A                     
  1726                           ;ssd.c: 73: digitalWrite(PIN_A2,1);
  1727   000D8A  0E00               	movlw	0
  1728   000D8C  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  1729   000D8E  0E02               	movlw	2
  1730   000D90  6E3E               	movwf	digitalWrite@pin^0,c
  1731   000D92  0E00               	movlw	0
  1732   000D94  6E41               	movwf	(digitalWrite@value+1)^0,c
  1733   000D96  0E01               	movlw	1
  1734   000D98  6E40               	movwf	digitalWrite@value^0,c
  1735   000D9A  EC67  F005         	call	_digitalWrite	;wreg free
  1736   000D9E                     
  1737                           ;ssd.c: 74: display = 1;
  1738   000D9E  0E01               	movlw	1
  1739   000DA0  6E21               	movwf	_display^0,c
  1740                           
  1741                           ;ssd.c: 75: break;
  1742   000DA2  EF2B  F007         	goto	l471
  1743   000DA6                     l2707:
  1744                           
  1745                           ;ssd.c: 78: PORTD = valor[v1];
  1746   000DA6  0E01               	movlw	low _valor@ssd$F527
  1747   000DA8  241F               	addwf	_v1^0,w,c
  1748   000DAA  6EF6               	movwf	tblptrl,c
  1749   000DAC  6AF7               	clrf	tblptrh,c
  1750   000DAE  0E06               	movlw	high _valor@ssd$F527
  1751   000DB0  22F7               	addwfc	tblptrh,f,c
  1752   000DB2                     	if	0	;There are less than 3 active tblptr bytes
  1753   000DB2                     	endif
  1754   000DB2  0008               	tblrd		*
  1755   000DB4  CFF5 FF83          	movff	tablat,3971	;volatile
  1756   000DB8                     
  1757                           ;ssd.c: 79: digitalWrite(PIN_A3,1);
  1758   000DB8  0E00               	movlw	0
  1759   000DBA  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  1760   000DBC  0E03               	movlw	3
  1761   000DBE  6E3E               	movwf	digitalWrite@pin^0,c
  1762   000DC0  0E00               	movlw	0
  1763   000DC2  6E41               	movwf	(digitalWrite@value+1)^0,c
  1764   000DC4  0E01               	movlw	1
  1765   000DC6  6E40               	movwf	digitalWrite@value^0,c
  1766   000DC8  EC67  F005         	call	_digitalWrite	;wreg free
  1767   000DCC                     
  1768                           ;ssd.c: 80: display = 2;
  1769   000DCC  0E02               	movlw	2
  1770   000DCE  6E21               	movwf	_display^0,c
  1771                           
  1772                           ;ssd.c: 81: break;
  1773   000DD0  EF2B  F007         	goto	l471
  1774   000DD4                     l2713:
  1775                           
  1776                           ;ssd.c: 84: PORTD = valor[v2];
  1777   000DD4  0E01               	movlw	low _valor@ssd$F527
  1778   000DD6  241E               	addwf	_v2^0,w,c
  1779   000DD8  6EF6               	movwf	tblptrl,c
  1780   000DDA  6AF7               	clrf	tblptrh,c
  1781   000DDC  0E06               	movlw	high _valor@ssd$F527
  1782   000DDE  22F7               	addwfc	tblptrh,f,c
  1783   000DE0                     	if	0	;There are less than 3 active tblptr bytes
  1784   000DE0                     	endif
  1785   000DE0  0008               	tblrd		*
  1786   000DE2  CFF5 FF83          	movff	tablat,3971	;volatile
  1787   000DE6                     
  1788                           ;ssd.c: 85: digitalWrite(PIN_A4,1);
  1789   000DE6  0E00               	movlw	0
  1790   000DE8  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  1791   000DEA  0E04               	movlw	4
  1792   000DEC  6E3E               	movwf	digitalWrite@pin^0,c
  1793   000DEE  0E00               	movlw	0
  1794   000DF0  6E41               	movwf	(digitalWrite@value+1)^0,c
  1795   000DF2  0E01               	movlw	1
  1796   000DF4  6E40               	movwf	digitalWrite@value^0,c
  1797   000DF6  EC67  F005         	call	_digitalWrite	;wreg free
  1798   000DFA                     
  1799                           ;ssd.c: 86: display = 3;
  1800   000DFA  0E03               	movlw	3
  1801   000DFC  6E21               	movwf	_display^0,c
  1802                           
  1803                           ;ssd.c: 87: break;
  1804   000DFE  EF2B  F007         	goto	l471
  1805   000E02                     l2719:
  1806                           
  1807                           ;ssd.c: 90: PORTD = valor[v3];
  1808   000E02  0E01               	movlw	low _valor@ssd$F527
  1809   000E04  241D               	addwf	_v3^0,w,c
  1810   000E06  6EF6               	movwf	tblptrl,c
  1811   000E08  6AF7               	clrf	tblptrh,c
  1812   000E0A  0E06               	movlw	high _valor@ssd$F527
  1813   000E0C  22F7               	addwfc	tblptrh,f,c
  1814   000E0E                     	if	0	;There are less than 3 active tblptr bytes
  1815   000E0E                     	endif
  1816   000E0E  0008               	tblrd		*
  1817   000E10  CFF5 FF83          	movff	tablat,3971	;volatile
  1818   000E14                     
  1819                           ;ssd.c: 91: digitalWrite(PIN_A5,1);
  1820   000E14  0E00               	movlw	0
  1821   000E16  6E3F               	movwf	(digitalWrite@pin+1)^0,c
  1822   000E18  0E05               	movlw	5
  1823   000E1A  6E3E               	movwf	digitalWrite@pin^0,c
  1824   000E1C  0E00               	movlw	0
  1825   000E1E  6E41               	movwf	(digitalWrite@value+1)^0,c
  1826   000E20  0E01               	movlw	1
  1827   000E22  6E40               	movwf	digitalWrite@value^0,c
  1828   000E24  EC67  F005         	call	_digitalWrite	;wreg free
  1829   000E28                     l2723:
  1830                           
  1831                           ;ssd.c: 92: display = 0;
  1832   000E28  0E00               	movlw	0
  1833   000E2A  6E21               	movwf	_display^0,c
  1834                           
  1835                           ;ssd.c: 93: break;
  1836   000E2C  EF2B  F007         	goto	l471
  1837   000E30                     l2729:
  1838   000E30  5021               	movf	_display^0,w,c
  1839                           
  1840                           ; Switch size 1, requested type "simple"
  1841                           ; Number of cases is 4, Range of values is 0 to 3
  1842                           ; switch strategies available:
  1843                           ; Name         Instructions Cycles
  1844                           ; simple_byte           13     7 (average)
  1845                           ;	Chosen strategy is simple_byte
  1846   000E32  0A00               	xorlw	0	; case 0
  1847   000E34  B4D8               	btfsc	status,2,c
  1848   000E36  EFBC  F006         	goto	l2701
  1849   000E3A  0A01               	xorlw	1	; case 1
  1850   000E3C  B4D8               	btfsc	status,2,c
  1851   000E3E  EFD3  F006         	goto	l2707
  1852   000E42  0A03               	xorlw	3	; case 2
  1853   000E44  B4D8               	btfsc	status,2,c
  1854   000E46  EFEA  F006         	goto	l2713
  1855   000E4A  0A01               	xorlw	1	; case 3
  1856   000E4C  B4D8               	btfsc	status,2,c
  1857   000E4E  EF01  F007         	goto	l2719
  1858   000E52  EF14  F007         	goto	l2723
  1859   000E56                     l471:
  1860   000E56  0012               	return		;funcret
  1861   000E58                     __end_of_ssdUpdate:
  1862                           	callstack 0
  1863                           
  1864 ;; *************** function _digitalWrite *****************
  1865 ;; Defined at:
  1866 ;;		line 14 in file "io.c"
  1867 ;; Parameters:    Size  Location     Type
  1868 ;;  pin             2   15[COMRAM] int 
  1869 ;;  value           2   17[COMRAM] int 
  1870 ;; Auto vars:     Size  Location     Type
  1871 ;;		None
  1872 ;; Return value:  Size  Location     Type
  1873 ;;                  1    wreg      void 
  1874 ;; Registers used:
  1875 ;;		wreg, status,2, status,0
  1876 ;; Tracked objects:
  1877 ;;		On entry : 0/0
  1878 ;;		On exit  : 0/0
  1879 ;;		Unchanged: 0/0
  1880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1881 ;;      Params:         4       0       0       0       0       0       0
  1882 ;;      Locals:         0       0       0       0       0       0       0
  1883 ;;      Temps:          2       0       0       0       0       0       0
  1884 ;;      Totals:         6       0       0       0       0       0       0
  1885 ;;Total ram usage:        6 bytes
  1886 ;; Hardware stack levels used: 1
  1887 ;; Hardware stack levels required when called: 3
  1888 ;; This function calls:
  1889 ;;		Nothing
  1890 ;; This function is called by:
  1891 ;;		_ssdUpdate
  1892 ;;		_lcdCommand
  1893 ;;		_lcdData
  1894 ;;		_clear_SCL
  1895 ;;		_clear_SDA
  1896 ;; This function uses a non-reentrant model
  1897 ;;
  1898                           
  1899                           	psect	text9
  1900   000ACE                     __ptext9:
  1901                           	callstack 0
  1902   000ACE                     _digitalWrite:
  1903                           	callstack 24
  1904   000ACE                     
  1905                           ;io.c: 16: if(pin <8){
  1906   000ACE  BE3F               	btfsc	(digitalWrite@pin+1)^0,7,c
  1907   000AD0  EF75  F005         	goto	u2250
  1908   000AD4  503F               	movf	(digitalWrite@pin+1)^0,w,c
  1909   000AD6  E107               	bnz	u2251
  1910   000AD8  0E08               	movlw	8
  1911   000ADA  5C3E               	subwf	digitalWrite@pin^0,w,c
  1912   000ADC  B0D8               	btfsc	status,0,c
  1913   000ADE  EF73  F005         	goto	u2251
  1914   000AE2  EF75  F005         	goto	u2250
  1915   000AE6                     u2251:
  1916   000AE6  EF9F  F005         	goto	l2659
  1917   000AEA                     u2250:
  1918   000AEA                     
  1919                           ;io.c: 17: if (value){ ((PORTA) |= (1<<(pin)));}
  1920   000AEA  5040               	movf	digitalWrite@value^0,w,c
  1921   000AEC  1041               	iorwf	(digitalWrite@value+1)^0,w,c
  1922   000AEE  B4D8               	btfsc	status,2,c
  1923   000AF0  EF7C  F005         	goto	u2261
  1924   000AF4  EF7E  F005         	goto	u2260
  1925   000AF8                     u2261:
  1926   000AF8  EF8E  F005         	goto	l2657
  1927   000AFC                     u2260:
  1928   000AFC  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  1929   000B00  0E01               	movlw	1
  1930   000B02  6E43               	movwf	(??_digitalWrite+1)^0,c
  1931   000B04  2A42               	incf	??_digitalWrite^0,f,c
  1932   000B06  EF87  F005         	goto	u2274
  1933   000B0A                     u2275:
  1934   000B0A  90D8               	bcf	status,0,c
  1935   000B0C  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  1936   000B0E                     u2274:
  1937   000B0E  2E42               	decfsz	??_digitalWrite^0,f,c
  1938   000B10  EF85  F005         	goto	u2275
  1939   000B14  5043               	movf	(??_digitalWrite+1)^0,w,c
  1940   000B16  1280               	iorwf	128,f,c	;volatile
  1941   000B18  EF8D  F006         	goto	l211
  1942   000B1C                     l2657:
  1943                           
  1944                           ;io.c: 18: else{ ((PORTA) &= ~(1<<(pin)));}
  1945   000B1C  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  1946   000B20  0E01               	movlw	1
  1947   000B22  6E43               	movwf	(??_digitalWrite+1)^0,c
  1948   000B24  2A42               	incf	??_digitalWrite^0,f,c
  1949   000B26  EF97  F005         	goto	u2284
  1950   000B2A                     u2285:
  1951   000B2A  90D8               	bcf	status,0,c
  1952   000B2C  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  1953   000B2E                     u2284:
  1954   000B2E  2E42               	decfsz	??_digitalWrite^0,f,c
  1955   000B30  EF95  F005         	goto	u2285
  1956   000B34  5043               	movf	(??_digitalWrite+1)^0,w,c
  1957   000B36  0AFF               	xorlw	255
  1958   000B38  1680               	andwf	128,f,c	;volatile
  1959   000B3A  EF8D  F006         	goto	l211
  1960   000B3E                     l2659:
  1961   000B3E  BE3F               	btfsc	(digitalWrite@pin+1)^0,7,c
  1962   000B40  EFAD  F005         	goto	u2290
  1963   000B44  503F               	movf	(digitalWrite@pin+1)^0,w,c
  1964   000B46  E107               	bnz	u2291
  1965   000B48  0E10               	movlw	16
  1966   000B4A  5C3E               	subwf	digitalWrite@pin^0,w,c
  1967   000B4C  B0D8               	btfsc	status,0,c
  1968   000B4E  EFAB  F005         	goto	u2291
  1969   000B52  EFAD  F005         	goto	u2290
  1970   000B56                     u2291:
  1971   000B56  EFDB  F005         	goto	l2667
  1972   000B5A                     u2290:
  1973   000B5A                     
  1974                           ;io.c: 20: pin -=8;
  1975   000B5A  0EF8               	movlw	248
  1976   000B5C  263E               	addwf	digitalWrite@pin^0,f,c
  1977   000B5E  0EFF               	movlw	255
  1978   000B60  223F               	addwfc	(digitalWrite@pin+1)^0,f,c
  1979                           
  1980                           ;io.c: 21: if (value){ ((PORTB) |= (1<<(pin)));}
  1981   000B62  5040               	movf	digitalWrite@value^0,w,c
  1982   000B64  1041               	iorwf	(digitalWrite@value+1)^0,w,c
  1983   000B66  B4D8               	btfsc	status,2,c
  1984   000B68  EFB8  F005         	goto	u2301
  1985   000B6C  EFBA  F005         	goto	u2300
  1986   000B70                     u2301:
  1987   000B70  EFCA  F005         	goto	l2665
  1988   000B74                     u2300:
  1989   000B74  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  1990   000B78  0E01               	movlw	1
  1991   000B7A  6E43               	movwf	(??_digitalWrite+1)^0,c
  1992   000B7C  2A42               	incf	??_digitalWrite^0,f,c
  1993   000B7E  EFC3  F005         	goto	u2314
  1994   000B82                     u2315:
  1995   000B82  90D8               	bcf	status,0,c
  1996   000B84  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  1997   000B86                     u2314:
  1998   000B86  2E42               	decfsz	??_digitalWrite^0,f,c
  1999   000B88  EFC1  F005         	goto	u2315
  2000   000B8C  5043               	movf	(??_digitalWrite+1)^0,w,c
  2001   000B8E  1281               	iorwf	129,f,c	;volatile
  2002   000B90  EF8D  F006         	goto	l211
  2003   000B94                     l2665:
  2004                           
  2005                           ;io.c: 22: else{ ((PORTB) &= ~(1<<(pin)));}
  2006   000B94  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2007   000B98  0E01               	movlw	1
  2008   000B9A  6E43               	movwf	(??_digitalWrite+1)^0,c
  2009   000B9C  2A42               	incf	??_digitalWrite^0,f,c
  2010   000B9E  EFD3  F005         	goto	u2324
  2011   000BA2                     u2325:
  2012   000BA2  90D8               	bcf	status,0,c
  2013   000BA4  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2014   000BA6                     u2324:
  2015   000BA6  2E42               	decfsz	??_digitalWrite^0,f,c
  2016   000BA8  EFD1  F005         	goto	u2325
  2017   000BAC  5043               	movf	(??_digitalWrite+1)^0,w,c
  2018   000BAE  0AFF               	xorlw	255
  2019   000BB0  1681               	andwf	129,f,c	;volatile
  2020   000BB2  EF8D  F006         	goto	l211
  2021   000BB6                     l2667:
  2022   000BB6  BE3F               	btfsc	(digitalWrite@pin+1)^0,7,c
  2023   000BB8  EFE9  F005         	goto	u2330
  2024   000BBC  503F               	movf	(digitalWrite@pin+1)^0,w,c
  2025   000BBE  E107               	bnz	u2331
  2026   000BC0  0E18               	movlw	24
  2027   000BC2  5C3E               	subwf	digitalWrite@pin^0,w,c
  2028   000BC4  B0D8               	btfsc	status,0,c
  2029   000BC6  EFE7  F005         	goto	u2331
  2030   000BCA  EFE9  F005         	goto	u2330
  2031   000BCE                     u2331:
  2032   000BCE  EF17  F006         	goto	l2675
  2033   000BD2                     u2330:
  2034   000BD2                     
  2035                           ;io.c: 24: pin -=16;
  2036   000BD2  0EF0               	movlw	240
  2037   000BD4  263E               	addwf	digitalWrite@pin^0,f,c
  2038   000BD6  0EFF               	movlw	255
  2039   000BD8  223F               	addwfc	(digitalWrite@pin+1)^0,f,c
  2040                           
  2041                           ;io.c: 25: if (value){ ((PORTC) |= (1<<(pin)));}
  2042   000BDA  5040               	movf	digitalWrite@value^0,w,c
  2043   000BDC  1041               	iorwf	(digitalWrite@value+1)^0,w,c
  2044   000BDE  B4D8               	btfsc	status,2,c
  2045   000BE0  EFF4  F005         	goto	u2341
  2046   000BE4  EFF6  F005         	goto	u2340
  2047   000BE8                     u2341:
  2048   000BE8  EF06  F006         	goto	l2673
  2049   000BEC                     u2340:
  2050   000BEC  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2051   000BF0  0E01               	movlw	1
  2052   000BF2  6E43               	movwf	(??_digitalWrite+1)^0,c
  2053   000BF4  2A42               	incf	??_digitalWrite^0,f,c
  2054   000BF6  EFFF  F005         	goto	u2354
  2055   000BFA                     u2355:
  2056   000BFA  90D8               	bcf	status,0,c
  2057   000BFC  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2058   000BFE                     u2354:
  2059   000BFE  2E42               	decfsz	??_digitalWrite^0,f,c
  2060   000C00  EFFD  F005         	goto	u2355
  2061   000C04  5043               	movf	(??_digitalWrite+1)^0,w,c
  2062   000C06  1282               	iorwf	130,f,c	;volatile
  2063   000C08  EF8D  F006         	goto	l211
  2064   000C0C                     l2673:
  2065                           
  2066                           ;io.c: 26: else{ ((PORTC) &= ~(1<<(pin)));}
  2067   000C0C  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2068   000C10  0E01               	movlw	1
  2069   000C12  6E43               	movwf	(??_digitalWrite+1)^0,c
  2070   000C14  2A42               	incf	??_digitalWrite^0,f,c
  2071   000C16  EF0F  F006         	goto	u2364
  2072   000C1A                     u2365:
  2073   000C1A  90D8               	bcf	status,0,c
  2074   000C1C  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2075   000C1E                     u2364:
  2076   000C1E  2E42               	decfsz	??_digitalWrite^0,f,c
  2077   000C20  EF0D  F006         	goto	u2365
  2078   000C24  5043               	movf	(??_digitalWrite+1)^0,w,c
  2079   000C26  0AFF               	xorlw	255
  2080   000C28  1682               	andwf	130,f,c	;volatile
  2081   000C2A  EF8D  F006         	goto	l211
  2082   000C2E                     l2675:
  2083   000C2E  BE3F               	btfsc	(digitalWrite@pin+1)^0,7,c
  2084   000C30  EF25  F006         	goto	u2370
  2085   000C34  503F               	movf	(digitalWrite@pin+1)^0,w,c
  2086   000C36  E107               	bnz	u2371
  2087   000C38  0E20               	movlw	32
  2088   000C3A  5C3E               	subwf	digitalWrite@pin^0,w,c
  2089   000C3C  B0D8               	btfsc	status,0,c
  2090   000C3E  EF23  F006         	goto	u2371
  2091   000C42  EF25  F006         	goto	u2370
  2092   000C46                     u2371:
  2093   000C46  EF53  F006         	goto	l2683
  2094   000C4A                     u2370:
  2095   000C4A                     
  2096                           ;io.c: 28: pin -=24;
  2097   000C4A  0EE8               	movlw	232
  2098   000C4C  263E               	addwf	digitalWrite@pin^0,f,c
  2099   000C4E  0EFF               	movlw	255
  2100   000C50  223F               	addwfc	(digitalWrite@pin+1)^0,f,c
  2101                           
  2102                           ;io.c: 29: if (value){ ((PORTD) |= (1<<(pin)));}
  2103   000C52  5040               	movf	digitalWrite@value^0,w,c
  2104   000C54  1041               	iorwf	(digitalWrite@value+1)^0,w,c
  2105   000C56  B4D8               	btfsc	status,2,c
  2106   000C58  EF30  F006         	goto	u2381
  2107   000C5C  EF32  F006         	goto	u2380
  2108   000C60                     u2381:
  2109   000C60  EF42  F006         	goto	l2681
  2110   000C64                     u2380:
  2111   000C64  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2112   000C68  0E01               	movlw	1
  2113   000C6A  6E43               	movwf	(??_digitalWrite+1)^0,c
  2114   000C6C  2A42               	incf	??_digitalWrite^0,f,c
  2115   000C6E  EF3B  F006         	goto	u2394
  2116   000C72                     u2395:
  2117   000C72  90D8               	bcf	status,0,c
  2118   000C74  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2119   000C76                     u2394:
  2120   000C76  2E42               	decfsz	??_digitalWrite^0,f,c
  2121   000C78  EF39  F006         	goto	u2395
  2122   000C7C  5043               	movf	(??_digitalWrite+1)^0,w,c
  2123   000C7E  1283               	iorwf	131,f,c	;volatile
  2124   000C80  EF8D  F006         	goto	l211
  2125   000C84                     l2681:
  2126                           
  2127                           ;io.c: 30: else{ ((PORTD) &= ~(1<<(pin)));}
  2128   000C84  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2129   000C88  0E01               	movlw	1
  2130   000C8A  6E43               	movwf	(??_digitalWrite+1)^0,c
  2131   000C8C  2A42               	incf	??_digitalWrite^0,f,c
  2132   000C8E  EF4B  F006         	goto	u2404
  2133   000C92                     u2405:
  2134   000C92  90D8               	bcf	status,0,c
  2135   000C94  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2136   000C96                     u2404:
  2137   000C96  2E42               	decfsz	??_digitalWrite^0,f,c
  2138   000C98  EF49  F006         	goto	u2405
  2139   000C9C  5043               	movf	(??_digitalWrite+1)^0,w,c
  2140   000C9E  0AFF               	xorlw	255
  2141   000CA0  1683               	andwf	131,f,c	;volatile
  2142   000CA2  EF8D  F006         	goto	l211
  2143   000CA6                     l2683:
  2144   000CA6  BE3F               	btfsc	(digitalWrite@pin+1)^0,7,c
  2145   000CA8  EF61  F006         	goto	u2410
  2146   000CAC  503F               	movf	(digitalWrite@pin+1)^0,w,c
  2147   000CAE  E107               	bnz	u2411
  2148   000CB0  0E28               	movlw	40
  2149   000CB2  5C3E               	subwf	digitalWrite@pin^0,w,c
  2150   000CB4  B0D8               	btfsc	status,0,c
  2151   000CB6  EF5F  F006         	goto	u2411
  2152   000CBA  EF61  F006         	goto	u2410
  2153   000CBE                     u2411:
  2154   000CBE  EF8D  F006         	goto	l211
  2155   000CC2                     u2410:
  2156   000CC2                     
  2157                           ;io.c: 32: pin -=32;
  2158   000CC2  0EE0               	movlw	224
  2159   000CC4  263E               	addwf	digitalWrite@pin^0,f,c
  2160   000CC6  0EFF               	movlw	255
  2161   000CC8  223F               	addwfc	(digitalWrite@pin+1)^0,f,c
  2162                           
  2163                           ;io.c: 33: if (value){ ((PORTE) |= (1<<(pin)));}
  2164   000CCA  5040               	movf	digitalWrite@value^0,w,c
  2165   000CCC  1041               	iorwf	(digitalWrite@value+1)^0,w,c
  2166   000CCE  B4D8               	btfsc	status,2,c
  2167   000CD0  EF6C  F006         	goto	u2421
  2168   000CD4  EF6E  F006         	goto	u2420
  2169   000CD8                     u2421:
  2170   000CD8  EF7E  F006         	goto	l2689
  2171   000CDC                     u2420:
  2172   000CDC  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2173   000CE0  0E01               	movlw	1
  2174   000CE2  6E43               	movwf	(??_digitalWrite+1)^0,c
  2175   000CE4  2A42               	incf	??_digitalWrite^0,f,c
  2176   000CE6  EF77  F006         	goto	u2434
  2177   000CEA                     u2435:
  2178   000CEA  90D8               	bcf	status,0,c
  2179   000CEC  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2180   000CEE                     u2434:
  2181   000CEE  2E42               	decfsz	??_digitalWrite^0,f,c
  2182   000CF0  EF75  F006         	goto	u2435
  2183   000CF4  5043               	movf	(??_digitalWrite+1)^0,w,c
  2184   000CF6  1284               	iorwf	132,f,c	;volatile
  2185   000CF8  EF8D  F006         	goto	l211
  2186   000CFC                     l2689:
  2187                           
  2188                           ;io.c: 34: else{ ((PORTE) &= ~(1<<(pin)));}
  2189   000CFC  C03E  F042         	movff	digitalWrite@pin,??_digitalWrite
  2190   000D00  0E01               	movlw	1
  2191   000D02  6E43               	movwf	(??_digitalWrite+1)^0,c
  2192   000D04  2A42               	incf	??_digitalWrite^0,f,c
  2193   000D06  EF87  F006         	goto	u2444
  2194   000D0A                     u2445:
  2195   000D0A  90D8               	bcf	status,0,c
  2196   000D0C  3643               	rlcf	(??_digitalWrite+1)^0,f,c
  2197   000D0E                     u2444:
  2198   000D0E  2E42               	decfsz	??_digitalWrite^0,f,c
  2199   000D10  EF85  F006         	goto	u2445
  2200   000D14  5043               	movf	(??_digitalWrite+1)^0,w,c
  2201   000D16  0AFF               	xorlw	255
  2202   000D18  1684               	andwf	132,f,c	;volatile
  2203   000D1A                     l211:
  2204   000D1A  0012               	return		;funcret
  2205   000D1C                     __end_of_digitalWrite:
  2206                           	callstack 0
  2207                           
  2208 ;; *************** function _kernelAddProc *****************
  2209 ;; Defined at:
  2210 ;;		line 14 in file "kernel.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;  newProc         2   29[COMRAM] PTR struct .
  2213 ;;		 -> main@countTime_proc(8), main@SSDUpdate_proc(8), main@init_PD(8), 
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;		None
  2216 ;; Return value:  Size  Location     Type
  2217 ;;                  1    wreg      unsigned char 
  2218 ;; Registers used:
  2219 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2220 ;; Tracked objects:
  2221 ;;		On entry : 0/0
  2222 ;;		On exit  : 0/0
  2223 ;;		Unchanged: 0/0
  2224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2225 ;;      Params:         2       0       0       0       0       0       0
  2226 ;;      Locals:         0       0       0       0       0       0       0
  2227 ;;      Temps:          2       0       0       0       0       0       0
  2228 ;;      Totals:         4       0       0       0       0       0       0
  2229 ;;Total ram usage:        4 bytes
  2230 ;; Hardware stack levels used: 1
  2231 ;; Hardware stack levels required when called: 4
  2232 ;; This function calls:
  2233 ;;		___awmod
  2234 ;; This function is called by:
  2235 ;;		_main
  2236 ;;		_kernelLoop
  2237 ;; This function uses a non-reentrant model
  2238 ;;
  2239                           
  2240                           	psect	text10
  2241   001158                     __ptext10:
  2242                           	callstack 0
  2243   001158                     _kernelAddProc:
  2244                           	callstack 25
  2245   001158                     
  2246                           ;kernel.c: 16: if (((end + 1) % 10) != start) {
  2247   001158  5025               	movf	_start^0,w,c
  2248   00115A  6E4E               	movwf	??_kernelAddProc^0,c
  2249   00115C  6A4F               	clrf	(??_kernelAddProc+1)^0,c
  2250   00115E  0E01               	movlw	1
  2251   001160  2424               	addwf	_end^0,w,c
  2252   001162  6E46               	movwf	___awmod@dividend^0,c
  2253   001164  6A47               	clrf	(___awmod@dividend+1)^0,c
  2254   001166  0E00               	movlw	0
  2255   001168  2247               	addwfc	(___awmod@dividend+1)^0,f,c
  2256   00116A  0E00               	movlw	0
  2257   00116C  6E49               	movwf	(___awmod@divisor+1)^0,c
  2258   00116E  0E0A               	movlw	10
  2259   001170  6E48               	movwf	___awmod@divisor^0,c
  2260   001172  ECFC  F007         	call	___awmod	;wreg free
  2261   001176  504E               	movf	??_kernelAddProc^0,w,c
  2262   001178  1846               	xorwf	?___awmod^0,w,c
  2263   00117A  E109               	bnz	u2610
  2264   00117C  504F               	movf	(??_kernelAddProc+1)^0,w,c
  2265   00117E  1847               	xorwf	(?___awmod+1)^0,w,c
  2266   001180  B4D8               	btfsc	status,2,c
  2267   001182  EFC5  F008         	goto	u2611
  2268   001186  EFC7  F008         	goto	u2610
  2269   00118A                     u2611:
  2270   00118A  EFFD  F008         	goto	l78
  2271   00118E                     u2610:
  2272   00118E                     
  2273                           ;kernel.c: 17: pool[end] = newProc;
  2274   00118E  5024               	movf	_end^0,w,c
  2275   001190  0D02               	mullw	2
  2276   001192  0E01               	movlw	low _pool
  2277   001194  24F3               	addwf	243,w,c
  2278   001196  6ED9               	movwf	fsr2l,c
  2279   001198  0E00               	movlw	high _pool
  2280   00119A  20F4               	addwfc	prodh,w,c
  2281   00119C  6EDA               	movwf	fsr2h,c
  2282   00119E  C04C  FFDE         	movff	kernelAddProc@newProc,postinc2
  2283   0011A2  C04D  FFDD         	movff	kernelAddProc@newProc+1,postdec2
  2284   0011A6                     
  2285                           ;kernel.c: 18: pool[end]->start += newProc->period;
  2286   0011A6  EE20 F002          	lfsr	2,2
  2287   0011AA  504C               	movf	kernelAddProc@newProc^0,w,c
  2288   0011AC  26D9               	addwf	fsr2l,f,c
  2289   0011AE  504D               	movf	(kernelAddProc@newProc+1)^0,w,c
  2290   0011B0  22DA               	addwfc	fsr2h,f,c
  2291   0011B2  CFDE F04E          	movff	postinc2,??_kernelAddProc
  2292   0011B6  CFDD F04F          	movff	postdec2,??_kernelAddProc+1
  2293   0011BA  5024               	movf	_end^0,w,c
  2294   0011BC  0D02               	mullw	2
  2295   0011BE  0E01               	movlw	low _pool
  2296   0011C0  24F3               	addwf	243,w,c
  2297   0011C2  6ED9               	movwf	fsr2l,c
  2298   0011C4  0E00               	movlw	high _pool
  2299   0011C6  20F4               	addwfc	prodh,w,c
  2300   0011C8  6EDA               	movwf	fsr2h,c
  2301   0011CA  EE10 F004          	lfsr	1,4
  2302   0011CE  50DE               	movf	postinc2,w,c
  2303   0011D0  26E1               	addwf	fsr1l,f,c
  2304   0011D2  50DD               	movf	postdec2,w,c
  2305   0011D4  22E2               	addwfc	fsr1h,f,c
  2306   0011D6  504E               	movf	??_kernelAddProc^0,w,c
  2307   0011D8  26E6               	addwf	postinc1,f,c
  2308   0011DA  504F               	movf	(??_kernelAddProc+1)^0,w,c
  2309   0011DC  22E5               	addwfc	postdec1,f,c
  2310   0011DE                     
  2311                           ;kernel.c: 19: end = (end + 1) % 10;
  2312   0011DE  0E01               	movlw	1
  2313   0011E0  2424               	addwf	_end^0,w,c
  2314   0011E2  6E46               	movwf	___awmod@dividend^0,c
  2315   0011E4  6A47               	clrf	(___awmod@dividend+1)^0,c
  2316   0011E6  0E00               	movlw	0
  2317   0011E8  2247               	addwfc	(___awmod@dividend+1)^0,f,c
  2318   0011EA  0E00               	movlw	0
  2319   0011EC  6E49               	movwf	(___awmod@divisor+1)^0,c
  2320   0011EE  0E0A               	movlw	10
  2321   0011F0  6E48               	movwf	___awmod@divisor^0,c
  2322   0011F2  ECFC  F007         	call	___awmod	;wreg free
  2323   0011F6  5046               	movf	?___awmod^0,w,c
  2324   0011F8  6E24               	movwf	_end^0,c
  2325   0011FA                     l78:
  2326   0011FA  0012               	return		;funcret
  2327   0011FC                     __end_of_kernelAddProc:
  2328                           	callstack 0
  2329                           
  2330 ;; *************** function _ssdDigit *****************
  2331 ;; Defined at:
  2332 ;;		line 38 in file "ssd.c"
  2333 ;; Parameters:    Size  Location     Type
  2334 ;;  val             1    wreg     unsigned char 
  2335 ;;  pos             1   15[COMRAM] unsigned char 
  2336 ;; Auto vars:     Size  Location     Type
  2337 ;;  val             1   16[COMRAM] unsigned char 
  2338 ;; Return value:  Size  Location     Type
  2339 ;;                  1    wreg      void 
  2340 ;; Registers used:
  2341 ;;		wreg, status,2, status,0
  2342 ;; Tracked objects:
  2343 ;;		On entry : 0/0
  2344 ;;		On exit  : 0/0
  2345 ;;		Unchanged: 0/0
  2346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2347 ;;      Params:         1       0       0       0       0       0       0
  2348 ;;      Locals:         1       0       0       0       0       0       0
  2349 ;;      Temps:          0       0       0       0       0       0       0
  2350 ;;      Totals:         2       0       0       0       0       0       0
  2351 ;;Total ram usage:        2 bytes
  2352 ;; Hardware stack levels used: 1
  2353 ;; Hardware stack levels required when called: 3
  2354 ;; This function calls:
  2355 ;;		Nothing
  2356 ;; This function is called by:
  2357 ;;		_countTime
  2358 ;; This function uses a non-reentrant model
  2359 ;;
  2360                           
  2361                           	psect	text11
  2362   001360                     __ptext11:
  2363                           	callstack 0
  2364   001360                     _ssdDigit:
  2365                           	callstack 25
  2366                           
  2367                           ;incstack = 0
  2368                           ;ssdDigit@val stored from wreg
  2369   001360  6E3F               	movwf	ssdDigit@val^0,c
  2370   001362                     
  2371                           ;ssd.c: 39: if (pos == 0) {
  2372   001362  503E               	movf	ssdDigit@pos^0,w,c
  2373   001364  A4D8               	btfss	status,2,c
  2374   001366  EFB7  F009         	goto	u2451
  2375   00136A  EFB9  F009         	goto	u2450
  2376   00136E                     u2451:
  2377   00136E  EFBB  F009         	goto	l2735
  2378   001372                     u2450:
  2379   001372                     
  2380                           ;ssd.c: 40: v0 = val;
  2381   001372  C03F  F020         	movff	ssdDigit@val,_v0
  2382   001376                     l2735:
  2383                           
  2384                           ;ssd.c: 41: };ssd.c: 42: if (pos == 1) {
  2385   001376  043E               	decf	ssdDigit@pos^0,w,c
  2386   001378  A4D8               	btfss	status,2,c
  2387   00137A  EFC1  F009         	goto	u2461
  2388   00137E  EFC3  F009         	goto	u2460
  2389   001382                     u2461:
  2390   001382  EFC5  F009         	goto	l2739
  2391   001386                     u2460:
  2392   001386                     
  2393                           ;ssd.c: 43: v1 = val;
  2394   001386  C03F  F01F         	movff	ssdDigit@val,_v1
  2395   00138A                     l2739:
  2396                           
  2397                           ;ssd.c: 44: };ssd.c: 45: if (pos == 2) {
  2398   00138A  0E02               	movlw	2
  2399   00138C  183E               	xorwf	ssdDigit@pos^0,w,c
  2400   00138E  A4D8               	btfss	status,2,c
  2401   001390  EFCC  F009         	goto	u2471
  2402   001394  EFCE  F009         	goto	u2470
  2403   001398                     u2471:
  2404   001398  EFD0  F009         	goto	l2743
  2405   00139C                     u2470:
  2406   00139C                     
  2407                           ;ssd.c: 46: v2 = val;
  2408   00139C  C03F  F01E         	movff	ssdDigit@val,_v2
  2409   0013A0                     l2743:
  2410                           
  2411                           ;ssd.c: 47: };ssd.c: 48: if (pos == 3) {
  2412   0013A0  0E03               	movlw	3
  2413   0013A2  183E               	xorwf	ssdDigit@pos^0,w,c
  2414   0013A4  A4D8               	btfss	status,2,c
  2415   0013A6  EFD7  F009         	goto	u2481
  2416   0013AA  EFD9  F009         	goto	u2480
  2417   0013AE                     u2481:
  2418   0013AE  EFDB  F009         	goto	l461
  2419   0013B2                     u2480:
  2420   0013B2                     
  2421                           ;ssd.c: 49: v3 = val;
  2422   0013B2  C03F  F01D         	movff	ssdDigit@val,_v3
  2423   0013B6                     l461:
  2424   0013B6  0012               	return		;funcret
  2425   0013B8                     __end_of_ssdDigit:
  2426                           	callstack 0
  2427                           
  2428 ;; *************** function ___awmod *****************
  2429 ;; Defined at:
  2430 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  2431 ;; Parameters:    Size  Location     Type
  2432 ;;  dividend        2   23[COMRAM] int 
  2433 ;;  divisor         2   25[COMRAM] int 
  2434 ;; Auto vars:     Size  Location     Type
  2435 ;;  sign            1   28[COMRAM] unsigned char 
  2436 ;;  counter         1   27[COMRAM] unsigned char 
  2437 ;; Return value:  Size  Location     Type
  2438 ;;                  2   23[COMRAM] int 
  2439 ;; Registers used:
  2440 ;;		wreg, status,2, status,0
  2441 ;; Tracked objects:
  2442 ;;		On entry : 0/0
  2443 ;;		On exit  : 0/0
  2444 ;;		Unchanged: 0/0
  2445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2446 ;;      Params:         4       0       0       0       0       0       0
  2447 ;;      Locals:         2       0       0       0       0       0       0
  2448 ;;      Temps:          0       0       0       0       0       0       0
  2449 ;;      Totals:         6       0       0       0       0       0       0
  2450 ;;Total ram usage:        6 bytes
  2451 ;; Hardware stack levels used: 1
  2452 ;; Hardware stack levels required when called: 3
  2453 ;; This function calls:
  2454 ;;		Nothing
  2455 ;; This function is called by:
  2456 ;;		_countTime
  2457 ;;		_kernelAddProc
  2458 ;;		_kernelLoop
  2459 ;;		_dsdec2bcd
  2460 ;; This function uses a non-reentrant model
  2461 ;;
  2462                           
  2463                           	psect	text12
  2464   000FF8                     __ptext12:
  2465                           	callstack 0
  2466   000FF8                     ___awmod:
  2467                           	callstack 25
  2468   000FF8  0E00               	movlw	0
  2469   000FFA  6E4B               	movwf	___awmod@sign^0,c
  2470   000FFC  BE47               	btfsc	(___awmod@dividend+1)^0,7,c
  2471   000FFE  EF05  F008         	goto	u2550
  2472   001002  EF03  F008         	goto	u2551
  2473   001006                     u2551:
  2474   001006  EF0B  F008         	goto	l2799
  2475   00100A                     u2550:
  2476   00100A  6C46               	negf	___awmod@dividend^0,c
  2477   00100C  1E47               	comf	(___awmod@dividend+1)^0,f,c
  2478   00100E  B0D8               	btfsc	status,0,c
  2479   001010  2A47               	incf	(___awmod@dividend+1)^0,f,c
  2480   001012  0E01               	movlw	1
  2481   001014  6E4B               	movwf	___awmod@sign^0,c
  2482   001016                     l2799:
  2483   001016  BE49               	btfsc	(___awmod@divisor+1)^0,7,c
  2484   001018  EF12  F008         	goto	u2560
  2485   00101C  EF10  F008         	goto	u2561
  2486   001020                     u2561:
  2487   001020  EF16  F008         	goto	l2803
  2488   001024                     u2560:
  2489   001024  6C48               	negf	___awmod@divisor^0,c
  2490   001026  1E49               	comf	(___awmod@divisor+1)^0,f,c
  2491   001028  B0D8               	btfsc	status,0,c
  2492   00102A  2A49               	incf	(___awmod@divisor+1)^0,f,c
  2493   00102C                     l2803:
  2494   00102C  5048               	movf	___awmod@divisor^0,w,c
  2495   00102E  1049               	iorwf	(___awmod@divisor+1)^0,w,c
  2496   001030  B4D8               	btfsc	status,2,c
  2497   001032  EF1D  F008         	goto	u2571
  2498   001036  EF1F  F008         	goto	u2570
  2499   00103A                     u2571:
  2500   00103A  EF43  F008         	goto	l2819
  2501   00103E                     u2570:
  2502   00103E  0E01               	movlw	1
  2503   001040  6E4A               	movwf	___awmod@counter^0,c
  2504   001042  EF27  F008         	goto	l2809
  2505   001046                     l2807:
  2506   001046  90D8               	bcf	status,0,c
  2507   001048  3648               	rlcf	___awmod@divisor^0,f,c
  2508   00104A  3649               	rlcf	(___awmod@divisor+1)^0,f,c
  2509   00104C  2A4A               	incf	___awmod@counter^0,f,c
  2510   00104E                     l2809:
  2511   00104E  AE49               	btfss	(___awmod@divisor+1)^0,7,c
  2512   001050  EF2C  F008         	goto	u2581
  2513   001054  EF2E  F008         	goto	u2580
  2514   001058                     u2581:
  2515   001058  EF23  F008         	goto	l2807
  2516   00105C                     u2580:
  2517   00105C                     l2811:
  2518   00105C  5048               	movf	___awmod@divisor^0,w,c
  2519   00105E  5C46               	subwf	___awmod@dividend^0,w,c
  2520   001060  5049               	movf	(___awmod@divisor+1)^0,w,c
  2521   001062  5847               	subwfb	(___awmod@dividend+1)^0,w,c
  2522   001064  A0D8               	btfss	status,0,c
  2523   001066  EF37  F008         	goto	u2591
  2524   00106A  EF39  F008         	goto	u2590
  2525   00106E                     u2591:
  2526   00106E  EF3D  F008         	goto	l2815
  2527   001072                     u2590:
  2528   001072  5048               	movf	___awmod@divisor^0,w,c
  2529   001074  5E46               	subwf	___awmod@dividend^0,f,c
  2530   001076  5049               	movf	(___awmod@divisor+1)^0,w,c
  2531   001078  5A47               	subwfb	(___awmod@dividend+1)^0,f,c
  2532   00107A                     l2815:
  2533   00107A  90D8               	bcf	status,0,c
  2534   00107C  3249               	rrcf	(___awmod@divisor+1)^0,f,c
  2535   00107E  3248               	rrcf	___awmod@divisor^0,f,c
  2536   001080  2E4A               	decfsz	___awmod@counter^0,f,c
  2537   001082  EF2E  F008         	goto	l2811
  2538   001086                     l2819:
  2539   001086  504B               	movf	___awmod@sign^0,w,c
  2540   001088  B4D8               	btfsc	status,2,c
  2541   00108A  EF49  F008         	goto	u2601
  2542   00108E  EF4B  F008         	goto	u2600
  2543   001092                     u2601:
  2544   001092  EF4F  F008         	goto	l2823
  2545   001096                     u2600:
  2546   001096  6C46               	negf	___awmod@dividend^0,c
  2547   001098  1E47               	comf	(___awmod@dividend+1)^0,f,c
  2548   00109A  B0D8               	btfsc	status,0,c
  2549   00109C  2A47               	incf	(___awmod@dividend+1)^0,f,c
  2550   00109E                     l2823:
  2551   00109E  C046  F046         	movff	___awmod@dividend,?___awmod
  2552   0010A2  C047  F047         	movff	___awmod@dividend+1,?___awmod+1
  2553   0010A6  0012               	return		;funcret
  2554   0010A8                     __end_of___awmod:
  2555                           	callstack 0
  2556                           
  2557 ;; *************** function ___awdiv *****************
  2558 ;; Defined at:
  2559 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  2560 ;; Parameters:    Size  Location     Type
  2561 ;;  dividend        2   15[COMRAM] int 
  2562 ;;  divisor         2   17[COMRAM] int 
  2563 ;; Auto vars:     Size  Location     Type
  2564 ;;  quotient        2   21[COMRAM] int 
  2565 ;;  sign            1   20[COMRAM] unsigned char 
  2566 ;;  counter         1   19[COMRAM] unsigned char 
  2567 ;; Return value:  Size  Location     Type
  2568 ;;                  2   15[COMRAM] int 
  2569 ;; Registers used:
  2570 ;;		wreg, status,2, status,0
  2571 ;; Tracked objects:
  2572 ;;		On entry : 0/0
  2573 ;;		On exit  : 0/0
  2574 ;;		Unchanged: 0/0
  2575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2576 ;;      Params:         4       0       0       0       0       0       0
  2577 ;;      Locals:         4       0       0       0       0       0       0
  2578 ;;      Temps:          0       0       0       0       0       0       0
  2579 ;;      Totals:         8       0       0       0       0       0       0
  2580 ;;Total ram usage:        8 bytes
  2581 ;; Hardware stack levels used: 1
  2582 ;; Hardware stack levels required when called: 3
  2583 ;; This function calls:
  2584 ;;		Nothing
  2585 ;; This function is called by:
  2586 ;;		_countTime
  2587 ;;		_dsdec2bcd
  2588 ;;		_dsbcd2dec
  2589 ;; This function uses a non-reentrant model
  2590 ;;
  2591                           
  2592                           	psect	text13
  2593   000F34                     __ptext13:
  2594                           	callstack 0
  2595   000F34                     ___awdiv:
  2596                           	callstack 25
  2597   000F34  0E00               	movlw	0
  2598   000F36  6E43               	movwf	___awdiv@sign^0,c
  2599   000F38  BE41               	btfsc	(___awdiv@divisor+1)^0,7,c
  2600   000F3A  EFA3  F007         	goto	u2490
  2601   000F3E  EFA1  F007         	goto	u2491
  2602   000F42                     u2491:
  2603   000F42  EFA9  F007         	goto	l2755
  2604   000F46                     u2490:
  2605   000F46  6C40               	negf	___awdiv@divisor^0,c
  2606   000F48  1E41               	comf	(___awdiv@divisor+1)^0,f,c
  2607   000F4A  B0D8               	btfsc	status,0,c
  2608   000F4C  2A41               	incf	(___awdiv@divisor+1)^0,f,c
  2609   000F4E  0E01               	movlw	1
  2610   000F50  6E43               	movwf	___awdiv@sign^0,c
  2611   000F52                     l2755:
  2612   000F52  BE3F               	btfsc	(___awdiv@dividend+1)^0,7,c
  2613   000F54  EFB0  F007         	goto	u2500
  2614   000F58  EFAE  F007         	goto	u2501
  2615   000F5C                     u2501:
  2616   000F5C  EFB6  F007         	goto	l2761
  2617   000F60                     u2500:
  2618   000F60  6C3E               	negf	___awdiv@dividend^0,c
  2619   000F62  1E3F               	comf	(___awdiv@dividend+1)^0,f,c
  2620   000F64  B0D8               	btfsc	status,0,c
  2621   000F66  2A3F               	incf	(___awdiv@dividend+1)^0,f,c
  2622   000F68  0E01               	movlw	1
  2623   000F6A  1A43               	xorwf	___awdiv@sign^0,f,c
  2624   000F6C                     l2761:
  2625   000F6C  0E00               	movlw	0
  2626   000F6E  6E45               	movwf	(___awdiv@quotient+1)^0,c
  2627   000F70  0E00               	movlw	0
  2628   000F72  6E44               	movwf	___awdiv@quotient^0,c
  2629   000F74  5040               	movf	___awdiv@divisor^0,w,c
  2630   000F76  1041               	iorwf	(___awdiv@divisor+1)^0,w,c
  2631   000F78  B4D8               	btfsc	status,2,c
  2632   000F7A  EFC1  F007         	goto	u2511
  2633   000F7E  EFC3  F007         	goto	u2510
  2634   000F82                     u2511:
  2635   000F82  EFEB  F007         	goto	l2783
  2636   000F86                     u2510:
  2637   000F86  0E01               	movlw	1
  2638   000F88  6E42               	movwf	___awdiv@counter^0,c
  2639   000F8A  EFCB  F007         	goto	l2769
  2640   000F8E                     l2767:
  2641   000F8E  90D8               	bcf	status,0,c
  2642   000F90  3640               	rlcf	___awdiv@divisor^0,f,c
  2643   000F92  3641               	rlcf	(___awdiv@divisor+1)^0,f,c
  2644   000F94  2A42               	incf	___awdiv@counter^0,f,c
  2645   000F96                     l2769:
  2646   000F96  AE41               	btfss	(___awdiv@divisor+1)^0,7,c
  2647   000F98  EFD0  F007         	goto	u2521
  2648   000F9C  EFD2  F007         	goto	u2520
  2649   000FA0                     u2521:
  2650   000FA0  EFC7  F007         	goto	l2767
  2651   000FA4                     u2520:
  2652   000FA4                     l2771:
  2653   000FA4  90D8               	bcf	status,0,c
  2654   000FA6  3644               	rlcf	___awdiv@quotient^0,f,c
  2655   000FA8  3645               	rlcf	(___awdiv@quotient+1)^0,f,c
  2656   000FAA  5040               	movf	___awdiv@divisor^0,w,c
  2657   000FAC  5C3E               	subwf	___awdiv@dividend^0,w,c
  2658   000FAE  5041               	movf	(___awdiv@divisor+1)^0,w,c
  2659   000FB0  583F               	subwfb	(___awdiv@dividend+1)^0,w,c
  2660   000FB2  A0D8               	btfss	status,0,c
  2661   000FB4  EFDE  F007         	goto	u2531
  2662   000FB8  EFE0  F007         	goto	u2530
  2663   000FBC                     u2531:
  2664   000FBC  EFE5  F007         	goto	l2779
  2665   000FC0                     u2530:
  2666   000FC0  5040               	movf	___awdiv@divisor^0,w,c
  2667   000FC2  5E3E               	subwf	___awdiv@dividend^0,f,c
  2668   000FC4  5041               	movf	(___awdiv@divisor+1)^0,w,c
  2669   000FC6  5A3F               	subwfb	(___awdiv@dividend+1)^0,f,c
  2670   000FC8  8044               	bsf	___awdiv@quotient^0,0,c
  2671   000FCA                     l2779:
  2672   000FCA  90D8               	bcf	status,0,c
  2673   000FCC  3241               	rrcf	(___awdiv@divisor+1)^0,f,c
  2674   000FCE  3240               	rrcf	___awdiv@divisor^0,f,c
  2675   000FD0  2E42               	decfsz	___awdiv@counter^0,f,c
  2676   000FD2  EFD2  F007         	goto	l2771
  2677   000FD6                     l2783:
  2678   000FD6  5043               	movf	___awdiv@sign^0,w,c
  2679   000FD8  B4D8               	btfsc	status,2,c
  2680   000FDA  EFF1  F007         	goto	u2541
  2681   000FDE  EFF3  F007         	goto	u2540
  2682   000FE2                     u2541:
  2683   000FE2  EFF7  F007         	goto	l2787
  2684   000FE6                     u2540:
  2685   000FE6  6C44               	negf	___awdiv@quotient^0,c
  2686   000FE8  1E45               	comf	(___awdiv@quotient+1)^0,f,c
  2687   000FEA  B0D8               	btfsc	status,0,c
  2688   000FEC  2A45               	incf	(___awdiv@quotient+1)^0,f,c
  2689   000FEE                     l2787:
  2690   000FEE  C044  F03E         	movff	___awdiv@quotient,?___awdiv
  2691   000FF2  C045  F03F         	movff	___awdiv@quotient+1,?___awdiv+1
  2692   000FF6  0012               	return		;funcret
  2693   000FF8                     __end_of___awdiv:
  2694                           	callstack 0
  2695                           
  2696 ;; *************** function _kernelInit *****************
  2697 ;; Defined at:
  2698 ;;		line 8 in file "kernel.c"
  2699 ;; Parameters:    Size  Location     Type
  2700 ;;		None
  2701 ;; Auto vars:     Size  Location     Type
  2702 ;;		None
  2703 ;; Return value:  Size  Location     Type
  2704 ;;                  1    wreg      unsigned char 
  2705 ;; Registers used:
  2706 ;;		wreg, status,2
  2707 ;; Tracked objects:
  2708 ;;		On entry : 0/0
  2709 ;;		On exit  : 0/0
  2710 ;;		Unchanged: 0/0
  2711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2712 ;;      Params:         0       0       0       0       0       0       0
  2713 ;;      Locals:         0       0       0       0       0       0       0
  2714 ;;      Temps:          0       0       0       0       0       0       0
  2715 ;;      Totals:         0       0       0       0       0       0       0
  2716 ;;Total ram usage:        0 bytes
  2717 ;; Hardware stack levels used: 1
  2718 ;; Hardware stack levels required when called: 3
  2719 ;; This function calls:
  2720 ;;		Nothing
  2721 ;; This function is called by:
  2722 ;;		_main
  2723 ;; This function uses a non-reentrant model
  2724 ;;
  2725                           
  2726                           	psect	text14
  2727   001470                     __ptext14:
  2728                           	callstack 0
  2729   001470                     _kernelInit:
  2730                           	callstack 27
  2731   001470                     
  2732                           ;kernel.c: 9: start = 0;
  2733   001470  0E00               	movlw	0
  2734   001472  6E25               	movwf	_start^0,c
  2735                           
  2736                           ;kernel.c: 10: end = 0;
  2737   001474  0E00               	movlw	0
  2738   001476  6E24               	movwf	_end^0,c
  2739   001478  0012               	return		;funcret
  2740   00147A                     __end_of_kernelInit:
  2741                           	callstack 0
  2742                           
  2743 ;; *************** function _ISR *****************
  2744 ;; Defined at:
  2745 ;;		line 10 in file "main.c"
  2746 ;; Parameters:    Size  Location     Type
  2747 ;;		None
  2748 ;; Auto vars:     Size  Location     Type
  2749 ;;		None
  2750 ;; Return value:  Size  Location     Type
  2751 ;;                  1    wreg      void 
  2752 ;; Registers used:
  2753 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2754 ;; Tracked objects:
  2755 ;;		On entry : 0/0
  2756 ;;		On exit  : 0/0
  2757 ;;		Unchanged: 0/0
  2758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2759 ;;      Params:         0       0       0       0       0       0       0
  2760 ;;      Locals:         0       0       0       0       0       0       0
  2761 ;;      Temps:          6       0       0       0       0       0       0
  2762 ;;      Totals:         6       0       0       0       0       0       0
  2763 ;;Total ram usage:        6 bytes
  2764 ;; Hardware stack levels used: 1
  2765 ;; Hardware stack levels required when called: 2
  2766 ;; This function calls:
  2767 ;;		_KernelClock
  2768 ;; This function is called by:
  2769 ;;		Interrupt level 2
  2770 ;; This function uses a non-reentrant model
  2771 ;;
  2772                           
  2773                           	psect	intcode
  2774   000008                     __pintcode:
  2775                           	callstack 0
  2776   000008                     _ISR:
  2777                           	callstack 24
  2778                           
  2779                           ;incstack = 0
  2780   000008  8261               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2781   00000A  ED07  F00A         	call	int_func,f	;refresh shadow registers
  2782                           
  2783                           	psect	intcode_body
  2784   00140E                     __pintcode_body:
  2785                           	callstack 24
  2786   00140E                     int_func:
  2787                           	callstack 24
  2788   00140E  0006               	pop		; remove dummy address from shadow register refresh
  2789   001410  CFE1 F038          	movff	fsr1l,??_ISR
  2790   001414  CFE2 F039          	movff	fsr1h,??_ISR+1
  2791   001418  CFD9 F03A          	movff	fsr2l,??_ISR+2
  2792   00141C  CFDA F03B          	movff	fsr2h,??_ISR+3
  2793   001420  CFF3 F03C          	movff	prodl,??_ISR+4
  2794   001424  CFF4 F03D          	movff	prodh,??_ISR+5
  2795   001428                     
  2796                           ;main.c: 12: if (((INTCON) & (1<<(2)))) {
  2797   001428  A4F2               	btfss	242,2,c	;volatile
  2798   00142A  EF19  F00A         	goto	i2u311_41
  2799   00142E  EF1B  F00A         	goto	i2u311_40
  2800   001432                     i2u311_41:
  2801   001432  EF22  F00A         	goto	i2l34
  2802   001436                     i2u311_40:
  2803   001436                     
  2804                           ;main.c: 14: TMR0H = (45535 >> 8);
  2805   001436  0EB1               	movlw	177
  2806   001438  6ED7               	movwf	215,c	;volatile
  2807                           
  2808                           ;main.c: 15: TMR0L = (45535 & 0x00FF);
  2809   00143A  0EDF               	movlw	223
  2810   00143C  6ED6               	movwf	214,c	;volatile
  2811   00143E                     
  2812                           ;main.c: 17: KernelClock();
  2813   00143E  ECFE  F008         	call	_KernelClock	;wreg free
  2814   001442                     
  2815                           ;main.c: 20: ((INTCON) &= ~(1<<(2)));
  2816   001442  94F2               	bcf	242,2,c	;volatile
  2817   001444                     i2l34:
  2818   001444  C03D  FFF4         	movff	??_ISR+5,prodh
  2819   001448  C03C  FFF3         	movff	??_ISR+4,prodl
  2820   00144C  C03B  FFDA         	movff	??_ISR+3,fsr2h
  2821   001450  C03A  FFD9         	movff	??_ISR+2,fsr2l
  2822   001454  C039  FFE2         	movff	??_ISR+1,fsr1h
  2823   001458  C038  FFE1         	movff	??_ISR,fsr1l
  2824   00145C  9261               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2825   00145E  0011               	retfie		f
  2826   001460                     __end_of_ISR:
  2827                           	callstack 0
  2828                           
  2829 ;; *************** function _KernelClock *****************
  2830 ;; Defined at:
  2831 ;;		line 74 in file "kernel.c"
  2832 ;; Parameters:    Size  Location     Type
  2833 ;;		None
  2834 ;; Auto vars:     Size  Location     Type
  2835 ;;  proc            1    8[COMRAM] unsigned char 
  2836 ;; Return value:  Size  Location     Type
  2837 ;;                  1    wreg      void 
  2838 ;; Registers used:
  2839 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2840 ;; Tracked objects:
  2841 ;;		On entry : 0/0
  2842 ;;		On exit  : 0/0
  2843 ;;		Unchanged: 0/0
  2844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2845 ;;      Params:         0       0       0       0       0       0       0
  2846 ;;      Locals:         1       0       0       0       0       0       0
  2847 ;;      Temps:          2       0       0       0       0       0       0
  2848 ;;      Totals:         3       0       0       0       0       0       0
  2849 ;;Total ram usage:        3 bytes
  2850 ;; Hardware stack levels used: 1
  2851 ;; Hardware stack levels required when called: 1
  2852 ;; This function calls:
  2853 ;;		i2___awmod
  2854 ;; This function is called by:
  2855 ;;		_ISR
  2856 ;; This function uses a non-reentrant model
  2857 ;;
  2858                           
  2859                           	psect	text16
  2860   0011FC                     __ptext16:
  2861                           	callstack 0
  2862   0011FC                     _KernelClock:
  2863                           	callstack 24
  2864   0011FC                     
  2865                           ;kernel.c: 75: unsigned char proc;;kernel.c: 76: for (proc = start; proc != end; proc = 
      +                          (proc + 1) % 10) {
  2866   0011FC  C025  F037         	movff	_start,KernelClock@proc
  2867   001200  EF3E  F009         	goto	i2l2967
  2868   001204                     i2l2961:
  2869                           
  2870                           ;kernel.c: 77: if ((pool[proc]->start)>(-30000)) {
  2871   001204  5037               	movf	KernelClock@proc^0,w,c
  2872   001206  0D02               	mullw	2
  2873   001208  0E01               	movlw	low _pool
  2874   00120A  24F3               	addwf	243,w,c
  2875   00120C  6ED9               	movwf	fsr2l,c
  2876   00120E  0E00               	movlw	high _pool
  2877   001210  20F4               	addwfc	prodh,w,c
  2878   001212  6EDA               	movwf	fsr2h,c
  2879   001214  EE10 F004          	lfsr	1,4
  2880   001218  50DE               	movf	postinc2,w,c
  2881   00121A  26E1               	addwf	fsr1l,f,c
  2882   00121C  50DD               	movf	postdec2,w,c
  2883   00121E  22E2               	addwfc	fsr1h,f,c
  2884   001220  0E01               	movlw	1
  2885   001222  AEE3               	btfss	plusw1,7,c
  2886   001224  EF1F  F009         	goto	i2u292_40
  2887   001228  0ED1               	movlw	209
  2888   00122A  5CE6               	subwf	postinc1,w,c
  2889   00122C  0E8A               	movlw	138
  2890   00122E  58E6               	subwfb	postinc1,w,c
  2891   001230  A0D8               	btfss	status,0,c
  2892   001232  EF1D  F009         	goto	i2u292_41
  2893   001236  EF1F  F009         	goto	i2u292_40
  2894   00123A                     i2u292_41:
  2895   00123A  EF30  F009         	goto	i2l2965
  2896   00123E                     i2u292_40:
  2897   00123E                     
  2898                           ;kernel.c: 78: pool[proc]->start--;
  2899   00123E  5037               	movf	KernelClock@proc^0,w,c
  2900   001240  0D02               	mullw	2
  2901   001242  0E01               	movlw	low _pool
  2902   001244  24F3               	addwf	243,w,c
  2903   001246  6ED9               	movwf	fsr2l,c
  2904   001248  0E00               	movlw	high _pool
  2905   00124A  20F4               	addwfc	prodh,w,c
  2906   00124C  6EDA               	movwf	fsr2h,c
  2907   00124E  EE10 F004          	lfsr	1,4
  2908   001252  50DE               	movf	postinc2,w,c
  2909   001254  26E1               	addwf	fsr1l,f,c
  2910   001256  50DD               	movf	postdec2,w,c
  2911   001258  22E2               	addwfc	fsr1h,f,c
  2912   00125A  06E6               	decf	postinc1,f,c
  2913   00125C  0E00               	movlw	0
  2914   00125E  5AE5               	subwfb	postdec1,f,c
  2915   001260                     i2l2965:
  2916   001260  0E01               	movlw	1
  2917   001262  2437               	addwf	KernelClock@proc^0,w,c
  2918   001264  6E2F               	movwf	i2___awmod@dividend^0,c
  2919   001266  6A30               	clrf	(i2___awmod@dividend+1)^0,c
  2920   001268  0E00               	movlw	0
  2921   00126A  2230               	addwfc	(i2___awmod@dividend+1)^0,f,c
  2922   00126C  0E00               	movlw	0
  2923   00126E  6E32               	movwf	(i2___awmod@divisor+1)^0,c
  2924   001270  0E0A               	movlw	10
  2925   001272  6E31               	movwf	i2___awmod@divisor^0,c
  2926   001274  EC54  F008         	call	i2___awmod	;wreg free
  2927   001278  502F               	movf	?i2___awmod^0,w,c
  2928   00127A  6E37               	movwf	KernelClock@proc^0,c
  2929   00127C                     i2l2967:
  2930   00127C  5024               	movf	_end^0,w,c
  2931   00127E  1837               	xorwf	KernelClock@proc^0,w,c
  2932   001280  A4D8               	btfss	status,2,c
  2933   001282  EF45  F009         	goto	i2u293_41
  2934   001286  EF47  F009         	goto	i2u293_40
  2935   00128A                     i2u293_41:
  2936   00128A  EF02  F009         	goto	i2l2961
  2937   00128E                     i2u293_40:
  2938   00128E  0012               	return		;funcret
  2939   001290                     __end_of_KernelClock:
  2940                           	callstack 0
  2941                           
  2942 ;; *************** function i2___awmod *****************
  2943 ;; Defined at:
  2944 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  2945 ;; Parameters:    Size  Location     Type
  2946 ;;  dividend        2    0[COMRAM] int 
  2947 ;;  divisor         2    2[COMRAM] int 
  2948 ;; Auto vars:     Size  Location     Type
  2949 ;;  sign            1    5[COMRAM] unsigned char 
  2950 ;;  counter         1    4[COMRAM] unsigned char 
  2951 ;; Return value:  Size  Location     Type
  2952 ;;                  2    0[COMRAM] int 
  2953 ;; Registers used:
  2954 ;;		wreg, status,2, status,0
  2955 ;; Tracked objects:
  2956 ;;		On entry : 0/0
  2957 ;;		On exit  : 0/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2960 ;;      Params:         4       0       0       0       0       0       0
  2961 ;;      Locals:         2       0       0       0       0       0       0
  2962 ;;      Temps:          0       0       0       0       0       0       0
  2963 ;;      Totals:         6       0       0       0       0       0       0
  2964 ;;Total ram usage:        6 bytes
  2965 ;; Hardware stack levels used: 1
  2966 ;; This function calls:
  2967 ;;		Nothing
  2968 ;; This function is called by:
  2969 ;;		_KernelClock
  2970 ;; This function uses a non-reentrant model
  2971 ;;
  2972                           
  2973                           	psect	text17
  2974   0010A8                     __ptext17:
  2975                           	callstack 0
  2976   0010A8                     i2___awmod:
  2977                           	callstack 24
  2978   0010A8  0E00               	movlw	0
  2979   0010AA  6E34               	movwf	i2___awmod@sign^0,c
  2980   0010AC  BE30               	btfsc	(i2___awmod@dividend+1)^0,7,c
  2981   0010AE  EF5D  F008         	goto	i2u286_40
  2982   0010B2  EF5B  F008         	goto	i2u286_41
  2983   0010B6                     i2u286_41:
  2984   0010B6  EF63  F008         	goto	i2l2931
  2985   0010BA                     i2u286_40:
  2986   0010BA  6C2F               	negf	i2___awmod@dividend^0,c
  2987   0010BC  1E30               	comf	(i2___awmod@dividend+1)^0,f,c
  2988   0010BE  B0D8               	btfsc	status,0,c
  2989   0010C0  2A30               	incf	(i2___awmod@dividend+1)^0,f,c
  2990   0010C2  0E01               	movlw	1
  2991   0010C4  6E34               	movwf	i2___awmod@sign^0,c
  2992   0010C6                     i2l2931:
  2993   0010C6  BE32               	btfsc	(i2___awmod@divisor+1)^0,7,c
  2994   0010C8  EF6A  F008         	goto	i2u287_40
  2995   0010CC  EF68  F008         	goto	i2u287_41
  2996   0010D0                     i2u287_41:
  2997   0010D0  EF6E  F008         	goto	i2l2935
  2998   0010D4                     i2u287_40:
  2999   0010D4  6C31               	negf	i2___awmod@divisor^0,c
  3000   0010D6  1E32               	comf	(i2___awmod@divisor+1)^0,f,c
  3001   0010D8  B0D8               	btfsc	status,0,c
  3002   0010DA  2A32               	incf	(i2___awmod@divisor+1)^0,f,c
  3003   0010DC                     i2l2935:
  3004   0010DC  5031               	movf	i2___awmod@divisor^0,w,c
  3005   0010DE  1032               	iorwf	(i2___awmod@divisor+1)^0,w,c
  3006   0010E0  B4D8               	btfsc	status,2,c
  3007   0010E2  EF75  F008         	goto	i2u288_41
  3008   0010E6  EF77  F008         	goto	i2u288_40
  3009   0010EA                     i2u288_41:
  3010   0010EA  EF9B  F008         	goto	i2l2951
  3011   0010EE                     i2u288_40:
  3012   0010EE  0E01               	movlw	1
  3013   0010F0  6E33               	movwf	i2___awmod@counter^0,c
  3014   0010F2  EF7F  F008         	goto	i2l2941
  3015   0010F6                     i2l2939:
  3016   0010F6  90D8               	bcf	status,0,c
  3017   0010F8  3631               	rlcf	i2___awmod@divisor^0,f,c
  3018   0010FA  3632               	rlcf	(i2___awmod@divisor+1)^0,f,c
  3019   0010FC  2A33               	incf	i2___awmod@counter^0,f,c
  3020   0010FE                     i2l2941:
  3021   0010FE  AE32               	btfss	(i2___awmod@divisor+1)^0,7,c
  3022   001100  EF84  F008         	goto	i2u289_41
  3023   001104  EF86  F008         	goto	i2u289_40
  3024   001108                     i2u289_41:
  3025   001108  EF7B  F008         	goto	i2l2939
  3026   00110C                     i2u289_40:
  3027   00110C                     i2l2943:
  3028   00110C  5031               	movf	i2___awmod@divisor^0,w,c
  3029   00110E  5C2F               	subwf	i2___awmod@dividend^0,w,c
  3030   001110  5032               	movf	(i2___awmod@divisor+1)^0,w,c
  3031   001112  5830               	subwfb	(i2___awmod@dividend+1)^0,w,c
  3032   001114  A0D8               	btfss	status,0,c
  3033   001116  EF8F  F008         	goto	i2u290_41
  3034   00111A  EF91  F008         	goto	i2u290_40
  3035   00111E                     i2u290_41:
  3036   00111E  EF95  F008         	goto	i2l2947
  3037   001122                     i2u290_40:
  3038   001122  5031               	movf	i2___awmod@divisor^0,w,c
  3039   001124  5E2F               	subwf	i2___awmod@dividend^0,f,c
  3040   001126  5032               	movf	(i2___awmod@divisor+1)^0,w,c
  3041   001128  5A30               	subwfb	(i2___awmod@dividend+1)^0,f,c
  3042   00112A                     i2l2947:
  3043   00112A  90D8               	bcf	status,0,c
  3044   00112C  3232               	rrcf	(i2___awmod@divisor+1)^0,f,c
  3045   00112E  3231               	rrcf	i2___awmod@divisor^0,f,c
  3046   001130  2E33               	decfsz	i2___awmod@counter^0,f,c
  3047   001132  EF86  F008         	goto	i2l2943
  3048   001136                     i2l2951:
  3049   001136  5034               	movf	i2___awmod@sign^0,w,c
  3050   001138  B4D8               	btfsc	status,2,c
  3051   00113A  EFA1  F008         	goto	i2u291_41
  3052   00113E  EFA3  F008         	goto	i2u291_40
  3053   001142                     i2u291_41:
  3054   001142  EFA7  F008         	goto	i2l2955
  3055   001146                     i2u291_40:
  3056   001146  6C2F               	negf	i2___awmod@dividend^0,c
  3057   001148  1E30               	comf	(i2___awmod@dividend+1)^0,f,c
  3058   00114A  B0D8               	btfsc	status,0,c
  3059   00114C  2A30               	incf	(i2___awmod@dividend+1)^0,f,c
  3060   00114E                     i2l2955:
  3061   00114E  C02F  F02F         	movff	i2___awmod@dividend,?i2___awmod
  3062   001152  C030  F030         	movff	i2___awmod@dividend+1,?i2___awmod+1
  3063   001156  0012               	return		;funcret
  3064   001158                     __end_ofi2___awmod:
  3065                           	callstack 0
  3066                           
  3067                           	psect	text18
  3068   000000                     __ptext18:
  3069                           	callstack 0
  3070   000000                     
  3071                           	psect	rparam
  3072   000000                     
  3073                           	psect	temp
  3074   000061                     btemp:
  3075                           	callstack 0
  3076   000061                     	ds	1
  3077   000000                     int$flags	set	btemp
  3078   000000                     wtemp8	set	btemp+1
  3079   000000                     ttemp5	set	btemp+1
  3080   000000                     ttemp6	set	btemp+4
  3081   000000                     ttemp7	set	btemp+8
  3082                           
  3083                           	psect	idloc
  3084                           
  3085                           ;Config register IDLOC0 @ 0x200000
  3086                           ;	unspecified, using default values
  3087   200000                     	org	2097152
  3088   200000  FF                 	db	255
  3089                           
  3090                           ;Config register IDLOC1 @ 0x200001
  3091                           ;	unspecified, using default values
  3092   200001                     	org	2097153
  3093   200001  FF                 	db	255
  3094                           
  3095                           ;Config register IDLOC2 @ 0x200002
  3096                           ;	unspecified, using default values
  3097   200002                     	org	2097154
  3098   200002  FF                 	db	255
  3099                           
  3100                           ;Config register IDLOC3 @ 0x200003
  3101                           ;	unspecified, using default values
  3102   200003                     	org	2097155
  3103   200003  FF                 	db	255
  3104                           
  3105                           ;Config register IDLOC4 @ 0x200004
  3106                           ;	unspecified, using default values
  3107   200004                     	org	2097156
  3108   200004  FF                 	db	255
  3109                           
  3110                           ;Config register IDLOC5 @ 0x200005
  3111                           ;	unspecified, using default values
  3112   200005                     	org	2097157
  3113   200005  FF                 	db	255
  3114                           
  3115                           ;Config register IDLOC6 @ 0x200006
  3116                           ;	unspecified, using default values
  3117   200006                     	org	2097158
  3118   200006  FF                 	db	255
  3119                           
  3120                           ;Config register IDLOC7 @ 0x200007
  3121                           ;	unspecified, using default values
  3122   200007                     	org	2097159
  3123   200007  FF                 	db	255
  3124                           
  3125                           	psect	config
  3126                           
  3127                           ; Padding undefined space
  3128   300000                     	org	3145728
  3129   300000  FF                 	db	255
  3130                           
  3131                           ;Config register CONFIG1H @ 0x300001
  3132                           ;	Oscillator Selection bits
  3133                           ;	OSC = HS, HS oscillator
  3134                           ;	Fail-Safe Clock Monitor Enable bit
  3135                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3136                           ;	Internal/External Oscillator Switchover bit
  3137                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3138   300001                     	org	3145729
  3139   300001  02                 	db	2
  3140                           
  3141                           ;Config register CONFIG2L @ 0x300002
  3142                           ;	Power-up Timer Enable bit
  3143                           ;	PWRT = OFF, PWRT disabled
  3144                           ;	Brown-out Reset Enable bits
  3145                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3146                           ;	Brown Out Reset Voltage bits
  3147                           ;	BORV = 2, 
  3148   300002                     	org	3145730
  3149   300002  11                 	db	17
  3150                           
  3151                           ;Config register CONFIG2H @ 0x300003
  3152                           ;	Watchdog Timer Enable bit
  3153                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3154                           ;	Watchdog Timer Postscale Select bits
  3155                           ;	WDTPS = 1, 1:1
  3156   300003                     	org	3145731
  3157   300003  00                 	db	0
  3158                           
  3159                           ; Padding undefined space
  3160   300004                     	org	3145732
  3161   300004  FF                 	db	255
  3162                           
  3163                           ;Config register CONFIG3H @ 0x300005
  3164                           ;	CCP2 MUX bit
  3165                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3166                           ;	PORTB A/D Enable bit
  3167                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  3168                           ;	Low-Power Timer1 Oscillator Enable bit
  3169                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3170                           ;	MCLR Pin Enable bit
  3171                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3172   300005                     	org	3145733
  3173   300005  83                 	db	131
  3174                           
  3175                           ;Config register CONFIG4L @ 0x300006
  3176                           ;	Stack Full/Underflow Reset Enable bit
  3177                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  3178                           ;	Single-Supply ICSP Enable bit
  3179                           ;	LVP = OFF, Single-Supply ICSP disabled
  3180                           ;	Extended Instruction Set Enable bit
  3181                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3182                           ;	Background Debugger Enable bit
  3183                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  3184   300006                     	org	3145734
  3185   300006  80                 	db	128
  3186                           
  3187                           ; Padding undefined space
  3188   300007                     	org	3145735
  3189   300007  FF                 	db	255
  3190                           
  3191                           ;Config register CONFIG5L @ 0x300008
  3192                           ;	Code Protection bit
  3193                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  3194                           ;	Code Protection bit
  3195                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  3196                           ;	Code Protection bit
  3197                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  3198                           ;	Code Protection bit
  3199                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  3200   300008                     	org	3145736
  3201   300008  0F                 	db	15
  3202                           
  3203                           ;Config register CONFIG5H @ 0x300009
  3204                           ;	Boot Block Code Protection bit
  3205                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3206                           ;	Data EEPROM Code Protection bit
  3207                           ;	CPD = OFF, Data EEPROM not code-protected
  3208   300009                     	org	3145737
  3209   300009  C0                 	db	192
  3210                           
  3211                           ;Config register CONFIG6L @ 0x30000A
  3212                           ;	Write Protection bit
  3213                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  3214                           ;	Write Protection bit
  3215                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  3216                           ;	Write Protection bit
  3217                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  3218                           ;	Write Protection bit
  3219                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  3220   30000A                     	org	3145738
  3221   30000A  0F                 	db	15
  3222                           
  3223                           ;Config register CONFIG6H @ 0x30000B
  3224                           ;	Configuration Register Write Protection bit
  3225                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3226                           ;	Boot Block Write Protection bit
  3227                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  3228                           ;	Data EEPROM Write Protection bit
  3229                           ;	WRTD = OFF, Data EEPROM not write-protected
  3230   30000B                     	org	3145739
  3231   30000B  E0                 	db	224
  3232                           
  3233                           ;Config register CONFIG7L @ 0x30000C
  3234                           ;	Table Read Protection bit
  3235                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  3236                           ;	Table Read Protection bit
  3237                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  3238                           ;	Table Read Protection bit
  3239                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  3240                           ;	Table Read Protection bit
  3241                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3242   30000C                     	org	3145740
  3243   30000C  0F                 	db	15
  3244                           
  3245                           ;Config register CONFIG7H @ 0x30000D
  3246                           ;	Boot Block Table Read Protection bit
  3247                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3248   30000D                     	org	3145741
  3249   30000D  40                 	db	64
  3250                           tosu	equ	0xFFF
  3251                           tosh	equ	0xFFE
  3252                           tosl	equ	0xFFD
  3253                           stkptr	equ	0xFFC
  3254                           pclatu	equ	0xFFB
  3255                           pclath	equ	0xFFA
  3256                           pcl	equ	0xFF9
  3257                           tblptru	equ	0xFF8
  3258                           tblptrh	equ	0xFF7
  3259                           tblptrl	equ	0xFF6
  3260                           tablat	equ	0xFF5
  3261                           prodh	equ	0xFF4
  3262                           prodl	equ	0xFF3
  3263                           indf0	equ	0xFEF
  3264                           postinc0	equ	0xFEE
  3265                           postdec0	equ	0xFED
  3266                           preinc0	equ	0xFEC
  3267                           plusw0	equ	0xFEB
  3268                           fsr0h	equ	0xFEA
  3269                           fsr0l	equ	0xFE9
  3270                           wreg	equ	0xFE8
  3271                           indf1	equ	0xFE7
  3272                           postinc1	equ	0xFE6
  3273                           postdec1	equ	0xFE5
  3274                           preinc1	equ	0xFE4
  3275                           plusw1	equ	0xFE3
  3276                           fsr1h	equ	0xFE2
  3277                           fsr1l	equ	0xFE1
  3278                           bsr	equ	0xFE0
  3279                           indf2	equ	0xFDF
  3280                           postinc2	equ	0xFDE
  3281                           postdec2	equ	0xFDD
  3282                           preinc2	equ	0xFDC
  3283                           plusw2	equ	0xFDB
  3284                           fsr2h	equ	0xFDA
  3285                           fsr2l	equ	0xFD9
  3286                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    16
    Data        24
    BSS         46
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     42      96
    BANK0           128     24      40
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    my_funcs$0	PTR void  size(2) Largest target is 0

    S148$2$0	PTR void  size(2) Largest target is 0

    kernelLoop$1274	PTR struct . size(2) Largest target is 8
		 -> main@countTime_proc(BANK0[8]), main@SSDUpdate_proc(BANK0[8]), main@init_PD(BANK0[8]), 

    ?_getLedDriver.initFunc	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> initGenerico(), 

    ?_getLedDriver.funcoes	PTR PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 4
		 -> my_funcs(COMRAM[4]), 

    sp__getLedDriver.initFunc	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> initGenerico(), 

    sp__getLedDriver.funcoes	PTR PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 4
		 -> my_funcs(COMRAM[4]), 

    sp__getLedDriver	PTR struct . size(2) Largest target is 6
		 -> myself(COMRAM[5]), 

    my_funcs	PTR FTN(PTR void ,)unsigned char [2] size(2) Largest target is 1
		 -> inverte(), changePORTD(), 

    S148$initFunc	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> initGenerico(), 

    myself.initFunc	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> initGenerico(), 

    S148$funcoes	PTR PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 4
		 -> my_funcs(COMRAM[4]), 

    myself.funcoes	PTR PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 4
		 -> my_funcs(COMRAM[4]), 

    kernelLoop@tempProc	PTR struct . size(2) Largest target is 8
		 -> main@countTime_proc(BANK0[8]), main@SSDUpdate_proc(BANK0[8]), main@init_PD(BANK0[8]), 

    kernelAddProc@newProc.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), initPORTAD(), 

    pool.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), initPORTAD(), 

    kernelAddProc@newProc	PTR struct . size(2) Largest target is 8
		 -> main@countTime_proc(BANK0[8]), main@SSDUpdate_proc(BANK0[8]), main@init_PD(BANK0[8]), 

    pool	PTR struct .[10] size(2) Largest target is 8
		 -> main@countTime_proc(BANK0[8]), main@SSDUpdate_proc(BANK0[8]), main@init_PD(BANK0[8]), 

    F2411.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), initPORTAD(), 

    countTime_proc.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), initPORTAD(), 

    F2408.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), initPORTAD(), 

    SSDUpdate_proc.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), initPORTAD(), 

    F2405.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), initPORTAD(), 

    S44$function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), initPORTAD(), 

    init_PD.function	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> countTime(), updateSSD(), initPORTAD(), 


Critical Paths under _main in COMRAM

    _main->_kernelLoop
    _ssdInit->_pinMode
    _kernelLoop->_kernelAddProc
    _ssdUpdate->_digitalWrite
    _kernelAddProc->___awmod
    _countTime->___awmod
    ___awmod->___awdiv

Critical Paths under _ISR in COMRAM

    _ISR->_KernelClock
    _KernelClock->i2___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0   18886
                                              0 BANK0     24    24      0
                      _kernelAddProc
                         _kernelInit
                         _kernelLoop
                            _ssdInit
                          _timerInit
 ---------------------------------------------------------------------------------
 (1) _timerInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    3140
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              6     2      4    3140
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _kernelLoop                                           9     9      0   12933
                                             33 COMRAM     9     9      0
                            ___awmod
                          _countTime *
                         _initPORTAD *
                      _kernelAddProc
                          _updateSSD *
 ---------------------------------------------------------------------------------
 (2) _updateSSD                                            0     0      0    3512
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (3) _ssdUpdate                                            0     0      0    3512
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (4) _digitalWrite                                         6     2      4    3512
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _kernelAddProc                                        4     2      2    2585
                                             29 COMRAM     4     2      2
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _initPORTAD                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _countTime                                            2     2      0    4252
                                             29 COMRAM     2     2      0
                            ___awdiv
                            ___awmod
                           _ssdDigit
 ---------------------------------------------------------------------------------
 (3) _ssdDigit                                             2     1      1     608
                                             15 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    2163
                                             23 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1345
                                             15 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _kernelInit                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  6     6      0     633
                                              9 COMRAM     6     6      0
                        _KernelClock
 ---------------------------------------------------------------------------------
 (6) _KernelClock                                          3     3      0     633
                                              6 COMRAM     3     3      0
                          i2___awmod
 ---------------------------------------------------------------------------------
 (7) i2___awmod                                            6     2      4     503
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _kernelAddProc
     ___awmod
       ___awdiv (ARG)
   _kernelInit
   _kernelLoop
     ___awmod
     _countTime *
       ___awdiv
       ___awmod
       _ssdDigit
     _initPORTAD *
     _kernelAddProc *
     _updateSSD *
       _ssdUpdate
         _digitalWrite
   _ssdInit
     _pinMode
   _timerInit

 _ISR (ROOT)
   _KernelClock
     i2___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     18      28       5       31.2%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     2A      60       1       76.2%
BITBIGSFRlh         1A      0       0      17        0.0%
BITBIGSFRllhll       D      0       0      27        0.0%
BITBIGSFRh           D      0       0      16        0.0%
BITBIGSFRllhhll      C      0       0      25        0.0%
BITBIGSFRllhhll      7      0       0      24        0.0%
BITBIGSFRllhhll      7      0       0      26        0.0%
BITBIGSFRllhhlh      5      0       0      20        0.0%
BITBIGSFRllhhll      4      0       0      23        0.0%
BITBIGSFRllhhlh      4      0       0      19        0.0%
BITBIGSFRllhhh       4      0       0      18        0.0%
BITBIGSFRllhhll      1      0       0      22        0.0%
BITBIGSFRllhhll      1      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      88      28        0.0%
DATA                 0      0      88       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Nov 05 11:16:08 2022

           fp__countTime 0000            fp__initPORTAD 0000                       l40 1490  
                     l54 0F32                       l49 1498                       l81 0612  
                     l65 1302                       l74 1478                       l78 11FA  
           ___awdiv@sign 0043                       _v0 0020                       _v1 001F  
                     _v2 001E                       _v3 001D                      l211 0D1A  
                    l245 0ACC                      l461 13B6                      l471 0E56  
                    l474 140C                      l731 0FF6                      l744 10A6  
                    l497 1488                      _PR2 000FCB                      _ISR 0008  
                    _end 0024             ___awmod@sign 004B                      prod 000FF3  
                    tosl 000FFD                      wreg 000FE8                     ?_ISR 002F  
                   l3001 077E                     l3011 085E                     l3003 07A6  
                   l3005 07BE                     l3101 12EA                     l3007 07F8  
                   l3111 12FE                     l3103 12F6                     l3009 0842  
                   l3105 12F8                     l3107 12FA                     l3109 12FC  
                   l3091 12C6                     l2701 0D78                     l3093 12CA  
                   l2711 0DCC                     l2703 0D8A                     l3095 12CE  
                   l2801 1024                     l2721 0E14                     l2713 0DD4  
                   l2705 0D9E                     l3097 12D2                     l3089 1290  
                   l2811 105C                     l2803 102C                     l2731 1362  
                   l2651 0ACE                     l2723 0E28                     l2715 0DE6  
                   l2707 0DA6                     l3099 12DE                     l2821 1096  
                   l2813 1072                     l2805 103E                     l2741 139C  
                   l2733 1372                     l2661 0B5A                     l2653 0AEA  
                   l2717 0DFA                     l2709 0DB8                     l2901 0A32  
                   l2751 0F46                     l2823 109E                     l2815 107A  
                   l2807 1046                     l2743 13A0                     l2735 1376  
                   l2671 0BEC                     l2663 0B74                     l2655 0AFC  
                   l2719 0E02                     l2903 0A58                     l2761 0F6C  
                   l2753 0F4E                     l2817 1080                     l2809 104E  
                   l2745 13B2                     l2737 1386                     l2681 0C84  
                   l2673 0C0C                     l2665 0B94                     l2657 0B1C  
                   l2729 0E30                     l2833 1492                     l2841 0E5C  
                   l2905 0A74                     l2771 0FA4                     l2763 0F74  
                   l2755 0F52                     l2747 0F34                     l2819 1086  
                   l2739 138A                     l2683 0CA6                     l2675 0C2E  
                   l2667 0BB6                     l2659 0B3E                     l2691 0D1C  
                   l2835 1496                     l2827 148A                     l2851 0EEC  
                   l2843 0E78                     l2907 0A86                     l2781 0FD0  
                   l2773 0FAA                     l2765 0F86                     l2757 0F60  
                   l2749 0F38                     l2861 1158                     l2685 0CC2  
                   l2677 0C4A                     l2669 0BD2                     l2693 0D20  
                   l2829 148E                     l2853 0EF6                     l2845 0E82  
                   l2909 0AAA                     l2775 0FC0                     l2767 0F8E  
                   l2783 0FD6                     l2759 0F68                     l2791 0FF8  
                   l2863 118E                     l2687 0CDC                     l2679 0C64  
                   l2695 0D34                     l2855 0F26                     l2847 0EB2  
                   l2839 0E58                     l2871 0880                     l2785 0FE6  
                   l2777 0FC8                     l2769 0F96                     l2793 0FFC  
                   l2865 11A6                     l2689 0CFC                     l2697 0D48  
                   l2857 0F30                     l2849 0EBC                     l2881 090C  
                   l2873 089C                     l2787 0FEE                     l2779 0FCA  
                   l2795 100A                     l2867 11DE                     l2699 0D5C  
                   l2891 0996                     l2883 091E                     l2875 08AE  
                   l2971 1486                     l2797 1012                     l2981 0612  
                   l2893 09BA                     l2885 0942                     l2877 08CE  
                   l2973 13B8                     l2799 1016                     l2991 06DE  
                   l2983 0624                     l2895 09E0                     l2887 0968  
                   l2879 08F0                     l2975 1408                     l2977 1470  
                   l2985 0630                     l2897 09FC                     l2889 0984  
                   l2969 1482                     l2995 0738                     l2987 0680  
                   l2899 0A0E                     l2989 06D6                     l2997 0754  
                   l2999 0766                     u3010 0842                     u3011 083E  
                   u2300 0B74                     u2301 0B70                     u3008 081E  
                   u3009 0832                     u3121 129A                     u2410 0CC2  
                   u2330 0BD2                     u2314 0B86                     u2250 0AEA  
                   u2411 0CBE                     u2331 0BCE                     u2315 0B82  
                   u2251 0AE6                     u3131 12AC                     u2500 0F60  
                   u2420 0CDC                     u2404 0C96                     u2340 0BEC  
                   u2324 0BA6                     u2260 0AFC                     u2501 0F5C  
                   u2421 0CD8                     u2405 0C92                     u2341 0BE8  
                   u2325 0BA2                     u2261 0AF8                     u3141 12BE  
                   u2510 0F86                     u2511 0F82                     u2520 0FA4  
                   u2600 1096                     u2521 0FA0                     u2601 1092  
                   u2530 0FC0                     u2450 1372                     u2610 118E  
                   u2434 0CEE                     u2370 0C4A                     u2354 0BFE  
                   u2290 0B5A                     u2274 0B0E                     u2531 0FBC  
                   u2451 136E                     u2611 118A                     u2435 0CEA  
                   u2371 0C46                     u2355 0BFA                     u2291 0B56  
                   u2275 0B0A                     u2540 0FE6                     u2460 1386  
                   u2444 0D0E                     u2380 0C64                     u2364 0C1E  
                   u2284 0B2E                     u2700 0984                     u2620 089C  
                   u2541 0FE2                     u2461 1382                     u2445 0D0A  
                   u2381 0C60                     u2365 0C1A                     u2285 0B2A  
                   u2701 0980                     u2621 0898                     u2550 100A  
                   u2470 139C                     u2710 0996                     u2630 08AE  
                   u2551 1006                     u2471 1398                     u2711 0992  
                   u2631 08AA                     u2560 1024                     u2480 13B2  
                   u2561 1020                     u2481 13AE                     u2490 0F46  
                   u2570 103E                     u2394 0C76                     u2491 0F42  
                   u2571 103A                     u2395 0C72                     u2580 105C  
                   u2804 0A9C                     u2740 09FC                     u2724 09AC  
                   u2660 090C                     u2644 08C0                     u2581 1058  
                   u2805 0A98                     u2741 09F8                     u2725 09A8  
                   u2661 0908                     u2645 08BC                     u2590 1072  
                   u2814 0AC0                     u2750 0A0E                     u2734 09D0  
                   u2670 091E                     u2654 08E0                     u2591 106E  
                   u2815 0ABC                     u2751 0A0A                     u2735 09CC  
                   u2671 091A                     u2655 08DC                     u2940 0624  
                   u2780 0A74                     u2764 0A24                     u2684 0934  
                   u2941 0620                     u2781 0A70                     u2765 0A20  
                   u2685 0930                     u2950 0680                     u2790 0A86  
                   u2774 0A48                     u2694 0958                     u2951 067C  
                   u2791 0A82                     u2775 0A44                     u2695 0954  
                   u2960 06D6                     u2961 06D2                     u2970 0734  
                   u2971 0730                     u2980 0766                     u2981 0762  
                   u2990 07F8                     u2991 07F4                     _PIR1 000F9E  
                   i2l34 1444              main@init_PD 0080                     _RCON 000FD0  
                   _main 1290                     _pool 0001             fp__updateSSD 0000  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr2h 000FDA  
                   fsr0l 000FE9                     fsr1l 000FE1                     fsr2l 000FD9  
                   btemp 0061       kernelLoop@tempProc 0055                     prodh 000FF4  
                   prodl 000FF3                     start 000E            ??_KernelClock 0035  
           ___param_bank 000000                    ??_ISR 0038                    ?_main 002F  
        __end_of___awdiv 0FF8          __end_of___awmod 10A8                    _T0CON 000FD5  
        ___awdiv@divisor 0040                    _T2CON 000FCA                    i2l101 128E  
                  i2l744 1156          ___awdiv@counter 0042                    _RCREG 000FAE  
                  _RCSTA 000FAB                    _TMR0H 000FD7                    _TMR0L 000FD6  
                  _SPBRG 000FAF                    _PORTA 000F80                    _PORTB 000F81  
                  _PORTC 000F82                    _PORTD 000F83                    _PORTE 000F84  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    _TRISE 000F96                    _TXREG 000FAD  
                  _TXSTA 000FAC          __end_of_pinMode 0ACE                    _valor 001B  
                  _start 0025                    pclath 000FFA                    tablat 000FF5  
        __end_of_ssdInit 140E                    plusw1 000FE3                    plusw2 000FDB  
                  ttemp5 0062                    ttemp6 0065                    ttemp7 0069  
                  status 000FD8                    wtemp8 0062     __end_of_digitalWrite 0D1C  
        __initialization 1306             __end_of_main 1306      __end_of_KernelClock 1290  
                 ??_main 0059            __activetblptr 000002                   _ADCON0 000FC2  
                 _ADCON2 000FC0                   _ADRESH 000FC4                   _ADRESL 000FC3  
                 _CCPR1L 000FBE         ___awdiv@dividend 003E                   i2l3081 1428  
                 i2l3083 1436                   i2l3085 143E                   i2l3087 1442  
                 i2l2931 10C6                   i2l2923 10A8                   i2l2941 10FE  
                 i2l2933 10D4                   i2l2925 10AC                   i2l2943 110C  
                 i2l2951 1136                   i2l2935 10DC                   i2l2927 10BA  
                 i2l2953 1146                   i2l2945 1122                   i2l2937 10EE  
                 i2l2929 10C2                   i2l2961 1204                   i2l2955 114E  
                 i2l2947 112A                   i2l2939 10F6                   i2l2963 123E  
                 i2l2949 1130                   i2l2965 1260                   i2l2967 127C  
                 i2l2959 11FC                   _INTCON 000FF2                   _SPBRGH 000FB0  
            kernelLoop@p 0058                ??___awdiv 0042                ??___awmod 004A  
                 clear_0 134C         ___awdiv@quotient 0044          ___awmod@divisor 0048  
                 isa$std 000001          ___awmod@counter 004A                   _myself 0026  
          _kernelAddProc 1158         __end_of_ssdDigit 13B8             __pdataCOMRAM 0059  
              ??_pinMode 0042        __end_ofi2___awmod 1158             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
              ??_ssdInit 0044           i2___awmod@sign 0034               __accesstop 0080  
__end_of__initialization 1352            ___rparam_used 000001             countTime@dig 004C  
            _KernelClock 11FC              pinMode@type 0040           __pcstackCOMRAM 002F  
           __pidataBANK0 1460           ?_kernelAddProc 004C                  _CCP1CON 000FBD  
                _BAUDCON 000FB8             _digitalWrite 0ACE               _initPORTAD 148A  
                __Hparam 0000                  __Lparam 0000                ?_ssdDigit 003E  
        kpDebounce@tempo 0023               _kernelInit 1470               _kernelLoop 0612  
                ___awdiv 0F34                  ___awmod 0FF8          ??_kernelAddProc 004E  
           __psmallconst 0600              ssdDigit@val 003F              ssdDigit@pos 003E  
                __pcinit 1306        __end_of_countTime 0F34                  __ramtop 0600  
                __ptext0 1290                  __ptext1 1482                  __ptext2 13B8  
                __ptext3 0880                  __ptext4 0612                  __ptext5 0E58  
                __ptext6 148A                  __ptext7 1492                  __ptext8 0D1C  
                __ptext9 0ACE                  _display 0021                  _pinMode 0880  
       ___awmod@dividend 0046                  _inverte 000000                  _ssdInit 13B8  
                _started 0022      kpDebounce@valorNovo 0017           __pintcode_body 140E  
   end_of_initialization 1352            __Lmediumconst 0000                  int_func 140E  
      __end_of_timerInit 148A        __end_of_ssdUpdate 0E58               ??_ssdDigit 003F  
      __end_of_updateSSD 149A                  postdec1 000FE5                  postdec2 000FDD  
                postinc0 000FEE                  postinc1 000FE6                  postinc2 000FDE  
         _valor@ssd$F527 0601           kernelLoop@next 0057                i2___awmod 10A8  
            ?_initPORTAD 002F             ?_KernelClock 002F              ?_kernelInit 002F  
            ?_kernelLoop 002F            __pidataCOMRAM 147A   __end_of_valor@ssd$F527 0611  
    start_initialization 1306              __end_of_ISR 1460               ?i2___awmod 002F  
        KernelClock@proc 0037             _initGenerico 000000       main@SSDUpdate_proc 0088  
            __pdataBANK0 0098              _changePORTD 000000              __pbssCOMRAM 0001  
          __pcstackBANK0 0080     kernelAddProc@newProc 004C               pinMode@pin 003E  
              __pintcode 0008                 ?___awdiv 003E                 ?___awmod 0046  
            __smallconst 0600                 ?_pinMode 003E                _countTime 0E58  
               ?_ssdInit 002F              ??i2___awmod 0033       main@countTime_proc 0090  
               i2u311_40 1436                 i2u311_41 1432                 i2u290_40 1122  
               i2u290_41 111E                 i2u291_40 1146                 i2u291_41 1142  
               i2u292_40 123E                 i2u292_41 123A                 i2u293_40 128E  
               i2u293_41 128A                 i2u286_40 10BA                 i2u286_41 10B6  
               i2u287_40 10D4                 i2u287_41 10D0                 i2u288_40 10EE  
               i2u288_41 10EA                 i2u289_40 110C                 i2u289_41 1108  
              main@F2411 0098                main@F2405 0059                main@F2408 00A0  
              _timerInit 1482                _ssdUpdate 0D1C                _updateSSD 1492  
  __end_of_kernelAddProc 11FC    kpDebounce@valorAntigo 0015               ?_countTime 002F  
              copy_data0 131A                copy_data1 133A       i2___awmod@dividend 002F  
           ??_initPORTAD 003E                 __Hrparam 0000                 __Lrparam 0000  
           ??_kernelInit 003E             ??_kernelLoop 0050               ?_timerInit 002F  
             ?_ssdUpdate 002F               ?_updateSSD 002F       __end_of_initPORTAD 1492  
               __ptext10 1158                 __ptext11 1360                 __ptext12 0FF8  
               __ptext13 0F34                 __ptext14 1470                 __ptext16 11FC  
               __ptext17 10A8                 __ptext18 0000       __end_of_kernelInit 147A  
     __end_of_kernelLoop 0880                 _ssdDigit 1360                 _my_funcs 002B  
               isa$xinst 000000                 int$flags 0061        i2___awmod@divisor 0031  
      i2___awmod@counter 0033              ??_countTime 004C            ?_digitalWrite 003E  
               intlevel2 0000        digitalWrite@value 0040              ??_timerInit 003E  
            ??_ssdUpdate 0044              ??_updateSSD 0044           ??_digitalWrite 0042  
        digitalWrite@pin 003E        _valor@keypad$F305 0019  
